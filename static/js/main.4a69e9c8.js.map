{"version":3,"sources":["webpack:///static/js/main.4a69e9c8.js","webpack:///webpack/bootstrap c19d9a7559f1fe36fed1","webpack:///./~/react/index.js","webpack:///./~/object-assign/index.js","webpack:///./~/promise/lib/core.js","webpack:///./~/asap/browser-raw.js","webpack:///./src/App.js","webpack:///./src/Image.js","webpack:///./src/index.js","webpack:///./src/logo.svg","webpack:///./~/openseadragon/build/openseadragon/openseadragon.js","webpack:///./~/promise/lib/es6-extensions.js","webpack:///./~/promise/lib/rejection-tracking.js","webpack:///./~/react-dom/cjs/react-dom.production.min.js","webpack:///./~/react-dom/index.js","webpack:///./~/react-scripts/config/polyfills.js","webpack:///./~/react/cjs/react.production.min.js","webpack:///./~/scheduler/cjs/scheduler.production.min.js","webpack:///./~/scheduler/index.js","webpack:///./src/dzi_files/10/0_0.jpg","webpack:///./~/whatwg-fetch/fetch.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","i","Object","prototype","hasOwnProperty","_m","args","slice","fn","a","b","apply","this","concat","toObject","val","undefined","TypeError","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","map","n","join","test3","split","forEach","letter","keys","err","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","target","source","from","symbols","to","s","arguments","length","key","noop","getThen","obj","then","ex","LAST_ERROR","IS_ERROR","tryCallOne","tryCallTwo","Promise","_45","_81","_65","_54","doResolve","safeThen","self","onFulfilled","onRejected","constructor","resolve","reject","res","handle","Handler","deferred","_10","push","handleResolved","asap","cb","promise","ret","newValue","finale","bind","_97","done","value","reason","_61","global","rawAsap","task","queue","requestFlush","flushing","flush","index","currentIndex","capacity","scan","newLength","makeRequestCallFromMutationObserver","callback","toggle","observer","BrowserMutationObserver","node","document","createTextNode","observe","characterData","data","makeRequestCallFromTimer","handleTimer","clearTimeout","timeoutHandle","clearInterval","intervalHandle","setTimeout","setInterval","scope","MutationObserver","WebKitMutationObserver","_interopRequireDefault","__esModule","default","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_react","_react2","_logo","_Image","_Image2","App","_Component","getPrototypeOf","createElement","className","Component","_openseadragon","_openseadragon2","_","_2","Image","_this","dimage","xmlns","Url","Format","TileSize","Size","Width","Height","dimage1","CrossOriginPolicy","prefixUrl","sequenceMode","tileSources","style","width","height","padding","src","logo","_reactDom","_reactDom2","_App","_App2","ReactDOM","render","getElementById","OpenSeadragon","options","Viewer","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","$","version","versionStr","major","parseInt","minor","revision","class2type","[object Boolean]","[object Number]","[object String]","[object Function]","[object Array]","[object Date]","[object RegExp]","[object Object]","toString","hasOwn","isFunction","type","isArray","Array","isWindow","isPlainObject","nodeType","lastKey","isEmptyObject","name","freezeObject","freeze","supportsCanvas","canvasElement","getContext","isCanvasTainted","canvas","isTainted","getImageData","e","pixelDensityRatio","context","devicePixelRatio","window","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","Math","max","getOffsetParent","element","isFixed","body","offsetParent","extend","copy","copyIsArray","clone","deep","isIOSDevice","navigator","userAgent","indexOf","DEFAULT_SETTINGS","xmlPath","tileHost","initialPage","crossOriginPolicy","ajaxWithCredentials","loadTilesWithAjax","ajaxHeaders","panHorizontal","panVertical","constrainDuringPan","wrapHorizontal","wrapVertical","visibilityRatio","minPixelRatio","defaultZoomLevel","minZoomLevel","maxZoomLevel","homeFillsViewer","clickTimeThreshold","clickDistThreshold","dblClickTimeThreshold","dblClickDistThreshold","springStiffness","animationTime","gestureSettingsMouse","scrollToZoom","clickToZoom","dblClickToZoom","pinchToZoom","zoomToRefPoint","flickEnabled","flickMinSpeed","flickMomentum","pinchRotate","gestureSettingsTouch","gestureSettingsPen","gestureSettingsUnknown","zoomPerClick","zoomPerScroll","zoomPerSecond","blendTime","alwaysBlend","autoHideControls","immediateRender","minZoomImageRatio","maxZoomPixelRatio","smoothTileEdgesMinZoom","iOSDevice","pixelsPerWheelLine","pixelsPerArrowPress","autoResize","preserveImageSizeOnResize","minScrollDeltaTime","rotationIncrement","showSequenceControl","sequenceControlAnchor","preserveViewport","preserveOverlays","navPrevNextWrap","showNavigationControl","navigationControlAnchor","showZoomControl","showHomeControl","showFullPageControl","showRotationControl","showFlipControl","controlsFadeDelay","controlsFadeLength","mouseNavEnabled","showNavigator","navigatorId","navigatorPosition","navigatorSizeRatio","navigatorMaintainSizeRatio","navigatorTop","navigatorLeft","navigatorHeight","navigatorWidth","navigatorAutoResize","navigatorAutoFade","navigatorRotate","navigatorBackground","navigatorOpacity","navigatorBorderColor","navigatorDisplayRegionColor","degrees","flipped","opacity","preload","compositeOperation","imageSmoothingEnabled","placeholderFillStyle","showReferenceStrip","referenceStripScroll","referenceStripElement","referenceStripHeight","referenceStripWidth","referenceStripPosition","referenceStripSizeRatio","collectionRows","collectionColumns","collectionLayout","collectionMode","collectionTileSize","collectionTileMargin","imageLoaderLimit","maxImageCacheCount","timeout","useCanvas","navImages","zoomIn","REST","GROUP","HOVER","DOWN","zoomOut","home","fullpage","rotateleft","rotateright","flip","previous","next","debugMode","debugGridColor","SIGNAL","delegate","object","method","BROWSERS","UNKNOWN","IE","FIREFOX","SAFARI","CHROME","OPERA","getElement","getElementPosition","result","Point","getElementStyle","position","x","offsetLeft","y","offsetTop","plus","getPageScroll","getElementOffset","docElement","win","doc","ownerDocument","boundingRect","top","left","documentElement","getBoundingClientRect","defaultView","parentWindow","pageXOffset","scrollLeft","clientLeft","pageYOffset","scrollTop","clientTop","getElementSize","clientWidth","clientHeight","currentStyle","getComputedStyle","getCssPropertyWithVendorPrefix","property","memo","prefixes","suffix","capitalizeFirstLetter","prop","string","charAt","toUpperCase","positiveModulo","number","modulo","pointInElement","point","offset","size","getEvent","event","getMousePosition","pageX","pageY","Error","clientX","clientY","setPageScroll","scroll","scrollTo","originalScroll","currentScroll","getWindowSize","innerWidth","innerHeight","makeCenteredNode","wrappers","makeNeutralElement","display","verticalAlign","textAlign","appendChild","tagName","background","border","margin","now","Date","getTime","makeTransparentImage","img","Browser","vendor","onload","filter","setElementOpacity","usesAlpha","ieOpacity","ieFilter","alpha","round","setElementTouchActionNone","touchAction","msTouchAction","addClass","array","searchElement","fromIndex","pivot","abs","removeClass","oldClasses","newClasses","addEvent","addEventListener","eventName","handler","useCapture","attachEvent","removeEvent","removeEventListener","detachEvent","cancelEvent","preventDefault","cancel","returnValue","stopEvent","stopPropagation","cancelBubble","createCallback","initialArgs","getUrlParameter","URLPARAMS","getUrlProtocol","url","match","location","protocol","toLowerCase","createAjaxRequest","local","supportActiveX","ActiveXObject","XMLHttpRequest","makeAjaxRequest","onSuccess","onError","withCredentials","headers","responseType","success","error","request","onreadystatechange","readyState","status","console","log","open","headerName","setRequestHeader","send","msg","message","oldIE","XDomainRequest","xdr","responseText","statusText","onerror","e2","jsonp","script","head","getElementsByTagName","jsonpCallback","callbackName","replace","callbackParam","param","test","response","async","scriptCharset","charset","isAbort","parentNode","removeChild","insertBefore","firstChild","createFromDZI","parseXml","DOMParser","parser","xmlDoc","parseFromString","loadXML","parseJSON","JSON","parse","eval","imageFormatSupported","extension","FILEFORMATS","bmp","jpeg","jpg","png","tif","wdp","regex","ver","appVersion","ua","appName","parseFloat","substring","lastIndexOf","RegExp","exec","$1","part","sep","query","search","parts","decodeURIComponent","nullfunction","debug","info","warn","assert","w","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","iIntervalId","aAnimQueue","processing","iRequestId","time","temp","shift","requestId","j","splice","root","factory","fullScreenApi","supportsFullScreen","isFullScreen","getFullScreenElement","requestFullScreen","exitFullScreen","cancelFullScreen","fullScreenEventName","fullScreenErrorEventName","exitFullscreen","fullscreenElement","requestFullscreen","msExitFullscreen","msFullscreenElement","msRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitRequestFullscreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozRequestFullScreen","EventSource","events","addOnceHandler","userData","times","count","onceHandler","removeHandler","addHandler","handlers","removeAllHandlers","eventType","getHandler","eventSource","raiseEvent","eventArgs","clearTrackedPointers","tracker","THIS","hash","pointerListCount","activePointersLists","captureCount","MouseTracker","captureElement","mousemovecaptured","mouseupcaptured","unprefixedPointerEvents","pointermovecaptured","pointerupcaptured","touchmovecaptured","touchendcaptured","pop","startTracking","tracking","subscribeEvents","stopTracking","getCaptureEventParams","pointerType","upName","upHandler","moveName","moveHandler","capturePointer","pointerCount","eventParams","pointsList","getActivePointersListByType","setCapture","havePointerEvents","isInIframe","canAccessEvents","releasePointer","releaseCapture","getPointerType","pointerTypeStr","getMouseAbsolute","getMouseRelative","getPointRelativeToAbsolute","minus","getCenterPoint","point1","point2","onClick","clickHandler","onDblClick","dblClickHandler","onKeyDown","propagate","keyDownHandler","keyCode","charCode","ctrl","ctrlKey","shiftKey","alt","altKey","meta","metaKey","originalEvent","preventDefaultAction","onKeyUp","keyUpHandler","onKeyPress","keyHandler","onFocus","focusHandler","onBlur","blurHandler","onWheel","handleWheelEvent","onMouseWheel","simulatedEvent","srcElement","deltaMode","deltaX","deltaZ","wheelEventName","deltaY","wheelDelta","detail","nDelta","scrollHandler","isTouchEvent","isParentChild","parent","child","onMouseEnter","handleMouseEnter","onMouseOver","currentTarget","relatedTarget","gPoint","mousePointerId","isPrimary","currentPos","currentTime","updatePointersEnter","onMouseLeave","handleMouseExit","onMouseOut","updatePointersExit","getStandardizedButton","button","onMouseDown","updatePointersDown","pressHandler","dragHandler","dragEndHandler","onMouseUp","handleMouseUp","onMouseUpCaptured","updatePointersUp","onMouseMove","handleMouseMove","onMouseMoveCaptured","updatePointersMove","abortContacts","gPointCount","getLength","abortGPoints","contacts","getByIndex","onTouchStart","parentGPoints","touchCount","changedTouches","gPoints","touches","identifier","MOUSETRACKERS","isTracking","onTouchEnd","handleTouchEnd","onTouchEndCaptured","onTouchMove","handleTouchMove","onTouchMoveCaptured","onTouchCancel","onGestureStart","onGestureChange","onPointerOver","pointerId","onPointerOut","onPointerDown","pinchHandler","onPointerUp","handlePointerUp","onPointerUpCaptured","getById","onPointerMove","handlePointerMove","onPointerMoveCaptured","onPointerCancel","updatePointersCancel","startTrackingPointer","speed","direction","contactPos","contactTime","lastPos","lastTime","add","stopTrackingPointer","listLength","primaryPoint","removeById","getPrimary","curGPoint","updateGPoint","insideElement","captured","insideElementPressed","enterHandler","buttons","pointers","getActivePointerCount","buttonDownAny","exitHandler","buttonChanged","otherPointsLists","getActivePointersListsExceptType","nonPrimaryPressHandler","addContact","gesturePointVelocityTracker","addPoint","pinchGPoints","asArray","lastPinchDist","currentPinchDist","distanceTo","lastPinchCenter","currentPinchCenter","releasePoint","releaseTime","quick","wasCaptured","nonPrimaryReleaseHandler","otherPointsList","removeContact","removePoint","releaseHandler","insideElementReleased","equals","clicks","lastClickPos","dblClickTimeOut","gPointArray","delta","stopHandler","stopTimeOut","handlePointerStop","stopDelay","gesturePoints","lastCenter","center","lastDistance","distance","originalMoveEvent","random","click","dblclick","keydown","keyup","keypress","focus","blur","wheel","mousewheel","DOMMouseScroll","MozMousePixelScroll","mouseenter","mouseleave","mouseover","mouseout","mousedown","mouseup","mousemove","touchstart","touchend","touchmove","touchcancel","gesturestart","gesturechange","pointerover","MSPointerOver","pointerout","MSPointerOut","pointerdown","MSPointerDown","pointerup","MSPointerUp","pointermove","MSPointerMove","pointercancel","MSPointerCancel","startDisabled","setTracking","destroy","track","listArray","list","len","GesturePointList","resetAllMouseTrackers","trackerPoints","intervalId","_generateGuid","_doTracking","trackPoint","elapsedTime","atan2","guid","onmousewheel","supportsMouseCapture","divElement","PointerEvent","pointerEnabled","maxTouchPoints","haveMouseEnter","MSPointerEvent","msPointerEnabled","msMaxTouchPoints","_gPoints","gp","ControlAnchor","NONE","TOP_LEFT","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","ABSOLUTE","Control","container","anchor","attachToViewer","autoFade","wrapper","isVisible","setVisible","visible","setOpacity","getControlIndex","dock","controls","ControlDock","layout","layouts","floor","onsubmit","right","bottom","topleft","topright","bottomright","bottomleft","addControl","controlOptions","div","paddingRight","paddingTop","paddingBottom","paddingLeft","removeControl","clearControls","areControlsEnabled","setControlsEnabled","enabled","Placement","CENTER","TOP","RIGHT","BOTTOM","LEFT","properties","0","isLeft","isHorizontallyCentered","isRight","isTop","isVerticallyCentered","isBottom","1","2","3","4","5","6","7","8","_getSafeElemSize","oElement","getTileSourceImplementation","viewer","tileSource","imgOptions","successCallback","failCallback","waitUntilReady","originalTileSource","ready","tileSourceJ","TileSource","getTileUrl","customTileSource","$TileSource","determineType","configure","getOverlayObject","overlay","Overlay","href","px","rect","viewport","imageToViewportRectangle","Rect","py","placement","onDraw","checkResize","rotationMode","getOverlayIndex","overlays","scheduleUpdate","updateFunc","scheduleControlsFade","updateControlsFade","beginControlsAutoHide","controlsShouldFade","controlsFadeBeginTime","deltaTime","min","abortControlsAutoHide","onCanvasKeyDown","canvasKeyDownEventArgs","preventVerticalPan","preventHorizontalPan","zoomBy","panBy","deltaPointsFromPixels","applyConstraints","onCanvasKeyPress","canvasKeyPressEventArgs","goHome","setRotation","toggleFlip","onCanvasClick","gestureSettings","haveKeyboardFocus","activeElement","getContainerSize","canvasClickEventArgs","gestureSettingsByDeviceType","pointFromPixel","onCanvasDblClick","canvasDblClickEventArgs","onCanvasDrag","canvasDragEventArgs","negate","centerSpringX","centerSpringY","bounds","getBounds","constrainedBounds","getConstrainedBounds","onCanvasDragEnd","amplitudeX","cos","amplitudeY","sin","pixelFromPoint","getCenter","panTo","onCanvasEnter","onCanvasExit","onCanvasPress","onCanvasRelease","onCanvasNonPrimaryPress","onCanvasNonPrimaryRelease","onCanvasPinch","centerPt","lastCenterPt","panByPt","angle1","angle2","getRotation","PI","onCanvasScroll","factor","thisScrollTime","deltaScrollTime","_lastScrollTime","pow","onContainerEnter","mouseInside","onContainerExit","animating","updateMulti","updateOnce","isOpen","_updateRequestId","_opening","containerSize","prevContainerSize","resizeRatio","zoom","getZoom","resize","zoomTo","oldBounds","fitBoundsWithConstraints","forceRedraw","viewportChange","update","animated","world","referenceStrip","needsDraw","drawWorld","_drawOverlays","imageLoader","clear","drawer","draw","resolveUrl","prefix","beginZoomingIn","lastZoomTime","zoomFactor","zooming","scheduleZoom","beginZoomingOut","endZooming","doZoom","adjustedFactor","doSingleZoomIn","doSingleZoomOut","lightUp","emulateEnter","emulateExit","onHome","onFullScreen","isFullPage","setFullPage","setFullScreen","fullPageButton","onRotateLeft","currRotation","onRotateRight","onFlip","onPrevious","_sequenceIndex","goToPage","onNext","nextHash","config","overlaysContainer","previousBody","customControls","collectionViewport","collectionDrawer","profiler","fsBoundsDelta","group","fullPage","onfullscreenchange","_firstOpen","_loadQueue","currentOverlays","getString","_showMessage","overflow","tabIndex","bodyWidth","bodyHeight","bodyOverflow","docOverflow","innerTracker","outerTracker","toolbar","bindStandardControls","World","getItemAt","getItemCount","_setContentBounds","getHomeBounds","getContentFactor","Viewport","margins","viewportMargins","ImageLoader","jobLimit","tileCache","TileCache","Drawer","canRotate","rotateLeft","rotateRight","Navigator","sizeRatio","maintainSizeRatio","borderColor","displayRegionColor","bindSequenceControls","setImageSmoothingEnabled","openDzi","dzi","openTileSource","close","isNaN","addReferenceStrip","_updateSequenceButtons","failEvent","expected","successes","failures","checkCompletion","doOne","collectionImmediately","originalSuccess","addOverlay","originalError","addTiledImage","clearOverlays","innerHTML","removeAll","isMouseNavEnabled","setMouseNavEnabled","setDebugMode","nodes","bodyStyle","docStyle","fullPageEventArgs","elementSize","pageScroll","elementMargin","elementPadding","bodyMargin","docMargin","bodyPadding","docPadding","docWidth","docHeight","prevElementParent","prevNextSibling","nextSibling","prevElementWidth","prevElementHeight","childNodes","restoreScrollCounter","restoreScroll","fullScreen","fullScreeEventArgs","fullPageStyleWidth","fullPageStyleHeight","onFullScreenChange","visibility","raiseAddItemFailed","myQueueItem","refreshWorld","theItem","arrange","immediately","rows","columns","tileSize","tileMargin","setAutoRefigureSizes","processReadyItems","queueItem","tiledImage","optionsClone","newIndex","getIndexOfItem","replaceItem","removeItem","TiledImage","fitBounds","fitBoundsPlacement","clip","addItem","originalTiledImage","item","_hideMessage","addSimpleImage","opts","addLayer","getLayerAtLevel","level","getLevelOfLayer","getLayersCount","setLayerLevel","setItemIndex","removeLayer","onFocusHandler","onBlurHandler","onNextHandler","onPreviousHandler","useGroup","previousButton","nextButton","Button","tooltip","srcRest","srcGroup","srcHover","srcDown","onRelease","disable","paging","ButtonGroup","pagingControl","beginZoomingInHandler","endZoomingHandler","doSingleZoomInHandler","beginZoomingOutHandler","doSingleZoomOutHandler","onHomeHandler","onFullScreenHandler","onRotateLeftHandler","onRotateRightHandler","onFlipHandler","zoomInButton","zoomOutButton","homeButton","rotateLeftButton","rotateRightButton","flipButton","onPress","onEnter","onExit","navControl","currentPage","page","setFocus","drawHTML","updateOverlay","removeOverlay","getOverlayById","enable","messageDiv","_cancelPendingImages","removeReferenceStrip","ReferenceStrip","_setTransformRotate","setElementTransform","rule","webkitTransform","mozTransform","msTransform","oTransform","transform","rotate","displayRegionContainer","displayRegion","viewerSize","navigatorSize","borderWidth","fudge","totalBorderWidths","fontSize","cssFloat","styleFloat","zIndex","cursor","_resizeWithViewer","oldViewerSize","elementArea","oldContainerSize","previousIndex","theirItem","myItem","_getMatchingItem","updateSize","setFlip","state","setDisplayTransform","getFlip","newWidth","newHeight","sqrt","getBoundsNoRotate","pixelFromPointNoRotate","getTopLeft","getBottomRight","original","matchBounds","_matchBounds","matchOpacity","_matchOpacity","matchCompositeOperation","_matchCompositeOperation","_originalForNavigator","setPosition","setWidth","setClip","getClip","setCompositeOperation","I18N","Errors","Dzc","Dzi","Xml","ImageFormat","Security","Status","OpenFailed","Tooltips","FullPage","Home","ZoomIn","ZoomOut","NextPage","PreviousPage","RotateLeft","RotateRight","Flip","capture","setString","divide","squaredDistanceTo","func","d","angle","processResponse","xhr","responseXML","tileOverlap","minLevel","maxLevel","aspectRatio","dimensions","_tileWidth","_tileHeight","getImageInfo","tileWidth","tileHeight","ceil","getTileSize","getTileWidth","getTileHeight","getLevelScale","levelScaleCache","_level","getNumTiles","scale","getPixelRatio","imageSizeScaled","rx","ry","getClosestLevel","tiles","getTileAtPoint","validPoint","widthScaled","pixelX","pixelY","EPSILON","getTileBounds","isSource","dimensionsScaled","sx","sy","readySource","urlParts","filename","lastDot","exc","formattedExc","supports","getTileAjaxHeaders","tileExists","numTiles","configureFromXML","dispRectNodes","dispRectNode","rectNode","sizeNode","rootName","localName","ns","namespaceURI","configuration","displayRects","getElementsByTagNameNS","getAttribute","DisplayRect","Overlap","X","Y","MinLevel","MaxLevel","configureFromObject","messageNode","nodeValue","rectData","imageData","tilesUrl","fileFormat","sizeData","dispRectData","DziTileSource","_levelRects","queryParams","xMin","yMin","xMax","yMax","rects","canBeTiled","profile","level0Profiles","isLevel0","hasSizeByW","constructLevels","levels","sizes","tileFormat","sort","configureFromXml10","parseXML10","trim","Number","nodeName","IIIFTileSource","tileSizePerScaleFactor","tile_width","tile_height","scale_factors","scaleFactors","t","sf","scaleFactor","shortDim","tileOptions","smallerTiles","emulateLegacyImagePyramid","maxScaleFactor","LOG2E","preferredFormats","f","levelScale","NaN","iiifTileSizeWidth","iiifTileSizeHeight","iiifRegion","iiifTileX","iiifTileY","iiifTileW","iiifTileH","iiifSize","iiifSizeW","iiifQuality","uri","isv1","IIIF_ROTATION","levelWidth","levelHeight","OsmTileSource","TmsTileSource","bufferedWidth","bufferedHeight","yTiles","ZoomifyTileSource","currentImageSize","imageSizes","gridSize","_getGridSize","reverse","_calculateAbsoluteTileNumber","num","z","filterFiles","files","file","filtered","conf","LegacyTileSource","dataUrl","ImageTileSource","buildPyramid","image","_image","crossOrigin","useCredentials","naturalWidth","naturalHeight","_buildLevels","getContext2D","context2D","currentWidth","currentHeight","bigCanvas","bigContext","drawImage","smallCanvas","smallContext","TileSourceCollection","scheduleFade","updateFade","shouldFade","fadeBeginTime","fadeLength","imgGroup","beginFading","fadeDelay","stopFading","inTo","newState","disabled","ButtonState","currentState","imgHover","imgDown","outTo","imgRest","title","notifyGroupEnter","notifyGroupExit","labelText","newTopLeft","getTopRight","getBottomLeft","fromSummits","topLeft","topRight","bottomLeft","diff","radians","atan","getAspectRatio","getSize","other","translate","union","thisBoundingBox","getBoundingBox","otherBoundingBox","intersection","getIntersection","abVector","cdVector","denom","intersectionPoints","thisTopLeft","containsPoint","thisTopRight","thisBottomLeft","thisBottomRight","rectTopLeft","rectTopRight","rectBottomLeft","rectBottomRight","thisSegments","_getSegments","rectSegments","thisSegment","rectSegment","intersect","minX","maxX","minY","maxY","k","bottomRight","newTopRight","getIntegerBoundingBox","boundingBox","epsilon","topDiff","leftDiff","onStripDrag","marginLeft","marginTop","scrollWidth","scrollHeight","dragging","loadPanels","onStripScroll","strip","panelSize","activePanelsStart","activePanelsEnd","miniViewer","panelWidth","panelHeight","panels","activePanel","miniTileSource","referenceStripThumbnailUrl","float","miniViewers","onStripEnter","marginBottom","onStripExit","marginRight","currentSelected","stiffness","exp","Spring","initial","exponential","_exponential","current","start","_logValue","resetTo","springTo","shiftBy","setExponential","startValue","targetValue","currentValue","oldValue","isAtTargetValue","ImageJob","jobId","completeJob","loader","job","nextJob","jobsInProgress","jobQueue","errorMsg","selfAbort","abort","finish","onabort","loadWithAjax","blb","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","bb","append","getBlob","URL","webkitURL","createObjectURL","successful","addJob","complete","jobOptions","newJob","Tile","exists","sourceBounds","cacheKey","stringify","loading","imgElement","blendStart","squaredDistance","beingDrawn","lastTouchTime","isRightMost","isBottomMost","_hasTransparencyChannel","cacheImageRecord","getImage","cloneNode","msInterpolationMode","drawCanvas","drawingHandler","rendered","getRenderedContext","save","globalAlpha","clearRect","tile","sourceWidth","sourceHeight","restore","getScaleForEdgeSmoothing","getTranslationForEdgeSmoothing","canvasSize","sketchCanvasSize","unload","OverlayPlacement","OverlayRotationMode","NO_ROTATION","EXACT","BOUNDING_BOX","_init","scales","adjust","transformOriginProp","transformProp","positionAndSize","_getOverlayPositionAndSize","_getTransformOrigin","_getSizeInPixels","_getBoundingBox","scaledSize","deltaPixelsFromPointsNoRotate","eltSize","refPoint","_getPlacementPoint","deltaPointsFromPixelsNoRotate","_adjustBoundsForRotation","viewerElementToViewportRectangle","sketchCanvas","sketchContext","dir","viewportSize","_calculateCanvasSize","_imageSmoothingEnabled","getOpacity","maxOpacity","needsUpdate","numTilesLoaded","reset","resetItems","_updateImageSmoothingEnabled","_calculateSketchCanvasSize","_clear","useSketch","_getContext","viewportToDrawerRectangle","rectangle","drawTile","resizeSketchCanvas","saveContext","restoreContext","beginPath","drawRectangle","fillStyle","fillRect","blendSketch","globalCompositeOperation","widthExt","heightExt","widthDiff","heightDiff","drawDebugInfo","colorIndex","lineWidth","font","strokeStyle","_offsetForRotation","_getRotationPoint","_drawer","_flip","strokeRect","tileCenterX","tileCenterY","fillText","_restoreRotationChanges","debugRect","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","getCanvasSize","sketch","getCanvasCenter","contentSize","_margins","zoomPoint","_updateContainerInnerSize","zoomSpring","_oldCenterX","_oldCenterY","_oldZoom","resetContentSize","setHomeBounds","contentFactor","_contentBoundsNoRotate","_contentSizeNoRotate","_contentBounds","_contentSize","_contentAspectRatio","homeBounds","contentBounds","getHomeZoom","output","aspectFactor","getHomeBoundsNoRotate","getMinZoom","homeZoom","getMaxZoom","_containerInnerSize","getMargins","setMargins","getBoundsWithMargins","getBoundsNoRotateWithMargins","oldZoomPixel","newZoomPixel","deltaZoomPixels","deltaZoomPoints","centerCurrent","centerTarget","_pixelFromPoint","_applyZoomConstraints","_applyBoundaryConstraints","newBounds","horizontalThreshold","boundsRight","contentRight","leftDx","rightDx","verticalThreshold","boundsBottom","contentBottom","topDy","bottomDy","_raiseConstraintsEvent","actualZoom","constrainedZoom","ensureVisible","_fitBounds","constraints","aspect","newZoom","newBoundsAspectRatio","newConstrainedZoom","oldZoom","referencePoint","fitVertically","box","fitHorizontally","_adjustCenterSpringsForZoomPoint","newContainerSize","maintain","widthDeltaFactor","changed","zoomSpringHandler","deltaPoints","deltaPixelsFromPoints","deltaPixels","_pixelFromPointNoRotate","pointFromPixelNoRotate","pixel","_viewportToImageDelta","viewerX","viewerY","viewportToImageCoordinates","_imageToViewportDelta","imageX","imageY","imageToViewportCoordinates","pixelWidth","pixelHeight","coordA","coordB","viewportToImageRectangle","pointWidth","pointHeight","viewerElementToImageCoordinates","imageToViewerElementCoordinates","windowToImageCoordinates","viewerCoordinates","imageToWindowCoordinates","viewerElementToViewportCoordinates","viewportToViewerElementCoordinates","viewportToViewerElementRectangle","windowToViewportCoordinates","viewportToWindowCoordinates","viewportToImageZoom","viewportZoom","imageWidth","containerWidth","viewportToImageZoomRatio","imageToViewportZoom","imageZoom","updateLevel","haveDrawn","drawLevel","levelOpacity","levelVisibility","drawArea","best","topLeftBound","bottomRightBound","havedrawn","currenttime","resetCoverage","coverage","loadingCoverage","cornerTiles","_getCornerTiles","topLeftTile","bottomRightTile","numberOfTiles","viewportCenter","tileBounds","updateTile","getTile","tilesMatrix","_worldWidthCurrent","_worldHeightCurrent","setCoverage","isCovered","positionTile","setTileLoaded","imageRecord","_tileCache","getImageRecord","blendTile","_needsDraw","_tilesLoading","compareTiles","worldWidth","worldHeight","xMod","yMod","loadTile","_imageLoader","tileRequest","onTileLoad","lastResetTime","cutoff","_midDraw","getCompletionCallback","increment","completionCallback","cacheTile","overlap","boundsTL","_scaleSpring","_xSpring","_ySpring","boundsSize","positionC","positionT","sizeC","sizeT","tileCenter","tileSquaredDistance","blendTimeMillis","lastDrawn","_hasOpaqueTile","providesCoverage","cols","covers","previousBest","drawTiles","_isBottomItem","sketchScale","sketchTranslate","getClippedBounds","usedClip","_clip","clipRect","placeholderRect","_drawingHandler","normHeight","contentAspectX","_preload","_fullyLoaded","_degreesSpring","_updateForScale","getFullyLoaded","_setFullyLoaded","flag","fullyLoaded","clearTilesFor","xUpdated","yUpdated","scaleUpdated","degreesUpdated","_updateViewport","_worldWidthTarget","_worldHeightTarget","getWorldBounds","ratio","getContentSize","_viewportToTiledImageRectangle","sameTarget","_raiseBoundsChange","_setScale","setHeight","anchorProperties","xOffset","yOffset","displayedWidthRatio","displayedHeightRatio","newClip","getPreload","setPreload","getCompositeOperation","_getLevelsInterval","lowestLevel","currentZeroRatio","highestLevel","tiledImageBounds","levelsInterval","bestTile","currentRenderPixelRatio","targetRenderPixelRatio","targetZeroRatio","optimalRatio","leftX","rightX","topY","bottomY","TileRecord","ImageRecord","_tiles","_renderedContext","setRenderedContext","renderedContext","addTile","removeTile","getTileCount","_maxImageCacheCount","_tilesLoaded","_imagesLoaded","_imagesLoadedCount","insertionIndex","prevTile","worstTime","worstLevel","prevTime","prevLevel","prevTileRecord","worstTile","worstTileIndex","worstTileRecord","_unloadTile","tileRecord","_items","_autoRefigureSizes","_needsSizesFigured","_delegatedFigureSizes","_figureSizes","oldIndex","_raiseRemoveItem","removedItems","_homeBounds","_contentFactor","wrap","oldHomeBounds","oldContentSize","oldContentFactor","clippedBounds","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","arr","remaining","race","values","onUnhandled","allRejections","matchWhitelist","rejections","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","_72","errStr","stack","line","some","cls","RangeError","ba","g","h","l","framesToPop","encodeURIComponent","ca","ja","da","ea","ia","ka","fa","ha","na","la","ma","oa","extractEvents","eventTypes","pa","phasedRegistrationNames","qa","registrationName","ra","sa","dependencies","wa","va","xa","ya","Aa","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Ca","stateNode","ta","Da","za","Ha","Fa","tag","Ia","Ja","Ka","Ga","La","return","Ma","dispatchConfig","Na","_targetInst","Oa","Pa","Qa","Sa","Wa","Ua","Ta","Va","eb","db","textContent","fb","gb","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","ib","eventPool","jb","destructor","hb","getPooled","ub","mb","vb","xb","which","tb","rb","yb","wb","nb","char","qb","locale","Db","Ab","Eb","Bb","Cb","Fb","Gb","Hb","Ib","Kb","Jb","Mb","Lb","Nb","correspondingUseElement","Ob","Ra","setAttribute","Pb","Qb","getOwnPropertyDescriptor","get","set","getValue","setValue","_valueTracker","Rb","Sb","checked","hc","gc","ic","displayName","bc","Xb","Wb","Zb","Yb","dc","$$typeof","ac","$b","cc","ec","fc","_status","_result","jc","_debugOwner","_debugSource","fileName","Ub","lineNumber","oc","lc","nc","mc","kc","pc","acceptsBooleans","qc","C","attributeName","attributeNamespace","mustUseProperty","propertyName","sc","tc","D","removeAttribute","setAttributeNS","uc","vc","defaultChecked","defaultValue","_wrapperState","initialChecked","wc","initialValue","controlled","xc","yc","zc","Ac","Cc","Bc","change","Fc","Gc","Hc","Jc","Dc","Kc","Ec","Lc","Mc","Nc","Oc","Sc","getModifierState","Rc","Tc","bd","dd","cd","ed","alternate","effectTag","fd","gd","sibling","hd","ld","wd","bubbled","isInteractive","ud","vd","Ad","targetInst","ancestors","containerInfo","topLevelType","E","yd","Cd","Dd","Ed","Bd","zd","Id","Hd","Gd","Fd","Jd","Kd","Ld","Md","contains","compareDocumentPosition","Nd","HTMLIFrameElement","contentWindow","Od","contentEditable","Pd","selectionStart","end","selectionEnd","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","A","focusedElem","selectionRange","Qd","createRange","setStart","removeAllRanges","addRange","setEnd","Xd","Wd","Td","Vd","Sd","select","Ud","Zd","aa","Children","$d","children","ae","selected","defaultSelected","be","dangerouslySetInnerHTML","ce","de","ee","ge","he","ke","lastChild","ne","le","oe","setProperty","qe","pe","re","is","se","ab","te","we","autoFocus","xe","__html","Ce","je","wasMultiple","multiple","De","Ee","F","Ge","Fe","G","Je","contextTypes","He","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","J","childContextTypes","Ke","I","H","Le","Me","Ne","getChildContext","Oe","__reactInternalMemoizedMergedChildContext","Ie","Pe","Se","Te","__REACT_DEVTOOLS_GLOBAL_HOOK__","isDisabled","supportsFiber","inject","Qe","onCommitFiberRoot","Re","onCommitFiberUnmount","Ue","elementType","ref","pendingProps","contextDependencies","memoizedState","updateQueue","memoizedProps","mode","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","K","Ve","isReactComponent","We","Xe","Ye","Ze","$e","af","bf","pendingChildren","implementation","cf","didError","earliestPendingTime","latestPendingTime","df","ef","earliestSuspendedTime","latestSuspendedTime","latestPingedTime","ff","gf","nextExpirationTimeToWorkOn","L","defaultProps","hf","_ctor","kf","baseState","uf","shouldComponentUpdate","isPureReactComponent","vf","contextType","M","updater","tf","_reactInternalFiber","wf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","enqueueReplaceState","xf","refs","jf","yf","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Af","_owner","_stringRef","Bf","Cf","Map","Vb","zf","v","q","u","B","delete","R","If","Ff","Jf","Hf","Gf","N","Kf","Lf","Mf","fg","gg","hg","Wf","Xf","P","Vf","ig","jg","cg","eg","Zf","Yf","ag","Q","O","dg","kg","$f","bg","lg","mg","baseUpdate","ng","og","pg","lastRenderedReducer","dispatch","action","qg","last","lastRenderedState","eagerReducer","eagerState","rg","deps","sg","tg","Nf","ug","vg","wg","of","lf","mf","qf","Ag","Bg","Cg","zg","yg","xg","Dg","Eg","Fg","S","Ef","Df","Hg","Ig","Jg","Kg","compare","Lg","Mg","Ng","Og","Pg","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","Qg","Gg","getDerivedStateFromError","Rg","pendingContext","Sg","timedOutAt","fallback","Tg","Ug","hydrate","hidden","_context","_calculateChangedBits","first","observedBits","nf","pf","unstable_observedBits","Vg","_currentValue","Zg","Wg","Yg","Xg","bh","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","ch","$g","payload","dh","eh","fh","gh","rf","ah","hh","ih","jh","kh","qh","rh","sh","th","uh","vh","componentWillUnmount","wh","xh","yh","_reactRootContainer","onclick","zh","Pf","Qf","ph","Ah","has","Ch","Dh","Eh","componentDidCatch","Fh","Set","componentStack","Gh","Sh","T","Lh","U","Mh","Nh","Th","V","Uh","Of","__reactInternalSnapshotBeforeUpdate","Vh","Rf","Sf","Ph","Wh","Rh","Qh","W","Uf","Tf","Xh","Yh","Be","Zh","Oh","Kh","pendingCommitExpirationTime","Ih","ue","ve","r","unstable_runWithPriority","unstable_NormalPriority","Ae","$h","ai","mh","nh","fe","html","createElementNS","lh","oh","bi","ci","Hh","di","maxDuration","pingCache","Bh","ei","finishedWork","fi","unstable_getCurrentPriorityLevel","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_LowPriority","unstable_IdlePriority","gi","hi","ii","ji","ki","xi","ui","unstable_now","ti","yi","mi","ni","unstable_cancelCallback","unstable_scheduleCallback","zi","ye","Ai","vi","Bi","Ci","Z","nextScheduledRoot","li","ri","oi","Di","Ei","unstable_shouldYield","wi","si","_onComplete","pi","qi","Fi","ze","firstBatch","_expirationTime","_defer","Gi","Hi","Ii","Ji","Ki","Li","Mi","Ni","Jh","_root","_callbacks","_next","_hasChildren","_didComplete","_children","Oi","_didCommit","_onCommit","Pi","_internalRoot","Qi","Ri","hasAttribute","Si","legacy_renderSubtreeIntoContainer","Ti","Ui","Ba","injectEventPluginOrder","injectEventPluginsByName","Ea","animationend","animationiteration","animationstart","transitionend","animation","transition","Xa","Ya","Za","$a","persist","eventPhase","bubbles","cancelable","timeStamp","isTrusted","kb","lb","ob","documentMode","pb","sb","beforeInput","compositionEnd","compositionStart","compositionUpdate","zb","color","date","datetime","datetime-local","email","month","password","range","tel","text","week","Tb","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","Symbol","for","iterator","rc","Ic","Pc","_isInputEventSupported","Qc","view","Alt","Meta","Shift","Uc","Vc","Wc","Xc","Yc","screenX","screenY","fromElement","toElement","movementX","movementY","Zc","pressure","tangentialPressure","tiltX","tiltY","twist","$c","mouseEnter","mouseLeave","pointerEnter","pointerLeave","ad","animationName","pseudoElement","jd","clipboardData","kd","md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","nd","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","od","repeat","pd","dataTransfer","qd","targetTouches","rd","sd","wheelDeltaX","wheelDeltaY","td","xd","isInteractiveTopLevelEventType","Rd","Yd","onSelect","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","mathml","svg","ie","MSApp","execUnsafeLocalFunction","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","order","orphans","tabSize","widows","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","me","menuitem","area","base","br","col","embed","hr","input","keygen","link","wbr","isMounted","enqueueSetState","enqueueForceUpdate","readContext","useCallback","useContext","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","ReactCurrentOwner","WeakSet","WeakMap","querySelectorAll","form","commit","unmount","createBatch","Vi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","Events","findFiberByHostInstance","overrideProps","currentDispatcherRef","findHostInstanceByFiber","bundleType","rendererPackageName","Wi","Xi","checkDCE","escape","=",":","keyPrefix","setState","forceUpdate","__self","__source","toArray","only","createRef","PureComponent","createContext","_currentValue2","_threadCount","Provider","Consumer","forwardRef","lazy","Fragment","StrictMode","Suspense","cloneElement","createFactory","isValidElement","unstable_ConcurrentMode","unstable_Profiler","priorityLevel","performance","_schedMock","MessageChannel","port2","port1","onmessage","postMessage","unstable_next","unstable_wrapCallback","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","normalizeName","normalizeValue","iteratorFor","items","support","iterable","Headers","consumed","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","Uint8Array","chars","bufferClone","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","rejected","decode","json","normalizeMethod","upcased","methods","Request","credentials","referrer","bytes","parseHeaders","rawHeaders","Response","bodyInit","ok","fetch","viewClasses","DataView","isView","thisArg","entries","redirectStatuses","redirect","init","getAllResponseHeaders","responseURL","ontimeout","polyfill"],"mappings":"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","file":"static/js/main.4a69e9c8.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ((function(modules) {\n\t// Check all modules for deduplicated modules\n\tfor(var i in modules) {\n\t\tif(Object.prototype.hasOwnProperty.call(modules, i)) {\n\t\t\tswitch(typeof modules[i]) {\n\t\t\tcase \"function\": break;\n\t\t\tcase \"object\":\n\t\t\t\t// Module can be created from a template\n\t\t\t\tmodules[i] = (function(_m) {\n\t\t\t\t\tvar args = _m.slice(1), fn = modules[_m[0]];\n\t\t\t\t\treturn function (a,b,c) {\n\t\t\t\t\t\tfn.apply(this, [a,b,c].concat(args));\n\t\t\t\t\t};\n\t\t\t\t}(modules[i]));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// Module is a copy of another module\n\t\t\t\tmodules[i] = modules[modules[i]];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn modules;\n}([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(16);\n\tmodule.exports = __webpack_require__(7);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tif (true) {\n\t  module.exports = __webpack_require__(17);\n\t} else {\n\t  module.exports = require('./cjs/react.development.js');\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar asap = __webpack_require__(4);\n\t\n\tfunction noop() {}\n\t\n\t// States:\n\t//\n\t// 0 - pending\n\t// 1 - fulfilled with _value\n\t// 2 - rejected with _value\n\t// 3 - adopted the state of another promise, _value\n\t//\n\t// once the state is no longer pending (0) it is immutable\n\t\n\t// All `_` prefixed properties will be reduced to `_{random number}`\n\t// at build time to obfuscate them and discourage their use.\n\t// We don't use symbols or Object.defineProperty to fully hide them\n\t// because the performance isn't good enough.\n\t\n\t\n\t// to avoid using try/catch inside critical functions, we\n\t// extract them to here.\n\tvar LAST_ERROR = null;\n\tvar IS_ERROR = {};\n\tfunction getThen(obj) {\n\t  try {\n\t    return obj.then;\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tfunction tryCallOne(fn, a) {\n\t  try {\n\t    return fn(a);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\tfunction tryCallTwo(fn, a, b) {\n\t  try {\n\t    fn(a, b);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tmodule.exports = Promise;\n\t\n\tfunction Promise(fn) {\n\t  if (typeof this !== 'object') {\n\t    throw new TypeError('Promises must be constructed via new');\n\t  }\n\t  if (typeof fn !== 'function') {\n\t    throw new TypeError('not a function');\n\t  }\n\t  this._45 = 0;\n\t  this._81 = 0;\n\t  this._65 = null;\n\t  this._54 = null;\n\t  if (fn === noop) return;\n\t  doResolve(fn, this);\n\t}\n\tPromise._10 = null;\n\tPromise._97 = null;\n\tPromise._61 = noop;\n\t\n\tPromise.prototype.then = function(onFulfilled, onRejected) {\n\t  if (this.constructor !== Promise) {\n\t    return safeThen(this, onFulfilled, onRejected);\n\t  }\n\t  var res = new Promise(noop);\n\t  handle(this, new Handler(onFulfilled, onRejected, res));\n\t  return res;\n\t};\n\t\n\tfunction safeThen(self, onFulfilled, onRejected) {\n\t  return new self.constructor(function (resolve, reject) {\n\t    var res = new Promise(noop);\n\t    res.then(resolve, reject);\n\t    handle(self, new Handler(onFulfilled, onRejected, res));\n\t  });\n\t};\n\tfunction handle(self, deferred) {\n\t  while (self._81 === 3) {\n\t    self = self._65;\n\t  }\n\t  if (Promise._10) {\n\t    Promise._10(self);\n\t  }\n\t  if (self._81 === 0) {\n\t    if (self._45 === 0) {\n\t      self._45 = 1;\n\t      self._54 = deferred;\n\t      return;\n\t    }\n\t    if (self._45 === 1) {\n\t      self._45 = 2;\n\t      self._54 = [self._54, deferred];\n\t      return;\n\t    }\n\t    self._54.push(deferred);\n\t    return;\n\t  }\n\t  handleResolved(self, deferred);\n\t}\n\t\n\tfunction handleResolved(self, deferred) {\n\t  asap(function() {\n\t    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t    if (cb === null) {\n\t      if (self._81 === 1) {\n\t        resolve(deferred.promise, self._65);\n\t      } else {\n\t        reject(deferred.promise, self._65);\n\t      }\n\t      return;\n\t    }\n\t    var ret = tryCallOne(cb, self._65);\n\t    if (ret === IS_ERROR) {\n\t      reject(deferred.promise, LAST_ERROR);\n\t    } else {\n\t      resolve(deferred.promise, ret);\n\t    }\n\t  });\n\t}\n\tfunction resolve(self, newValue) {\n\t  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t  if (newValue === self) {\n\t    return reject(\n\t      self,\n\t      new TypeError('A promise cannot be resolved with itself.')\n\t    );\n\t  }\n\t  if (\n\t    newValue &&\n\t    (typeof newValue === 'object' || typeof newValue === 'function')\n\t  ) {\n\t    var then = getThen(newValue);\n\t    if (then === IS_ERROR) {\n\t      return reject(self, LAST_ERROR);\n\t    }\n\t    if (\n\t      then === self.then &&\n\t      newValue instanceof Promise\n\t    ) {\n\t      self._81 = 3;\n\t      self._65 = newValue;\n\t      finale(self);\n\t      return;\n\t    } else if (typeof then === 'function') {\n\t      doResolve(then.bind(newValue), self);\n\t      return;\n\t    }\n\t  }\n\t  self._81 = 1;\n\t  self._65 = newValue;\n\t  finale(self);\n\t}\n\t\n\tfunction reject(self, newValue) {\n\t  self._81 = 2;\n\t  self._65 = newValue;\n\t  if (Promise._97) {\n\t    Promise._97(self, newValue);\n\t  }\n\t  finale(self);\n\t}\n\tfunction finale(self) {\n\t  if (self._45 === 1) {\n\t    handle(self, self._54);\n\t    self._54 = null;\n\t  }\n\t  if (self._45 === 2) {\n\t    for (var i = 0; i < self._54.length; i++) {\n\t      handle(self, self._54[i]);\n\t    }\n\t    self._54 = null;\n\t  }\n\t}\n\t\n\tfunction Handler(onFulfilled, onRejected, promise){\n\t  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t  this.promise = promise;\n\t}\n\t\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, promise) {\n\t  var done = false;\n\t  var res = tryCallTwo(fn, function (value) {\n\t    if (done) return;\n\t    done = true;\n\t    resolve(promise, value);\n\t  }, function (reason) {\n\t    if (done) return;\n\t    done = true;\n\t    reject(promise, reason);\n\t  })\n\t  if (!done && res === IS_ERROR) {\n\t    done = true;\n\t    reject(promise, LAST_ERROR);\n\t  }\n\t}\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tmodule.exports = rawAsap;\n\tfunction rawAsap(task) {\n\t    if (!queue.length) {\n\t        requestFlush();\n\t        flushing = true;\n\t    }\n\t    // Equivalent to push, but avoids a function call.\n\t    queue[queue.length] = task;\n\t}\n\t\n\tvar queue = [];\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\tvar flushing = false;\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tvar requestFlush;\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tvar index = 0;\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tvar capacity = 1024;\n\t\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tfunction flush() {\n\t    while (index < queue.length) {\n\t        var currentIndex = index;\n\t        // Advance the index before calling the task. This ensures that we will\n\t        // begin flushing on the next task the task throws an error.\n\t        index = index + 1;\n\t        queue[currentIndex].call();\n\t        // Prevent leaking memory for long chains of recursive calls to `asap`.\n\t        // If we call `asap` within tasks scheduled by `asap`, the queue will\n\t        // grow, but to avoid an O(n) walk for every task we execute, we don't\n\t        // shift tasks off the queue after they have been executed.\n\t        // Instead, we periodically shift 1024 tasks off the queue.\n\t        if (index > capacity) {\n\t            // Manually shift all values starting at the index back to the\n\t            // beginning of the queue.\n\t            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n\t                queue[scan] = queue[scan + index];\n\t            }\n\t            queue.length -= index;\n\t            index = 0;\n\t        }\n\t    }\n\t    queue.length = 0;\n\t    index = 0;\n\t    flushing = false;\n\t}\n\t\n\t// `requestFlush` is implemented using a strategy based on data collected from\n\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\n\t// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n\t// have WebKitMutationObserver but not un-prefixed MutationObserver.\n\t// Must use `global` or `self` instead of `window` to work in both frames and web\n\t// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\t\n\t/* globals self */\n\tvar scope = typeof global !== \"undefined\" ? global : self;\n\tvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\t\n\t// MutationObservers are desirable because they have high priority and work\n\t// reliably everywhere they are implemented.\n\t// They are implemented in all modern browsers.\n\t//\n\t// - Android 4-4.3\n\t// - Chrome 26-34\n\t// - Firefox 14-29\n\t// - Internet Explorer 11\n\t// - iPad Safari 6-7.1\n\t// - iPhone Safari 7-7.1\n\t// - Safari 6-7\n\tif (typeof BrowserMutationObserver === \"function\") {\n\t    requestFlush = makeRequestCallFromMutationObserver(flush);\n\t\n\t// MessageChannels are desirable because they give direct access to the HTML\n\t// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t// 11-12, and in web workers in many engines.\n\t// Although message channels yield to any queued rendering and IO tasks, they\n\t// would be better than imposing the 4ms delay of timers.\n\t// However, they do not work reliably in Internet Explorer or Safari.\n\t\n\t// Internet Explorer 10 is the only browser that has setImmediate but does\n\t// not have MutationObservers.\n\t// Although setImmediate yields to the browser's renderer, it would be\n\t// preferrable to falling back to setTimeout since it does not have\n\t// the minimum 4ms penalty.\n\t// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t// Desktop to a lesser extent) that renders both setImmediate and\n\t// MessageChannel useless for the purposes of ASAP.\n\t// https://github.com/kriskowal/q/issues/396\n\t\n\t// Timers are implemented universally.\n\t// We fall back to timers in workers in most engines, and in foreground\n\t// contexts in the following browsers.\n\t// However, note that even this simple case requires nuances to operate in a\n\t// broad spectrum of browsers.\n\t//\n\t// - Firefox 3-13\n\t// - Internet Explorer 6-9\n\t// - iPad Safari 4.3\n\t// - Lynx 2.8.7\n\t} else {\n\t    requestFlush = makeRequestCallFromTimer(flush);\n\t}\n\t\n\t// `requestFlush` requests that the high priority event queue be flushed as\n\t// soon as possible.\n\t// This is useful to prevent an error thrown in a task from stalling the event\n\t// queue if the exception handled by Node.js’s\n\t// `process.on(\"uncaughtException\")` or by a domain.\n\trawAsap.requestFlush = requestFlush;\n\t\n\t// To request a high priority event, we induce a mutation observer by toggling\n\t// the text of a text node between \"1\" and \"-1\".\n\tfunction makeRequestCallFromMutationObserver(callback) {\n\t    var toggle = 1;\n\t    var observer = new BrowserMutationObserver(callback);\n\t    var node = document.createTextNode(\"\");\n\t    observer.observe(node, {characterData: true});\n\t    return function requestCall() {\n\t        toggle = -toggle;\n\t        node.data = toggle;\n\t    };\n\t}\n\t\n\t// The message channel technique was discovered by Malte Ubl and was the\n\t// original foundation for this library.\n\t// http://www.nonblocking.io/2011/06/windownexttick.html\n\t\n\t// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n\t// page's first load. Thankfully, this version of Safari supports\n\t// MutationObservers, so we don't need to fall back in that case.\n\t\n\t// function makeRequestCallFromMessageChannel(callback) {\n\t//     var channel = new MessageChannel();\n\t//     channel.port1.onmessage = callback;\n\t//     return function requestCall() {\n\t//         channel.port2.postMessage(0);\n\t//     };\n\t// }\n\t\n\t// For reasons explained above, we are also unable to use `setImmediate`\n\t// under any circumstances.\n\t// Even if we were, there is another bug in Internet Explorer 10.\n\t// It is not sufficient to assign `setImmediate` to `requestFlush` because\n\t// `setImmediate` must be called *by name* and therefore must be wrapped in a\n\t// closure.\n\t// Never forget.\n\t\n\t// function makeRequestCallFromSetImmediate(callback) {\n\t//     return function requestCall() {\n\t//         setImmediate(callback);\n\t//     };\n\t// }\n\t\n\t// Safari 6.0 has a problem where timers will get lost while the user is\n\t// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n\t// mutation observers, so that implementation is used instead.\n\t// However, if we ever elect to use timers in Safari, the prevalent work-around\n\t// is to add a scroll event listener that calls for a flush.\n\t\n\t// `setTimeout` does not call the passed callback if the delay is less than\n\t// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n\t// even then.\n\t\n\tfunction makeRequestCallFromTimer(callback) {\n\t    return function requestCall() {\n\t        // We dispatch a timeout with a specified delay of 0 for engines that\n\t        // can reliably accommodate that request. This will usually be snapped\n\t        // to a 4 milisecond delay, but once we're flushing, there's no delay\n\t        // between events.\n\t        var timeoutHandle = setTimeout(handleTimer, 0);\n\t        // However, since this timer gets frequently dropped in Firefox\n\t        // workers, we enlist an interval handle that will try to fire\n\t        // an event 20 times per second until it succeeds.\n\t        var intervalHandle = setInterval(handleTimer, 50);\n\t\n\t        function handleTimer() {\n\t            // Whichever timer succeeds will cancel both timers and\n\t            // execute the callback.\n\t            clearTimeout(timeoutHandle);\n\t            clearInterval(intervalHandle);\n\t            callback();\n\t        }\n\t    };\n\t}\n\t\n\t// This is for `asap.js` only.\n\t// Its name will be periodically randomized to break any code that depends on\n\t// its existence.\n\trawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\t\n\t// ASAP was originally a nextTick shim included in Q. This was factored out\n\t// into this ASAP package. It was later adapted to RSVP which made further\n\t// amendments. These decisions, particularly to marginalize MessageChannel and\n\t// to capture the MutationObserver implementation in a closure, were integrated\n\t// back into ASAP proper.\n\t// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _logo = __webpack_require__(10);\n\t\n\tvar _logo2 = _interopRequireDefault(_logo);\n\t\n\t__webpack_require__(8);\n\t\n\tvar _Image = __webpack_require__(6);\n\t\n\tvar _Image2 = _interopRequireDefault(_Image);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar App = function (_Component) {\n\t  _inherits(App, _Component);\n\t\n\t  function App() {\n\t    _classCallCheck(this, App);\n\t\n\t    return _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(App, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'div',\n\t        { className: 'App' },\n\t        _react2.default.createElement(_Image2.default, null)\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return App;\n\t}(_react.Component);\n\t\n\texports.default = App;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _openseadragon = __webpack_require__(11);\n\t\n\tvar _openseadragon2 = _interopRequireDefault(_openseadragon);\n\t\n\tvar _ = __webpack_require__(20);\n\t\n\tvar _2 = _interopRequireDefault(_);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t//import logo1 from './dzi_files';\n\t\n\tvar Image = function (_Component) {\n\t    _inherits(Image, _Component);\n\t\n\t    function Image(props) {\n\t        _classCallCheck(this, Image);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Image.__proto__ || Object.getPrototypeOf(Image)).call(this, props));\n\t\n\t        var imagePath = '';\n\t        return _this;\n\t    }\n\t\n\t    _createClass(Image, [{\n\t        key: 'componentDidMount',\n\t        value: function componentDidMount() {\n\t\n\t            var dimage = {\n\t                Image: {\n\t                    xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n\t                    Url: '//openseadragon.github.io/example-images/duomo/duomo_files/',\n\t                    Format: \"jpg\",\n\t                    TileSize: \"256\",\n\t                    Size: {\n\t                        Width: \"13920\",\n\t                        Height: \"10200\"\n\t                    }\n\t                }\n\t            };\n\t\n\t            var dimage1 = {\n\t                Image: {\n\t                    xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n\t                    Url: ' https://github.com/preetham1230/Images/blob/master/dzi_files/',\n\t                    Format: \"jpg\",\n\t                    TileSize: \"256\",\n\t                    CrossOriginPolicy: '*',\n\t                    Size: {\n\t                        Width: \"13920\",\n\t                        Height: \"10200\"\n\t                    }\n\t                }\n\t            };\n\t\n\t            var viewer = (0, _openseadragon2.default)({\n\t                id: \"image-viewer\",\n\t                prefixUrl: \"//openseadragon.github.io/openseadragon/images/\",\n\t                sequenceMode: true,\n\t                tileSources: [dimage, dimage1]\n\t            });\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t\n\t            return _react2.default.createElement(\n\t                'div',\n\t                null,\n\t                _react2.default.createElement('div', { id: 'image-viewer', style: { width: '800px', height: '800px', padding: '50px' } }),\n\t                _react2.default.createElement(\n\t                    'div',\n\t                    null,\n\t                    'Image',\n\t                    _react2.default.createElement('img', { src: _2.default })\n\t                )\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return Image;\n\t}(_react.Component);\n\t\n\texports.default = Image;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(15);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _App = __webpack_require__(5);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\t__webpack_require__(9);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_reactDom2.default.render(_react2.default.createElement(_App2.default, null), document.getElementById('root'));\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 9 */\n8,\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"static/media/logo.5d5d9eef.svg\";\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//! openseadragon 2.4.1\n\t//! Built on 2019-07-03\n\t//! Git commit: v2.4.1-0-244790e\n\t//! http://openseadragon.github.io\n\t//! License: http://openseadragon.github.io/license/\n\t\n\t/*\n\t * OpenSeadragon\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t/*\n\t * Portions of this source file taken from jQuery:\n\t *\n\t * Copyright 2011 John Resig\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining\n\t * a copy of this software and associated documentation files (the\n\t * \"Software\"), to deal in the Software without restriction, including\n\t * without limitation the rights to use, copy, modify, merge, publish,\n\t * distribute, sublicense, and/or sell copies of the Software, and to\n\t * permit persons to whom the Software is furnished to do so, subject to\n\t * the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n\t * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n\t * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n\t * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t\n\t/*\n\t * Portions of this source file taken from mattsnider.com:\n\t *\n\t * Copyright (c) 2006-2013 Matt Snider\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a\n\t * copy of this software and associated documentation files (the \"Software\"),\n\t * to deal in the Software without restriction, including without limitation\n\t * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\t * and/or sell copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included\n\t * in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\t * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n\t * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT\n\t * OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR\n\t * THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t\n\t\n\t/**\n\t * @namespace OpenSeadragon\n\t * @version openseadragon 2.4.1\n\t * @classdesc The root namespace for OpenSeadragon.  All utility methods\n\t * and classes are defined on or below this namespace.\n\t *\n\t */\n\t\n\t\n\t// Typedefs\n\t\n\t /**\n\t  * All required and optional settings for instantiating a new instance of an OpenSeadragon image viewer.\n\t  *\n\t  * @typedef {Object} Options\n\t  * @memberof OpenSeadragon\n\t  *\n\t  * @property {String} id\n\t  *     Id of the element to append the viewer's container element to. If not provided, the 'element' property must be provided.\n\t  *     If both the element and id properties are specified, the viewer is appended to the element provided in the element property.\n\t  *\n\t  * @property {Element} element\n\t  *     The element to append the viewer's container element to. If not provided, the 'id' property must be provided.\n\t  *     If both the element and id properties are specified, the viewer is appended to the element provided in the element property.\n\t  *\n\t  * @property {Array|String|Function|Object} [tileSources=null]\n\t  *     Tile source(s) to open initially. This is a complex parameter; see\n\t  *     {@link OpenSeadragon.Viewer#open} for details.\n\t  *\n\t  * @property {Number} [tabIndex=0]\n\t  *     Tabbing order index to assign to the viewer element. Positive values are selected in increasing order. When tabIndex is 0\n\t  *     source order is used. A negative value omits the viewer from the tabbing order.\n\t  *\n\t  * @property {Array} overlays Array of objects defining permanent overlays of\n\t  *     the viewer. The overlays added via this option and later removed with\n\t  *     {@link OpenSeadragon.Viewer#removeOverlay} will be added back when a new\n\t  *     image is opened.\n\t  *     To add overlays which can be definitively removed, one must use\n\t  *     {@link OpenSeadragon.Viewer#addOverlay}\n\t  *     If displaying a sequence of images, the overlays can be associated\n\t  *     with a specific page by passing the overlays array to the page's\n\t  *     tile source configuration.\n\t  *     Expected properties:\n\t  *     * x, y, (or px, py for pixel coordinates) to define the location.\n\t  *     * width, height in point if using x,y or in pixels if using px,py. If width\n\t  *       and height are specified, the overlay size is adjusted when zooming,\n\t  *       otherwise the size stays the size of the content (or the size defined by CSS).\n\t  *     * className to associate a class to the overlay\n\t  *     * id to set the overlay element. If an element with this id already exists,\n\t  *       it is reused, otherwise it is created. If not specified, a new element is\n\t  *       created.\n\t  *     * placement a string to define the relative position to the viewport.\n\t  *       Only used if no width and height are specified. Default: 'TOP_LEFT'.\n\t  *       See {@link OpenSeadragon.Placement} for possible values.\n\t  *\n\t  * @property {String} [xmlPath=null]\n\t  *     <strong>DEPRECATED</strong>. A relative path to load a DZI file from the server.\n\t  *     Prefer the newer Options.tileSources.\n\t  *\n\t  * @property {String} [prefixUrl='/images/']\n\t  *     Prepends the prefixUrl to navImages paths, which is very useful\n\t  *     since the default paths are rarely useful for production\n\t  *     environments.\n\t  *\n\t  * @property {OpenSeadragon.NavImages} [navImages]\n\t  *     An object with a property for each button or other built-in navigation\n\t  *     control, eg the current 'zoomIn', 'zoomOut', 'home', and 'fullpage'.\n\t  *     Each of those in turn provides an image path for each state of the button\n\t  *     or navigation control, eg 'REST', 'GROUP', 'HOVER', 'PRESS'. Finally the\n\t  *     image paths, by default assume there is a folder on the servers root path\n\t  *     called '/images', eg '/images/zoomin_rest.png'.  If you need to adjust\n\t  *     these paths, prefer setting the option.prefixUrl rather than overriding\n\t  *     every image path directly through this setting.\n\t  *\n\t  * @property {Boolean} [debugMode=false]\n\t  *     TODO: provide an in-screen panel providing event detail feedback.\n\t  *\n\t  * @property {String} [debugGridColor=['#437AB2', '#1B9E77', '#D95F02', '#7570B3', '#E7298A', '#66A61E', '#E6AB02', '#A6761D', '#666666']]\n\t  *     The colors of grids in debug mode. Each tiled image's grid uses a consecutive color.\n\t  *     If there are more tiled images than provided colors, the color vector is recycled.\n\t  *\n\t  * @property {Number} [blendTime=0]\n\t  *     Specifies the duration of animation as higher or lower level tiles are\n\t  *     replacing the existing tile.\n\t  *\n\t  * @property {Boolean} [alwaysBlend=false]\n\t  *     Forces the tile to always blend.  By default the tiles skip blending\n\t  *     when the blendTime is surpassed and the current animation frame would\n\t  *     not complete the blend.\n\t  *\n\t  * @property {Boolean} [autoHideControls=true]\n\t  *     If the user stops interacting with the viewport, fade the navigation\n\t  *     controls.  Useful for presentation since the controls are by default\n\t  *     floated on top of the image the user is viewing.\n\t  *\n\t  * @property {Boolean} [immediateRender=false]\n\t  *     Render the best closest level first, ignoring the lowering levels which\n\t  *     provide the effect of very blurry to sharp. It is recommended to change\n\t  *     setting to true for mobile devices.\n\t  *\n\t  * @property {Number} [defaultZoomLevel=0]\n\t  *     Zoom level to use when image is first opened or the home button is clicked.\n\t  *     If 0, adjusts to fit viewer.\n\t  *\n\t  * @property {Number} [opacity=1]\n\t  *     Default proportional opacity of the tiled images (1=opaque, 0=hidden)\n\t  *     Hidden images do not draw and only load when preloading is allowed.\n\t  *\n\t  * @property {Boolean} [preload=false]\n\t  *     Default switch for loading hidden images (true loads, false blocks)\n\t  *\n\t  * @property {String} [compositeOperation=null]\n\t  *     Valid values are 'source-over', 'source-atop', 'source-in', 'source-out',\n\t  *     'destination-over', 'destination-atop', 'destination-in',\n\t  *     'destination-out', 'lighter', 'copy' or 'xor'\n\t  *\n\t  * @property {Boolean} [imageSmoothingEnabled=true]\n\t  *     Image smoothing for canvas rendering (only if canvas is used). Note: Ignored\n\t  *     by some (especially older) browsers which do not support this canvas property.\n\t  *     This property can be changed in {@link Viewer.Drawer.setImageSmoothingEnabled}.\n\t  *\n\t  * @property {String|CanvasGradient|CanvasPattern|Function} [placeholderFillStyle=null]\n\t  *     Draws a colored rectangle behind the tile if it is not loaded yet.\n\t  *     You can pass a CSS color value like \"#FF8800\".\n\t  *     When passing a function the tiledImage and canvas context are available as argument which is useful when you draw a gradient or pattern.\n\t  *\n\t  * @property {Number} [degrees=0]\n\t  *     Initial rotation.\n\t  *\n\t  * @property {Boolean} [flipped=false]\n\t  *     Initial flip state.\n\t  *\n\t  * @property {Number} [minZoomLevel=null]\n\t  *\n\t  * @property {Number} [maxZoomLevel=null]\n\t  *\n\t  * @property {Boolean} [homeFillsViewer=false]\n\t  *     Make the 'home' button fill the viewer and clip the image, instead\n\t  *     of fitting the image to the viewer and letterboxing.\n\t  *\n\t  * @property {Boolean} [panHorizontal=true]\n\t  *     Allow horizontal pan.\n\t  *\n\t  * @property {Boolean} [panVertical=true]\n\t  *     Allow vertical pan.\n\t  *\n\t  * @property {Boolean} [constrainDuringPan=false]\n\t  *\n\t  * @property {Boolean} [wrapHorizontal=false]\n\t  *     Set to true to force the image to wrap horizontally within the viewport.\n\t  *     Useful for maps or images representing the surface of a sphere or cylinder.\n\t  *\n\t  * @property {Boolean} [wrapVertical=false]\n\t  *     Set to true to force the image to wrap vertically within the viewport.\n\t  *     Useful for maps or images representing the surface of a sphere or cylinder.\n\t  *\n\t  * @property {Number} [minZoomImageRatio=0.9]\n\t  *     The minimum percentage ( expressed as a number between 0 and 1 ) of\n\t  *     the viewport height or width at which the zoom out will be constrained.\n\t  *     Setting it to 0, for example will allow you to zoom out infinity.\n\t  *\n\t  * @property {Number} [maxZoomPixelRatio=1.1]\n\t  *     The maximum ratio to allow a zoom-in to affect the highest level pixel\n\t  *     ratio. This can be set to Infinity to allow 'infinite' zooming into the\n\t  *     image though it is less effective visually if the HTML5 Canvas is not\n\t  *     available on the viewing device.\n\t  *\n\t  * @property {Number} [smoothTileEdgesMinZoom=1.1]\n\t  *     A zoom percentage ( where 1 is 100% ) of the highest resolution level.\n\t  *     When zoomed in beyond this value alternative compositing will be used to\n\t  *     smooth out the edges between tiles. This will have a performance impact.\n\t  *     Can be set to Infinity to turn it off.\n\t  *     Note: This setting is ignored on iOS devices due to a known bug (See {@link https://github.com/openseadragon/openseadragon/issues/952})\n\t  *\n\t  * @property {Boolean} [iOSDevice=?]\n\t  *     True if running on an iOS device, false otherwise.\n\t  *     Used to disable certain features that behave differently on iOS devices.\n\t  *\n\t  * @property {Boolean} [autoResize=true]\n\t  *     Set to false to prevent polling for viewer size changes. Useful for providing custom resize behavior.\n\t  *\n\t  * @property {Boolean} [preserveImageSizeOnResize=false]\n\t  *     Set to true to have the image size preserved when the viewer is resized. This requires autoResize=true (default).\n\t  *\n\t  * @property {Number} [minScrollDeltaTime=50]\n\t  *     Number of milliseconds between canvas-scroll events. This value helps normalize the rate of canvas-scroll\n\t  *     events between different devices, causing the faster devices to slow down enough to make the zoom control\n\t  *     more manageable.\n\t  *\n\t  * @property {Number} [rotationIncrement=90]\n\t  *     The number of degrees to rotate right or left when the rotate buttons or keyboard shortcuts are activated.\n\t  *\n\t  * @property {Number} [pixelsPerWheelLine=40]\n\t  *     For pixel-resolution scrolling devices, the number of pixels equal to one scroll line.\n\t  *\n\t  * @property {Number} [pixelsPerArrowPress=40]\n\t  *     The number of pixels viewport moves when an arrow key is pressed.\n\t  *\n\t  * @property {Number} [visibilityRatio=0.5]\n\t  *     The percentage ( as a number from 0 to 1 ) of the source image which\n\t  *     must be kept within the viewport.  If the image is dragged beyond that\n\t  *     limit, it will 'bounce' back until the minimum visibility ratio is\n\t  *     achieved.  Setting this to 0 and wrapHorizontal ( or wrapVertical ) to\n\t  *     true will provide the effect of an infinitely scrolling viewport.\n\t  *\n\t  * @property {Object} [viewportMargins={}]\n\t  *     Pushes the \"home\" region in from the sides by the specified amounts.\n\t  *     Possible subproperties (Numbers, in screen coordinates): left, top, right, bottom.\n\t  *\n\t  * @property {Number} [imageLoaderLimit=0]\n\t  *     The maximum number of image requests to make concurrently. By default\n\t  *     it is set to 0 allowing the browser to make the maximum number of\n\t  *     image requests in parallel as allowed by the browsers policy.\n\t  *\n\t  * @property {Number} [clickTimeThreshold=300]\n\t  *      The number of milliseconds within which a pointer down-up event combination\n\t  *      will be treated as a click gesture.\n\t  *\n\t  * @property {Number} [clickDistThreshold=5]\n\t  *      The maximum distance allowed between a pointer down event and a pointer up event\n\t  *      to be treated as a click gesture.\n\t  *\n\t  * @property {Number} [dblClickTimeThreshold=300]\n\t  *      The number of milliseconds within which two pointer down-up event combinations\n\t  *      will be treated as a double-click gesture.\n\t  *\n\t  * @property {Number} [dblClickDistThreshold=20]\n\t  *      The maximum distance allowed between two pointer click events\n\t  *      to be treated as a double-click gesture.\n\t  *\n\t  * @property {Number} [springStiffness=6.5]\n\t  *\n\t  * @property {Number} [animationTime=1.2]\n\t  *     Specifies the animation duration per each {@link OpenSeadragon.Spring}\n\t  *     which occur when the image is dragged or zoomed.\n\t  *\n\t  * @property {OpenSeadragon.GestureSettings} [gestureSettingsMouse]\n\t  *     Settings for gestures generated by a mouse pointer device. (See {@link OpenSeadragon.GestureSettings})\n\t  * @property {Boolean} [gestureSettingsMouse.scrollToZoom=true] - Zoom on scroll gesture\n\t  * @property {Boolean} [gestureSettingsMouse.clickToZoom=true] - Zoom on click gesture\n\t  * @property {Boolean} [gestureSettingsMouse.dblClickToZoom=false] - Zoom on double-click gesture. Note: If set to true\n\t  *     then clickToZoom should be set to false to prevent multiple zooms.\n\t  * @property {Boolean} [gestureSettingsMouse.pinchToZoom=false] - Zoom on pinch gesture\n\t  * @property {Boolean} [gestureSettingsMouse.zoomToRefPoint=true] - If zoomToRefPoint is true, the zoom is centered at the pointer position. Otherwise,\n\t  *     the zoom is centered at the canvas center.\n\t  * @property {Boolean} [gestureSettingsMouse.flickEnabled=false] - Enable flick gesture\n\t  * @property {Number} [gestureSettingsMouse.flickMinSpeed=120] - If flickEnabled is true, the minimum speed to initiate a flick gesture (pixels-per-second)\n\t  * @property {Number} [gestureSettingsMouse.flickMomentum=0.25] - If flickEnabled is true, the momentum factor for the flick gesture\n\t  * @property {Boolean} [gestureSettingsMouse.pinchRotate=false] - If pinchRotate is true, the user will have the ability to rotate the image using their fingers.\n\t  *\n\t  * @property {OpenSeadragon.GestureSettings} [gestureSettingsTouch]\n\t  *     Settings for gestures generated by a touch pointer device. (See {@link OpenSeadragon.GestureSettings})\n\t  * @property {Boolean} [gestureSettingsTouch.scrollToZoom=false] - Zoom on scroll gesture\n\t  * @property {Boolean} [gestureSettingsTouch.clickToZoom=false] - Zoom on click gesture\n\t  * @property {Boolean} [gestureSettingsTouch.dblClickToZoom=true] - Zoom on double-click gesture. Note: If set to true\n\t  *     then clickToZoom should be set to false to prevent multiple zooms.\n\t  * @property {Boolean} [gestureSettingsTouch.pinchToZoom=true] - Zoom on pinch gesture\n\t  * @property {Boolean} [gestureSettingsTouch.zoomToRefPoint=true] - If zoomToRefPoint is true, the zoom is centered at the pointer position. Otherwise,\n\t  *     the zoom is centered at the canvas center.\n\t  * @property {Boolean} [gestureSettingsTouch.flickEnabled=true] - Enable flick gesture\n\t  * @property {Number} [gestureSettingsTouch.flickMinSpeed=120] - If flickEnabled is true, the minimum speed to initiate a flick gesture (pixels-per-second)\n\t  * @property {Number} [gestureSettingsTouch.flickMomentum=0.25] - If flickEnabled is true, the momentum factor for the flick gesture\n\t  * @property {Boolean} [gestureSettingsTouch.pinchRotate=false] - If pinchRotate is true, the user will have the ability to rotate the image using their fingers.\n\t  *\n\t  * @property {OpenSeadragon.GestureSettings} [gestureSettingsPen]\n\t  *     Settings for gestures generated by a pen pointer device. (See {@link OpenSeadragon.GestureSettings})\n\t  * @property {Boolean} [gestureSettingsPen.scrollToZoom=false] - Zoom on scroll gesture\n\t  * @property {Boolean} [gestureSettingsPen.clickToZoom=true] - Zoom on click gesture\n\t  * @property {Boolean} [gestureSettingsPen.dblClickToZoom=false] - Zoom on double-click gesture. Note: If set to true\n\t  *     then clickToZoom should be set to false to prevent multiple zooms.\n\t  * @property {Boolean} [gestureSettingsPen.pinchToZoom=false] - Zoom on pinch gesture\n\t  * @property {Boolean} [gestureSettingsPan.zoomToRefPoint=true] - If zoomToRefPoint is true, the zoom is centered at the pointer position. Otherwise,\n\t  *     the zoom is centered at the canvas center.\n\t  * @property {Boolean} [gestureSettingsPen.flickEnabled=false] - Enable flick gesture\n\t  * @property {Number} [gestureSettingsPen.flickMinSpeed=120] - If flickEnabled is true, the minimum speed to initiate a flick gesture (pixels-per-second)\n\t  * @property {Number} [gestureSettingsPen.flickMomentum=0.25] - If flickEnabled is true, the momentum factor for the flick gesture\n\t  * @property {Boolean} [gestureSettingsPen.pinchRotate=false] - If pinchRotate is true, the user will have the ability to rotate the image using their fingers.\n\t  *\n\t  * @property {OpenSeadragon.GestureSettings} [gestureSettingsUnknown]\n\t  *     Settings for gestures generated by unknown pointer devices. (See {@link OpenSeadragon.GestureSettings})\n\t  * @property {Boolean} [gestureSettingsUnknown.scrollToZoom=true] - Zoom on scroll gesture\n\t  * @property {Boolean} [gestureSettingsUnknown.clickToZoom=false] - Zoom on click gesture\n\t  * @property {Boolean} [gestureSettingsUnknown.dblClickToZoom=true] - Zoom on double-click gesture. Note: If set to true\n\t  *     then clickToZoom should be set to false to prevent multiple zooms.\n\t  * @property {Boolean} [gestureSettingsUnknown.pinchToZoom=true] - Zoom on pinch gesture\n\t  * @property {Boolean} [gestureSettingsUnknown.zoomToRefPoint=true] - If zoomToRefPoint is true, the zoom is centered at the pointer position. Otherwise,\n\t  *     the zoom is centered at the canvas center.\n\t  * @property {Boolean} [gestureSettingsUnknown.flickEnabled=true] - Enable flick gesture\n\t  * @property {Number} [gestureSettingsUnknown.flickMinSpeed=120] - If flickEnabled is true, the minimum speed to initiate a flick gesture (pixels-per-second)\n\t  * @property {Number} [gestureSettingsUnknown.flickMomentum=0.25] - If flickEnabled is true, the momentum factor for the flick gesture\n\t  * @property {Boolean} [gestureSettingsUnknown.pinchRotate=false] - If pinchRotate is true, the user will have the ability to rotate the image using their fingers.\n\t  *\n\t  * @property {Number} [zoomPerClick=2.0]\n\t  *     The \"zoom distance\" per mouse click or touch tap. <em><strong>Note:</strong> Setting this to 1.0 effectively disables the click-to-zoom feature (also see gestureSettings[Mouse|Touch|Pen].clickToZoom/dblClickToZoom).</em>\n\t  *\n\t  * @property {Number} [zoomPerScroll=1.2]\n\t  *     The \"zoom distance\" per mouse scroll or touch pinch. <em><strong>Note:</strong> Setting this to 1.0 effectively disables the mouse-wheel zoom feature (also see gestureSettings[Mouse|Touch|Pen].scrollToZoom}).</em>\n\t  *\n\t  * @property {Number} [zoomPerSecond=1.0]\n\t  *     The number of seconds to animate a single zoom event over.\n\t  *\n\t  * @property {Boolean} [showNavigator=false]\n\t  *     Set to true to make the navigator minimap appear.\n\t  *\n\t  * @property {String} [navigatorId=navigator-GENERATED DATE]\n\t  *     The ID of a div to hold the navigator minimap.\n\t  *     If an ID is specified, the navigatorPosition, navigatorSizeRatio, navigatorMaintainSizeRatio, navigator[Top|Left|Height|Width] and navigatorAutoFade options will be ignored.\n\t  *     If an ID is not specified, a div element will be generated and placed on top of the main image.\n\t  *\n\t  * @property {String} [navigatorPosition='TOP_RIGHT']\n\t  *     Valid values are 'TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT', or 'ABSOLUTE'.<br>\n\t  *     If 'ABSOLUTE' is specified, then navigator[Top|Left|Height|Width] determines the size and position of the navigator minimap in the viewer, and navigatorSizeRatio and navigatorMaintainSizeRatio are ignored.<br>\n\t  *     For 'TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', and 'BOTTOM_RIGHT', the navigatorSizeRatio or navigator[Height|Width] values determine the size of the navigator minimap.\n\t  *\n\t  * @property {Number} [navigatorSizeRatio=0.2]\n\t  *     Ratio of navigator size to viewer size. Ignored if navigator[Height|Width] are specified.\n\t  *\n\t  * @property {Boolean} [navigatorMaintainSizeRatio=false]\n\t  *     If true, the navigator minimap is resized (using navigatorSizeRatio) when the viewer size changes.\n\t  *\n\t  * @property {Number|String} [navigatorTop=null]\n\t  *     Specifies the location of the navigator minimap (see navigatorPosition).\n\t  *\n\t  * @property {Number|String} [navigatorLeft=null]\n\t  *     Specifies the location of the navigator minimap (see navigatorPosition).\n\t  *\n\t  * @property {Number|String} [navigatorHeight=null]\n\t  *     Specifies the size of the navigator minimap (see navigatorPosition).\n\t  *     If specified, navigatorSizeRatio and navigatorMaintainSizeRatio are ignored.\n\t  *\n\t  * @property {Number|String} [navigatorWidth=null]\n\t  *     Specifies the size of the navigator minimap (see navigatorPosition).\n\t  *     If specified, navigatorSizeRatio and navigatorMaintainSizeRatio are ignored.\n\t  *\n\t  * @property {Boolean} [navigatorAutoResize=true]\n\t  *     Set to false to prevent polling for navigator size changes. Useful for providing custom resize behavior.\n\t  *     Setting to false can also improve performance when the navigator is configured to a fixed size.\n\t  *\n\t  * @property {Boolean} [navigatorAutoFade=true]\n\t  *     If the user stops interacting with the viewport, fade the navigator minimap.\n\t  *     Setting to false will make the navigator minimap always visible.\n\t  *\n\t  * @property {Boolean} [navigatorRotate=true]\n\t  *     If true, the navigator will be rotated together with the viewer.\n\t  *\n\t  * @property {String} [navigatorBackground='#000']\n\t  *     Specifies the background color of the navigator minimap\n\t  *\n\t  * @property {Number} [navigatorOpacity=0.8]\n\t  *     Specifies the opacity of the navigator minimap.\n\t  *\n\t  * @property {String} [navigatorBorderColor='#555']\n\t  *     Specifies the border color of the navigator minimap\n\t  *\n\t  * @property {String} [navigatorDisplayRegionColor='#900']\n\t  *     Specifies the border color of the display region rectangle of the navigator minimap\n\t  *\n\t  * @property {Number} [controlsFadeDelay=2000]\n\t  *     The number of milliseconds to wait once the user has stopped interacting\n\t  *     with the interface before beginning to fade the controls. Assumes\n\t  *     showNavigationControl and autoHideControls are both true.\n\t  *\n\t  * @property {Number} [controlsFadeLength=1500]\n\t  *     The number of milliseconds to animate the controls fading out.\n\t  *\n\t  * @property {Number} [maxImageCacheCount=200]\n\t  *     The max number of images we should keep in memory (per drawer).\n\t  *\n\t  * @property {Number} [timeout=30000]\n\t  *     The max number of milliseconds that an image job may take to complete.\n\t  *\n\t  * @property {Boolean} [useCanvas=true]\n\t  *     Set to false to not use an HTML canvas element for image rendering even if canvas is supported.\n\t  *\n\t  * @property {Number} [minPixelRatio=0.5]\n\t  *     The higher the minPixelRatio, the lower the quality of the image that\n\t  *     is considered sufficient to stop rendering a given zoom level.  For\n\t  *     example, if you are targeting mobile devices with less bandwidth you may\n\t  *     try setting this to 1.5 or higher.\n\t  *\n\t  * @property {Boolean} [mouseNavEnabled=true]\n\t  *     Is the user able to interact with the image via mouse or touch. Default\n\t  *     interactions include draging the image in a plane, and zooming in toward\n\t  *     and away from the image.\n\t  *\n\t  * @property {Boolean} [showNavigationControl=true]\n\t  *     Set to false to prevent the appearance of the default navigation controls.<br>\n\t  *     Note that if set to false, the customs buttons set by the options\n\t  *     zoomInButton, zoomOutButton etc, are rendered inactive.\n\t  *\n\t  * @property {OpenSeadragon.ControlAnchor} [navigationControlAnchor=TOP_LEFT]\n\t  *     Placement of the default navigation controls.\n\t  *     To set the placement of the sequence controls, see the\n\t  *     sequenceControlAnchor option.\n\t  *\n\t  * @property {Boolean} [showZoomControl=true]\n\t  *     If true then + and - buttons to zoom in and out are displayed.<br>\n\t  *     Note: {@link OpenSeadragon.Options.showNavigationControl} is overriding\n\t  *     this setting when set to false.\n\t  *\n\t  * @property {Boolean} [showHomeControl=true]\n\t  *     If true then the 'Go home' button is displayed to go back to the original\n\t  *     zoom and pan.<br>\n\t  *     Note: {@link OpenSeadragon.Options.showNavigationControl} is overriding\n\t  *     this setting when set to false.\n\t  *\n\t  * @property {Boolean} [showFullPageControl=true]\n\t  *     If true then the 'Toggle full page' button is displayed to switch\n\t  *     between full page and normal mode.<br>\n\t  *     Note: {@link OpenSeadragon.Options.showNavigationControl} is overriding\n\t  *     this setting when set to false.\n\t  *\n\t  * @property {Boolean} [showRotationControl=false]\n\t  *     If true then the rotate left/right controls will be displayed as part of the\n\t  *     standard controls. This is also subject to the browser support for rotate\n\t  *     (e.g. viewer.drawer.canRotate()).<br>\n\t  *     Note: {@link OpenSeadragon.Options.showNavigationControl} is overriding\n\t  *     this setting when set to false.\n\t  *\n\t  * @property {Boolean} [showFlipControl=false]\n\t  *     If true then the flip controls will be displayed as part of the\n\t  *     standard controls.\n\t  *\n\t  * @property {Boolean} [showSequenceControl=true]\n\t  *     If sequenceMode is true, then provide buttons for navigating forward and\n\t  *     backward through the images.\n\t  *\n\t  * @property {OpenSeadragon.ControlAnchor} [sequenceControlAnchor=TOP_LEFT]\n\t  *     Placement of the default sequence controls.\n\t  *\n\t  * @property {Boolean} [navPrevNextWrap=false]\n\t  *     If true then the 'previous' button will wrap to the last image when\n\t  *     viewing the first image and the 'next' button will wrap to the first\n\t  *     image when viewing the last image.\n\t  *\n\t  * @property {String} zoomInButton\n\t  *     Set the id of the custom 'Zoom in' button to use.\n\t  *     This is useful to have a custom button anywhere in the web page.<br>\n\t  *     To only change the button images, consider using\n\t  *     {@link OpenSeadragon.Options.navImages}\n\t  *\n\t  * @property {String} zoomOutButton\n\t  *     Set the id of the custom 'Zoom out' button to use.\n\t  *     This is useful to have a custom button anywhere in the web page.<br>\n\t  *     To only change the button images, consider using\n\t  *     {@link OpenSeadragon.Options.navImages}\n\t  *\n\t  * @property {String} homeButton\n\t  *     Set the id of the custom 'Go home' button to use.\n\t  *     This is useful to have a custom button anywhere in the web page.<br>\n\t  *     To only change the button images, consider using\n\t  *     {@link OpenSeadragon.Options.navImages}\n\t  *\n\t  * @property {String} fullPageButton\n\t  *     Set the id of the custom 'Toggle full page' button to use.\n\t  *     This is useful to have a custom button anywhere in the web page.<br>\n\t  *     To only change the button images, consider using\n\t  *     {@link OpenSeadragon.Options.navImages}\n\t  *\n\t  * @property {String} rotateLeftButton\n\t  *     Set the id of the custom 'Rotate left' button to use.\n\t  *     This is useful to have a custom button anywhere in the web page.<br>\n\t  *     To only change the button images, consider using\n\t  *     {@link OpenSeadragon.Options.navImages}\n\t  *\n\t  * @property {String} rotateRightButton\n\t  *     Set the id of the custom 'Rotate right' button to use.\n\t  *     This is useful to have a custom button anywhere in the web page.<br>\n\t  *     To only change the button images, consider using\n\t  *     {@link OpenSeadragon.Options.navImages}\n\t  *\n\t  * @property {String} previousButton\n\t  *     Set the id of the custom 'Previous page' button to use.\n\t  *     This is useful to have a custom button anywhere in the web page.<br>\n\t  *     To only change the button images, consider using\n\t  *     {@link OpenSeadragon.Options.navImages}\n\t  *\n\t  * @property {String} nextButton\n\t  *     Set the id of the custom 'Next page' button to use.\n\t  *     This is useful to have a custom button anywhere in the web page.<br>\n\t  *     To only change the button images, consider using\n\t  *     {@link OpenSeadragon.Options.navImages}\n\t  *\n\t  * @property {Boolean} [sequenceMode=false]\n\t  *     Set to true to have the viewer treat your tilesources as a sequence of images to\n\t  *     be opened one at a time rather than all at once.\n\t  *\n\t  * @property {Number} [initialPage=0]\n\t  *     If sequenceMode is true, display this page initially.\n\t  *\n\t  * @property {Boolean} [preserveViewport=false]\n\t  *     If sequenceMode is true, then normally navigating through each image resets the\n\t  *     viewport to 'home' position.  If preserveViewport is set to true, then the viewport\n\t  *     position is preserved when navigating between images in the sequence.\n\t  *\n\t  * @property {Boolean} [preserveOverlays=false]\n\t  *     If sequenceMode is true, then normally navigating through each image\n\t  *     resets the overlays.\n\t  *     If preserveOverlays is set to true, then the overlays added with {@link OpenSeadragon.Viewer#addOverlay}\n\t  *     are preserved when navigating between images in the sequence.\n\t  *     Note: setting preserveOverlays overrides any overlays specified in the global\n\t  *     \"overlays\" option for the Viewer. It's also not compatible with specifying\n\t  *     per-tileSource overlays via the options, as those overlays will persist\n\t  *     even after the tileSource is closed.\n\t  *\n\t  * @property {Boolean} [showReferenceStrip=false]\n\t  *     If sequenceMode is true, then display a scrolling strip of image thumbnails for\n\t  *     navigating through the images.\n\t  *\n\t  * @property {String} [referenceStripScroll='horizontal']\n\t  *\n\t  * @property {Element} [referenceStripElement=null]\n\t  *\n\t  * @property {Number} [referenceStripHeight=null]\n\t  *\n\t  * @property {Number} [referenceStripWidth=null]\n\t  *\n\t  * @property {String} [referenceStripPosition='BOTTOM_LEFT']\n\t  *\n\t  * @property {Number} [referenceStripSizeRatio=0.2]\n\t  *\n\t  * @property {Boolean} [collectionMode=false]\n\t  *     Set to true to have the viewer arrange your TiledImages in a grid or line.\n\t  *\n\t  * @property {Number} [collectionRows=3]\n\t  *     If collectionMode is true, specifies how many rows the grid should have. Use 1 to make a line.\n\t  *     If collectionLayout is 'vertical', specifies how many columns instead.\n\t  *\n\t  * @property {Number} [collectionColumns=0]\n\t  *     If collectionMode is true, specifies how many columns the grid should have. Use 1 to make a line.\n\t  *     If collectionLayout is 'vertical', specifies how many rows instead. Ignored if collectionRows is not set to a falsy value.\n\t  *\n\t  * @property {String} [collectionLayout='horizontal']\n\t  *     If collectionMode is true, specifies whether to arrange vertically or horizontally.\n\t  *\n\t  * @property {Number} [collectionTileSize=800]\n\t  *     If collectionMode is true, specifies the size, in viewport coordinates, for each TiledImage to fit into.\n\t  *     The TiledImage will be centered within a square of the specified size.\n\t  *\n\t  * @property {Number} [collectionTileMargin=80]\n\t  *     If collectionMode is true, specifies the margin, in viewport coordinates, between each TiledImage.\n\t  *\n\t  * @property {String|Boolean} [crossOriginPolicy=false]\n\t  *     Valid values are 'Anonymous', 'use-credentials', and false. If false, canvas requests will\n\t  *     not use CORS, and the canvas will be tainted.\n\t  *\n\t  * @property {Boolean} [ajaxWithCredentials=false]\n\t  *     Whether to set the withCredentials XHR flag for AJAX requests.\n\t  *     Note that this can be overridden at the {@link OpenSeadragon.TileSource} level.\n\t  *\n\t  * @property {Boolean} [loadTilesWithAjax=false]\n\t  *     Whether to load tile data using AJAX requests.\n\t  *     Note that this can be overridden at the {@link OpenSeadragon.TileSource} level.\n\t  *\n\t  * @property {Object} [ajaxHeaders={}]\n\t  *     A set of headers to include when making AJAX requests for tile sources or tiles.\n\t  *\n\t  */\n\t\n\t /**\n\t  * Settings for gestures generated by a pointer device.\n\t  *\n\t  * @typedef {Object} GestureSettings\n\t  * @memberof OpenSeadragon\n\t  *\n\t  * @property {Boolean} scrollToZoom\n\t  *     Set to false to disable zooming on scroll gestures.\n\t  *\n\t  * @property {Boolean} clickToZoom\n\t  *     Set to false to disable zooming on click gestures.\n\t  *\n\t  * @property {Boolean} dblClickToZoom\n\t  *     Set to false to disable zooming on double-click gestures. Note: If set to true\n\t  *     then clickToZoom should be set to false to prevent multiple zooms.\n\t  *\n\t  * @property {Boolean} pinchToZoom\n\t  *     Set to false to disable zooming on pinch gestures.\n\t  *\n\t  * @property {Boolean} flickEnabled\n\t  *     Set to false to disable the kinetic panning effect (flick) at the end of a drag gesture.\n\t  *\n\t  * @property {Number} flickMinSpeed\n\t  *     If flickEnabled is true, the minimum speed (in pixels-per-second) required to cause the kinetic panning effect (flick) at the end of a drag gesture.\n\t  *\n\t  * @property {Number} flickMomentum\n\t  *     If flickEnabled is true, a constant multiplied by the velocity to determine the distance of the kinetic panning effect (flick) at the end of a drag gesture.\n\t  *     A larger value will make the flick feel \"lighter\", while a smaller value will make the flick feel \"heavier\".\n\t  *     Note: springStiffness and animationTime also affect the \"spring\" used to stop the flick animation.\n\t  *\n\t  */\n\t\n\t/**\n\t  * The names for the image resources used for the image navigation buttons.\n\t  *\n\t  * @typedef {Object} NavImages\n\t  * @memberof OpenSeadragon\n\t  *\n\t  * @property {Object} zoomIn - Images for the zoom-in button.\n\t  * @property {String} zoomIn.REST\n\t  * @property {String} zoomIn.GROUP\n\t  * @property {String} zoomIn.HOVER\n\t  * @property {String} zoomIn.DOWN\n\t  *\n\t  * @property {Object} zoomOut - Images for the zoom-out button.\n\t  * @property {String} zoomOut.REST\n\t  * @property {String} zoomOut.GROUP\n\t  * @property {String} zoomOut.HOVER\n\t  * @property {String} zoomOut.DOWN\n\t  *\n\t  * @property {Object} home - Images for the home button.\n\t  * @property {String} home.REST\n\t  * @property {String} home.GROUP\n\t  * @property {String} home.HOVER\n\t  * @property {String} home.DOWN\n\t  *\n\t  * @property {Object} fullpage - Images for the full-page button.\n\t  * @property {String} fullpage.REST\n\t  * @property {String} fullpage.GROUP\n\t  * @property {String} fullpage.HOVER\n\t  * @property {String} fullpage.DOWN\n\t  *\n\t  * @property {Object} rotateleft - Images for the rotate left button.\n\t  * @property {String} rotateleft.REST\n\t  * @property {String} rotateleft.GROUP\n\t  * @property {String} rotateleft.HOVER\n\t  * @property {String} rotateleft.DOWN\n\t  *\n\t  * @property {Object} rotateright - Images for the rotate right button.\n\t  * @property {String} rotateright.REST\n\t  * @property {String} rotateright.GROUP\n\t  * @property {String} rotateright.HOVER\n\t  * @property {String} rotateright.DOWN\n\t  *\n\t  * @property {Object} flip - Images for the flip button.\n\t  * @property {String} flip.REST\n\t  * @property {String} flip.GROUP\n\t  * @property {String} flip.HOVER\n\t  * @property {String} flip.DOWN\n\t  *\n\t  * @property {Object} previous - Images for the previous button.\n\t  * @property {String} previous.REST\n\t  * @property {String} previous.GROUP\n\t  * @property {String} previous.HOVER\n\t  * @property {String} previous.DOWN\n\t  *\n\t  * @property {Object} next - Images for the next button.\n\t  * @property {String} next.REST\n\t  * @property {String} next.GROUP\n\t  * @property {String} next.HOVER\n\t  * @property {String} next.DOWN\n\t  *\n\t  */\n\t\n\t\n\tfunction OpenSeadragon( options ){\n\t    return new OpenSeadragon.Viewer( options );\n\t}\n\t\n\t(function( $ ){\n\t\n\t\n\t    /**\n\t     * The OpenSeadragon version.\n\t     *\n\t     * @member {Object} OpenSeadragon.version\n\t     * @property {String} versionStr - The version number as a string ('major.minor.revision').\n\t     * @property {Number} major - The major version number.\n\t     * @property {Number} minor - The minor version number.\n\t     * @property {Number} revision - The revision number.\n\t     * @since 1.0.0\n\t     */\n\t    $.version = {\n\t        versionStr: '2.4.1',\n\t        major: parseInt('2', 10),\n\t        minor: parseInt('4', 10),\n\t        revision: parseInt('1', 10)\n\t    };\n\t\n\t\n\t    /**\n\t     * Taken from jquery 1.6.1\n\t     * [[Class]] -> type pairs\n\t     * @private\n\t     */\n\t    var class2type = {\n\t            '[object Boolean]':     'boolean',\n\t            '[object Number]':      'number',\n\t            '[object String]':      'string',\n\t            '[object Function]':    'function',\n\t            '[object Array]':       'array',\n\t            '[object Date]':        'date',\n\t            '[object RegExp]':      'regexp',\n\t            '[object Object]':      'object'\n\t        },\n\t        // Save a reference to some core methods\n\t        toString    = Object.prototype.toString,\n\t        hasOwn      = Object.prototype.hasOwnProperty;\n\t\n\t    /**\n\t     * Taken from jQuery 1.6.1\n\t     * @function isFunction\n\t     * @memberof OpenSeadragon\n\t     * @see {@link http://www.jquery.com/ jQuery}\n\t     */\n\t    $.isFunction = function( obj ) {\n\t        return $.type(obj) === \"function\";\n\t    };\n\t\n\t\n\t    /**\n\t     * Taken from jQuery 1.6.1\n\t     * @function isArray\n\t     * @memberof OpenSeadragon\n\t     * @see {@link http://www.jquery.com/ jQuery}\n\t     */\n\t    $.isArray = Array.isArray || function( obj ) {\n\t        return $.type(obj) === \"array\";\n\t    };\n\t\n\t\n\t    /**\n\t     * A crude way of determining if an object is a window.\n\t     * Taken from jQuery 1.6.1\n\t     * @function isWindow\n\t     * @memberof OpenSeadragon\n\t     * @see {@link http://www.jquery.com/ jQuery}\n\t     */\n\t    $.isWindow = function( obj ) {\n\t        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n\t    };\n\t\n\t\n\t    /**\n\t     * Taken from jQuery 1.6.1\n\t     * @function type\n\t     * @memberof OpenSeadragon\n\t     * @see {@link http://www.jquery.com/ jQuery}\n\t     */\n\t    $.type = function( obj ) {\n\t        return ( obj === null ) || ( obj === undefined ) ?\n\t            String( obj ) :\n\t            class2type[ toString.call(obj) ] || \"object\";\n\t    };\n\t\n\t\n\t    /**\n\t     * Taken from jQuery 1.6.1\n\t     * @function isPlainObject\n\t     * @memberof OpenSeadragon\n\t     * @see {@link http://www.jquery.com/ jQuery}\n\t     */\n\t    $.isPlainObject = function( obj ) {\n\t        // Must be an Object.\n\t        // Because of IE, we also have to check the presence of the constructor property.\n\t        // Make sure that DOM nodes and window objects don't pass through, as well\n\t        if ( !obj || OpenSeadragon.type(obj) !== \"object\" || obj.nodeType || $.isWindow( obj ) ) {\n\t            return false;\n\t        }\n\t\n\t        // Not own constructor property must be Object\n\t        if ( obj.constructor &&\n\t            !hasOwn.call(obj, \"constructor\") &&\n\t            !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\") ) {\n\t            return false;\n\t        }\n\t\n\t        // Own properties are enumerated firstly, so to speed up,\n\t        // if last one is own, then all properties are own.\n\t\n\t        var lastKey;\n\t        for (var key in obj ) {\n\t            lastKey = key;\n\t        }\n\t\n\t        return lastKey === undefined || hasOwn.call( obj, lastKey );\n\t    };\n\t\n\t\n\t    /**\n\t     * Taken from jQuery 1.6.1\n\t     * @function isEmptyObject\n\t     * @memberof OpenSeadragon\n\t     * @see {@link http://www.jquery.com/ jQuery}\n\t     */\n\t    $.isEmptyObject = function( obj ) {\n\t        for ( var name in obj ) {\n\t            return false;\n\t        }\n\t        return true;\n\t    };\n\t\n\t    /**\n\t     * Shim around Object.freeze. Does nothing if Object.freeze is not supported.\n\t     * @param {Object} obj The object to freeze.\n\t     * @return {Object} obj The frozen object.\n\t     */\n\t    $.freezeObject = function(obj) {\n\t        if (Object.freeze) {\n\t            $.freezeObject = Object.freeze;\n\t        } else {\n\t            $.freezeObject = function(obj) {\n\t                return obj;\n\t            };\n\t        }\n\t        return $.freezeObject(obj);\n\t    };\n\t\n\t    /**\n\t     * True if the browser supports the HTML5 canvas element\n\t     * @member {Boolean} supportsCanvas\n\t     * @memberof OpenSeadragon\n\t     */\n\t    $.supportsCanvas = (function () {\n\t        var canvasElement = document.createElement( 'canvas' );\n\t        return !!( $.isFunction( canvasElement.getContext ) &&\n\t                    canvasElement.getContext( '2d' ) );\n\t    }());\n\t\n\t    /**\n\t     * Test whether the submitted canvas is tainted or not.\n\t     * @argument {Canvas} canvas The canvas to test.\n\t     * @returns {Boolean} True if the canvas is tainted.\n\t     */\n\t    $.isCanvasTainted = function(canvas) {\n\t        var isTainted = false;\n\t        try {\n\t            // We test if the canvas is tainted by retrieving data from it.\n\t            // An exception will be raised if the canvas is tainted.\n\t            canvas.getContext('2d').getImageData(0, 0, 1, 1);\n\t        } catch (e) {\n\t            isTainted = true;\n\t        }\n\t        return isTainted;\n\t    };\n\t\n\t    /**\n\t     * A ratio comparing the device screen's pixel density to the canvas's backing store pixel density,\n\t     * clamped to a minimum of 1. Defaults to 1 if canvas isn't supported by the browser.\n\t     * @member {Number} pixelDensityRatio\n\t     * @memberof OpenSeadragon\n\t     */\n\t    $.pixelDensityRatio = (function () {\n\t        if ( $.supportsCanvas ) {\n\t            var context = document.createElement('canvas').getContext('2d');\n\t            var devicePixelRatio = window.devicePixelRatio || 1;\n\t            var backingStoreRatio = context.webkitBackingStorePixelRatio ||\n\t                                    context.mozBackingStorePixelRatio ||\n\t                                    context.msBackingStorePixelRatio ||\n\t                                    context.oBackingStorePixelRatio ||\n\t                                    context.backingStorePixelRatio || 1;\n\t            return Math.max(devicePixelRatio, 1) / backingStoreRatio;\n\t        } else {\n\t            return 1;\n\t        }\n\t    }());\n\t\n\t}( OpenSeadragon ));\n\t\n\t/**\n\t *  This closure defines all static methods available to the OpenSeadragon\n\t *  namespace.  Many, if not most, are taked directly from jQuery for use\n\t *  to simplify and reduce common programming patterns.  More static methods\n\t *  from jQuery may eventually make their way into this though we are\n\t *  attempting to avoid an explicit dependency on jQuery only because\n\t *  OpenSeadragon is a broadly useful code base and would be made less broad\n\t *  by requiring jQuery fully.\n\t *\n\t *  Some static methods have also been refactored from the original OpenSeadragon\n\t *  project.\n\t */\n\t(function( $ ){\n\t\n\t    /**\n\t     * Taken from jQuery 1.6.1\n\t     * @function extend\n\t     * @memberof OpenSeadragon\n\t     * @see {@link http://www.jquery.com/ jQuery}\n\t     */\n\t    $.extend = function() {\n\t        var options,\n\t            name,\n\t            src,\n\t            copy,\n\t            copyIsArray,\n\t            clone,\n\t            target  = arguments[ 0 ] || {},\n\t            length  = arguments.length,\n\t            deep    = false,\n\t            i       = 1;\n\t\n\t        // Handle a deep copy situation\n\t        if ( typeof target === \"boolean\" ) {\n\t            deep    = target;\n\t            target  = arguments[ 1 ] || {};\n\t            // skip the boolean and the target\n\t            i = 2;\n\t        }\n\t\n\t        // Handle case when target is a string or something (possible in deep copy)\n\t        if ( typeof target !== \"object\" && !OpenSeadragon.isFunction( target ) ) {\n\t            target = {};\n\t        }\n\t\n\t        // extend jQuery itself if only one argument is passed\n\t        if ( length === i ) {\n\t            target = this;\n\t            --i;\n\t        }\n\t\n\t        for ( ; i < length; i++ ) {\n\t            // Only deal with non-null/undefined values\n\t            options = arguments[ i ];\n\t            if ( options !== null || options !== undefined ) {\n\t                // Extend the base object\n\t                for ( name in options ) {\n\t                    src = target[ name ];\n\t                    copy = options[ name ];\n\t\n\t                    // Prevent never-ending loop\n\t                    if ( target === copy ) {\n\t                        continue;\n\t                    }\n\t\n\t                    // Recurse if we're merging plain objects or arrays\n\t                    if ( deep && copy && ( OpenSeadragon.isPlainObject( copy ) || ( copyIsArray = OpenSeadragon.isArray( copy ) ) ) ) {\n\t                        if ( copyIsArray ) {\n\t                            copyIsArray = false;\n\t                            clone = src && OpenSeadragon.isArray( src ) ? src : [];\n\t\n\t                        } else {\n\t                            clone = src && OpenSeadragon.isPlainObject( src ) ? src : {};\n\t                        }\n\t\n\t                        // Never move original objects, clone them\n\t                        target[ name ] = OpenSeadragon.extend( deep, clone, copy );\n\t\n\t                    // Don't bring in undefined values\n\t                    } else if ( copy !== undefined ) {\n\t                        target[ name ] = copy;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        // Return the modified object\n\t        return target;\n\t    };\n\t\n\t    var isIOSDevice = function () {\n\t        if (typeof navigator !== 'object') {\n\t            return false;\n\t        }\n\t        var userAgent = navigator.userAgent;\n\t        if (typeof userAgent !== 'string') {\n\t            return false;\n\t        }\n\t        return userAgent.indexOf('iPhone') !== -1 ||\n\t               userAgent.indexOf('iPad') !== -1 ||\n\t               userAgent.indexOf('iPod') !== -1;\n\t    };\n\t\n\t    $.extend( $, /** @lends OpenSeadragon */{\n\t        /**\n\t         * The default values for the optional settings documented at {@link OpenSeadragon.Options}.\n\t         * @static\n\t         * @type {Object}\n\t         */\n\t        DEFAULT_SETTINGS: {\n\t            //DATA SOURCE DETAILS\n\t            xmlPath:                null,\n\t            tileSources:            null,\n\t            tileHost:               null,\n\t            initialPage:            0,\n\t            crossOriginPolicy:      false,\n\t            ajaxWithCredentials:    false,\n\t            loadTilesWithAjax:      false,\n\t            ajaxHeaders:            {},\n\t\n\t            //PAN AND ZOOM SETTINGS AND CONSTRAINTS\n\t            panHorizontal:          true,\n\t            panVertical:            true,\n\t            constrainDuringPan:     false,\n\t            wrapHorizontal:         false,\n\t            wrapVertical:           false,\n\t            visibilityRatio:        0.5, //-> how much of the viewer can be negative space\n\t            minPixelRatio:          0.5, //->closer to 0 draws tiles meant for a higher zoom at this zoom\n\t            defaultZoomLevel:       0,\n\t            minZoomLevel:           null,\n\t            maxZoomLevel:           null,\n\t            homeFillsViewer:        false,\n\t\n\t            //UI RESPONSIVENESS AND FEEL\n\t            clickTimeThreshold:     300,\n\t            clickDistThreshold:     5,\n\t            dblClickTimeThreshold:  300,\n\t            dblClickDistThreshold:  20,\n\t            springStiffness:        6.5,\n\t            animationTime:          1.2,\n\t            gestureSettingsMouse:   {\n\t                scrollToZoom: true,\n\t                clickToZoom: true,\n\t                dblClickToZoom: false,\n\t                pinchToZoom: false,\n\t                zoomToRefPoint: true,\n\t                flickEnabled: false,\n\t                flickMinSpeed: 120,\n\t                flickMomentum: 0.25,\n\t                pinchRotate: false\n\t            },\n\t            gestureSettingsTouch:   {\n\t                scrollToZoom: false,\n\t                clickToZoom: false,\n\t                dblClickToZoom: true,\n\t                pinchToZoom: true,\n\t                zoomToRefPoint: true,\n\t                flickEnabled: true,\n\t                flickMinSpeed: 120,\n\t                flickMomentum: 0.25,\n\t                pinchRotate: false\n\t            },\n\t            gestureSettingsPen:     {\n\t                scrollToZoom: false,\n\t                clickToZoom: true,\n\t                dblClickToZoom: false,\n\t                pinchToZoom: false,\n\t                zoomToRefPoint: true,\n\t                flickEnabled: false,\n\t                flickMinSpeed: 120,\n\t                flickMomentum: 0.25,\n\t                pinchRotate: false\n\t            },\n\t            gestureSettingsUnknown: {\n\t                scrollToZoom: false,\n\t                clickToZoom: false,\n\t                dblClickToZoom: true,\n\t                pinchToZoom: true,\n\t                zoomToRefPoint: true,\n\t                flickEnabled: true,\n\t                flickMinSpeed: 120,\n\t                flickMomentum: 0.25,\n\t                pinchRotate: false\n\t            },\n\t            zoomPerClick:           2,\n\t            zoomPerScroll:          1.2,\n\t            zoomPerSecond:          1.0,\n\t            blendTime:              0,\n\t            alwaysBlend:            false,\n\t            autoHideControls:       true,\n\t            immediateRender:        false,\n\t            minZoomImageRatio:      0.9, //-> closer to 0 allows zoom out to infinity\n\t            maxZoomPixelRatio:      1.1, //-> higher allows 'over zoom' into pixels\n\t            smoothTileEdgesMinZoom: 1.1, //-> higher than maxZoomPixelRatio disables it\n\t            iOSDevice:              isIOSDevice(),\n\t            pixelsPerWheelLine:     40,\n\t            pixelsPerArrowPress:    40,\n\t            autoResize:             true,\n\t            preserveImageSizeOnResize: false, // requires autoResize=true\n\t            minScrollDeltaTime:     50,\n\t            rotationIncrement:      90,\n\t\n\t            //DEFAULT CONTROL SETTINGS\n\t            showSequenceControl:     true,  //SEQUENCE\n\t            sequenceControlAnchor:   null,  //SEQUENCE\n\t            preserveViewport:        false, //SEQUENCE\n\t            preserveOverlays:        false, //SEQUENCE\n\t            navPrevNextWrap:         false, //SEQUENCE\n\t            showNavigationControl:   true,  //ZOOM/HOME/FULL/ROTATION\n\t            navigationControlAnchor: null,  //ZOOM/HOME/FULL/ROTATION\n\t            showZoomControl:         true,  //ZOOM\n\t            showHomeControl:         true,  //HOME\n\t            showFullPageControl:     true,  //FULL\n\t            showRotationControl:     false, //ROTATION\n\t            showFlipControl:         false,  //FLIP\n\t            controlsFadeDelay:       2000,  //ZOOM/HOME/FULL/SEQUENCE\n\t            controlsFadeLength:      1500,  //ZOOM/HOME/FULL/SEQUENCE\n\t            mouseNavEnabled:         true,  //GENERAL MOUSE INTERACTIVITY\n\t\n\t            //VIEWPORT NAVIGATOR SETTINGS\n\t            showNavigator:              false,\n\t            navigatorId:                null,\n\t            navigatorPosition:          null,\n\t            navigatorSizeRatio:         0.2,\n\t            navigatorMaintainSizeRatio: false,\n\t            navigatorTop:               null,\n\t            navigatorLeft:              null,\n\t            navigatorHeight:            null,\n\t            navigatorWidth:             null,\n\t            navigatorAutoResize:        true,\n\t            navigatorAutoFade:          true,\n\t            navigatorRotate:            true,\n\t            navigatorBackground:        '#000',\n\t            navigatorOpacity:           0.8,\n\t            navigatorBorderColor:       '#555',\n\t            navigatorDisplayRegionColor: '#900',\n\t\n\t            // INITIAL ROTATION\n\t            degrees:                    0,\n\t\n\t            // INITIAL FLIP STATE\n\t            flipped:                    false,\n\t\n\t            // APPEARANCE\n\t            opacity:                    1,\n\t            preload:                    false,\n\t            compositeOperation:         null,\n\t            imageSmoothingEnabled:      true,\n\t            placeholderFillStyle:       null,\n\t\n\t            //REFERENCE STRIP SETTINGS\n\t            showReferenceStrip:          false,\n\t            referenceStripScroll:       'horizontal',\n\t            referenceStripElement:       null,\n\t            referenceStripHeight:        null,\n\t            referenceStripWidth:         null,\n\t            referenceStripPosition:      'BOTTOM_LEFT',\n\t            referenceStripSizeRatio:     0.2,\n\t\n\t            //COLLECTION VISUALIZATION SETTINGS\n\t            collectionRows:         3, //or columns depending on layout\n\t            collectionColumns:      0, //columns in horizontal layout, rows in vertical layout\n\t            collectionLayout:       'horizontal', //vertical\n\t            collectionMode:         false,\n\t            collectionTileSize:     800,\n\t            collectionTileMargin:   80,\n\t\n\t            //PERFORMANCE SETTINGS\n\t            imageLoaderLimit:       0,\n\t            maxImageCacheCount:     200,\n\t            timeout:                30000,\n\t            useCanvas:              true,  // Use canvas element for drawing if available\n\t\n\t            //INTERFACE RESOURCE SETTINGS\n\t            prefixUrl:              \"/images/\",\n\t            navImages: {\n\t                zoomIn: {\n\t                    REST:   'zoomin_rest.png',\n\t                    GROUP:  'zoomin_grouphover.png',\n\t                    HOVER:  'zoomin_hover.png',\n\t                    DOWN:   'zoomin_pressed.png'\n\t                },\n\t                zoomOut: {\n\t                    REST:   'zoomout_rest.png',\n\t                    GROUP:  'zoomout_grouphover.png',\n\t                    HOVER:  'zoomout_hover.png',\n\t                    DOWN:   'zoomout_pressed.png'\n\t                },\n\t                home: {\n\t                    REST:   'home_rest.png',\n\t                    GROUP:  'home_grouphover.png',\n\t                    HOVER:  'home_hover.png',\n\t                    DOWN:   'home_pressed.png'\n\t                },\n\t                fullpage: {\n\t                    REST:   'fullpage_rest.png',\n\t                    GROUP:  'fullpage_grouphover.png',\n\t                    HOVER:  'fullpage_hover.png',\n\t                    DOWN:   'fullpage_pressed.png'\n\t                },\n\t                rotateleft: {\n\t                    REST:   'rotateleft_rest.png',\n\t                    GROUP:  'rotateleft_grouphover.png',\n\t                    HOVER:  'rotateleft_hover.png',\n\t                    DOWN:   'rotateleft_pressed.png'\n\t                },\n\t                rotateright: {\n\t                    REST:   'rotateright_rest.png',\n\t                    GROUP:  'rotateright_grouphover.png',\n\t                    HOVER:  'rotateright_hover.png',\n\t                    DOWN:   'rotateright_pressed.png'\n\t                },\n\t                flip: { // Flip icon designed by Yaroslav Samoylov from the Noun Project and modified by Nelson Campos ncampos@criteriamarathon.com, https://thenounproject.com/term/flip/136289/\n\t                    REST:   'flip_rest.png',\n\t                    GROUP:  'flip_grouphover.png',\n\t                    HOVER:  'flip_hover.png',\n\t                    DOWN:   'flip_pressed.png'\n\t                },\n\t                previous: {\n\t                    REST:   'previous_rest.png',\n\t                    GROUP:  'previous_grouphover.png',\n\t                    HOVER:  'previous_hover.png',\n\t                    DOWN:   'previous_pressed.png'\n\t                },\n\t                next: {\n\t                    REST:   'next_rest.png',\n\t                    GROUP:  'next_grouphover.png',\n\t                    HOVER:  'next_hover.png',\n\t                    DOWN:   'next_pressed.png'\n\t                }\n\t            },\n\t\n\t            //DEVELOPER SETTINGS\n\t            debugMode:              false,\n\t            debugGridColor:         ['#437AB2', '#1B9E77', '#D95F02', '#7570B3', '#E7298A', '#66A61E', '#E6AB02', '#A6761D', '#666666']\n\t        },\n\t\n\t\n\t        /**\n\t         * TODO: get rid of this.  I can't see how it's required at all.  Looks\n\t         *       like an early legacy code artifact.\n\t         * @static\n\t         * @ignore\n\t         */\n\t        SIGNAL: \"----seadragon----\",\n\t\n\t\n\t        /**\n\t         * Returns a function which invokes the method as if it were a method belonging to the object.\n\t         * @function\n\t         * @param {Object} object\n\t         * @param {Function} method\n\t         * @returns {Function}\n\t         */\n\t        delegate: function( object, method ) {\n\t            return function(){\n\t                var args = arguments;\n\t                if ( args === undefined ){\n\t                    args = [];\n\t                }\n\t                return method.apply( object, args );\n\t            };\n\t        },\n\t\n\t\n\t        /**\n\t         * An enumeration of Browser vendors.\n\t         * @static\n\t         * @type {Object}\n\t         * @property {Number} UNKNOWN\n\t         * @property {Number} IE\n\t         * @property {Number} FIREFOX\n\t         * @property {Number} SAFARI\n\t         * @property {Number} CHROME\n\t         * @property {Number} OPERA\n\t         */\n\t        BROWSERS: {\n\t            UNKNOWN:    0,\n\t            IE:         1,\n\t            FIREFOX:    2,\n\t            SAFARI:     3,\n\t            CHROME:     4,\n\t            OPERA:      5\n\t        },\n\t\n\t\n\t        /**\n\t         * Returns a DOM Element for the given id or element.\n\t         * @function\n\t         * @param {String|Element} element Accepts an id or element.\n\t         * @returns {Element} The element with the given id, null, or the element itself.\n\t         */\n\t        getElement: function( element ) {\n\t            if ( typeof ( element ) == \"string\" ) {\n\t                element = document.getElementById( element );\n\t            }\n\t            return element;\n\t        },\n\t\n\t\n\t        /**\n\t         * Determines the position of the upper-left corner of the element.\n\t         * @function\n\t         * @param {Element|String} element - the element we want the position for.\n\t         * @returns {OpenSeadragon.Point} - the position of the upper left corner of the element.\n\t         */\n\t        getElementPosition: function( element ) {\n\t            var result = new $.Point(),\n\t                isFixed,\n\t                offsetParent;\n\t\n\t            element      = $.getElement( element );\n\t            isFixed      = $.getElementStyle( element ).position == \"fixed\";\n\t            offsetParent = getOffsetParent( element, isFixed );\n\t\n\t            while ( offsetParent ) {\n\t\n\t                result.x += element.offsetLeft;\n\t                result.y += element.offsetTop;\n\t\n\t                if ( isFixed ) {\n\t                    result = result.plus( $.getPageScroll() );\n\t                }\n\t\n\t                element = offsetParent;\n\t                isFixed = $.getElementStyle( element ).position == \"fixed\";\n\t                offsetParent = getOffsetParent( element, isFixed );\n\t            }\n\t\n\t            return result;\n\t        },\n\t\n\t\n\t        /**\n\t         * Determines the position of the upper-left corner of the element adjusted for current page and/or element scroll.\n\t         * @function\n\t         * @param {Element|String} element - the element we want the position for.\n\t         * @returns {OpenSeadragon.Point} - the position of the upper left corner of the element adjusted for current page and/or element scroll.\n\t         */\n\t        getElementOffset: function( element ) {\n\t            element = $.getElement( element );\n\t\n\t            var doc = element && element.ownerDocument,\n\t                docElement,\n\t                win,\n\t                boundingRect = { top: 0, left: 0 };\n\t\n\t            if ( !doc ) {\n\t                return new $.Point();\n\t            }\n\t\n\t            docElement = doc.documentElement;\n\t\n\t            if ( typeof element.getBoundingClientRect !== typeof undefined ) {\n\t                boundingRect = element.getBoundingClientRect();\n\t            }\n\t\n\t            win = ( doc == doc.window ) ?\n\t                doc :\n\t                ( doc.nodeType === 9 ) ?\n\t                    doc.defaultView || doc.parentWindow :\n\t                    false;\n\t\n\t            return new $.Point(\n\t                boundingRect.left + ( win.pageXOffset || docElement.scrollLeft ) - ( docElement.clientLeft || 0 ),\n\t                boundingRect.top + ( win.pageYOffset || docElement.scrollTop ) - ( docElement.clientTop || 0 )\n\t            );\n\t        },\n\t\n\t\n\t        /**\n\t         * Determines the height and width of the given element.\n\t         * @function\n\t         * @param {Element|String} element\n\t         * @returns {OpenSeadragon.Point}\n\t         */\n\t        getElementSize: function( element ) {\n\t            element = $.getElement( element );\n\t\n\t            return new $.Point(\n\t                element.clientWidth,\n\t                element.clientHeight\n\t            );\n\t        },\n\t\n\t\n\t        /**\n\t         * Returns the CSSStyle object for the given element.\n\t         * @function\n\t         * @param {Element|String} element\n\t         * @returns {CSSStyle}\n\t         */\n\t        getElementStyle:\n\t            document.documentElement.currentStyle ?\n\t            function( element ) {\n\t                element = $.getElement( element );\n\t                return element.currentStyle;\n\t            } :\n\t            function( element ) {\n\t                element = $.getElement( element );\n\t                return window.getComputedStyle( element, \"\" );\n\t            },\n\t\n\t        /**\n\t         * Returns the property with the correct vendor prefix appended.\n\t         * @param {String} property the property name\n\t         * @returns {String} the property with the correct prefix or null if not\n\t         * supported.\n\t         */\n\t        getCssPropertyWithVendorPrefix: function(property) {\n\t            var memo = {};\n\t\n\t            $.getCssPropertyWithVendorPrefix = function(property) {\n\t                if (memo[property] !== undefined) {\n\t                    return memo[property];\n\t                }\n\t                var style = document.createElement('div').style;\n\t                var result = null;\n\t                if (style[property] !== undefined) {\n\t                    result = property;\n\t                } else {\n\t                    var prefixes = ['Webkit', 'Moz', 'MS', 'O',\n\t                        'webkit', 'moz', 'ms', 'o'];\n\t                    var suffix = $.capitalizeFirstLetter(property);\n\t                    for (var i = 0; i < prefixes.length; i++) {\n\t                        var prop = prefixes[i] + suffix;\n\t                        if (style[prop] !== undefined) {\n\t                            result = prop;\n\t                            break;\n\t                        }\n\t                    }\n\t                }\n\t                memo[property] = result;\n\t                return result;\n\t            };\n\t            return $.getCssPropertyWithVendorPrefix(property);\n\t        },\n\t\n\t        /**\n\t         * Capitalizes the first letter of a string\n\t         * @param {String} string\n\t         * @returns {String} The string with the first letter capitalized\n\t         */\n\t        capitalizeFirstLetter: function(string) {\n\t            return string.charAt(0).toUpperCase() + string.slice(1);\n\t        },\n\t\n\t        /**\n\t         * Compute the modulo of a number but makes sure to always return\n\t         * a positive value.\n\t         * @param {Number} number the number to computes the modulo of\n\t         * @param {Number} modulo the modulo\n\t         * @returns {Number} the result of the modulo of number\n\t         */\n\t        positiveModulo: function(number, modulo) {\n\t            var result = number % modulo;\n\t            if (result < 0) {\n\t                result += modulo;\n\t            }\n\t            return result;\n\t        },\n\t\n\t        /**\n\t         * Determines if a point is within the bounding rectangle of the given element (hit-test).\n\t         * @function\n\t         * @param {Element|String} element\n\t         * @param {OpenSeadragon.Point} point\n\t         * @returns {Boolean}\n\t         */\n\t        pointInElement: function( element, point ) {\n\t            element = $.getElement( element );\n\t            var offset = $.getElementOffset( element ),\n\t                size = $.getElementSize( element );\n\t            return point.x >= offset.x && point.x < offset.x + size.x && point.y < offset.y + size.y && point.y >= offset.y;\n\t        },\n\t\n\t\n\t        /**\n\t         * Gets the latest event, really only useful internally since its\n\t         * specific to IE behavior.\n\t         * @function\n\t         * @param {Event} [event]\n\t         * @returns {Event}\n\t         * @deprecated For internal use only\n\t         * @private\n\t         */\n\t        getEvent: function( event ) {\n\t            if( event ){\n\t                $.getEvent = function( event ) {\n\t                    return event;\n\t                };\n\t            } else {\n\t                $.getEvent = function() {\n\t                    return window.event;\n\t                };\n\t            }\n\t            return $.getEvent( event );\n\t        },\n\t\n\t\n\t        /**\n\t         * Gets the position of the mouse on the screen for a given event.\n\t         * @function\n\t         * @param {Event} [event]\n\t         * @returns {OpenSeadragon.Point}\n\t         */\n\t        getMousePosition: function( event ) {\n\t\n\t            if ( typeof ( event.pageX ) == \"number\" ) {\n\t                $.getMousePosition = function( event ){\n\t                    var result = new $.Point();\n\t\n\t                    event = $.getEvent( event );\n\t                    result.x = event.pageX;\n\t                    result.y = event.pageY;\n\t\n\t                    return result;\n\t                };\n\t            } else if ( typeof ( event.clientX ) == \"number\" ) {\n\t                $.getMousePosition = function( event ){\n\t                    var result = new $.Point();\n\t\n\t                    event = $.getEvent( event );\n\t                    result.x =\n\t                        event.clientX +\n\t                        document.body.scrollLeft +\n\t                        document.documentElement.scrollLeft;\n\t                    result.y =\n\t                        event.clientY +\n\t                        document.body.scrollTop +\n\t                        document.documentElement.scrollTop;\n\t\n\t                    return result;\n\t                };\n\t            } else {\n\t                throw new Error(\n\t                    \"Unknown event mouse position, no known technique.\"\n\t                );\n\t            }\n\t\n\t            return $.getMousePosition( event );\n\t        },\n\t\n\t\n\t        /**\n\t         * Determines the page's current scroll position.\n\t         * @function\n\t         * @returns {OpenSeadragon.Point}\n\t         */\n\t        getPageScroll: function() {\n\t            var docElement  = document.documentElement || {},\n\t                body        = document.body || {};\n\t\n\t            if ( typeof ( window.pageXOffset ) == \"number\" ) {\n\t                $.getPageScroll = function(){\n\t                    return new $.Point(\n\t                        window.pageXOffset,\n\t                        window.pageYOffset\n\t                    );\n\t                };\n\t            } else if ( body.scrollLeft || body.scrollTop ) {\n\t                $.getPageScroll = function(){\n\t                    return new $.Point(\n\t                        document.body.scrollLeft,\n\t                        document.body.scrollTop\n\t                    );\n\t                };\n\t            } else if ( docElement.scrollLeft || docElement.scrollTop ) {\n\t                $.getPageScroll = function(){\n\t                    return new $.Point(\n\t                        document.documentElement.scrollLeft,\n\t                        document.documentElement.scrollTop\n\t                    );\n\t                };\n\t            } else {\n\t                // We can't reassign the function yet, as there was no scroll.\n\t                return new $.Point(0, 0);\n\t            }\n\t\n\t            return $.getPageScroll();\n\t        },\n\t\n\t        /**\n\t         * Set the page scroll position.\n\t         * @function\n\t         * @returns {OpenSeadragon.Point}\n\t         */\n\t        setPageScroll: function( scroll ) {\n\t            if ( typeof ( window.scrollTo ) !== \"undefined\" ) {\n\t                $.setPageScroll = function( scroll ) {\n\t                    window.scrollTo( scroll.x, scroll.y );\n\t                };\n\t            } else {\n\t                var originalScroll = $.getPageScroll();\n\t                if ( originalScroll.x === scroll.x &&\n\t                    originalScroll.y === scroll.y ) {\n\t                    // We are already correctly positioned and there\n\t                    // is no way to detect the correct method.\n\t                    return;\n\t                }\n\t\n\t                document.body.scrollLeft = scroll.x;\n\t                document.body.scrollTop = scroll.y;\n\t                var currentScroll = $.getPageScroll();\n\t                if ( currentScroll.x !== originalScroll.x &&\n\t                    currentScroll.y !== originalScroll.y ) {\n\t                    $.setPageScroll = function( scroll ) {\n\t                        document.body.scrollLeft = scroll.x;\n\t                        document.body.scrollTop = scroll.y;\n\t                    };\n\t                    return;\n\t                }\n\t\n\t                document.documentElement.scrollLeft = scroll.x;\n\t                document.documentElement.scrollTop = scroll.y;\n\t                currentScroll = $.getPageScroll();\n\t                if ( currentScroll.x !== originalScroll.x &&\n\t                    currentScroll.y !== originalScroll.y ) {\n\t                    $.setPageScroll = function( scroll ) {\n\t                        document.documentElement.scrollLeft = scroll.x;\n\t                        document.documentElement.scrollTop = scroll.y;\n\t                    };\n\t                    return;\n\t                }\n\t\n\t                // We can't find anything working, so we do nothing.\n\t                $.setPageScroll = function( scroll ) {\n\t                };\n\t            }\n\t\n\t            return $.setPageScroll( scroll );\n\t        },\n\t\n\t        /**\n\t         * Determines the size of the browsers window.\n\t         * @function\n\t         * @returns {OpenSeadragon.Point}\n\t         */\n\t        getWindowSize: function() {\n\t            var docElement = document.documentElement || {},\n\t                body    = document.body || {};\n\t\n\t            if ( typeof ( window.innerWidth ) == 'number' ) {\n\t                $.getWindowSize = function(){\n\t                    return new $.Point(\n\t                        window.innerWidth,\n\t                        window.innerHeight\n\t                    );\n\t                };\n\t            } else if ( docElement.clientWidth || docElement.clientHeight ) {\n\t                $.getWindowSize = function(){\n\t                    return new $.Point(\n\t                        document.documentElement.clientWidth,\n\t                        document.documentElement.clientHeight\n\t                    );\n\t                };\n\t            } else if ( body.clientWidth || body.clientHeight ) {\n\t                $.getWindowSize = function(){\n\t                    return new $.Point(\n\t                        document.body.clientWidth,\n\t                        document.body.clientHeight\n\t                    );\n\t                };\n\t            } else {\n\t                throw new Error(\"Unknown window size, no known technique.\");\n\t            }\n\t\n\t            return $.getWindowSize();\n\t        },\n\t\n\t\n\t        /**\n\t         * Wraps the given element in a nest of divs so that the element can\n\t         * be easily centered using CSS tables\n\t         * @function\n\t         * @param {Element|String} element\n\t         * @returns {Element} outermost wrapper element\n\t         */\n\t        makeCenteredNode: function( element ) {\n\t            // Convert a possible ID to an actual HTMLElement\n\t            element = $.getElement( element );\n\t\n\t            /*\n\t                CSS tables require you to have a display:table/row/cell hierarchy so we need to create\n\t                three nested wrapper divs:\n\t             */\n\t\n\t            var wrappers = [\n\t                $.makeNeutralElement( 'div' ),\n\t                $.makeNeutralElement( 'div' ),\n\t                $.makeNeutralElement( 'div' )\n\t            ];\n\t\n\t            // It feels like we should be able to pass style dicts to makeNeutralElement:\n\t            $.extend(wrappers[0].style, {\n\t                display: \"table\",\n\t                height: \"100%\",\n\t                width: \"100%\"\n\t            });\n\t\n\t            $.extend(wrappers[1].style, {\n\t                display: \"table-row\"\n\t            });\n\t\n\t            $.extend(wrappers[2].style, {\n\t                display: \"table-cell\",\n\t                verticalAlign: \"middle\",\n\t                textAlign: \"center\"\n\t            });\n\t\n\t            wrappers[0].appendChild(wrappers[1]);\n\t            wrappers[1].appendChild(wrappers[2]);\n\t            wrappers[2].appendChild(element);\n\t\n\t            return wrappers[0];\n\t        },\n\t\n\t\n\t        /**\n\t         * Creates an easily positionable element of the given type that therefor\n\t         * serves as an excellent container element.\n\t         * @function\n\t         * @param {String} tagName\n\t         * @returns {Element}\n\t         */\n\t        makeNeutralElement: function( tagName ) {\n\t            var element = document.createElement( tagName ),\n\t                style   = element.style;\n\t\n\t            style.background = \"transparent none\";\n\t            style.border     = \"none\";\n\t            style.margin     = \"0px\";\n\t            style.padding    = \"0px\";\n\t            style.position   = \"static\";\n\t\n\t            return element;\n\t        },\n\t\n\t\n\t        /**\n\t         * Returns the current milliseconds, using Date.now() if available\n\t         * @function\n\t         */\n\t        now: function( ) {\n\t            if (Date.now) {\n\t                $.now = Date.now;\n\t            } else {\n\t                $.now = function() {\n\t                    return new Date().getTime();\n\t                };\n\t            }\n\t\n\t            return $.now();\n\t        },\n\t\n\t\n\t        /**\n\t         * Ensures an image is loaded correctly to support alpha transparency.\n\t         * Generally only IE has issues doing this correctly for formats like\n\t         * png.\n\t         * @function\n\t         * @param {String} src\n\t         * @returns {Element}\n\t         */\n\t        makeTransparentImage: function( src ) {\n\t\n\t            $.makeTransparentImage = function( src ){\n\t                var img = $.makeNeutralElement( \"img\" );\n\t\n\t                img.src = src;\n\t\n\t                return img;\n\t            };\n\t\n\t            if ( $.Browser.vendor == $.BROWSERS.IE && $.Browser.version < 7 ) {\n\t\n\t                $.makeTransparentImage = function( src ){\n\t                    var img     = $.makeNeutralElement( \"img\" ),\n\t                        element = null;\n\t\n\t                    element = $.makeNeutralElement(\"span\");\n\t                    element.style.display = \"inline-block\";\n\t\n\t                    img.onload = function() {\n\t                        element.style.width  = element.style.width || img.width + \"px\";\n\t                        element.style.height = element.style.height || img.height + \"px\";\n\t\n\t                        img.onload = null;\n\t                        img = null;     // to prevent memory leaks in IE\n\t                    };\n\t\n\t                    img.src = src;\n\t                    element.style.filter =\n\t                        \"progid:DXImageTransform.Microsoft.AlphaImageLoader(src='\" +\n\t                        src +\n\t                        \"', sizingMethod='scale')\";\n\t\n\t                    return element;\n\t                };\n\t\n\t            }\n\t\n\t            return $.makeTransparentImage( src );\n\t        },\n\t\n\t\n\t        /**\n\t         * Sets the opacity of the specified element.\n\t         * @function\n\t         * @param {Element|String} element\n\t         * @param {Number} opacity\n\t         * @param {Boolean} [usesAlpha]\n\t         */\n\t        setElementOpacity: function( element, opacity, usesAlpha ) {\n\t\n\t            var ieOpacity,\n\t                ieFilter;\n\t\n\t            element = $.getElement( element );\n\t\n\t            if ( usesAlpha && !$.Browser.alpha ) {\n\t                opacity = Math.round( opacity );\n\t            }\n\t\n\t            if ( $.Browser.opacity ) {\n\t                element.style.opacity = opacity < 1 ? opacity : \"\";\n\t            } else {\n\t                if ( opacity < 1 ) {\n\t                    ieOpacity = Math.round( 100 * opacity );\n\t                    ieFilter  = \"alpha(opacity=\" + ieOpacity + \")\";\n\t                    element.style.filter = ieFilter;\n\t                } else {\n\t                    element.style.filter = \"\";\n\t                }\n\t            }\n\t        },\n\t\n\t\n\t        /**\n\t         * Sets the specified element's touch-action style attribute to 'none'.\n\t         * @function\n\t         * @param {Element|String} element\n\t         */\n\t        setElementTouchActionNone: function( element ) {\n\t            element = $.getElement( element );\n\t            if ( typeof element.style.touchAction !== 'undefined' ) {\n\t                element.style.touchAction = 'none';\n\t            } else if ( typeof element.style.msTouchAction !== 'undefined' ) {\n\t                element.style.msTouchAction = 'none';\n\t            }\n\t        },\n\t\n\t\n\t        /**\n\t         * Add the specified CSS class to the element if not present.\n\t         * @function\n\t         * @param {Element|String} element\n\t         * @param {String} className\n\t         */\n\t        addClass: function( element, className ) {\n\t            element = $.getElement( element );\n\t\n\t            if (!element.className) {\n\t                element.className = className;\n\t            } else if ( ( ' ' + element.className + ' ' ).\n\t                indexOf( ' ' + className + ' ' ) === -1 ) {\n\t                element.className += ' ' + className;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Find the first index at which an element is found in an array or -1\n\t         * if not present.\n\t         *\n\t         * Code taken and adapted from\n\t         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf#Compatibility\n\t         *\n\t         * @function\n\t         * @param {Array} array The array from which to find the element\n\t         * @param {Object} searchElement The element to find\n\t         * @param {Number} [fromIndex=0] Index to start research.\n\t         * @returns {Number} The index of the element in the array.\n\t         */\n\t        indexOf: function( array, searchElement, fromIndex ) {\n\t            if ( Array.prototype.indexOf ) {\n\t                this.indexOf = function( array, searchElement, fromIndex ) {\n\t                    return array.indexOf( searchElement, fromIndex );\n\t                };\n\t            } else {\n\t                this.indexOf = function( array, searchElement, fromIndex ) {\n\t                    var i,\n\t                        pivot = ( fromIndex ) ? fromIndex : 0,\n\t                        length;\n\t                    if ( !array ) {\n\t                        throw new TypeError( );\n\t                    }\n\t\n\t                    length = array.length;\n\t                    if ( length === 0 || pivot >= length ) {\n\t                        return -1;\n\t                    }\n\t\n\t                    if ( pivot < 0 ) {\n\t                        pivot = length - Math.abs( pivot );\n\t                    }\n\t\n\t                    for ( i = pivot; i < length; i++ ) {\n\t                        if ( array[i] === searchElement ) {\n\t                            return i;\n\t                        }\n\t                    }\n\t                    return -1;\n\t                };\n\t            }\n\t            return this.indexOf( array, searchElement, fromIndex );\n\t        },\n\t\n\t        /**\n\t         * Remove the specified CSS class from the element.\n\t         * @function\n\t         * @param {Element|String} element\n\t         * @param {String} className\n\t         */\n\t        removeClass: function( element, className ) {\n\t            var oldClasses,\n\t                newClasses = [],\n\t                i;\n\t\n\t            element = $.getElement( element );\n\t            oldClasses = element.className.split( /\\s+/ );\n\t            for ( i = 0; i < oldClasses.length; i++ ) {\n\t                if ( oldClasses[ i ] && oldClasses[ i ] !== className ) {\n\t                    newClasses.push( oldClasses[ i ] );\n\t                }\n\t            }\n\t            element.className = newClasses.join(' ');\n\t        },\n\t\n\t\n\t        /**\n\t         * Adds an event listener for the given element, eventName and handler.\n\t         * @function\n\t         * @param {Element|String} element\n\t         * @param {String} eventName\n\t         * @param {Function} handler\n\t         * @param {Boolean} [useCapture]\n\t         */\n\t        addEvent: (function () {\n\t            if ( window.addEventListener ) {\n\t                return function ( element, eventName, handler, useCapture ) {\n\t                    element = $.getElement( element );\n\t                    element.addEventListener( eventName, handler, useCapture );\n\t                };\n\t            } else if ( window.attachEvent ) {\n\t                return function ( element, eventName, handler, useCapture ) {\n\t                    element = $.getElement( element );\n\t                    element.attachEvent( 'on' + eventName, handler );\n\t                };\n\t            } else {\n\t                throw new Error( \"No known event model.\" );\n\t            }\n\t        }()),\n\t\n\t\n\t        /**\n\t         * Remove a given event listener for the given element, event type and\n\t         * handler.\n\t         * @function\n\t         * @param {Element|String} element\n\t         * @param {String} eventName\n\t         * @param {Function} handler\n\t         * @param {Boolean} [useCapture]\n\t         */\n\t        removeEvent: (function () {\n\t            if ( window.removeEventListener ) {\n\t                return function ( element, eventName, handler, useCapture ) {\n\t                    element = $.getElement( element );\n\t                    element.removeEventListener( eventName, handler, useCapture );\n\t                };\n\t            } else if ( window.detachEvent ) {\n\t                return function( element, eventName, handler, useCapture ) {\n\t                    element = $.getElement( element );\n\t                    element.detachEvent( 'on' + eventName, handler );\n\t                };\n\t            } else {\n\t                throw new Error( \"No known event model.\" );\n\t            }\n\t        }()),\n\t\n\t\n\t        /**\n\t         * Cancels the default browser behavior had the event propagated all\n\t         * the way up the DOM to the window object.\n\t         * @function\n\t         * @param {Event} [event]\n\t         */\n\t        cancelEvent: function( event ) {\n\t            event = $.getEvent( event );\n\t\n\t            if ( event.preventDefault ) {\n\t                $.cancelEvent = function( event ){\n\t                    // W3C for preventing default\n\t                    event.preventDefault();\n\t                };\n\t            } else {\n\t                $.cancelEvent = function( event ){\n\t                    event = $.getEvent( event );\n\t                    // legacy for preventing default\n\t                    event.cancel = true;\n\t                    // IE for preventing default\n\t                    event.returnValue = false;\n\t                };\n\t            }\n\t            $.cancelEvent( event );\n\t        },\n\t\n\t\n\t        /**\n\t         * Stops the propagation of the event up the DOM.\n\t         * @function\n\t         * @param {Event} [event]\n\t         */\n\t        stopEvent: function( event ) {\n\t            event = $.getEvent( event );\n\t\n\t            if ( event.stopPropagation ) {\n\t                // W3C for stopping propagation\n\t                $.stopEvent = function( event ){\n\t                    event.stopPropagation();\n\t                };\n\t            } else {\n\t                // IE for stopping propagation\n\t                $.stopEvent = function( event ){\n\t                    event = $.getEvent( event );\n\t                    event.cancelBubble = true;\n\t                };\n\t\n\t            }\n\t\n\t            $.stopEvent( event );\n\t        },\n\t\n\t\n\t        /**\n\t         * Similar to OpenSeadragon.delegate, but it does not immediately call\n\t         * the method on the object, returning a function which can be called\n\t         * repeatedly to delegate the method. It also allows additional arguments\n\t         * to be passed during construction which will be added during each\n\t         * invocation, and each invocation can add additional arguments as well.\n\t         *\n\t         * @function\n\t         * @param {Object} object\n\t         * @param {Function} method\n\t         * @param [args] any additional arguments are passed as arguments to the\n\t         *  created callback\n\t         * @returns {Function}\n\t         */\n\t        createCallback: function( object, method ) {\n\t            //TODO: This pattern is painful to use and debug.  It's much cleaner\n\t            //      to use pinning plus anonymous functions.  Get rid of this\n\t            //      pattern!\n\t            var initialArgs = [],\n\t                i;\n\t            for ( i = 2; i < arguments.length; i++ ) {\n\t                initialArgs.push( arguments[ i ] );\n\t            }\n\t\n\t            return function() {\n\t                var args = initialArgs.concat( [] ),\n\t                    i;\n\t                for ( i = 0; i < arguments.length; i++ ) {\n\t                    args.push( arguments[ i ] );\n\t                }\n\t\n\t                return method.apply( object, args );\n\t            };\n\t        },\n\t\n\t\n\t        /**\n\t         * Retrieves the value of a url parameter from the window.location string.\n\t         * @function\n\t         * @param {String} key\n\t         * @returns {String} The value of the url parameter or null if no param matches.\n\t         */\n\t        getUrlParameter: function( key ) {\n\t            // eslint-disable-next-line no-use-before-define\n\t            var value = URLPARAMS[ key ];\n\t            return value ? value : null;\n\t        },\n\t\n\t        /**\n\t         * Retrieves the protocol used by the url. The url can either be absolute\n\t         * or relative.\n\t         * @function\n\t         * @private\n\t         * @param {String} url The url to retrieve the protocol from.\n\t         * @return {String} The protocol (http:, https:, file:, ftp: ...)\n\t         */\n\t        getUrlProtocol: function( url ) {\n\t            var match = url.match(/^([a-z]+:)\\/\\//i);\n\t            if ( match === null ) {\n\t                // Relative URL, retrive the protocol from window.location\n\t                return window.location.protocol;\n\t            }\n\t            return match[1].toLowerCase();\n\t        },\n\t\n\t        /**\n\t         * Create an XHR object\n\t         * @private\n\t         * @param {type} [local] If set to true, the XHR will be file: protocol\n\t         * compatible if possible (but may raise a warning in the browser).\n\t         * @returns {XMLHttpRequest}\n\t         */\n\t        createAjaxRequest: function( local ) {\n\t            // IE11 does not support window.ActiveXObject so we just try to\n\t            // create one to see if it is supported.\n\t            // See: http://msdn.microsoft.com/en-us/library/ie/dn423948%28v=vs.85%29.aspx\n\t            var supportActiveX;\n\t            try {\n\t                /* global ActiveXObject:true */\n\t                supportActiveX = !!new ActiveXObject( \"Microsoft.XMLHTTP\" );\n\t            } catch( e ) {\n\t                supportActiveX = false;\n\t            }\n\t\n\t            if ( supportActiveX ) {\n\t                if ( window.XMLHttpRequest ) {\n\t                    $.createAjaxRequest = function( local ) {\n\t                        if ( local ) {\n\t                            return new ActiveXObject( \"Microsoft.XMLHTTP\" );\n\t                        }\n\t                        return new XMLHttpRequest();\n\t                    };\n\t                } else {\n\t                    $.createAjaxRequest = function() {\n\t                        return new ActiveXObject( \"Microsoft.XMLHTTP\" );\n\t                    };\n\t                }\n\t            } else if ( window.XMLHttpRequest ) {\n\t                $.createAjaxRequest = function() {\n\t                    return new XMLHttpRequest();\n\t                };\n\t            } else {\n\t                throw new Error( \"Browser doesn't support XMLHttpRequest.\" );\n\t            }\n\t            return $.createAjaxRequest( local );\n\t        },\n\t\n\t        /**\n\t         * Makes an AJAX request.\n\t         * @param {Object} options\n\t         * @param {String} options.url - the url to request\n\t         * @param {Function} options.success - a function to call on a successful response\n\t         * @param {Function} options.error - a function to call on when an error occurs\n\t         * @param {Object} options.headers - headers to add to the AJAX request\n\t         * @param {String} options.responseType - the response type of the the AJAX request\n\t         * @param {Boolean} [options.withCredentials=false] - whether to set the XHR's withCredentials\n\t         * @throws {Error}\n\t         * @returns {XMLHttpRequest}\n\t         */\n\t        makeAjaxRequest: function( url, onSuccess, onError ) {\n\t            var withCredentials;\n\t            var headers;\n\t            var responseType;\n\t\n\t            // Note that our preferred API is that you pass in a single object; the named\n\t            // arguments are for legacy support.\n\t            if( $.isPlainObject( url ) ){\n\t                onSuccess = url.success;\n\t                onError = url.error;\n\t                withCredentials = url.withCredentials;\n\t                headers = url.headers;\n\t                responseType = url.responseType || null;\n\t                url = url.url;\n\t            }\n\t\n\t            var protocol = $.getUrlProtocol( url );\n\t            var request = $.createAjaxRequest( protocol === \"file:\" );\n\t\n\t            if ( !$.isFunction( onSuccess ) ) {\n\t                throw new Error( \"makeAjaxRequest requires a success callback\" );\n\t            }\n\t\n\t            request.onreadystatechange = function() {\n\t                // 4 = DONE (https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#Properties)\n\t                if ( request.readyState == 4 ) {\n\t                    request.onreadystatechange = function(){};\n\t\n\t                    // With protocols other than http/https, a successful request status is in\n\t                    // the 200's on Firefox and 0 on other browsers\n\t                    if ( (request.status >= 200 && request.status < 300) ||\n\t                        ( request.status === 0 &&\n\t                          protocol !== \"http:\" &&\n\t                          protocol !== \"https:\" )) {\n\t                        onSuccess( request );\n\t                    } else {\n\t                        $.console.log( \"AJAX request returned %d: %s\", request.status, url );\n\t\n\t                        if ( $.isFunction( onError ) ) {\n\t                            onError( request );\n\t                        }\n\t                    }\n\t                }\n\t            };\n\t\n\t            try {\n\t                request.open( \"GET\", url, true );\n\t\n\t                if (responseType) {\n\t                    request.responseType = responseType;\n\t                }\n\t\n\t                if (headers) {\n\t                    for (var headerName in headers) {\n\t                        if (headers.hasOwnProperty(headerName) && headers[headerName]) {\n\t                            request.setRequestHeader(headerName, headers[headerName]);\n\t                        }\n\t                    }\n\t                }\n\t\n\t                if (withCredentials) {\n\t                    request.withCredentials = true;\n\t                }\n\t\n\t                request.send(null);\n\t            } catch (e) {\n\t                var msg = e.message;\n\t\n\t                /*\n\t                    IE < 10 does not support CORS and an XHR request to a different origin will fail as soon\n\t                    as send() is called. This is particularly easy to miss during development and appear in\n\t                    production if you use a CDN or domain sharding and the security policy is likely to break\n\t                    exception handlers since any attempt to access a property of the request object will\n\t                    raise an access denied TypeError inside the catch block.\n\t\n\t                    To be friendlier, we'll check for this specific error and add a documentation pointer\n\t                    to point developers in the right direction. We test the exception number because IE's\n\t                    error messages are localized.\n\t                */\n\t                var oldIE = $.Browser.vendor == $.BROWSERS.IE && $.Browser.version < 10;\n\t                if ( oldIE && typeof ( e.number ) != \"undefined\" && e.number == -2147024891 ) {\n\t                    msg += \"\\nSee http://msdn.microsoft.com/en-us/library/ms537505(v=vs.85).aspx#xdomain\";\n\t                }\n\t\n\t                $.console.log( \"%s while making AJAX request: %s\", e.name, msg );\n\t\n\t                request.onreadystatechange = function(){};\n\t\n\t                if (window.XDomainRequest) { // IE9 or IE8 might as well try to use XDomainRequest\n\t                    var xdr = new XDomainRequest();\n\t                    if (xdr) {\n\t                        xdr.onload = function (e) {\n\t                            if ( $.isFunction( onSuccess ) ) {\n\t                                onSuccess({ // Faking an xhr object\n\t                                    responseText: xdr.responseText,\n\t                                    status: 200, // XDomainRequest doesn't support status codes, so we just fake one! :/\n\t                                    statusText: 'OK'\n\t                                });\n\t                            }\n\t                        };\n\t                        xdr.onerror = function (e) {\n\t                            if ($.isFunction(onError)) {\n\t                                onError({ // Faking an xhr object\n\t                                    responseText: xdr.responseText,\n\t                                    status: 444, // 444 No Response\n\t                                    statusText: 'An error happened. Due to an XDomainRequest deficiency we can not extract any information about this error. Upgrade your browser.'\n\t                                });\n\t                            }\n\t                        };\n\t                        try {\n\t                            xdr.open('GET', url);\n\t                            xdr.send();\n\t                        } catch (e2) {\n\t                            if ( $.isFunction( onError ) ) {\n\t                                onError( request, e );\n\t                            }\n\t                        }\n\t                    }\n\t                } else {\n\t                    if ( $.isFunction( onError ) ) {\n\t                        onError( request, e );\n\t                    }\n\t                }\n\t            }\n\t\n\t            return request;\n\t        },\n\t\n\t        /**\n\t         * Taken from jQuery 1.6.1\n\t         * @function\n\t         * @param {Object} options\n\t         * @param {String} options.url\n\t         * @param {Function} options.callback\n\t         * @param {String} [options.param='callback'] The name of the url parameter\n\t         *      to request the jsonp provider with.\n\t         * @param {String} [options.callbackName=] The name of the callback to\n\t         *      request the jsonp provider with.\n\t         */\n\t        jsonp: function( options ){\n\t            var script,\n\t                url     = options.url,\n\t                head    = document.head ||\n\t                    document.getElementsByTagName( \"head\" )[ 0 ] ||\n\t                    document.documentElement,\n\t                jsonpCallback = options.callbackName || 'openseadragon' + $.now(),\n\t                previous      = window[ jsonpCallback ],\n\t                replace       = \"$1\" + jsonpCallback + \"$2\",\n\t                callbackParam = options.param || 'callback',\n\t                callback      = options.callback;\n\t\n\t            url = url.replace( /(\\=)\\?(&|$)|\\?\\?/i, replace );\n\t            // Add callback manually\n\t            url += (/\\?/.test( url ) ? \"&\" : \"?\") + callbackParam + \"=\" + jsonpCallback;\n\t\n\t            // Install callback\n\t            window[ jsonpCallback ] = function( response ) {\n\t                if ( !previous ){\n\t                    try{\n\t                        delete window[ jsonpCallback ];\n\t                    }catch(e){\n\t                        //swallow\n\t                    }\n\t                } else {\n\t                    window[ jsonpCallback ] = previous;\n\t                }\n\t                if( callback && $.isFunction( callback ) ){\n\t                    callback( response );\n\t                }\n\t            };\n\t\n\t            script = document.createElement( \"script\" );\n\t\n\t            //TODO: having an issue with async info requests\n\t            if( undefined !== options.async || false !== options.async ){\n\t                script.async = \"async\";\n\t            }\n\t\n\t            if ( options.scriptCharset ) {\n\t                script.charset = options.scriptCharset;\n\t            }\n\t\n\t            script.src = url;\n\t\n\t            // Attach handlers for all browsers\n\t            script.onload = script.onreadystatechange = function( _, isAbort ) {\n\t\n\t                if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {\n\t\n\t                    // Handle memory leak in IE\n\t                    script.onload = script.onreadystatechange = null;\n\t\n\t                    // Remove the script\n\t                    if ( head && script.parentNode ) {\n\t                        head.removeChild( script );\n\t                    }\n\t\n\t                    // Dereference the script\n\t                    script = undefined;\n\t                }\n\t            };\n\t            // Use insertBefore instead of appendChild  to circumvent an IE6 bug.\n\t            // This arises when a base node is used (#2709 and #4378).\n\t            head.insertBefore( script, head.firstChild );\n\t\n\t        },\n\t\n\t\n\t        /**\n\t         * Fully deprecated. Will throw an error.\n\t         * @function\n\t         * @deprecated use {@link OpenSeadragon.Viewer#open}\n\t         */\n\t        createFromDZI: function() {\n\t            throw \"OpenSeadragon.createFromDZI is deprecated, use Viewer.open.\";\n\t        },\n\t\n\t        /**\n\t         * Parses an XML string into a DOM Document.\n\t         * @function\n\t         * @param {String} string\n\t         * @returns {Document}\n\t         */\n\t        parseXml: function( string ) {\n\t            if ( window.DOMParser ) {\n\t\n\t                $.parseXml = function( string ) {\n\t                    var xmlDoc = null,\n\t                        parser;\n\t\n\t                    parser = new DOMParser();\n\t                    xmlDoc = parser.parseFromString( string, \"text/xml\" );\n\t                    return xmlDoc;\n\t                };\n\t\n\t            } else if ( window.ActiveXObject ) {\n\t\n\t                $.parseXml = function( string ) {\n\t                    var xmlDoc = null;\n\t\n\t                    xmlDoc = new ActiveXObject( \"Microsoft.XMLDOM\" );\n\t                    xmlDoc.async = false;\n\t                    xmlDoc.loadXML( string );\n\t                    return xmlDoc;\n\t                };\n\t\n\t            } else {\n\t                throw new Error( \"Browser doesn't support XML DOM.\" );\n\t            }\n\t\n\t            return $.parseXml( string );\n\t        },\n\t\n\t        /**\n\t         * Parses a JSON string into a Javascript object.\n\t         * @function\n\t         * @param {String} string\n\t         * @returns {Object}\n\t         */\n\t        parseJSON: function(string) {\n\t            if (window.JSON && window.JSON.parse) {\n\t                $.parseJSON = window.JSON.parse;\n\t            } else {\n\t                // Should only be used by IE8 in non standards mode\n\t                $.parseJSON = function(string) {\n\t                    /*jshint evil:true*/\n\t                    //eslint-disable-next-line no-eval\n\t                    return eval('(' + string + ')');\n\t                };\n\t            }\n\t            return $.parseJSON(string);\n\t        },\n\t\n\t        /**\n\t         * Reports whether the image format is supported for tiling in this\n\t         * version.\n\t         * @function\n\t         * @param {String} [extension]\n\t         * @returns {Boolean}\n\t         */\n\t        imageFormatSupported: function( extension ) {\n\t            extension = extension ? extension : \"\";\n\t            // eslint-disable-next-line no-use-before-define\n\t            return !!FILEFORMATS[ extension.toLowerCase() ];\n\t        }\n\t\n\t    });\n\t\n\t\n\t    /**\n\t     * The current browser vendor, version, and related information regarding detected features.\n\t     * @member {Object} Browser\n\t     * @memberof OpenSeadragon\n\t     * @static\n\t     * @type {Object}\n\t     * @property {OpenSeadragon.BROWSERS} vendor - One of the {@link OpenSeadragon.BROWSERS} enumeration values.\n\t     * @property {Number} version\n\t     * @property {Boolean} alpha - Does the browser support image alpha transparency.\n\t     */\n\t    $.Browser = {\n\t        vendor:     $.BROWSERS.UNKNOWN,\n\t        version:    0,\n\t        alpha:      true\n\t    };\n\t\n\t\n\t    var FILEFORMATS = {\n\t            \"bmp\":  false,\n\t            \"jpeg\": true,\n\t            \"jpg\":  true,\n\t            \"png\":  true,\n\t            \"tif\":  false,\n\t            \"wdp\":  false\n\t        },\n\t        URLPARAMS = {};\n\t\n\t    (function() {\n\t        //A small auto-executing routine to determine the browser vendor,\n\t        //version and supporting feature sets.\n\t        var ver = navigator.appVersion,\n\t            ua  = navigator.userAgent,\n\t            regex;\n\t\n\t        //console.error( 'appName: ' + navigator.appName );\n\t        //console.error( 'appVersion: ' + navigator.appVersion );\n\t        //console.error( 'userAgent: ' + navigator.userAgent );\n\t\n\t        switch( navigator.appName ){\n\t            case \"Microsoft Internet Explorer\":\n\t                if( !!window.attachEvent &&\n\t                    !!window.ActiveXObject ) {\n\t\n\t                    $.Browser.vendor = $.BROWSERS.IE;\n\t                    $.Browser.version = parseFloat(\n\t                        ua.substring(\n\t                            ua.indexOf( \"MSIE\" ) + 5,\n\t                            ua.indexOf( \";\", ua.indexOf( \"MSIE\" ) ) )\n\t                        );\n\t                }\n\t                break;\n\t            case \"Netscape\":\n\t                if (window.addEventListener) {\n\t                    if ( ua.indexOf( \"Firefox\" ) >= 0 ) {\n\t                        $.Browser.vendor = $.BROWSERS.FIREFOX;\n\t                        $.Browser.version = parseFloat(\n\t                            ua.substring( ua.indexOf( \"Firefox\" ) + 8 )\n\t                        );\n\t                    } else if ( ua.indexOf( \"Safari\" ) >= 0 ) {\n\t                        $.Browser.vendor = ua.indexOf( \"Chrome\" ) >= 0 ?\n\t                            $.BROWSERS.CHROME :\n\t                            $.BROWSERS.SAFARI;\n\t                        $.Browser.version = parseFloat(\n\t                            ua.substring(\n\t                                ua.substring( 0, ua.indexOf( \"Safari\" ) ).lastIndexOf( \"/\" ) + 1,\n\t                                ua.indexOf( \"Safari\" )\n\t                            )\n\t                        );\n\t                    } else {\n\t                        regex = new RegExp( \"Trident/.*rv:([0-9]{1,}[.0-9]{0,})\");\n\t                        if ( regex.exec( ua ) !== null ) {\n\t                            $.Browser.vendor = $.BROWSERS.IE;\n\t                            $.Browser.version = parseFloat( RegExp.$1 );\n\t                        }\n\t                    }\n\t                }\n\t                break;\n\t            case \"Opera\":\n\t                $.Browser.vendor = $.BROWSERS.OPERA;\n\t                $.Browser.version = parseFloat( ver );\n\t                break;\n\t        }\n\t\n\t            // ignore '?' portion of query string\n\t        var query = window.location.search.substring( 1 ),\n\t            parts = query.split('&'),\n\t            part,\n\t            sep,\n\t            i;\n\t\n\t        for ( i = 0; i < parts.length; i++ ) {\n\t            part = parts[ i ];\n\t            sep  = part.indexOf( '=' );\n\t\n\t            if ( sep > 0 ) {\n\t                URLPARAMS[ part.substring( 0, sep ) ] =\n\t                    decodeURIComponent( part.substring( sep + 1 ) );\n\t            }\n\t        }\n\t\n\t        //determine if this browser supports image alpha transparency\n\t        $.Browser.alpha = !(\n\t            (\n\t                $.Browser.vendor == $.BROWSERS.IE &&\n\t                $.Browser.version < 9\n\t            ) || (\n\t                $.Browser.vendor == $.BROWSERS.CHROME &&\n\t                $.Browser.version < 2\n\t            )\n\t        );\n\t\n\t        //determine if this browser supports element.style.opacity\n\t        $.Browser.opacity = !(\n\t            $.Browser.vendor == $.BROWSERS.IE &&\n\t            $.Browser.version < 9\n\t        );\n\t\n\t    })();\n\t\n\t\n\t    //TODO: $.console is often used inside a try/catch block which generally\n\t    //      prevents allowings errors to occur with detection until a debugger\n\t    //      is attached.  Although I've been guilty of the same anti-pattern\n\t    //      I eventually was convinced that errors should naturally propagate in\n\t    //      all but the most special cases.\n\t    /**\n\t     * A convenient alias for console when available, and a simple null\n\t     * function when console is unavailable.\n\t     * @static\n\t     * @private\n\t     */\n\t    var nullfunction = function( msg ){\n\t            //document.location.hash = msg;\n\t        };\n\t\n\t    $.console = window.console || {\n\t        log:    nullfunction,\n\t        debug:  nullfunction,\n\t        info:   nullfunction,\n\t        warn:   nullfunction,\n\t        error:  nullfunction,\n\t        assert: nullfunction\n\t    };\n\t\n\t\n\t    // Adding support for HTML5's requestAnimationFrame as suggested by acdha.\n\t    // Implementation taken from matt synder's post here:\n\t    // http://mattsnider.com/cross-browser-and-legacy-supported-requestframeanimation/\n\t    (function( w ) {\n\t\n\t        // most browsers have an implementation\n\t        var requestAnimationFrame = w.requestAnimationFrame ||\n\t            w.mozRequestAnimationFrame ||\n\t            w.webkitRequestAnimationFrame ||\n\t            w.msRequestAnimationFrame;\n\t\n\t        var cancelAnimationFrame = w.cancelAnimationFrame ||\n\t            w.mozCancelAnimationFrame ||\n\t            w.webkitCancelAnimationFrame ||\n\t            w.msCancelAnimationFrame;\n\t\n\t        // polyfill, when necessary\n\t        if ( requestAnimationFrame && cancelAnimationFrame ) {\n\t            // We can't assign these window methods directly to $ because they\n\t            // expect their \"this\" to be \"window\", so we call them in wrappers.\n\t            $.requestAnimationFrame = function(){\n\t                return requestAnimationFrame.apply( w, arguments );\n\t            };\n\t            $.cancelAnimationFrame = function(){\n\t                return cancelAnimationFrame.apply( w, arguments );\n\t            };\n\t        } else {\n\t            var aAnimQueue = [],\n\t                processing = [],\n\t                iRequestId = 0,\n\t                iIntervalId;\n\t\n\t            // create a mock requestAnimationFrame function\n\t            $.requestAnimationFrame = function( callback ) {\n\t                aAnimQueue.push( [ ++iRequestId, callback ] );\n\t\n\t                if ( !iIntervalId ) {\n\t                    iIntervalId = setInterval( function() {\n\t                        if ( aAnimQueue.length ) {\n\t                            var time = $.now();\n\t                            // Process all of the currently outstanding frame\n\t                            // requests, but none that get added during the\n\t                            // processing.\n\t                            // Swap the arrays so we don't have to create a new\n\t                            // array every frame.\n\t                            var temp = processing;\n\t                            processing = aAnimQueue;\n\t                            aAnimQueue = temp;\n\t                            while ( processing.length ) {\n\t                                processing.shift()[ 1 ]( time );\n\t                            }\n\t                        } else {\n\t                            // don't continue the interval, if unnecessary\n\t                            clearInterval( iIntervalId );\n\t                            iIntervalId = undefined;\n\t                        }\n\t                    }, 1000 / 50);  // estimating support for 50 frames per second\n\t                }\n\t\n\t                return iRequestId;\n\t            };\n\t\n\t            // create a mock cancelAnimationFrame function\n\t            $.cancelAnimationFrame = function( requestId ) {\n\t                // find the request ID and remove it\n\t                var i, j;\n\t                for ( i = 0, j = aAnimQueue.length; i < j; i += 1 ) {\n\t                    if ( aAnimQueue[ i ][ 0 ] === requestId ) {\n\t                        aAnimQueue.splice( i, 1 );\n\t                        return;\n\t                    }\n\t                }\n\t\n\t                // If it's not in the queue, it may be in the set we're currently\n\t                // processing (if cancelAnimationFrame is called from within a\n\t                // requestAnimationFrame callback).\n\t                for ( i = 0, j = processing.length; i < j; i += 1 ) {\n\t                    if ( processing[ i ][ 0 ] === requestId ) {\n\t                        processing.splice( i, 1 );\n\t                        return;\n\t                    }\n\t                }\n\t            };\n\t        }\n\t    })( window );\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     * @function\n\t     * @param {Element} element\n\t     * @param {Boolean} [isFixed]\n\t     * @returns {Element}\n\t     */\n\t    function getOffsetParent( element, isFixed ) {\n\t        if ( isFixed && element != document.body ) {\n\t            return document.body;\n\t        } else {\n\t            return element.offsetParent;\n\t        }\n\t    }\n\t\n\t}(OpenSeadragon));\n\t\n\t\n\t// Universal Module Definition, supports CommonJS, AMD and simple script tag\n\t(function (root, factory) {\n\t    if (true) {\n\t        // expose as amd module\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof module === 'object' && module.exports) {\n\t        // expose as commonjs module\n\t        module.exports = factory();\n\t    } else {\n\t        // expose as window.OpenSeadragon\n\t        root.OpenSeadragon = factory();\n\t    }\n\t}(this, function () {\n\t    return OpenSeadragon;\n\t}));\n\t\n\t/*\n\t * OpenSeadragon - full-screen support functions\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ) {\n\t    /**\n\t     * Determine native full screen support we can get from the browser.\n\t     * @member fullScreenApi\n\t     * @memberof OpenSeadragon\n\t     * @type {object}\n\t     * @property {Boolean} supportsFullScreen Return true if full screen API is supported.\n\t     * @property {Function} isFullScreen Return true if currently in full screen mode.\n\t     * @property {Function} getFullScreenElement Return the element currently in full screen mode.\n\t     * @property {Function} requestFullScreen Make a request to go in full screen mode.\n\t     * @property {Function} exitFullScreen Make a request to exit full screen mode.\n\t     * @property {Function} cancelFullScreen Deprecated, use exitFullScreen instead.\n\t     * @property {String} fullScreenEventName Event fired when the full screen mode change.\n\t     * @property {String} fullScreenErrorEventName Event fired when a request to go\n\t     * in full screen mode failed.\n\t     */\n\t    var fullScreenApi = {\n\t        supportsFullScreen: false,\n\t        isFullScreen: function() { return false; },\n\t        getFullScreenElement: function() { return null; },\n\t        requestFullScreen: function() {},\n\t        exitFullScreen: function() {},\n\t        cancelFullScreen: function() {},\n\t        fullScreenEventName: '',\n\t        fullScreenErrorEventName: ''\n\t    };\n\t\n\t    // check for native support\n\t    if ( document.exitFullscreen ) {\n\t        // W3C standard\n\t        fullScreenApi.supportsFullScreen = true;\n\t        fullScreenApi.getFullScreenElement = function() {\n\t            return document.fullscreenElement;\n\t        };\n\t        fullScreenApi.requestFullScreen = function( element ) {\n\t            return element.requestFullscreen();\n\t        };\n\t        fullScreenApi.exitFullScreen = function() {\n\t            document.exitFullscreen();\n\t        };\n\t        fullScreenApi.fullScreenEventName = \"fullscreenchange\";\n\t        fullScreenApi.fullScreenErrorEventName = \"fullscreenerror\";\n\t    } else if ( document.msExitFullscreen ) {\n\t        // IE 11\n\t        fullScreenApi.supportsFullScreen = true;\n\t        fullScreenApi.getFullScreenElement = function() {\n\t            return document.msFullscreenElement;\n\t        };\n\t        fullScreenApi.requestFullScreen = function( element ) {\n\t            return element.msRequestFullscreen();\n\t        };\n\t        fullScreenApi.exitFullScreen = function() {\n\t            document.msExitFullscreen();\n\t        };\n\t        fullScreenApi.fullScreenEventName = \"MSFullscreenChange\";\n\t        fullScreenApi.fullScreenErrorEventName = \"MSFullscreenError\";\n\t    } else if ( document.webkitExitFullscreen ) {\n\t        // Recent webkit\n\t        fullScreenApi.supportsFullScreen = true;\n\t        fullScreenApi.getFullScreenElement = function() {\n\t            return document.webkitFullscreenElement;\n\t        };\n\t        fullScreenApi.requestFullScreen = function( element ) {\n\t            return element.webkitRequestFullscreen();\n\t        };\n\t        fullScreenApi.exitFullScreen = function() {\n\t            document.webkitExitFullscreen();\n\t        };\n\t        fullScreenApi.fullScreenEventName = \"webkitfullscreenchange\";\n\t        fullScreenApi.fullScreenErrorEventName = \"webkitfullscreenerror\";\n\t    } else if ( document.webkitCancelFullScreen ) {\n\t        // Old webkit\n\t        fullScreenApi.supportsFullScreen = true;\n\t        fullScreenApi.getFullScreenElement = function() {\n\t            return document.webkitCurrentFullScreenElement;\n\t        };\n\t        fullScreenApi.requestFullScreen = function( element ) {\n\t            return element.webkitRequestFullScreen();\n\t        };\n\t        fullScreenApi.exitFullScreen = function() {\n\t            document.webkitCancelFullScreen();\n\t        };\n\t        fullScreenApi.fullScreenEventName = \"webkitfullscreenchange\";\n\t        fullScreenApi.fullScreenErrorEventName = \"webkitfullscreenerror\";\n\t    } else if ( document.mozCancelFullScreen ) {\n\t        // Firefox\n\t        fullScreenApi.supportsFullScreen = true;\n\t        fullScreenApi.getFullScreenElement = function() {\n\t            return document.mozFullScreenElement;\n\t        };\n\t        fullScreenApi.requestFullScreen = function( element ) {\n\t            return element.mozRequestFullScreen();\n\t        };\n\t        fullScreenApi.exitFullScreen = function() {\n\t            document.mozCancelFullScreen();\n\t        };\n\t        fullScreenApi.fullScreenEventName = \"mozfullscreenchange\";\n\t        fullScreenApi.fullScreenErrorEventName = \"mozfullscreenerror\";\n\t    }\n\t    fullScreenApi.isFullScreen = function() {\n\t        return fullScreenApi.getFullScreenElement() !== null;\n\t    };\n\t    fullScreenApi.cancelFullScreen = function() {\n\t        $.console.error(\"cancelFullScreen is deprecated. Use exitFullScreen instead.\");\n\t        fullScreenApi.exitFullScreen();\n\t    };\n\t\n\t    // export api\n\t    $.extend( $, fullScreenApi );\n\t\n\t})( OpenSeadragon );\n\t\n\t/*\n\t * OpenSeadragon - EventSource\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function($){\n\t\n\t/**\n\t * Event handler method signature used by all OpenSeadragon events.\n\t *\n\t * @callback EventHandler\n\t * @memberof OpenSeadragon\n\t * @param {Object} event - See individual events for event-specific properties.\n\t */\n\t\n\t\n\t/**\n\t * @class EventSource\n\t * @classdesc For use by classes which want to support custom, non-browser events.\n\t *\n\t * @memberof OpenSeadragon\n\t */\n\t$.EventSource = function() {\n\t    this.events = {};\n\t};\n\t\n\t/** @lends OpenSeadragon.EventSource.prototype */\n\t$.EventSource.prototype = {\n\t\n\t    /**\n\t     * Add an event handler to be triggered only once (or a given number of times)\n\t     * for a given event.\n\t     * @function\n\t     * @param {String} eventName - Name of event to register.\n\t     * @param {OpenSeadragon.EventHandler} handler - Function to call when event\n\t     * is triggered.\n\t     * @param {Object} [userData=null] - Arbitrary object to be passed unchanged\n\t     * to the handler.\n\t     * @param {Number} [times=1] - The number of times to handle the event\n\t     * before removing it.\n\t     */\n\t    addOnceHandler: function(eventName, handler, userData, times) {\n\t        var self = this;\n\t        times = times || 1;\n\t        var count = 0;\n\t        var onceHandler = function(event) {\n\t            count++;\n\t            if (count === times) {\n\t                self.removeHandler(eventName, onceHandler);\n\t            }\n\t            handler(event);\n\t        };\n\t        this.addHandler(eventName, onceHandler, userData);\n\t    },\n\t\n\t    /**\n\t     * Add an event handler for a given event.\n\t     * @function\n\t     * @param {String} eventName - Name of event to register.\n\t     * @param {OpenSeadragon.EventHandler} handler - Function to call when event is triggered.\n\t     * @param {Object} [userData=null] - Arbitrary object to be passed unchanged to the handler.\n\t     */\n\t    addHandler: function ( eventName, handler, userData ) {\n\t        var events = this.events[ eventName ];\n\t        if ( !events ) {\n\t            this.events[ eventName ] = events = [];\n\t        }\n\t        if ( handler && $.isFunction( handler ) ) {\n\t            events[ events.length ] = { handler: handler, userData: userData || null };\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Remove a specific event handler for a given event.\n\t     * @function\n\t     * @param {String} eventName - Name of event for which the handler is to be removed.\n\t     * @param {OpenSeadragon.EventHandler} handler - Function to be removed.\n\t     */\n\t    removeHandler: function ( eventName, handler ) {\n\t        var events = this.events[ eventName ],\n\t            handlers = [],\n\t            i;\n\t        if ( !events ) {\n\t            return;\n\t        }\n\t        if ( $.isArray( events ) ) {\n\t            for ( i = 0; i < events.length; i++ ) {\n\t                if ( events[i].handler !== handler ) {\n\t                    handlers.push( events[ i ] );\n\t                }\n\t            }\n\t            this.events[ eventName ] = handlers;\n\t        }\n\t    },\n\t\n\t\n\t    /**\n\t     * Remove all event handlers for a given event type. If no type is given all\n\t     * event handlers for every event type are removed.\n\t     * @function\n\t     * @param {String} eventName - Name of event for which all handlers are to be removed.\n\t     */\n\t    removeAllHandlers: function( eventName ) {\n\t        if ( eventName ){\n\t            this.events[ eventName ] = [];\n\t        } else{\n\t            for ( var eventType in this.events ) {\n\t                this.events[ eventType ] = [];\n\t            }\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Get a function which iterates the list of all handlers registered for a given event, calling the handler for each.\n\t     * @function\n\t     * @param {String} eventName - Name of event to get handlers for.\n\t     */\n\t    getHandler: function ( eventName ) {\n\t        var events = this.events[ eventName ];\n\t        if ( !events || !events.length ) {\n\t            return null;\n\t        }\n\t        events = events.length === 1 ?\n\t            [ events[ 0 ] ] :\n\t            Array.apply( null, events );\n\t        return function ( source, args ) {\n\t            var i,\n\t                length = events.length;\n\t            for ( i = 0; i < length; i++ ) {\n\t                if ( events[ i ] ) {\n\t                    args.eventSource = source;\n\t                    args.userData = events[ i ].userData;\n\t                    events[ i ].handler( args );\n\t                }\n\t            }\n\t        };\n\t    },\n\t\n\t    /**\n\t     * Trigger an event, optionally passing additional information.\n\t     * @function\n\t     * @param {String} eventName - Name of event to register.\n\t     * @param {Object} eventArgs - Event-specific data.\n\t     */\n\t    raiseEvent: function( eventName, eventArgs ) {\n\t        //uncomment if you want to get a log of all events\n\t        //$.console.log( eventName );\n\t        var handler = this.getHandler( eventName );\n\t\n\t        if ( handler ) {\n\t            if ( !eventArgs ) {\n\t                eventArgs = {};\n\t            }\n\t\n\t            handler( this, eventArgs );\n\t        }\n\t    }\n\t};\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - MouseTracker\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function ( $ ) {\n\t\n\t    // All MouseTracker instances\n\t    var MOUSETRACKERS  = [];\n\t\n\t    // dictionary from hash to private properties\n\t    var THIS           = {};\n\t\n\t\n\t    /**\n\t     * @class MouseTracker\n\t     * @classdesc Provides simplified handling of common pointer device (mouse, touch, pen, etc.) gestures\n\t     *            and keyboard events on a specified element.\n\t     * @memberof OpenSeadragon\n\t     * @param {Object} options\n\t     *      Allows configurable properties to be entirely specified by passing\n\t     *      an options object to the constructor.  The constructor also supports\n\t     *      the original positional arguments 'element', 'clickTimeThreshold',\n\t     *      and 'clickDistThreshold' in that order.\n\t     * @param {Element|String} options.element\n\t     *      A reference to an element or an element id for which the pointer/key\n\t     *      events will be monitored.\n\t     * @param {Boolean} [options.startDisabled=false]\n\t     *      If true, event tracking on the element will not start until\n\t     *      {@link OpenSeadragon.MouseTracker.setTracking|setTracking} is called.\n\t     * @param {Number} options.clickTimeThreshold\n\t     *      The number of milliseconds within which a pointer down-up event combination\n\t     *      will be treated as a click gesture.\n\t     * @param {Number} options.clickDistThreshold\n\t     *      The maximum distance allowed between a pointer down event and a pointer up event\n\t     *      to be treated as a click gesture.\n\t     * @param {Number} options.dblClickTimeThreshold\n\t     *      The number of milliseconds within which two pointer down-up event combinations\n\t     *      will be treated as a double-click gesture.\n\t     * @param {Number} options.dblClickDistThreshold\n\t     *      The maximum distance allowed between two pointer click events\n\t     *      to be treated as a click gesture.\n\t     * @param {Number} [options.stopDelay=50]\n\t     *      The number of milliseconds without pointer move before the stop\n\t     *      event is fired.\n\t     * @param {OpenSeadragon.EventHandler} [options.enterHandler=null]\n\t     *      An optional handler for pointer enter.\n\t     * @param {OpenSeadragon.EventHandler} [options.exitHandler=null]\n\t     *      An optional handler for pointer exit.\n\t     * @param {OpenSeadragon.EventHandler} [options.pressHandler=null]\n\t     *      An optional handler for pointer press.\n\t     * @param {OpenSeadragon.EventHandler} [options.nonPrimaryPressHandler=null]\n\t     *      An optional handler for pointer non-primary button press.\n\t     * @param {OpenSeadragon.EventHandler} [options.releaseHandler=null]\n\t     *      An optional handler for pointer release.\n\t     * @param {OpenSeadragon.EventHandler} [options.nonPrimaryReleaseHandler=null]\n\t     *      An optional handler for pointer non-primary button release.\n\t     * @param {OpenSeadragon.EventHandler} [options.moveHandler=null]\n\t     *      An optional handler for pointer move.\n\t     * @param {OpenSeadragon.EventHandler} [options.scrollHandler=null]\n\t     *      An optional handler for mouse wheel scroll.\n\t     * @param {OpenSeadragon.EventHandler} [options.clickHandler=null]\n\t     *      An optional handler for pointer click.\n\t     * @param {OpenSeadragon.EventHandler} [options.dblClickHandler=null]\n\t     *      An optional handler for pointer double-click.\n\t     * @param {OpenSeadragon.EventHandler} [options.dragHandler=null]\n\t     *      An optional handler for the drag gesture.\n\t     * @param {OpenSeadragon.EventHandler} [options.dragEndHandler=null]\n\t     *      An optional handler for after a drag gesture.\n\t     * @param {OpenSeadragon.EventHandler} [options.pinchHandler=null]\n\t     *      An optional handler for the pinch gesture.\n\t     * @param {OpenSeadragon.EventHandler} [options.keyDownHandler=null]\n\t     *      An optional handler for keydown.\n\t     * @param {OpenSeadragon.EventHandler} [options.keyUpHandler=null]\n\t     *      An optional handler for keyup.\n\t     * @param {OpenSeadragon.EventHandler} [options.keyHandler=null]\n\t     *      An optional handler for keypress.\n\t     * @param {OpenSeadragon.EventHandler} [options.focusHandler=null]\n\t     *      An optional handler for focus.\n\t     * @param {OpenSeadragon.EventHandler} [options.blurHandler=null]\n\t     *      An optional handler for blur.\n\t     * @param {Object} [options.userData=null]\n\t     *      Arbitrary object to be passed unchanged to any attached handler methods.\n\t     */\n\t    $.MouseTracker = function ( options ) {\n\t\n\t        MOUSETRACKERS.push( this );\n\t\n\t        var args = arguments;\n\t\n\t        if ( !$.isPlainObject( options ) ) {\n\t            options = {\n\t                element:            args[ 0 ],\n\t                clickTimeThreshold: args[ 1 ],\n\t                clickDistThreshold: args[ 2 ]\n\t            };\n\t        }\n\t\n\t        this.hash               = Math.random(); // An unique hash for this tracker.\n\t        /**\n\t         * The element for which pointer events are being monitored.\n\t         * @member {Element} element\n\t         * @memberof OpenSeadragon.MouseTracker#\n\t         */\n\t        this.element            = $.getElement( options.element );\n\t        /**\n\t         * The number of milliseconds within which a pointer down-up event combination\n\t         * will be treated as a click gesture.\n\t         * @member {Number} clickTimeThreshold\n\t         * @memberof OpenSeadragon.MouseTracker#\n\t         */\n\t        this.clickTimeThreshold = options.clickTimeThreshold || $.DEFAULT_SETTINGS.clickTimeThreshold;\n\t        /**\n\t         * The maximum distance allowed between a pointer down event and a pointer up event\n\t         * to be treated as a click gesture.\n\t         * @member {Number} clickDistThreshold\n\t         * @memberof OpenSeadragon.MouseTracker#\n\t         */\n\t        this.clickDistThreshold = options.clickDistThreshold || $.DEFAULT_SETTINGS.clickDistThreshold;\n\t        /**\n\t         * The number of milliseconds within which two pointer down-up event combinations\n\t         * will be treated as a double-click gesture.\n\t         * @member {Number} dblClickTimeThreshold\n\t         * @memberof OpenSeadragon.MouseTracker#\n\t         */\n\t        this.dblClickTimeThreshold = options.dblClickTimeThreshold || $.DEFAULT_SETTINGS.dblClickTimeThreshold;\n\t        /**\n\t         * The maximum distance allowed between two pointer click events\n\t         * to be treated as a click gesture.\n\t         * @member {Number} clickDistThreshold\n\t         * @memberof OpenSeadragon.MouseTracker#\n\t         */\n\t        this.dblClickDistThreshold = options.dblClickDistThreshold || $.DEFAULT_SETTINGS.dblClickDistThreshold;\n\t        /*eslint-disable no-multi-spaces*/\n\t        this.userData              = options.userData          || null;\n\t        this.stopDelay             = options.stopDelay         || 50;\n\t\n\t        this.enterHandler             = options.enterHandler             || null;\n\t        this.exitHandler              = options.exitHandler              || null;\n\t        this.pressHandler             = options.pressHandler             || null;\n\t        this.nonPrimaryPressHandler   = options.nonPrimaryPressHandler   || null;\n\t        this.releaseHandler           = options.releaseHandler           || null;\n\t        this.nonPrimaryReleaseHandler = options.nonPrimaryReleaseHandler || null;\n\t        this.moveHandler              = options.moveHandler              || null;\n\t        this.scrollHandler            = options.scrollHandler            || null;\n\t        this.clickHandler             = options.clickHandler             || null;\n\t        this.dblClickHandler          = options.dblClickHandler          || null;\n\t        this.dragHandler              = options.dragHandler              || null;\n\t        this.dragEndHandler           = options.dragEndHandler           || null;\n\t        this.pinchHandler             = options.pinchHandler             || null;\n\t        this.stopHandler              = options.stopHandler              || null;\n\t        this.keyDownHandler           = options.keyDownHandler           || null;\n\t        this.keyUpHandler             = options.keyUpHandler             || null;\n\t        this.keyHandler               = options.keyHandler               || null;\n\t        this.focusHandler             = options.focusHandler             || null;\n\t        this.blurHandler              = options.blurHandler              || null;\n\t        /*eslint-enable no-multi-spaces*/\n\t\n\t        //Store private properties in a scope sealed hash map\n\t        var _this = this;\n\t\n\t        /**\n\t         * @private\n\t         * @property {Boolean} tracking\n\t         *      Are we currently tracking pointer events for this element.\n\t         */\n\t        THIS[ this.hash ] = {\n\t            click:                 function ( event ) { onClick( _this, event ); },\n\t            dblclick:              function ( event ) { onDblClick( _this, event ); },\n\t            keydown:               function ( event ) { onKeyDown( _this, event ); },\n\t            keyup:                 function ( event ) { onKeyUp( _this, event ); },\n\t            keypress:              function ( event ) { onKeyPress( _this, event ); },\n\t            focus:                 function ( event ) { onFocus( _this, event ); },\n\t            blur:                  function ( event ) { onBlur( _this, event ); },\n\t\n\t            wheel:                 function ( event ) { onWheel( _this, event ); },\n\t            mousewheel:            function ( event ) { onMouseWheel( _this, event ); },\n\t            DOMMouseScroll:        function ( event ) { onMouseWheel( _this, event ); },\n\t            MozMousePixelScroll:   function ( event ) { onMouseWheel( _this, event ); },\n\t\n\t            mouseenter:            function ( event ) { onMouseEnter( _this, event ); }, // Used on IE8 only\n\t            mouseleave:            function ( event ) { onMouseLeave( _this, event ); }, // Used on IE8 only\n\t            mouseover:             function ( event ) { onMouseOver( _this, event ); },\n\t            mouseout:              function ( event ) { onMouseOut( _this, event ); },\n\t            mousedown:             function ( event ) { onMouseDown( _this, event ); },\n\t            mouseup:               function ( event ) { onMouseUp( _this, event ); },\n\t            mouseupcaptured:       function ( event ) { onMouseUpCaptured( _this, event ); },\n\t            mousemove:             function ( event ) { onMouseMove( _this, event ); },\n\t            mousemovecaptured:     function ( event ) { onMouseMoveCaptured( _this, event ); },\n\t\n\t            touchstart:            function ( event ) { onTouchStart( _this, event ); },\n\t            touchend:              function ( event ) { onTouchEnd( _this, event ); },\n\t            touchendcaptured:      function ( event ) { onTouchEndCaptured( _this, event ); },\n\t            touchmove:             function ( event ) { onTouchMove( _this, event ); },\n\t            touchmovecaptured:     function ( event ) { onTouchMoveCaptured( _this, event ); },\n\t            touchcancel:           function ( event ) { onTouchCancel( _this, event ); },\n\t\n\t            gesturestart:          function ( event ) { onGestureStart( _this, event ); },\n\t            gesturechange:         function ( event ) { onGestureChange( _this, event ); },\n\t\n\t            pointerover:           function ( event ) { onPointerOver( _this, event ); },\n\t            MSPointerOver:         function ( event ) { onPointerOver( _this, event ); },\n\t            pointerout:            function ( event ) { onPointerOut( _this, event ); },\n\t            MSPointerOut:          function ( event ) { onPointerOut( _this, event ); },\n\t            pointerdown:           function ( event ) { onPointerDown( _this, event ); },\n\t            MSPointerDown:         function ( event ) { onPointerDown( _this, event ); },\n\t            pointerup:             function ( event ) { onPointerUp( _this, event ); },\n\t            MSPointerUp:           function ( event ) { onPointerUp( _this, event ); },\n\t            pointermove:           function ( event ) { onPointerMove( _this, event ); },\n\t            MSPointerMove:         function ( event ) { onPointerMove( _this, event ); },\n\t            pointercancel:         function ( event ) { onPointerCancel( _this, event ); },\n\t            MSPointerCancel:       function ( event ) { onPointerCancel( _this, event ); },\n\t            pointerupcaptured:     function ( event ) { onPointerUpCaptured( _this, event ); },\n\t            pointermovecaptured:   function ( event ) { onPointerMoveCaptured( _this, event ); },\n\t\n\t            tracking:              false,\n\t\n\t            // Active pointers lists. Array of GesturePointList objects, one for each pointer device type.\n\t            // GesturePointList objects are added each time a pointer is tracked by a new pointer device type (see getActivePointersListByType()).\n\t            // Active pointers are any pointer being tracked for this element which are in the hit-test area\n\t            //     of the element (for hover-capable devices) and/or have contact or a button press initiated in the element.\n\t            activePointersLists:   [],\n\t\n\t            // Tracking for double-click gesture\n\t            lastClickPos:          null,\n\t            dblClickTimeOut:       null,\n\t\n\t            // Tracking for pinch gesture\n\t            pinchGPoints:          [],\n\t            lastPinchDist:         0,\n\t            currentPinchDist:      0,\n\t            lastPinchCenter:       null,\n\t            currentPinchCenter:    null\n\t        };\n\t\n\t        if ( !options.startDisabled ) {\n\t            this.setTracking( true );\n\t        }\n\t    };\n\t\n\t    /** @lends OpenSeadragon.MouseTracker.prototype */\n\t    $.MouseTracker.prototype = {\n\t\n\t        /**\n\t         * Clean up any events or objects created by the tracker.\n\t         * @function\n\t         */\n\t        destroy: function () {\n\t            var i;\n\t\n\t            stopTracking( this );\n\t            this.element = null;\n\t\n\t            for ( i = 0; i < MOUSETRACKERS.length; i++ ) {\n\t                if ( MOUSETRACKERS[ i ] === this ) {\n\t                    MOUSETRACKERS.splice( i, 1 );\n\t                    break;\n\t                }\n\t            }\n\t\n\t            THIS[ this.hash ] = null;\n\t            delete THIS[ this.hash ];\n\t        },\n\t\n\t        /**\n\t         * Are we currently tracking events on this element.\n\t         * @deprecated Just use this.tracking\n\t         * @function\n\t         * @returns {Boolean} Are we currently tracking events on this element.\n\t         */\n\t        isTracking: function () {\n\t            return THIS[ this.hash ].tracking;\n\t        },\n\t\n\t        /**\n\t         * Enable or disable whether or not we are tracking events on this element.\n\t         * @function\n\t         * @param {Boolean} track True to start tracking, false to stop tracking.\n\t         * @returns {OpenSeadragon.MouseTracker} Chainable.\n\t         */\n\t        setTracking: function ( track ) {\n\t            if ( track ) {\n\t                startTracking( this );\n\t            } else {\n\t                stopTracking( this );\n\t            }\n\t            //chain\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * Returns the {@link OpenSeadragon.MouseTracker.GesturePointList|GesturePointList} for all but the given pointer device type.\n\t         * @function\n\t         * @param {String} type - The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n\t         * @returns {Array.<OpenSeadragon.MouseTracker.GesturePointList>}\n\t         */\n\t        getActivePointersListsExceptType: function ( type ) {\n\t            var delegate = THIS[ this.hash ];\n\t            var listArray = [];\n\t\n\t            for (var i = 0; i < delegate.activePointersLists.length; ++i) {\n\t                if (delegate.activePointersLists[i].type !== type) {\n\t                    listArray.push(delegate.activePointersLists[i]);\n\t                }\n\t            }\n\t\n\t            return listArray;\n\t        },\n\t\n\t        /**\n\t         * Returns the {@link OpenSeadragon.MouseTracker.GesturePointList|GesturePointList} for the given pointer device type,\n\t         * creating and caching a new {@link OpenSeadragon.MouseTracker.GesturePointList|GesturePointList} if one doesn't already exist for the type.\n\t         * @function\n\t         * @param {String} type - The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n\t         * @returns {OpenSeadragon.MouseTracker.GesturePointList}\n\t         */\n\t        getActivePointersListByType: function ( type ) {\n\t            var delegate = THIS[ this.hash ],\n\t                i,\n\t                len = delegate.activePointersLists.length,\n\t                list;\n\t\n\t            for ( i = 0; i < len; i++ ) {\n\t                if ( delegate.activePointersLists[ i ].type === type ) {\n\t                    return delegate.activePointersLists[ i ];\n\t                }\n\t            }\n\t\n\t            list = new $.MouseTracker.GesturePointList( type );\n\t            delegate.activePointersLists.push( list );\n\t            return list;\n\t        },\n\t\n\t        /**\n\t         * Returns the total number of pointers currently active on the tracked element.\n\t         * @function\n\t         * @returns {Number}\n\t         */\n\t        getActivePointerCount: function () {\n\t            var delegate = THIS[ this.hash ],\n\t                i,\n\t                len = delegate.activePointersLists.length,\n\t                count = 0;\n\t\n\t            for ( i = 0; i < len; i++ ) {\n\t                count += delegate.activePointersLists[ i ].getLength();\n\t            }\n\t\n\t            return count;\n\t        },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.buttons\n\t         *      Current buttons pressed.\n\t         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t         * @param {Number} event.pointers\n\t         *      Number of pointers (all types) active in the tracked element.\n\t         * @param {Boolean} event.insideElementPressed\n\t         *      True if the left mouse button is currently being pressed and was\n\t         *      initiated inside the tracked element, otherwise false.\n\t         * @param {Boolean} event.buttonDownAny\n\t         *      Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        enterHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.buttons\n\t         *      Current buttons pressed.\n\t         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t         * @param {Number} event.pointers\n\t         *      Number of pointers (all types) active in the tracked element.\n\t         * @param {Boolean} event.insideElementPressed\n\t         *      True if the left mouse button is currently being pressed and was\n\t         *      initiated inside the tracked element, otherwise false.\n\t         * @param {Boolean} event.buttonDownAny\n\t         *      Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        exitHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.buttons\n\t         *      Current buttons pressed.\n\t         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        pressHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.button\n\t         *      Button which caused the event.\n\t         *      -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n\t         * @param {Number} event.buttons\n\t         *      Current buttons pressed.\n\t         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        nonPrimaryPressHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.buttons\n\t         *      Current buttons pressed.\n\t         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t         * @param {Boolean} event.insideElementPressed\n\t         *      True if the left mouse button is currently being pressed and was\n\t         *      initiated inside the tracked element, otherwise false.\n\t         * @param {Boolean} event.insideElementReleased\n\t         *      True if the cursor inside the tracked element when the button was released.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        releaseHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.button\n\t         *      Button which caused the event.\n\t         *      -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n\t         * @param {Number} event.buttons\n\t         *      Current buttons pressed.\n\t         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        nonPrimaryReleaseHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.buttons\n\t         *      Current buttons pressed.\n\t         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        moveHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.scroll\n\t         *      The scroll delta for the event.\n\t         * @param {Boolean} event.shift\n\t         *      True if the shift key was pressed during this event.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead. Touch devices no longer generate scroll event.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        scrollHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Boolean} event.quick\n\t         *      True only if the clickDistThreshold and clickTimeThreshold are both passed. Useful for ignoring drag events.\n\t         * @param {Boolean} event.shift\n\t         *      True if the shift key was pressed during this event.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        clickHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Boolean} event.shift\n\t         *      True if the shift key was pressed during this event.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        dblClickHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.buttons\n\t         *      Current buttons pressed.\n\t         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t         * @param {OpenSeadragon.Point} event.delta\n\t         *      The x,y components of the difference between the current position and the last drag event position.  Useful for ignoring or weighting the events.\n\t         * @param {Number} event.speed\n\t         *     Current computed speed, in pixels per second.\n\t         * @param {Number} event.direction\n\t         *     Current computed direction, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n\t         * @param {Boolean} event.shift\n\t         *      True if the shift key was pressed during this event.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        dragHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.speed\n\t         *     Speed at the end of a drag gesture, in pixels per second.\n\t         * @param {Number} event.direction\n\t         *     Direction at the end of a drag gesture, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n\t         * @param {Boolean} event.shift\n\t         *      True if the shift key was pressed during this event.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        dragEndHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} event.gesturePoints\n\t         *      Gesture points associated with the gesture. Velocity data can be found here.\n\t         * @param {OpenSeadragon.Point} event.lastCenter\n\t         *      The previous center point of the two pinch contact points relative to the tracked element.\n\t         * @param {OpenSeadragon.Point} event.center\n\t         *      The center point of the two pinch contact points relative to the tracked element.\n\t         * @param {Number} event.lastDistance\n\t         *      The previous distance between the two pinch contact points in CSS pixels.\n\t         * @param {Number} event.distance\n\t         *      The distance between the two pinch contact points in CSS pixels.\n\t         * @param {Boolean} event.shift\n\t         *      True if the shift key was pressed during this event.\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        pinchHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.buttons\n\t         *      Current buttons pressed.\n\t         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        stopHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {Number} event.keyCode\n\t         *      The key code that was pressed.\n\t         * @param {Boolean} event.ctrl\n\t         *      True if the ctrl key was pressed during this event.\n\t         * @param {Boolean} event.shift\n\t         *      True if the shift key was pressed during this event.\n\t         * @param {Boolean} event.alt\n\t         *      True if the alt key was pressed during this event.\n\t         * @param {Boolean} event.meta\n\t         *      True if the meta key was pressed during this event.\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        keyDownHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {Number} event.keyCode\n\t         *      The key code that was pressed.\n\t         * @param {Boolean} event.ctrl\n\t         *      True if the ctrl key was pressed during this event.\n\t         * @param {Boolean} event.shift\n\t         *      True if the shift key was pressed during this event.\n\t         * @param {Boolean} event.alt\n\t         *      True if the alt key was pressed during this event.\n\t         * @param {Boolean} event.meta\n\t         *      True if the meta key was pressed during this event.\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        keyUpHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {Number} event.keyCode\n\t         *      The key code that was pressed.\n\t         * @param {Boolean} event.ctrl\n\t         *      True if the ctrl key was pressed during this event.\n\t         * @param {Boolean} event.shift\n\t         *      True if the shift key was pressed during this event.\n\t         * @param {Boolean} event.alt\n\t         *      True if the alt key was pressed during this event.\n\t         * @param {Boolean} event.meta\n\t         *      True if the meta key was pressed during this event.\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        keyHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        focusHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        blurHandler: function () { }\n\t    };\n\t\n\t    /**\n\t     * Resets all active mousetrakers. (Added to patch issue #697 \"Mouse up outside map will cause \"canvas-drag\" event to stick\")\n\t     *\n\t     * @private\n\t     * @member resetAllMouseTrackers\n\t     * @memberof OpenSeadragon.MouseTracker\n\t     */\n\t    $.MouseTracker.resetAllMouseTrackers = function(){\n\t        for(var i = 0; i < MOUSETRACKERS.length; i++){\n\t            if (MOUSETRACKERS[i].isTracking()){\n\t                MOUSETRACKERS[i].setTracking(false);\n\t                MOUSETRACKERS[i].setTracking(true);\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Provides continuous computation of velocity (speed and direction) of active pointers.\n\t     * This is a singleton, used by all MouseTracker instances, as it is unlikely there will ever be more than\n\t     * two active gesture pointers at a time.\n\t     *\n\t     * @private\n\t     * @member gesturePointVelocityTracker\n\t     * @memberof OpenSeadragon.MouseTracker\n\t     */\n\t    $.MouseTracker.gesturePointVelocityTracker = (function () {\n\t        var trackerPoints = [],\n\t            intervalId = 0,\n\t            lastTime = 0;\n\t\n\t        // Generates a unique identifier for a tracked gesture point\n\t        var _generateGuid = function ( tracker, gPoint ) {\n\t            return tracker.hash.toString() + gPoint.type + gPoint.id.toString();\n\t        };\n\t\n\t        // Interval timer callback. Computes velocity for all tracked gesture points.\n\t        var _doTracking = function () {\n\t            var i,\n\t                len = trackerPoints.length,\n\t                trackPoint,\n\t                gPoint,\n\t                now = $.now(),\n\t                elapsedTime,\n\t                distance,\n\t                speed;\n\t\n\t            elapsedTime = now - lastTime;\n\t            lastTime = now;\n\t\n\t            for ( i = 0; i < len; i++ ) {\n\t                trackPoint = trackerPoints[ i ];\n\t                gPoint = trackPoint.gPoint;\n\t                // Math.atan2 gives us just what we need for a velocity vector, as we can simply\n\t                //   use cos()/sin() to extract the x/y velocity components.\n\t                gPoint.direction = Math.atan2( gPoint.currentPos.y - trackPoint.lastPos.y, gPoint.currentPos.x - trackPoint.lastPos.x );\n\t                // speed = distance / elapsed time\n\t                distance = trackPoint.lastPos.distanceTo( gPoint.currentPos );\n\t                trackPoint.lastPos = gPoint.currentPos;\n\t                speed = 1000 * distance / ( elapsedTime + 1 );\n\t                // Simple biased average, favors the most recent speed computation. Smooths out erratic gestures a bit.\n\t                gPoint.speed = 0.75 * speed + 0.25 * gPoint.speed;\n\t            }\n\t        };\n\t\n\t        // Public. Add a gesture point to be tracked\n\t        var addPoint = function ( tracker, gPoint ) {\n\t            var guid = _generateGuid( tracker, gPoint );\n\t\n\t            trackerPoints.push(\n\t                {\n\t                    guid: guid,\n\t                    gPoint: gPoint,\n\t                    lastPos: gPoint.currentPos\n\t                } );\n\t\n\t            // Only fire up the interval timer when there's gesture pointers to track\n\t            if ( trackerPoints.length === 1 ) {\n\t                lastTime = $.now();\n\t                intervalId = window.setInterval( _doTracking, 50 );\n\t            }\n\t        };\n\t\n\t        // Public. Stop tracking a gesture point\n\t        var removePoint = function ( tracker, gPoint ) {\n\t            var guid = _generateGuid( tracker, gPoint ),\n\t                i,\n\t                len = trackerPoints.length;\n\t            for ( i = 0; i < len; i++ ) {\n\t                if ( trackerPoints[ i ].guid === guid ) {\n\t                    trackerPoints.splice( i, 1 );\n\t                    // Only run the interval timer if theres gesture pointers to track\n\t                    len--;\n\t                    if ( len === 0 ) {\n\t                        window.clearInterval( intervalId );\n\t                    }\n\t                    break;\n\t                }\n\t            }\n\t        };\n\t\n\t        return {\n\t            addPoint:    addPoint,\n\t            removePoint: removePoint\n\t        };\n\t    } )();\n\t\n\t\n\t///////////////////////////////////////////////////////////////////////////////\n\t// Pointer event model and feature detection\n\t///////////////////////////////////////////////////////////////////////////////\n\t\n\t    $.MouseTracker.captureElement = document;\n\t\n\t    /**\n\t     * Detect available mouse wheel event name.\n\t     */\n\t    $.MouseTracker.wheelEventName = ( $.Browser.vendor == $.BROWSERS.IE && $.Browser.version > 8 ) ||\n\t                                                ( 'onwheel' in document.createElement( 'div' ) ) ? 'wheel' : // Modern browsers support 'wheel'\n\t                                    document.onmousewheel !== undefined ? 'mousewheel' :                     // Webkit and IE support at least 'mousewheel'\n\t                                    'DOMMouseScroll';                                                        // Assume old Firefox\n\t\n\t    /**\n\t     * Detect legacy mouse capture support.\n\t     */\n\t    $.MouseTracker.supportsMouseCapture = (function () {\n\t        var divElement = document.createElement( 'div' );\n\t        return $.isFunction( divElement.setCapture ) && $.isFunction( divElement.releaseCapture );\n\t    }());\n\t\n\t    /**\n\t     * Detect browser pointer device event model(s) and build appropriate list of events to subscribe to.\n\t     */\n\t    $.MouseTracker.subscribeEvents = [ \"click\", \"dblclick\", \"keydown\", \"keyup\", \"keypress\", \"focus\", \"blur\", $.MouseTracker.wheelEventName ];\n\t\n\t    if( $.MouseTracker.wheelEventName == \"DOMMouseScroll\" ) {\n\t        // Older Firefox\n\t        $.MouseTracker.subscribeEvents.push( \"MozMousePixelScroll\" );\n\t    }\n\t\n\t    // Note: window.navigator.pointerEnable is deprecated on IE 11 and not part of W3C spec.\n\t    if ( window.PointerEvent && ( window.navigator.pointerEnabled || $.Browser.vendor !== $.BROWSERS.IE ) ) {\n\t        // IE11 and other W3C Pointer Event implementations (see http://www.w3.org/TR/pointerevents)\n\t        $.MouseTracker.havePointerEvents = true;\n\t        $.MouseTracker.subscribeEvents.push( \"pointerover\", \"pointerout\", \"pointerdown\", \"pointerup\", \"pointermove\", \"pointercancel\" );\n\t        $.MouseTracker.unprefixedPointerEvents = true;\n\t        if( navigator.maxTouchPoints ) {\n\t            $.MouseTracker.maxTouchPoints = navigator.maxTouchPoints;\n\t        } else {\n\t            $.MouseTracker.maxTouchPoints = 0;\n\t        }\n\t        $.MouseTracker.haveMouseEnter = false;\n\t    } else if ( window.MSPointerEvent && window.navigator.msPointerEnabled ) {\n\t        // IE10\n\t        $.MouseTracker.havePointerEvents = true;\n\t        $.MouseTracker.subscribeEvents.push( \"MSPointerOver\", \"MSPointerOut\", \"MSPointerDown\", \"MSPointerUp\", \"MSPointerMove\", \"MSPointerCancel\" );\n\t        $.MouseTracker.unprefixedPointerEvents = false;\n\t        if( navigator.msMaxTouchPoints ) {\n\t            $.MouseTracker.maxTouchPoints = navigator.msMaxTouchPoints;\n\t        } else {\n\t            $.MouseTracker.maxTouchPoints = 0;\n\t        }\n\t        $.MouseTracker.haveMouseEnter = false;\n\t    } else {\n\t        // Legacy W3C mouse events\n\t        $.MouseTracker.havePointerEvents = false;\n\t        if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n\t            $.MouseTracker.subscribeEvents.push( \"mouseenter\", \"mouseleave\" );\n\t            $.MouseTracker.haveMouseEnter = true;\n\t        } else {\n\t            $.MouseTracker.subscribeEvents.push( \"mouseover\", \"mouseout\" );\n\t            $.MouseTracker.haveMouseEnter = false;\n\t        }\n\t        $.MouseTracker.subscribeEvents.push( \"mousedown\", \"mouseup\", \"mousemove\" );\n\t        if ( 'ontouchstart' in window ) {\n\t            // iOS, Android, and other W3c Touch Event implementations\n\t            //    (see http://www.w3.org/TR/touch-events/)\n\t            //    (see https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html)\n\t            //    (see https://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html)\n\t            $.MouseTracker.subscribeEvents.push( \"touchstart\", \"touchend\", \"touchmove\", \"touchcancel\" );\n\t        }\n\t        if ( 'ongesturestart' in window ) {\n\t            // iOS (see https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html)\n\t            //   Subscribe to these to prevent default gesture handling\n\t            $.MouseTracker.subscribeEvents.push( \"gesturestart\", \"gesturechange\" );\n\t        }\n\t        $.MouseTracker.mousePointerId = \"legacy-mouse\";\n\t        $.MouseTracker.maxTouchPoints = 10;\n\t    }\n\t\n\t\n\t///////////////////////////////////////////////////////////////////////////////\n\t// Classes and typedefs\n\t///////////////////////////////////////////////////////////////////////////////\n\t\n\t    /**\n\t     * Represents a point of contact on the screen made by a mouse cursor, pen, touch, or other pointer device.\n\t     *\n\t     * @typedef {Object} GesturePoint\n\t     * @memberof OpenSeadragon.MouseTracker\n\t     *\n\t     * @property {Number} id\n\t     *     Identifier unique from all other active GesturePoints for a given pointer device.\n\t     * @property {String} type\n\t     *     The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n\t     * @property {Boolean} captured\n\t     *     True if events for the gesture point are captured to the tracked element.\n\t     * @property {Boolean} isPrimary\n\t     *     True if the gesture point is a master pointer amongst the set of active pointers for each pointer type. True for mouse and primary (first) touch/pen pointers.\n\t     * @property {Boolean} insideElementPressed\n\t     *     True if button pressed or contact point initiated inside the screen area of the tracked element.\n\t     * @property {Boolean} insideElement\n\t     *     True if pointer or contact point is currently inside the bounds of the tracked element.\n\t     * @property {Number} speed\n\t     *     Current computed speed, in pixels per second.\n\t     * @property {Number} direction\n\t     *     Current computed direction, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n\t     * @property {OpenSeadragon.Point} contactPos\n\t     *     The initial pointer contact position, relative to the page including any scrolling. Only valid if the pointer has contact (pressed, touch contact, pen contact).\n\t     * @property {Number} contactTime\n\t     *     The initial pointer contact time, in milliseconds. Only valid if the pointer has contact (pressed, touch contact, pen contact).\n\t     * @property {OpenSeadragon.Point} lastPos\n\t     *     The last pointer position, relative to the page including any scrolling.\n\t     * @property {Number} lastTime\n\t     *     The last pointer contact time, in milliseconds.\n\t     * @property {OpenSeadragon.Point} currentPos\n\t     *     The current pointer position, relative to the page including any scrolling.\n\t     * @property {Number} currentTime\n\t     *     The current pointer contact time, in milliseconds.\n\t     */\n\t\n\t\n\t    /**\n\t     * @class GesturePointList\n\t     * @classdesc Provides an abstraction for a set of active {@link OpenSeadragon.MouseTracker.GesturePoint|GesturePoint} objects for a given pointer device type.\n\t     *            Active pointers are any pointer being tracked for this element which are in the hit-test area\n\t     *            of the element (for hover-capable devices) and/or have contact or a button press initiated in the element.\n\t     * @memberof OpenSeadragon.MouseTracker\n\t     * @param {String} type - The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n\t     */\n\t    $.MouseTracker.GesturePointList = function ( type ) {\n\t        this._gPoints = [];\n\t        /**\n\t         * The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n\t         * @member {String} type\n\t         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n\t         */\n\t        this.type = type;\n\t        /**\n\t         * Current buttons pressed for the device.\n\t         * Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t         * @member {Number} buttons\n\t         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n\t         */\n\t        this.buttons = 0;\n\t        /**\n\t         * Current number of contact points (touch points, mouse down, etc.) for the device.\n\t         * @member {Number} contacts\n\t         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n\t         */\n\t        this.contacts = 0;\n\t        /**\n\t         * Current number of clicks for the device. Used for multiple click gesture tracking.\n\t         * @member {Number} clicks\n\t         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n\t         */\n\t        this.clicks = 0;\n\t        /**\n\t         * Current number of captured pointers for the device.\n\t         * @member {Number} captureCount\n\t         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n\t         */\n\t        this.captureCount = 0;\n\t    };\n\t\n\t    /** @lends OpenSeadragon.MouseTracker.GesturePointList.prototype */\n\t    $.MouseTracker.GesturePointList.prototype = {\n\t        /**\n\t         * @function\n\t         * @returns {Number} Number of gesture points in the list.\n\t         */\n\t        getLength: function () {\n\t            return this._gPoints.length;\n\t        },\n\t        /**\n\t         * @function\n\t         * @returns {Array.<OpenSeadragon.MouseTracker.GesturePoint>} The list of gesture points in the list as an array (read-only).\n\t         */\n\t        asArray: function () {\n\t            return this._gPoints;\n\t        },\n\t        /**\n\t         * @function\n\t         * @param {OpenSeadragon.MouseTracker.GesturePoint} gesturePoint - A gesture point to add to the list.\n\t         * @returns {Number} Number of gesture points in the list.\n\t         */\n\t        add: function ( gp ) {\n\t            return this._gPoints.push( gp );\n\t        },\n\t        /**\n\t         * @function\n\t         * @param {Number} id - The id of the gesture point to remove from the list.\n\t         * @returns {Number} Number of gesture points in the list.\n\t         */\n\t        removeById: function ( id ) {\n\t            var i,\n\t                len = this._gPoints.length;\n\t            for ( i = 0; i < len; i++ ) {\n\t                if ( this._gPoints[ i ].id === id ) {\n\t                    this._gPoints.splice( i, 1 );\n\t                    break;\n\t                }\n\t            }\n\t            return this._gPoints.length;\n\t        },\n\t        /**\n\t         * @function\n\t         * @param {Number} index - The index of the gesture point to retrieve from the list.\n\t         * @returns {OpenSeadragon.MouseTracker.GesturePoint|null} The gesture point at the given index, or null if not found.\n\t         */\n\t        getByIndex: function ( index ) {\n\t            if ( index < this._gPoints.length) {\n\t                return this._gPoints[ index ];\n\t            }\n\t\n\t            return null;\n\t        },\n\t        /**\n\t         * @function\n\t         * @param {Number} id - The id of the gesture point to retrieve from the list.\n\t         * @returns {OpenSeadragon.MouseTracker.GesturePoint|null} The gesture point with the given id, or null if not found.\n\t         */\n\t        getById: function ( id ) {\n\t            var i,\n\t                len = this._gPoints.length;\n\t            for ( i = 0; i < len; i++ ) {\n\t                if ( this._gPoints[ i ].id === id ) {\n\t                    return this._gPoints[ i ];\n\t                }\n\t            }\n\t            return null;\n\t        },\n\t        /**\n\t         * @function\n\t         * @returns {OpenSeadragon.MouseTracker.GesturePoint|null} The primary gesture point in the list, or null if not found.\n\t         */\n\t        getPrimary: function ( id ) {\n\t            var i,\n\t                len = this._gPoints.length;\n\t            for ( i = 0; i < len; i++ ) {\n\t                if ( this._gPoints[ i ].isPrimary ) {\n\t                    return this._gPoints[ i ];\n\t                }\n\t            }\n\t            return null;\n\t        },\n\t\n\t        /**\n\t         * Increment this pointer's contact count.\n\t         * It will evaluate whether this pointer type is allowed to have multiple contacts.\n\t         * @function\n\t         */\n\t        addContact: function() {\n\t            ++this.contacts;\n\t\n\t            if (this.contacts > 1 && (this.type === \"mouse\" || this.type === \"pen\")) {\n\t                this.contacts = 1;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Decrement this pointer's contact count.\n\t         * It will make sure the count does not go below 0.\n\t         * @function\n\t         */\n\t        removeContact: function() {\n\t            --this.contacts;\n\t\n\t            if (this.contacts < 0) {\n\t                this.contacts = 0;\n\t            }\n\t        }\n\t    };\n\t\n\t\n\t///////////////////////////////////////////////////////////////////////////////\n\t// Utility functions\n\t///////////////////////////////////////////////////////////////////////////////\n\t\n\t    /**\n\t     * Removes all tracked pointers.\n\t     * @private\n\t     * @inner\n\t     */\n\t    function clearTrackedPointers( tracker ) {\n\t        var delegate = THIS[ tracker.hash ],\n\t            i,\n\t            pointerListCount = delegate.activePointersLists.length;\n\t\n\t        for ( i = 0; i < pointerListCount; i++ ) {\n\t            if ( delegate.activePointersLists[ i ].captureCount > 0 ) {\n\t                $.removeEvent(\n\t                    $.MouseTracker.captureElement,\n\t                    'mousemove',\n\t                    delegate.mousemovecaptured,\n\t                    true\n\t                );\n\t                $.removeEvent(\n\t                    $.MouseTracker.captureElement,\n\t                    'mouseup',\n\t                    delegate.mouseupcaptured,\n\t                    true\n\t                );\n\t                $.removeEvent(\n\t                    $.MouseTracker.captureElement,\n\t                    $.MouseTracker.unprefixedPointerEvents ? 'pointermove' : 'MSPointerMove',\n\t                    delegate.pointermovecaptured,\n\t                    true\n\t                );\n\t                $.removeEvent(\n\t                    $.MouseTracker.captureElement,\n\t                    $.MouseTracker.unprefixedPointerEvents ? 'pointerup' : 'MSPointerUp',\n\t                    delegate.pointerupcaptured,\n\t                    true\n\t                );\n\t                $.removeEvent(\n\t                    $.MouseTracker.captureElement,\n\t                    'touchmove',\n\t                    delegate.touchmovecaptured,\n\t                    true\n\t                );\n\t                $.removeEvent(\n\t                    $.MouseTracker.captureElement,\n\t                    'touchend',\n\t                    delegate.touchendcaptured,\n\t                    true\n\t                );\n\t\n\t                delegate.activePointersLists[ i ].captureCount = 0;\n\t            }\n\t        }\n\t\n\t        for ( i = 0; i < pointerListCount; i++ ) {\n\t            delegate.activePointersLists.pop();\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Starts tracking pointer events on the tracked element.\n\t     * @private\n\t     * @inner\n\t     */\n\t    function startTracking( tracker ) {\n\t        var delegate = THIS[ tracker.hash ],\n\t            event,\n\t            i;\n\t\n\t        if ( !delegate.tracking ) {\n\t            for ( i = 0; i < $.MouseTracker.subscribeEvents.length; i++ ) {\n\t                event = $.MouseTracker.subscribeEvents[ i ];\n\t                $.addEvent(\n\t                    tracker.element,\n\t                    event,\n\t                    delegate[ event ],\n\t                    false\n\t                );\n\t            }\n\t\n\t            clearTrackedPointers( tracker );\n\t\n\t            delegate.tracking = true;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Stops tracking pointer events on the tracked element.\n\t     * @private\n\t     * @inner\n\t     */\n\t    function stopTracking( tracker ) {\n\t        var delegate = THIS[ tracker.hash ],\n\t            event,\n\t            i;\n\t\n\t        if ( delegate.tracking ) {\n\t            for ( i = 0; i < $.MouseTracker.subscribeEvents.length; i++ ) {\n\t                event = $.MouseTracker.subscribeEvents[ i ];\n\t                $.removeEvent(\n\t                    tracker.element,\n\t                    event,\n\t                    delegate[ event ],\n\t                    false\n\t                );\n\t            }\n\t\n\t            clearTrackedPointers( tracker );\n\t\n\t            delegate.tracking = false;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function getCaptureEventParams( tracker, pointerType ) {\n\t        var delegate = THIS[ tracker.hash ];\n\t\n\t        if ( pointerType === 'pointerevent' ) {\n\t            return {\n\t                upName: $.MouseTracker.unprefixedPointerEvents ? 'pointerup' : 'MSPointerUp',\n\t                upHandler: delegate.pointerupcaptured,\n\t                moveName: $.MouseTracker.unprefixedPointerEvents ? 'pointermove' : 'MSPointerMove',\n\t                moveHandler: delegate.pointermovecaptured\n\t            };\n\t        } else if ( pointerType === 'mouse' ) {\n\t            return {\n\t                upName: 'mouseup',\n\t                upHandler: delegate.mouseupcaptured,\n\t                moveName: 'mousemove',\n\t                moveHandler: delegate.mousemovecaptured\n\t            };\n\t        } else if ( pointerType === 'touch' ) {\n\t            return {\n\t                upName: 'touchend',\n\t                upHandler: delegate.touchendcaptured,\n\t                moveName: 'touchmove',\n\t                moveHandler: delegate.touchmovecaptured\n\t            };\n\t        } else {\n\t            throw new Error( \"MouseTracker.getCaptureEventParams: Unknown pointer type.\" );\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Begin capturing pointer events to the tracked element.\n\t     * @private\n\t     * @inner\n\t     */\n\t    function capturePointer( tracker, pointerType, pointerCount ) {\n\t        var pointsList = tracker.getActivePointersListByType( pointerType ),\n\t            eventParams;\n\t\n\t        pointsList.captureCount += (pointerCount || 1);\n\t\n\t        if ( pointsList.captureCount === 1 ) {\n\t            if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n\t                tracker.element.setCapture( true );\n\t            } else {\n\t                eventParams = getCaptureEventParams( tracker, $.MouseTracker.havePointerEvents ? 'pointerevent' : pointerType );\n\t                // We emulate mouse capture by hanging listeners on the document object.\n\t                //    (Note we listen on the capture phase so the captured handlers will get called first)\n\t                // eslint-disable-next-line no-use-before-define\n\t                if (isInIframe && canAccessEvents(window.top)) {\n\t                    $.addEvent(\n\t                        window.top,\n\t                        eventParams.upName,\n\t                        eventParams.upHandler,\n\t                        true\n\t                    );\n\t                }\n\t                $.addEvent(\n\t                    $.MouseTracker.captureElement,\n\t                    eventParams.upName,\n\t                    eventParams.upHandler,\n\t                    true\n\t                );\n\t                $.addEvent(\n\t                    $.MouseTracker.captureElement,\n\t                    eventParams.moveName,\n\t                    eventParams.moveHandler,\n\t                    true\n\t                );\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * Stop capturing pointer events to the tracked element.\n\t     * @private\n\t     * @inner\n\t     */\n\t    function releasePointer( tracker, pointerType, pointerCount ) {\n\t        var pointsList = tracker.getActivePointersListByType( pointerType ),\n\t            eventParams;\n\t\n\t        pointsList.captureCount -= (pointerCount || 1);\n\t\n\t        if ( pointsList.captureCount === 0 ) {\n\t            if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n\t                tracker.element.releaseCapture();\n\t            } else {\n\t                eventParams = getCaptureEventParams( tracker, $.MouseTracker.havePointerEvents ? 'pointerevent' : pointerType );\n\t                // We emulate mouse capture by hanging listeners on the document object.\n\t                //    (Note we listen on the capture phase so the captured handlers will get called first)\n\t                // eslint-disable-next-line no-use-before-define\n\t                if (isInIframe && canAccessEvents(window.top)) {\n\t                    $.removeEvent(\n\t                        window.top,\n\t                        eventParams.upName,\n\t                        eventParams.upHandler,\n\t                        true\n\t                    );\n\t                }\n\t                $.removeEvent(\n\t                    $.MouseTracker.captureElement,\n\t                    eventParams.moveName,\n\t                    eventParams.moveHandler,\n\t                    true\n\t                );\n\t                $.removeEvent(\n\t                    $.MouseTracker.captureElement,\n\t                    eventParams.upName,\n\t                    eventParams.upHandler,\n\t                    true\n\t                );\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * Gets a W3C Pointer Events model compatible pointer type string from a DOM pointer event.\n\t     * IE10 used a long integer value, but the W3C specification (and IE11+) use a string \"mouse\", \"touch\", \"pen\", etc.\n\t     * @private\n\t     * @inner\n\t     */\n\t    function getPointerType( event ) {\n\t        var pointerTypeStr;\n\t        if ( $.MouseTracker.unprefixedPointerEvents ) {\n\t            pointerTypeStr = event.pointerType;\n\t        } else {\n\t            // IE10\n\t            //  MSPOINTER_TYPE_TOUCH: 0x00000002\n\t            //  MSPOINTER_TYPE_PEN:   0x00000003\n\t            //  MSPOINTER_TYPE_MOUSE: 0x00000004\n\t            switch( event.pointerType )\n\t            {\n\t                case 0x00000002:\n\t                    pointerTypeStr = 'touch';\n\t                    break;\n\t                case 0x00000003:\n\t                    pointerTypeStr = 'pen';\n\t                    break;\n\t                case 0x00000004:\n\t                    pointerTypeStr = 'mouse';\n\t                    break;\n\t                default:\n\t                    pointerTypeStr = '';\n\t            }\n\t        }\n\t        return pointerTypeStr;\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function getMouseAbsolute( event ) {\n\t        return $.getMousePosition( event );\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function getMouseRelative( event, element ) {\n\t        return getPointRelativeToAbsolute( getMouseAbsolute( event ), element );\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function getPointRelativeToAbsolute( point, element ) {\n\t        var offset = $.getElementOffset( element );\n\t        return point.minus( offset );\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function getCenterPoint( point1, point2 ) {\n\t        return new $.Point( ( point1.x + point2.x ) / 2, ( point1.y + point2.y ) / 2 );\n\t    }\n\t\n\t\n\t///////////////////////////////////////////////////////////////////////////////\n\t// Device-specific DOM event handlers\n\t///////////////////////////////////////////////////////////////////////////////\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onClick( tracker, event ) {\n\t        if ( tracker.clickHandler ) {\n\t            $.cancelEvent( event );\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onDblClick( tracker, event ) {\n\t        if ( tracker.dblClickHandler ) {\n\t            $.cancelEvent( event );\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onKeyDown( tracker, event ) {\n\t        //$.console.log( \"keydown %s %s %s %s %s\", event.keyCode, event.charCode, event.ctrlKey, event.shiftKey, event.altKey );\n\t        var propagate;\n\t        if ( tracker.keyDownHandler ) {\n\t            event = $.getEvent( event );\n\t            propagate = tracker.keyDownHandler(\n\t                {\n\t                    eventSource:          tracker,\n\t                    keyCode:              event.keyCode ? event.keyCode : event.charCode,\n\t                    ctrl:                 event.ctrlKey,\n\t                    shift:                event.shiftKey,\n\t                    alt:                  event.altKey,\n\t                    meta:                 event.metaKey,\n\t                    originalEvent:        event,\n\t                    preventDefaultAction: false,\n\t                    userData:             tracker.userData\n\t                }\n\t            );\n\t            if ( !propagate ) {\n\t                $.cancelEvent( event );\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onKeyUp( tracker, event ) {\n\t        //$.console.log( \"keyup %s %s %s %s %s\", event.keyCode, event.charCode, event.ctrlKey, event.shiftKey, event.altKey );\n\t        var propagate;\n\t        if ( tracker.keyUpHandler ) {\n\t            event = $.getEvent( event );\n\t            propagate = tracker.keyUpHandler(\n\t                {\n\t                    eventSource:          tracker,\n\t                    keyCode:              event.keyCode ? event.keyCode : event.charCode,\n\t                    ctrl:                 event.ctrlKey,\n\t                    shift:                event.shiftKey,\n\t                    alt:                  event.altKey,\n\t                    meta:                 event.metaKey,\n\t                    originalEvent:        event,\n\t                    preventDefaultAction: false,\n\t                    userData:             tracker.userData\n\t                }\n\t            );\n\t            if ( !propagate ) {\n\t                $.cancelEvent( event );\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onKeyPress( tracker, event ) {\n\t        //$.console.log( \"keypress %s %s %s %s %s\", event.keyCode, event.charCode, event.ctrlKey, event.shiftKey, event.altKey );\n\t        var propagate;\n\t        if ( tracker.keyHandler ) {\n\t            event = $.getEvent( event );\n\t            propagate = tracker.keyHandler(\n\t                {\n\t                    eventSource:          tracker,\n\t                    keyCode:              event.keyCode ? event.keyCode : event.charCode,\n\t                    ctrl:                 event.ctrlKey,\n\t                    shift:                event.shiftKey,\n\t                    alt:                  event.altKey,\n\t                    meta:                 event.metaKey,\n\t                    originalEvent:        event,\n\t                    preventDefaultAction: false,\n\t                    userData:             tracker.userData\n\t                }\n\t            );\n\t            if ( !propagate ) {\n\t                $.cancelEvent( event );\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onFocus( tracker, event ) {\n\t        //console.log( \"focus %s\", event );\n\t        var propagate;\n\t        if ( tracker.focusHandler ) {\n\t            event = $.getEvent( event );\n\t            propagate = tracker.focusHandler(\n\t                {\n\t                    eventSource:          tracker,\n\t                    originalEvent:        event,\n\t                    preventDefaultAction: false,\n\t                    userData:             tracker.userData\n\t                }\n\t            );\n\t            if ( propagate === false ) {\n\t                $.cancelEvent( event );\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onBlur( tracker, event ) {\n\t        //console.log( \"blur %s\", event );\n\t        var propagate;\n\t        if ( tracker.blurHandler ) {\n\t            event = $.getEvent( event );\n\t            propagate = tracker.blurHandler(\n\t                {\n\t                    eventSource:          tracker,\n\t                    originalEvent:        event,\n\t                    preventDefaultAction: false,\n\t                    userData:             tracker.userData\n\t                }\n\t            );\n\t            if ( propagate === false ) {\n\t                $.cancelEvent( event );\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * Handler for 'wheel' events\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onWheel( tracker, event ) {\n\t        handleWheelEvent( tracker, event, event );\n\t    }\n\t\n\t\n\t    /**\n\t     * Handler for 'mousewheel', 'DOMMouseScroll', and 'MozMousePixelScroll' events\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onMouseWheel( tracker, event ) {\n\t        event = $.getEvent( event );\n\t\n\t        // Simulate a 'wheel' event\n\t        var simulatedEvent = {\n\t            target:     event.target || event.srcElement,\n\t            type:       \"wheel\",\n\t            shiftKey:   event.shiftKey || false,\n\t            clientX:    event.clientX,\n\t            clientY:    event.clientY,\n\t            pageX:      event.pageX ? event.pageX : event.clientX,\n\t            pageY:      event.pageY ? event.pageY : event.clientY,\n\t            deltaMode:  event.type == \"MozMousePixelScroll\" ? 0 : 1, // 0=pixel, 1=line, 2=page\n\t            deltaX:     0,\n\t            deltaZ:     0\n\t        };\n\t\n\t        // Calculate deltaY\n\t        if ( $.MouseTracker.wheelEventName == \"mousewheel\" ) {\n\t            simulatedEvent.deltaY = -event.wheelDelta / $.DEFAULT_SETTINGS.pixelsPerWheelLine;\n\t        } else {\n\t            simulatedEvent.deltaY = event.detail;\n\t        }\n\t\n\t        handleWheelEvent( tracker, simulatedEvent, event );\n\t    }\n\t\n\t\n\t    /**\n\t     * Handles 'wheel' events.\n\t     * The event may be simulated by the legacy mouse wheel event handler (onMouseWheel()).\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function handleWheelEvent( tracker, event, originalEvent ) {\n\t        var nDelta = 0,\n\t            propagate;\n\t\n\t        // The nDelta variable is gated to provide smooth z-index scrolling\n\t        //   since the mouse wheel allows for substantial deltas meant for rapid\n\t        //   y-index scrolling.\n\t        // event.deltaMode: 0=pixel, 1=line, 2=page\n\t        // TODO: Deltas in pixel mode should be accumulated then a scroll value computed after $.DEFAULT_SETTINGS.pixelsPerWheelLine threshold reached\n\t        nDelta = event.deltaY < 0 ? 1 : -1;\n\t\n\t        if ( tracker.scrollHandler ) {\n\t            propagate = tracker.scrollHandler(\n\t                {\n\t                    eventSource:          tracker,\n\t                    pointerType:          'mouse',\n\t                    position:             getMouseRelative( event, tracker.element ),\n\t                    scroll:               nDelta,\n\t                    shift:                event.shiftKey,\n\t                    isTouchEvent:         false,\n\t                    originalEvent:        originalEvent,\n\t                    preventDefaultAction: false,\n\t                    userData:             tracker.userData\n\t                }\n\t            );\n\t            if ( propagate === false ) {\n\t                $.cancelEvent( originalEvent );\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function isParentChild( parent, child )\n\t    {\n\t       if ( parent === child ) {\n\t           return false;\n\t       }\n\t       while ( child && child !== parent ) {\n\t           child = child.parentNode;\n\t       }\n\t       return child === parent;\n\t    }\n\t\n\t\n\t    /**\n\t     * Only used on IE 8\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onMouseEnter( tracker, event ) {\n\t        event = $.getEvent( event );\n\t\n\t        handleMouseEnter( tracker, event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onMouseOver( tracker, event ) {\n\t        event = $.getEvent( event );\n\t\n\t        if ( event.currentTarget === event.relatedTarget || isParentChild( event.currentTarget, event.relatedTarget ) ) {\n\t            return;\n\t        }\n\t\n\t        handleMouseEnter( tracker, event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function handleMouseEnter( tracker, event ) {\n\t        var gPoint = {\n\t            id: $.MouseTracker.mousePointerId,\n\t            type: 'mouse',\n\t            isPrimary: true,\n\t            currentPos: getMouseAbsolute( event ),\n\t            currentTime: $.now()\n\t        };\n\t\n\t        updatePointersEnter( tracker, event, [ gPoint ] );\n\t    }\n\t\n\t\n\t    /**\n\t     * Only used on IE 8\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onMouseLeave( tracker, event ) {\n\t        event = $.getEvent( event );\n\t\n\t        handleMouseExit( tracker, event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onMouseOut( tracker, event ) {\n\t        event = $.getEvent( event );\n\t\n\t        if ( event.currentTarget === event.relatedTarget || isParentChild( event.currentTarget, event.relatedTarget ) ) {\n\t            return;\n\t        }\n\t\n\t        handleMouseExit( tracker, event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function handleMouseExit( tracker, event ) {\n\t        var gPoint = {\n\t            id: $.MouseTracker.mousePointerId,\n\t            type: 'mouse',\n\t            isPrimary: true,\n\t            currentPos: getMouseAbsolute( event ),\n\t            currentTime: $.now()\n\t        };\n\t\n\t        updatePointersExit( tracker, event, [ gPoint ] );\n\t    }\n\t\n\t\n\t    /**\n\t     * Returns a W3C DOM level 3 standard button value given an event.button property:\n\t     *   -1 == none, 0 == primary/left, 1 == middle, 2 == secondary/right, 3 == X1/back, 4 == X2/forward, 5 == eraser (pen)\n\t     * @private\n\t     * @inner\n\t     */\n\t    function getStandardizedButton( button ) {\n\t        if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n\t            // On IE 8, 0 == none, 1 == left, 2 == right, 3 == left and right, 4 == middle, 5 == left and middle, 6 == right and middle, 7 == all three\n\t            // TODO: Support chorded (multiple) button presses on IE 8?\n\t            if ( button === 1 ) {\n\t                return 0;\n\t            } else if ( button === 2 ) {\n\t                return 2;\n\t            } else if ( button === 4 ) {\n\t                return 1;\n\t            } else {\n\t                return -1;\n\t            }\n\t        } else {\n\t            return button;\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onMouseDown( tracker, event ) {\n\t        var gPoint;\n\t\n\t        event = $.getEvent( event );\n\t\n\t        gPoint = {\n\t            id: $.MouseTracker.mousePointerId,\n\t            type: 'mouse',\n\t            isPrimary: true,\n\t            currentPos: getMouseAbsolute( event ),\n\t            currentTime: $.now()\n\t        };\n\t\n\t        if ( updatePointersDown( tracker, event, [ gPoint ], getStandardizedButton( event.button ) ) ) {\n\t            $.stopEvent( event );\n\t            capturePointer( tracker, 'mouse' );\n\t        }\n\t\n\t        if ( tracker.clickHandler || tracker.dblClickHandler || tracker.pressHandler || tracker.dragHandler || tracker.dragEndHandler ) {\n\t            $.cancelEvent( event );\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onMouseUp( tracker, event ) {\n\t        handleMouseUp( tracker, event );\n\t    }\n\t\n\t    /**\n\t     * This handler is attached to the window object (on the capture phase) to emulate mouse capture.\n\t     * onMouseUp is still attached to the tracked element, so stop propagation to avoid processing twice.\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onMouseUpCaptured( tracker, event ) {\n\t        handleMouseUp( tracker, event );\n\t        $.stopEvent( event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function handleMouseUp( tracker, event ) {\n\t        var gPoint;\n\t\n\t        event = $.getEvent( event );\n\t\n\t        gPoint = {\n\t            id: $.MouseTracker.mousePointerId,\n\t            type: 'mouse',\n\t            isPrimary: true,\n\t            currentPos: getMouseAbsolute( event ),\n\t            currentTime: $.now()\n\t        };\n\t\n\t        if ( updatePointersUp( tracker, event, [ gPoint ], getStandardizedButton( event.button ) ) ) {\n\t            releasePointer( tracker, 'mouse' );\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onMouseMove( tracker, event ) {\n\t        handleMouseMove( tracker, event );\n\t   }\n\t\n\t\n\t    /**\n\t     * This handler is attached to the window object (on the capture phase) to emulate mouse capture.\n\t     * onMouseMove is still attached to the tracked element, so stop propagation to avoid processing twice.\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onMouseMoveCaptured( tracker, event ) {\n\t        handleMouseMove( tracker, event );\n\t        $.stopEvent( event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function handleMouseMove( tracker, event ) {\n\t        var gPoint;\n\t\n\t        event = $.getEvent( event );\n\t\n\t        gPoint = {\n\t            id: $.MouseTracker.mousePointerId,\n\t            type: 'mouse',\n\t            isPrimary: true,\n\t            currentPos: getMouseAbsolute( event ),\n\t            currentTime: $.now()\n\t        };\n\t\n\t        updatePointersMove( tracker, event, [ gPoint ] );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function abortContacts( tracker, event, pointsList ) {\n\t        var i,\n\t            gPointCount = pointsList.getLength(),\n\t            abortGPoints = [];\n\t\n\t        // Check contact count for hoverable pointer types before aborting\n\t        if (pointsList.type === 'touch' || pointsList.contacts > 0) {\n\t            for ( i = 0; i < gPointCount; i++ ) {\n\t                abortGPoints.push( pointsList.getByIndex( i ) );\n\t            }\n\t\n\t            if ( abortGPoints.length > 0 ) {\n\t                // simulate touchend/mouseup\n\t                updatePointersUp( tracker, event, abortGPoints, 0 ); // 0 means primary button press/release or touch contact\n\t                // release pointer capture\n\t                pointsList.captureCount = 1;\n\t                releasePointer( tracker, pointsList.type );\n\t                // simulate touchleave/mouseout\n\t                updatePointersExit( tracker, event, abortGPoints );\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onTouchStart( tracker, event ) {\n\t        var time,\n\t            i,\n\t            j,\n\t            touchCount = event.changedTouches.length,\n\t            gPoints = [],\n\t            parentGPoints,\n\t            pointsList = tracker.getActivePointersListByType( 'touch' );\n\t\n\t        time = $.now();\n\t\n\t        if ( pointsList.getLength() > event.touches.length - touchCount ) {\n\t            $.console.warn('Tracked touch contact count doesn\\'t match event.touches.length. Removing all tracked touch pointers.');\n\t            abortContacts( tracker, event, pointsList );\n\t        }\n\t\n\t        for ( i = 0; i < touchCount; i++ ) {\n\t            gPoints.push( {\n\t                id: event.changedTouches[ i ].identifier,\n\t                type: 'touch',\n\t                // isPrimary not set - let the updatePointers functions determine it\n\t                currentPos: getMouseAbsolute( event.changedTouches[ i ] ),\n\t                currentTime: time\n\t            } );\n\t        }\n\t\n\t        // simulate touchenter on our tracked element\n\t        updatePointersEnter( tracker, event, gPoints );\n\t\n\t        // simulate touchenter on our tracked element's tracked ancestor elements\n\t        for ( i = 0; i < MOUSETRACKERS.length; i++ ) {\n\t            if ( MOUSETRACKERS[ i ] !== tracker && MOUSETRACKERS[ i ].isTracking() && isParentChild( MOUSETRACKERS[ i ].element, tracker.element ) ) {\n\t                parentGPoints = [];\n\t                for ( j = 0; j < touchCount; j++ ) {\n\t                    parentGPoints.push( {\n\t                        id: event.changedTouches[ j ].identifier,\n\t                        type: 'touch',\n\t                        // isPrimary not set - let the updatePointers functions determine it\n\t                        currentPos: getMouseAbsolute( event.changedTouches[ j ] ),\n\t                        currentTime: time\n\t                    } );\n\t                }\n\t                updatePointersEnter( MOUSETRACKERS[ i ], event, parentGPoints );\n\t            }\n\t        }\n\t\n\t        if ( updatePointersDown( tracker, event, gPoints, 0 ) ) { // 0 means primary button press/release or touch contact\n\t            $.stopEvent( event );\n\t            capturePointer( tracker, 'touch', touchCount );\n\t        }\n\t\n\t        $.cancelEvent( event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onTouchEnd( tracker, event ) {\n\t        handleTouchEnd( tracker, event );\n\t    }\n\t\n\t\n\t    /**\n\t     * This handler is attached to the window object (on the capture phase) to emulate pointer capture.\n\t     * onTouchEnd is still attached to the tracked element, so stop propagation to avoid processing twice.\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onTouchEndCaptured( tracker, event ) {\n\t        handleTouchEnd( tracker, event );\n\t        $.stopEvent( event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function handleTouchEnd( tracker, event ) {\n\t        var time,\n\t            i,\n\t            j,\n\t            touchCount = event.changedTouches.length,\n\t            gPoints = [],\n\t            parentGPoints;\n\t\n\t        time = $.now();\n\t\n\t        for ( i = 0; i < touchCount; i++ ) {\n\t            gPoints.push( {\n\t                id: event.changedTouches[ i ].identifier,\n\t                type: 'touch',\n\t                // isPrimary not set - let the updatePointers functions determine it\n\t                currentPos: getMouseAbsolute( event.changedTouches[ i ] ),\n\t                currentTime: time\n\t            } );\n\t        }\n\t\n\t        if ( updatePointersUp( tracker, event, gPoints, 0 ) ) {\n\t            releasePointer( tracker, 'touch', touchCount );\n\t        }\n\t\n\t        // simulate touchleave on our tracked element\n\t        updatePointersExit( tracker, event, gPoints );\n\t\n\t        // simulate touchleave on our tracked element's tracked ancestor elements\n\t        for ( i = 0; i < MOUSETRACKERS.length; i++ ) {\n\t            if ( MOUSETRACKERS[ i ] !== tracker && MOUSETRACKERS[ i ].isTracking() && isParentChild( MOUSETRACKERS[ i ].element, tracker.element ) ) {\n\t                parentGPoints = [];\n\t                for ( j = 0; j < touchCount; j++ ) {\n\t                    parentGPoints.push( {\n\t                        id: event.changedTouches[ j ].identifier,\n\t                        type: 'touch',\n\t                        // isPrimary not set - let the updatePointers functions determine it\n\t                        currentPos: getMouseAbsolute( event.changedTouches[ j ] ),\n\t                        currentTime: time\n\t                    } );\n\t                }\n\t                updatePointersExit( MOUSETRACKERS[ i ], event, parentGPoints );\n\t            }\n\t        }\n\t\n\t        $.cancelEvent( event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onTouchMove( tracker, event ) {\n\t        handleTouchMove( tracker, event );\n\t    }\n\t\n\t\n\t    /**\n\t     * This handler is attached to the window object (on the capture phase) to emulate pointer capture.\n\t     * onTouchMove is still attached to the tracked element, so stop propagation to avoid processing twice.\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onTouchMoveCaptured( tracker, event ) {\n\t        handleTouchMove( tracker, event );\n\t        $.stopEvent( event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function handleTouchMove( tracker, event ) {\n\t        var i,\n\t            touchCount = event.changedTouches.length,\n\t            gPoints = [];\n\t\n\t        for ( i = 0; i < touchCount; i++ ) {\n\t            gPoints.push( {\n\t                id: event.changedTouches[ i ].identifier,\n\t                type: 'touch',\n\t                // isPrimary not set - let the updatePointers functions determine it\n\t                currentPos: getMouseAbsolute( event.changedTouches[ i ] ),\n\t                currentTime: $.now()\n\t            } );\n\t        }\n\t\n\t        updatePointersMove( tracker, event, gPoints );\n\t\n\t        $.cancelEvent( event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onTouchCancel( tracker, event ) {\n\t        var pointsList = tracker.getActivePointersListByType('touch');\n\t\n\t        abortContacts( tracker, event, pointsList );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onGestureStart( tracker, event ) {\n\t        event.stopPropagation();\n\t        event.preventDefault();\n\t        return false;\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onGestureChange( tracker, event ) {\n\t        event.stopPropagation();\n\t        event.preventDefault();\n\t        return false;\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onPointerOver( tracker, event ) {\n\t        var gPoint;\n\t\n\t        if ( event.currentTarget === event.relatedTarget || isParentChild( event.currentTarget, event.relatedTarget ) ) {\n\t            return;\n\t        }\n\t\n\t        gPoint = {\n\t            id: event.pointerId,\n\t            type: getPointerType( event ),\n\t            isPrimary: event.isPrimary,\n\t            currentPos: getMouseAbsolute( event ),\n\t            currentTime: $.now()\n\t        };\n\t\n\t        updatePointersEnter( tracker, event, [ gPoint ] );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onPointerOut( tracker, event ) {\n\t        var gPoint;\n\t\n\t        if ( event.currentTarget === event.relatedTarget || isParentChild( event.currentTarget, event.relatedTarget ) ) {\n\t            return;\n\t        }\n\t\n\t        gPoint = {\n\t            id: event.pointerId,\n\t            type: getPointerType( event ),\n\t            isPrimary: event.isPrimary,\n\t            currentPos: getMouseAbsolute( event ),\n\t            currentTime: $.now()\n\t        };\n\t\n\t        updatePointersExit( tracker, event, [ gPoint ] );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onPointerDown( tracker, event ) {\n\t        var gPoint;\n\t\n\t        gPoint = {\n\t            id: event.pointerId,\n\t            type: getPointerType( event ),\n\t            isPrimary: event.isPrimary,\n\t            currentPos: getMouseAbsolute( event ),\n\t            currentTime: $.now()\n\t        };\n\t\n\t        if ( updatePointersDown( tracker, event, [ gPoint ], event.button ) ) {\n\t            $.stopEvent( event );\n\t            capturePointer( tracker, gPoint.type );\n\t        }\n\t\n\t        if ( tracker.clickHandler || tracker.dblClickHandler || tracker.pressHandler || tracker.dragHandler || tracker.dragEndHandler || tracker.pinchHandler ) {\n\t            $.cancelEvent( event );\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onPointerUp( tracker, event ) {\n\t        handlePointerUp( tracker, event );\n\t    }\n\t\n\t\n\t    /**\n\t     * This handler is attached to the window object (on the capture phase) to emulate mouse capture.\n\t     * onPointerUp is still attached to the tracked element, so stop propagation to avoid processing twice.\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onPointerUpCaptured( tracker, event ) {\n\t        var pointsList = tracker.getActivePointersListByType( getPointerType( event ) );\n\t        if ( pointsList.getById( event.pointerId ) ) {\n\t            handlePointerUp( tracker, event );\n\t        }\n\t        $.stopEvent( event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function handlePointerUp( tracker, event ) {\n\t        var gPoint;\n\t\n\t        gPoint = {\n\t            id: event.pointerId,\n\t            type: getPointerType( event ),\n\t            isPrimary: event.isPrimary,\n\t            currentPos: getMouseAbsolute( event ),\n\t            currentTime: $.now()\n\t        };\n\t\n\t        if ( updatePointersUp( tracker, event, [ gPoint ], event.button ) ) {\n\t            releasePointer( tracker, gPoint.type );\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onPointerMove( tracker, event ) {\n\t        handlePointerMove( tracker, event );\n\t    }\n\t\n\t\n\t    /**\n\t     * This handler is attached to the window object (on the capture phase) to emulate mouse capture.\n\t     * onPointerMove is still attached to the tracked element, so stop propagation to avoid processing twice.\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onPointerMoveCaptured( tracker, event ) {\n\t        var pointsList = tracker.getActivePointersListByType( getPointerType( event ) );\n\t        if ( pointsList.getById( event.pointerId ) ) {\n\t            handlePointerMove( tracker, event );\n\t        }\n\t        $.stopEvent( event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function handlePointerMove( tracker, event ) {\n\t        // Pointer changed coordinates, button state, pressure, tilt, or contact geometry (e.g. width and height)\n\t        var gPoint;\n\t\n\t        gPoint = {\n\t            id: event.pointerId,\n\t            type: getPointerType( event ),\n\t            isPrimary: event.isPrimary,\n\t            currentPos: getMouseAbsolute( event ),\n\t            currentTime: $.now()\n\t        };\n\t\n\t        updatePointersMove( tracker, event, [ gPoint ] );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onPointerCancel( tracker, event ) {\n\t        var gPoint;\n\t\n\t        gPoint = {\n\t            id: event.pointerId,\n\t            type: getPointerType( event )\n\t        };\n\t\n\t        updatePointersCancel( tracker, event, [ gPoint ] );\n\t    }\n\t\n\t\n\t///////////////////////////////////////////////////////////////////////////////\n\t// Device-agnostic DOM event handlers\n\t///////////////////////////////////////////////////////////////////////////////\n\t\n\t    /**\n\t     * @function\n\t     * @private\n\t     * @inner\n\t     * @param {OpenSeadragon.MouseTracker.GesturePointList} pointsList\n\t     *     The GesturePointList to track the pointer in.\n\t     * @param {OpenSeadragon.MouseTracker.GesturePoint} gPoint\n\t     *      Gesture point to track.\n\t     * @returns {Number} Number of gesture points in pointsList.\n\t     */\n\t    function startTrackingPointer( pointsList, gPoint ) {\n\t\n\t        // If isPrimary is not known for the pointer then set it according to our rules:\n\t        //    true if the first pointer in the gesture, otherwise false\n\t        if ( !gPoint.hasOwnProperty( 'isPrimary' ) ) {\n\t            if ( pointsList.getLength() === 0 ) {\n\t                gPoint.isPrimary = true;\n\t            } else {\n\t                gPoint.isPrimary = false;\n\t            }\n\t        }\n\t        gPoint.speed = 0;\n\t        gPoint.direction = 0;\n\t        gPoint.contactPos = gPoint.currentPos;\n\t        gPoint.contactTime = gPoint.currentTime;\n\t        gPoint.lastPos = gPoint.currentPos;\n\t        gPoint.lastTime = gPoint.currentTime;\n\t\n\t        return pointsList.add( gPoint );\n\t    }\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @private\n\t     * @inner\n\t     * @param {OpenSeadragon.MouseTracker.GesturePointList} pointsList\n\t     *     The GesturePointList to stop tracking the pointer on.\n\t     * @param {OpenSeadragon.MouseTracker.GesturePoint} gPoint\n\t     *      Gesture point to stop tracking.\n\t     * @returns {Number} Number of gesture points in pointsList.\n\t     */\n\t    function stopTrackingPointer( pointsList, gPoint ) {\n\t        var listLength,\n\t            primaryPoint;\n\t\n\t        if ( pointsList.getById( gPoint.id ) ) {\n\t            listLength = pointsList.removeById( gPoint.id );\n\t\n\t            // If isPrimary is not known for the pointer and we just removed the primary pointer from the list then we need to set another pointer as primary\n\t            if ( !gPoint.hasOwnProperty( 'isPrimary' ) ) {\n\t                primaryPoint = pointsList.getPrimary();\n\t                if ( !primaryPoint ) {\n\t                    primaryPoint = pointsList.getByIndex( 0 );\n\t                    if ( primaryPoint ) {\n\t                        primaryPoint.isPrimary = true;\n\t                    }\n\t                }\n\t            }\n\t        } else {\n\t            listLength = pointsList.getLength();\n\t        }\n\t\n\t        return listLength;\n\t    }\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @private\n\t     * @inner\n\t     * @param {OpenSeadragon.MouseTracker} tracker\n\t     *     A reference to the MouseTracker instance.\n\t     * @param {Object} event\n\t     *     A reference to the originating DOM event.\n\t     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n\t     *      Gesture points associated with the event.\n\t     */\n\t    function updatePointersEnter( tracker, event, gPoints ) {\n\t        var pointsList = tracker.getActivePointersListByType( gPoints[ 0 ].type ),\n\t            i,\n\t            gPointCount = gPoints.length,\n\t            curGPoint,\n\t            updateGPoint,\n\t            propagate;\n\t\n\t        for ( i = 0; i < gPointCount; i++ ) {\n\t            curGPoint = gPoints[ i ];\n\t            updateGPoint = pointsList.getById( curGPoint.id );\n\t\n\t            if ( updateGPoint ) {\n\t                // Already tracking the pointer...update it\n\t                updateGPoint.insideElement = true;\n\t                updateGPoint.lastPos = updateGPoint.currentPos;\n\t                updateGPoint.lastTime = updateGPoint.currentTime;\n\t                updateGPoint.currentPos = curGPoint.currentPos;\n\t                updateGPoint.currentTime = curGPoint.currentTime;\n\t\n\t                curGPoint = updateGPoint;\n\t            } else {\n\t                // Initialize for tracking and add to the tracking list\n\t                curGPoint.captured = false;\n\t                curGPoint.insideElementPressed = false;\n\t                curGPoint.insideElement = true;\n\t                startTrackingPointer( pointsList, curGPoint );\n\t            }\n\t\n\t            // Enter\n\t            if ( tracker.enterHandler ) {\n\t                propagate = tracker.enterHandler(\n\t                    {\n\t                        eventSource:          tracker,\n\t                        pointerType:          curGPoint.type,\n\t                        position:             getPointRelativeToAbsolute( curGPoint.currentPos, tracker.element ),\n\t                        buttons:              pointsList.buttons,\n\t                        pointers:             tracker.getActivePointerCount(),\n\t                        insideElementPressed: curGPoint.insideElementPressed,\n\t                        buttonDownAny:        pointsList.buttons !== 0,\n\t                        isTouchEvent:         curGPoint.type === 'touch',\n\t                        originalEvent:        event,\n\t                        preventDefaultAction: false,\n\t                        userData:             tracker.userData\n\t                    }\n\t                );\n\t                if ( propagate === false ) {\n\t                    $.cancelEvent( event );\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @private\n\t     * @inner\n\t     * @param {OpenSeadragon.MouseTracker} tracker\n\t     *     A reference to the MouseTracker instance.\n\t     * @param {Object} event\n\t     *     A reference to the originating DOM event.\n\t     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n\t     *      Gesture points associated with the event.\n\t     */\n\t    function updatePointersExit( tracker, event, gPoints ) {\n\t        var pointsList = tracker.getActivePointersListByType(gPoints[0].type),\n\t            i,\n\t            gPointCount = gPoints.length,\n\t            curGPoint,\n\t            updateGPoint,\n\t            propagate;\n\t\n\t        for ( i = 0; i < gPointCount; i++ ) {\n\t            curGPoint = gPoints[ i ];\n\t            updateGPoint = pointsList.getById( curGPoint.id );\n\t\n\t            if ( updateGPoint ) {\n\t                // Already tracking the pointer. If captured then update it, else stop tracking it\n\t                if ( updateGPoint.captured ) {\n\t                    updateGPoint.insideElement = false;\n\t                    updateGPoint.lastPos = updateGPoint.currentPos;\n\t                    updateGPoint.lastTime = updateGPoint.currentTime;\n\t                    updateGPoint.currentPos = curGPoint.currentPos;\n\t                    updateGPoint.currentTime = curGPoint.currentTime;\n\t                } else {\n\t                    stopTrackingPointer( pointsList, updateGPoint );\n\t                }\n\t\n\t                curGPoint = updateGPoint;\n\t            }\n\t\n\t            // Exit\n\t            if ( tracker.exitHandler ) {\n\t                propagate = tracker.exitHandler(\n\t                    {\n\t                        eventSource:          tracker,\n\t                        pointerType:          curGPoint.type,\n\t                        position:             getPointRelativeToAbsolute( curGPoint.currentPos, tracker.element ),\n\t                        buttons:              pointsList.buttons,\n\t                        pointers:             tracker.getActivePointerCount(),\n\t                        insideElementPressed: updateGPoint ? updateGPoint.insideElementPressed : false,\n\t                        buttonDownAny:        pointsList.buttons !== 0,\n\t                        isTouchEvent:         curGPoint.type === 'touch',\n\t                        originalEvent:        event,\n\t                        preventDefaultAction: false,\n\t                        userData:             tracker.userData\n\t                    }\n\t                );\n\t\n\t                if ( propagate === false ) {\n\t                    $.cancelEvent( event );\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @private\n\t     * @inner\n\t     * @param {OpenSeadragon.MouseTracker} tracker\n\t     *     A reference to the MouseTracker instance.\n\t     * @param {Object} event\n\t     *     A reference to the originating DOM event.\n\t     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n\t     *      Gesture points associated with the event.\n\t     * @param {Number} buttonChanged\n\t     *      The button involved in the event: -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n\t     *      Note on chorded button presses (a button pressed when another button is already pressed): In the W3C Pointer Events model,\n\t     *      only one pointerdown/pointerup event combo is fired. Chorded button state changes instead fire pointermove events.\n\t     *\n\t     * @returns {Boolean} True if pointers should be captured to the tracked element, otherwise false.\n\t     */\n\t    function updatePointersDown( tracker, event, gPoints, buttonChanged ) {\n\t        var delegate = THIS[ tracker.hash ],\n\t            propagate,\n\t            pointsList = tracker.getActivePointersListByType( gPoints[ 0 ].type ),\n\t            i,\n\t            gPointCount = gPoints.length,\n\t            curGPoint,\n\t            updateGPoint;\n\t\n\t        if ( typeof event.buttons !== 'undefined' ) {\n\t            pointsList.buttons = event.buttons;\n\t        } else {\n\t            if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n\t                if ( buttonChanged === 0 ) {\n\t                    // Primary\n\t                    pointsList.buttons += 1;\n\t                } else if ( buttonChanged === 1 ) {\n\t                    // Aux\n\t                    pointsList.buttons += 4;\n\t                } else if ( buttonChanged === 2 ) {\n\t                    // Secondary\n\t                    pointsList.buttons += 2;\n\t                } else if ( buttonChanged === 3 ) {\n\t                    // X1 (Back)\n\t                    pointsList.buttons += 8;\n\t                } else if ( buttonChanged === 4 ) {\n\t                    // X2 (Forward)\n\t                    pointsList.buttons += 16;\n\t                } else if ( buttonChanged === 5 ) {\n\t                    // Pen Eraser\n\t                    pointsList.buttons += 32;\n\t                }\n\t            } else {\n\t                if ( buttonChanged === 0 ) {\n\t                    // Primary\n\t                    pointsList.buttons |= 1;\n\t                } else if ( buttonChanged === 1 ) {\n\t                    // Aux\n\t                    pointsList.buttons |= 4;\n\t                } else if ( buttonChanged === 2 ) {\n\t                    // Secondary\n\t                    pointsList.buttons |= 2;\n\t                } else if ( buttonChanged === 3 ) {\n\t                    // X1 (Back)\n\t                    pointsList.buttons |= 8;\n\t                } else if ( buttonChanged === 4 ) {\n\t                    // X2 (Forward)\n\t                    pointsList.buttons |= 16;\n\t                } else if ( buttonChanged === 5 ) {\n\t                    // Pen Eraser\n\t                    pointsList.buttons |= 32;\n\t                }\n\t            }\n\t        }\n\t\n\t        // Some pointers may steal control from another pointer without firing the appropriate release events\n\t        // e.g. Touching a screen while click-dragging with certain mice.\n\t        var otherPointsLists = tracker.getActivePointersListsExceptType(gPoints[ 0 ].type);\n\t        for (i = 0; i < otherPointsLists.length; i++) {\n\t            //If another pointer has contact, simulate the release\n\t            abortContacts(tracker, event, otherPointsLists[i]); // No-op if no active pointer\n\t        }\n\t\n\t        // Only capture and track primary button, pen, and touch contacts\n\t        if ( buttonChanged !== 0 ) {\n\t            // Aux Press\n\t            if ( tracker.nonPrimaryPressHandler ) {\n\t                propagate = tracker.nonPrimaryPressHandler(\n\t                    {\n\t                        eventSource:          tracker,\n\t                        pointerType:          gPoints[ 0 ].type,\n\t                        position:             getPointRelativeToAbsolute( gPoints[ 0 ].currentPos, tracker.element ),\n\t                        button:               buttonChanged,\n\t                        buttons:              pointsList.buttons,\n\t                        isTouchEvent:         gPoints[ 0 ].type === 'touch',\n\t                        originalEvent:        event,\n\t                        preventDefaultAction: false,\n\t                        userData:             tracker.userData\n\t                    }\n\t                );\n\t                if ( propagate === false ) {\n\t                    $.cancelEvent( event );\n\t                }\n\t            }\n\t\n\t            return false;\n\t        }\n\t\n\t        for ( i = 0; i < gPointCount; i++ ) {\n\t            curGPoint = gPoints[ i ];\n\t            updateGPoint = pointsList.getById( curGPoint.id );\n\t\n\t            if ( updateGPoint ) {\n\t                // Already tracking the pointer...update it\n\t                updateGPoint.captured = true;\n\t                updateGPoint.insideElementPressed = true;\n\t                updateGPoint.insideElement = true;\n\t                updateGPoint.contactPos = curGPoint.currentPos;\n\t                updateGPoint.contactTime = curGPoint.currentTime;\n\t                updateGPoint.lastPos = updateGPoint.currentPos;\n\t                updateGPoint.lastTime = updateGPoint.currentTime;\n\t                updateGPoint.currentPos = curGPoint.currentPos;\n\t                updateGPoint.currentTime = curGPoint.currentTime;\n\t\n\t                curGPoint = updateGPoint;\n\t            } else {\n\t                // Initialize for tracking and add to the tracking list (no pointerover or pointermove event occurred before this)\n\t                curGPoint.captured = true;\n\t                curGPoint.insideElementPressed = true;\n\t                curGPoint.insideElement = true;\n\t                startTrackingPointer( pointsList, curGPoint );\n\t            }\n\t\n\t            pointsList.addContact();\n\t            //$.console.log('contacts++ ', pointsList.contacts);\n\t\n\t            if ( tracker.dragHandler || tracker.dragEndHandler || tracker.pinchHandler ) {\n\t                $.MouseTracker.gesturePointVelocityTracker.addPoint( tracker, curGPoint );\n\t            }\n\t\n\t            if ( pointsList.contacts === 1 ) {\n\t                // Press\n\t                if ( tracker.pressHandler ) {\n\t                    propagate = tracker.pressHandler(\n\t                        {\n\t                            eventSource:          tracker,\n\t                            pointerType:          curGPoint.type,\n\t                            position:             getPointRelativeToAbsolute( curGPoint.contactPos, tracker.element ),\n\t                            buttons:              pointsList.buttons,\n\t                            isTouchEvent:         curGPoint.type === 'touch',\n\t                            originalEvent:        event,\n\t                            preventDefaultAction: false,\n\t                            userData:             tracker.userData\n\t                        }\n\t                    );\n\t                    if ( propagate === false ) {\n\t                        $.cancelEvent( event );\n\t                    }\n\t                }\n\t            } else if ( pointsList.contacts === 2 ) {\n\t                if ( tracker.pinchHandler && curGPoint.type === 'touch' ) {\n\t                    // Initialize for pinch\n\t                    delegate.pinchGPoints = pointsList.asArray();\n\t                    delegate.lastPinchDist = delegate.currentPinchDist = delegate.pinchGPoints[ 0 ].currentPos.distanceTo( delegate.pinchGPoints[ 1 ].currentPos );\n\t                    delegate.lastPinchCenter = delegate.currentPinchCenter = getCenterPoint( delegate.pinchGPoints[ 0 ].currentPos, delegate.pinchGPoints[ 1 ].currentPos );\n\t                }\n\t            }\n\t        }\n\t\n\t        return true;\n\t    }\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @private\n\t     * @inner\n\t     * @param {OpenSeadragon.MouseTracker} tracker\n\t     *     A reference to the MouseTracker instance.\n\t     * @param {Object} event\n\t     *     A reference to the originating DOM event.\n\t     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n\t     *      Gesture points associated with the event.\n\t     * @param {Number} buttonChanged\n\t     *      The button involved in the event: -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n\t     *      Note on chorded button presses (a button pressed when another button is already pressed): In the W3C Pointer Events model,\n\t     *      only one pointerdown/pointerup event combo is fired. Chorded button state changes instead fire pointermove events.\n\t     *\n\t     * @returns {Boolean} True if pointer capture should be released from the tracked element, otherwise false.\n\t     */\n\t    function updatePointersUp( tracker, event, gPoints, buttonChanged ) {\n\t        var delegate = THIS[ tracker.hash ],\n\t            pointsList = tracker.getActivePointersListByType( gPoints[ 0 ].type ),\n\t            propagate,\n\t            releasePoint,\n\t            releaseTime,\n\t            i,\n\t            gPointCount = gPoints.length,\n\t            curGPoint,\n\t            updateGPoint,\n\t            releaseCapture = false,\n\t            wasCaptured = false,\n\t            quick;\n\t\n\t        if ( typeof event.buttons !== 'undefined' ) {\n\t            pointsList.buttons = event.buttons;\n\t        } else {\n\t            if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n\t                if ( buttonChanged === 0 ) {\n\t                    // Primary\n\t                    pointsList.buttons -= 1;\n\t                } else if ( buttonChanged === 1 ) {\n\t                    // Aux\n\t                    pointsList.buttons -= 4;\n\t                } else if ( buttonChanged === 2 ) {\n\t                    // Secondary\n\t                    pointsList.buttons -= 2;\n\t                } else if ( buttonChanged === 3 ) {\n\t                    // X1 (Back)\n\t                    pointsList.buttons -= 8;\n\t                } else if ( buttonChanged === 4 ) {\n\t                    // X2 (Forward)\n\t                    pointsList.buttons -= 16;\n\t                } else if ( buttonChanged === 5 ) {\n\t                    // Pen Eraser\n\t                    pointsList.buttons -= 32;\n\t                }\n\t            } else {\n\t                if ( buttonChanged === 0 ) {\n\t                    // Primary\n\t                    pointsList.buttons ^= ~1;\n\t                } else if ( buttonChanged === 1 ) {\n\t                    // Aux\n\t                    pointsList.buttons ^= ~4;\n\t                } else if ( buttonChanged === 2 ) {\n\t                    // Secondary\n\t                    pointsList.buttons ^= ~2;\n\t                } else if ( buttonChanged === 3 ) {\n\t                    // X1 (Back)\n\t                    pointsList.buttons ^= ~8;\n\t                } else if ( buttonChanged === 4 ) {\n\t                    // X2 (Forward)\n\t                    pointsList.buttons ^= ~16;\n\t                } else if ( buttonChanged === 5 ) {\n\t                    // Pen Eraser\n\t                    pointsList.buttons ^= ~32;\n\t                }\n\t            }\n\t        }\n\t\n\t        // Only capture and track primary button, pen, and touch contacts\n\t        if ( buttonChanged !== 0 ) {\n\t            // Aux Release\n\t            if ( tracker.nonPrimaryReleaseHandler ) {\n\t                propagate = tracker.nonPrimaryReleaseHandler(\n\t                    {\n\t                        eventSource:           tracker,\n\t                        pointerType:           gPoints[ 0 ].type,\n\t                        position:              getPointRelativeToAbsolute(gPoints[0].currentPos, tracker.element),\n\t                        button:                buttonChanged,\n\t                        buttons:               pointsList.buttons,\n\t                        isTouchEvent:          gPoints[ 0 ].type === 'touch',\n\t                        originalEvent:         event,\n\t                        preventDefaultAction:  false,\n\t                        userData:              tracker.userData\n\t                    }\n\t                );\n\t                if ( propagate === false ) {\n\t                    $.cancelEvent( event );\n\t                }\n\t            }\n\t\n\t            // A primary mouse button may have been released while the non-primary button was down\n\t            var otherPointsList = tracker.getActivePointersListByType(\"mouse\");\n\t            // Stop tracking the mouse; see https://github.com/openseadragon/openseadragon/pull/1223\n\t            abortContacts(tracker, event, otherPointsList); // No-op if no active pointer\n\t\n\t            return false;\n\t        }\n\t\n\t        for ( i = 0; i < gPointCount; i++ ) {\n\t            curGPoint = gPoints[ i ];\n\t            updateGPoint = pointsList.getById( curGPoint.id );\n\t\n\t            if ( updateGPoint ) {\n\t                // Update the pointer, stop tracking it if not still in this element\n\t                if ( updateGPoint.captured ) {\n\t                    updateGPoint.captured = false;\n\t                    releaseCapture = true;\n\t                    wasCaptured = true;\n\t                }\n\t                updateGPoint.lastPos = updateGPoint.currentPos;\n\t                updateGPoint.lastTime = updateGPoint.currentTime;\n\t                updateGPoint.currentPos = curGPoint.currentPos;\n\t                updateGPoint.currentTime = curGPoint.currentTime;\n\t                if ( !updateGPoint.insideElement ) {\n\t                    stopTrackingPointer( pointsList, updateGPoint );\n\t                }\n\t\n\t                releasePoint = updateGPoint.currentPos;\n\t                releaseTime = updateGPoint.currentTime;\n\t\n\t                if ( wasCaptured ) {\n\t                    // Pointer was activated in our element but could have been removed in any element since events are captured to our element\n\t\n\t                    pointsList.removeContact();\n\t                    //$.console.log('contacts-- ', pointsList.contacts);\n\t\n\t                    if ( tracker.dragHandler || tracker.dragEndHandler || tracker.pinchHandler ) {\n\t                        $.MouseTracker.gesturePointVelocityTracker.removePoint( tracker, updateGPoint );\n\t                    }\n\t\n\t                    if ( pointsList.contacts === 0 ) {\n\t\n\t                        // Release (pressed in our element)\n\t                        if ( tracker.releaseHandler ) {\n\t                            propagate = tracker.releaseHandler(\n\t                                {\n\t                                    eventSource:           tracker,\n\t                                    pointerType:           updateGPoint.type,\n\t                                    position:              getPointRelativeToAbsolute( releasePoint, tracker.element ),\n\t                                    buttons:               pointsList.buttons,\n\t                                    insideElementPressed:  updateGPoint.insideElementPressed,\n\t                                    insideElementReleased: updateGPoint.insideElement,\n\t                                    isTouchEvent:          updateGPoint.type === 'touch',\n\t                                    originalEvent:         event,\n\t                                    preventDefaultAction:  false,\n\t                                    userData:              tracker.userData\n\t                                }\n\t                            );\n\t                            if ( propagate === false ) {\n\t                                $.cancelEvent( event );\n\t                            }\n\t                        }\n\t\n\t                        // Drag End\n\t                        if ( tracker.dragEndHandler && !updateGPoint.currentPos.equals( updateGPoint.contactPos ) ) {\n\t                            propagate = tracker.dragEndHandler(\n\t                                {\n\t                                    eventSource:          tracker,\n\t                                    pointerType:          updateGPoint.type,\n\t                                    position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n\t                                    speed:                updateGPoint.speed,\n\t                                    direction:            updateGPoint.direction,\n\t                                    shift:                event.shiftKey,\n\t                                    isTouchEvent:         updateGPoint.type === 'touch',\n\t                                    originalEvent:        event,\n\t                                    preventDefaultAction: false,\n\t                                    userData:             tracker.userData\n\t                                }\n\t                            );\n\t                            if ( propagate === false ) {\n\t                                $.cancelEvent( event );\n\t                            }\n\t                        }\n\t\n\t                        // Click / Double-Click\n\t                        if ( ( tracker.clickHandler || tracker.dblClickHandler ) && updateGPoint.insideElement ) {\n\t                            quick = releaseTime - updateGPoint.contactTime <= tracker.clickTimeThreshold &&\n\t                                            updateGPoint.contactPos.distanceTo( releasePoint ) <= tracker.clickDistThreshold;\n\t\n\t                            // Click\n\t                            if ( tracker.clickHandler ) {\n\t                                propagate = tracker.clickHandler(\n\t                                    {\n\t                                        eventSource:          tracker,\n\t                                        pointerType:          updateGPoint.type,\n\t                                        position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n\t                                        quick:                quick,\n\t                                        shift:                event.shiftKey,\n\t                                        isTouchEvent:         updateGPoint.type === 'touch',\n\t                                        originalEvent:        event,\n\t                                        preventDefaultAction: false,\n\t                                        userData:             tracker.userData\n\t                                    }\n\t                                );\n\t                                if ( propagate === false ) {\n\t                                    $.cancelEvent( event );\n\t                                }\n\t                            }\n\t\n\t                            // Double-Click\n\t                            if ( tracker.dblClickHandler && quick ) {\n\t                                pointsList.clicks++;\n\t                                if ( pointsList.clicks === 1 ) {\n\t                                    delegate.lastClickPos = releasePoint;\n\t                                    /*jshint loopfunc:true*/\n\t                                    delegate.dblClickTimeOut = setTimeout( function() {\n\t                                        pointsList.clicks = 0;\n\t                                    }, tracker.dblClickTimeThreshold );\n\t                                    /*jshint loopfunc:false*/\n\t                                } else if ( pointsList.clicks === 2 ) {\n\t                                    clearTimeout( delegate.dblClickTimeOut );\n\t                                    pointsList.clicks = 0;\n\t                                    if ( delegate.lastClickPos.distanceTo( releasePoint ) <= tracker.dblClickDistThreshold ) {\n\t                                        propagate = tracker.dblClickHandler(\n\t                                            {\n\t                                                eventSource:          tracker,\n\t                                                pointerType:          updateGPoint.type,\n\t                                                position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n\t                                                shift:                event.shiftKey,\n\t                                                isTouchEvent:         updateGPoint.type === 'touch',\n\t                                                originalEvent:        event,\n\t                                                preventDefaultAction: false,\n\t                                                userData:             tracker.userData\n\t                                            }\n\t                                        );\n\t                                        if ( propagate === false ) {\n\t                                            $.cancelEvent( event );\n\t                                        }\n\t                                    }\n\t                                    delegate.lastClickPos = null;\n\t                                }\n\t                            }\n\t                        }\n\t                    } else if ( pointsList.contacts === 2 ) {\n\t                        if ( tracker.pinchHandler && updateGPoint.type === 'touch' ) {\n\t                            // Reset for pinch\n\t                            delegate.pinchGPoints = pointsList.asArray();\n\t                            delegate.lastPinchDist = delegate.currentPinchDist = delegate.pinchGPoints[ 0 ].currentPos.distanceTo( delegate.pinchGPoints[ 1 ].currentPos );\n\t                            delegate.lastPinchCenter = delegate.currentPinchCenter = getCenterPoint( delegate.pinchGPoints[ 0 ].currentPos, delegate.pinchGPoints[ 1 ].currentPos );\n\t                        }\n\t                    }\n\t                } else {\n\t                    // Pointer was activated in another element but removed in our element\n\t\n\t                    // Release (pressed in another element)\n\t                    if ( tracker.releaseHandler ) {\n\t                        propagate = tracker.releaseHandler(\n\t                            {\n\t                                eventSource:           tracker,\n\t                                pointerType:           updateGPoint.type,\n\t                                position:              getPointRelativeToAbsolute( releasePoint, tracker.element ),\n\t                                buttons:               pointsList.buttons,\n\t                                insideElementPressed:  updateGPoint.insideElementPressed,\n\t                                insideElementReleased: updateGPoint.insideElement,\n\t                                isTouchEvent:          updateGPoint.type === 'touch',\n\t                                originalEvent:         event,\n\t                                preventDefaultAction:  false,\n\t                                userData:              tracker.userData\n\t                            }\n\t                        );\n\t                        if ( propagate === false ) {\n\t                            $.cancelEvent( event );\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        return releaseCapture;\n\t    }\n\t\n\t\n\t    /**\n\t     * Call when pointer(s) change coordinates, button state, pressure, tilt, or contact geometry (e.g. width and height)\n\t     *\n\t     * @function\n\t     * @private\n\t     * @inner\n\t     * @param {OpenSeadragon.MouseTracker} tracker\n\t     *     A reference to the MouseTracker instance.\n\t     * @param {Object} event\n\t     *     A reference to the originating DOM event.\n\t     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n\t     *      Gesture points associated with the event.\n\t     */\n\t    function updatePointersMove( tracker, event, gPoints ) {\n\t        var delegate = THIS[ tracker.hash ],\n\t            pointsList = tracker.getActivePointersListByType( gPoints[ 0 ].type ),\n\t            i,\n\t            gPointCount = gPoints.length,\n\t            curGPoint,\n\t            updateGPoint,\n\t            gPointArray,\n\t            delta,\n\t            propagate;\n\t\n\t        if ( typeof event.buttons !== 'undefined' ) {\n\t            pointsList.buttons = event.buttons;\n\t        }\n\t\n\t        for ( i = 0; i < gPointCount; i++ ) {\n\t            curGPoint = gPoints[ i ];\n\t            updateGPoint = pointsList.getById( curGPoint.id );\n\t\n\t            if ( updateGPoint ) {\n\t                // Already tracking the pointer...update it\n\t                if ( curGPoint.hasOwnProperty( 'isPrimary' ) ) {\n\t                    updateGPoint.isPrimary = curGPoint.isPrimary;\n\t                }\n\t                updateGPoint.lastPos = updateGPoint.currentPos;\n\t                updateGPoint.lastTime = updateGPoint.currentTime;\n\t                updateGPoint.currentPos = curGPoint.currentPos;\n\t                updateGPoint.currentTime = curGPoint.currentTime;\n\t            } else {\n\t                // Initialize for tracking and add to the tracking list (no pointerover or pointerdown event occurred before this)\n\t                curGPoint.captured = false;\n\t                curGPoint.insideElementPressed = false;\n\t                curGPoint.insideElement = true;\n\t                startTrackingPointer( pointsList, curGPoint );\n\t            }\n\t        }\n\t\n\t        // Stop (mouse only)\n\t        if ( tracker.stopHandler && gPoints[ 0 ].type === 'mouse' ) {\n\t            clearTimeout( tracker.stopTimeOut );\n\t            tracker.stopTimeOut = setTimeout( function() {\n\t                handlePointerStop( tracker, event, gPoints[ 0 ].type );\n\t            }, tracker.stopDelay );\n\t        }\n\t\n\t        if ( pointsList.contacts === 0 ) {\n\t            // Move (no contacts: hovering mouse or other hover-capable device)\n\t            if ( tracker.moveHandler ) {\n\t                propagate = tracker.moveHandler(\n\t                    {\n\t                        eventSource:          tracker,\n\t                        pointerType:          gPoints[ 0 ].type,\n\t                        position:             getPointRelativeToAbsolute( gPoints[ 0 ].currentPos, tracker.element ),\n\t                        buttons:              pointsList.buttons,\n\t                        isTouchEvent:         gPoints[ 0 ].type === 'touch',\n\t                        originalEvent:        event,\n\t                        preventDefaultAction: false,\n\t                        userData:             tracker.userData\n\t                    }\n\t                );\n\t                if ( propagate === false ) {\n\t                    $.cancelEvent( event );\n\t                }\n\t            }\n\t        } else if ( pointsList.contacts === 1 ) {\n\t            // Move (1 contact)\n\t            if ( tracker.moveHandler ) {\n\t                updateGPoint = pointsList.asArray()[ 0 ];\n\t                propagate = tracker.moveHandler(\n\t                    {\n\t                        eventSource:          tracker,\n\t                        pointerType:          updateGPoint.type,\n\t                        position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n\t                        buttons:              pointsList.buttons,\n\t                        isTouchEvent:         updateGPoint.type === 'touch',\n\t                        originalEvent:        event,\n\t                        preventDefaultAction: false,\n\t                        userData:             tracker.userData\n\t                    }\n\t                );\n\t                if ( propagate === false ) {\n\t                    $.cancelEvent( event );\n\t                }\n\t            }\n\t\n\t            // Drag\n\t            if ( tracker.dragHandler ) {\n\t                updateGPoint = pointsList.asArray()[ 0 ];\n\t                delta = updateGPoint.currentPos.minus( updateGPoint.lastPos );\n\t                propagate = tracker.dragHandler(\n\t                    {\n\t                        eventSource:          tracker,\n\t                        pointerType:          updateGPoint.type,\n\t                        position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n\t                        buttons:              pointsList.buttons,\n\t                        delta:                delta,\n\t                        speed:                updateGPoint.speed,\n\t                        direction:            updateGPoint.direction,\n\t                        shift:                event.shiftKey,\n\t                        isTouchEvent:         updateGPoint.type === 'touch',\n\t                        originalEvent:        event,\n\t                        preventDefaultAction: false,\n\t                        userData:             tracker.userData\n\t                    }\n\t                );\n\t                if ( propagate === false ) {\n\t                    $.cancelEvent( event );\n\t                }\n\t            }\n\t        } else if ( pointsList.contacts === 2 ) {\n\t            // Move (2 contacts, use center)\n\t            if ( tracker.moveHandler ) {\n\t                gPointArray = pointsList.asArray();\n\t                propagate = tracker.moveHandler(\n\t                    {\n\t                        eventSource:          tracker,\n\t                        pointerType:          gPointArray[ 0 ].type,\n\t                        position:             getPointRelativeToAbsolute( getCenterPoint( gPointArray[ 0 ].currentPos, gPointArray[ 1 ].currentPos ), tracker.element ),\n\t                        buttons:              pointsList.buttons,\n\t                        isTouchEvent:         gPointArray[ 0 ].type === 'touch',\n\t                        originalEvent:        event,\n\t                        preventDefaultAction: false,\n\t                        userData:             tracker.userData\n\t                    }\n\t                );\n\t                if ( propagate === false ) {\n\t                    $.cancelEvent( event );\n\t                }\n\t            }\n\t\n\t            // Pinch\n\t            if ( tracker.pinchHandler && gPoints[ 0 ].type === 'touch' ) {\n\t                delta = delegate.pinchGPoints[ 0 ].currentPos.distanceTo( delegate.pinchGPoints[ 1 ].currentPos );\n\t                if ( delta != delegate.currentPinchDist ) {\n\t                    delegate.lastPinchDist = delegate.currentPinchDist;\n\t                    delegate.currentPinchDist = delta;\n\t                    delegate.lastPinchCenter = delegate.currentPinchCenter;\n\t                    delegate.currentPinchCenter = getCenterPoint( delegate.pinchGPoints[ 0 ].currentPos, delegate.pinchGPoints[ 1 ].currentPos );\n\t                    propagate = tracker.pinchHandler(\n\t                        {\n\t                            eventSource:          tracker,\n\t                            pointerType:          'touch',\n\t                            gesturePoints:        delegate.pinchGPoints,\n\t                            lastCenter:           getPointRelativeToAbsolute( delegate.lastPinchCenter, tracker.element ),\n\t                            center:               getPointRelativeToAbsolute( delegate.currentPinchCenter, tracker.element ),\n\t                            lastDistance:         delegate.lastPinchDist,\n\t                            distance:             delegate.currentPinchDist,\n\t                            shift:                event.shiftKey,\n\t                            originalEvent:        event,\n\t                            preventDefaultAction: false,\n\t                            userData:             tracker.userData\n\t                        }\n\t                    );\n\t                    if ( propagate === false ) {\n\t                        $.cancelEvent( event );\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @private\n\t     * @inner\n\t     * @param {OpenSeadragon.MouseTracker} tracker\n\t     *     A reference to the MouseTracker instance.\n\t     * @param {Object} event\n\t     *     A reference to the originating DOM event.\n\t     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n\t     *      Gesture points associated with the event.\n\t     */\n\t    function updatePointersCancel( tracker, event, gPoints ) {\n\t        updatePointersUp( tracker, event, gPoints, 0 );\n\t        updatePointersExit( tracker, event, gPoints );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function handlePointerStop( tracker, originalMoveEvent, pointerType ) {\n\t        if ( tracker.stopHandler ) {\n\t            tracker.stopHandler( {\n\t                eventSource:          tracker,\n\t                pointerType:          pointerType,\n\t                position:             getMouseRelative( originalMoveEvent, tracker.element ),\n\t                buttons:              tracker.getActivePointersListByType( pointerType ).buttons,\n\t                isTouchEvent:         pointerType === 'touch',\n\t                originalEvent:        originalMoveEvent,\n\t                preventDefaultAction: false,\n\t                userData:             tracker.userData\n\t            } );\n\t        }\n\t    }\n\t\n\t    /**\n\t     * True if inside an iframe, otherwise false.\n\t     * @member {Boolean} isInIframe\n\t     * @private\n\t     * @inner\n\t     */\n\t    var isInIframe = (function() {\n\t        try {\n\t            return window.self !== window.top;\n\t        } catch (e) {\n\t            return true;\n\t        }\n\t    })();\n\t\n\t    /**\n\t     * @function\n\t     * @private\n\t     * @inner\n\t     * @returns {Boolean} True if the target has access rights to events, otherwise false.\n\t     */\n\t    function canAccessEvents (target) {\n\t        try {\n\t            return target.addEventListener && target.removeEventListener;\n\t        } catch (e) {\n\t            return false;\n\t        }\n\t    }\n\t\n\t}(OpenSeadragon));\n\t\n\t/*\n\t * OpenSeadragon - Control\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * An enumeration of supported locations where controls can be anchored.\n\t * The anchoring is always relative to the container.\n\t * @member ControlAnchor\n\t * @memberof OpenSeadragon\n\t * @static\n\t * @type {Object}\n\t * @property {Number} NONE\n\t * @property {Number} TOP_LEFT\n\t * @property {Number} TOP_RIGHT\n\t * @property {Number} BOTTOM_LEFT\n\t * @property {Number} BOTTOM_RIGHT\n\t * @property {Number} ABSOLUTE\n\t */\n\t$.ControlAnchor = {\n\t    NONE: 0,\n\t    TOP_LEFT: 1,\n\t    TOP_RIGHT: 2,\n\t    BOTTOM_RIGHT: 3,\n\t    BOTTOM_LEFT: 4,\n\t    ABSOLUTE: 5\n\t};\n\t\n\t/**\n\t * @class Control\n\t * @classdesc A Control represents any interface element which is meant to allow the user\n\t * to interact with the zoomable interface. Any control can be anchored to any\n\t * element.\n\t *\n\t * @memberof OpenSeadragon\n\t * @param {Element} element - the control element to be anchored in the container.\n\t * @param {Object } options - All required and optional settings for configuring a control element.\n\t * @param {OpenSeadragon.ControlAnchor} [options.anchor=OpenSeadragon.ControlAnchor.NONE] - the position of the control\n\t *  relative to the container.\n\t * @param {Boolean} [options.attachToViewer=true] - Whether the control should be added directly to the viewer, or\n\t *  directly to the container\n\t * @param {Boolean} [options.autoFade=true] - Whether the control should have the autofade behavior\n\t * @param {Element} container - the element to control will be anchored too.\n\t */\n\t$.Control = function ( element, options, container ) {\n\t    var parent = element.parentNode;\n\t    if (typeof options === 'number')\n\t    {\n\t        $.console.error(\"Passing an anchor directly into the OpenSeadragon.Control constructor is deprecated; \" +\n\t                        \"please use an options object instead.  \" +\n\t                        \"Support for this deprecated variant is scheduled for removal in December 2013\");\n\t         options = {anchor: options};\n\t    }\n\t    options.attachToViewer = (typeof options.attachToViewer === 'undefined') ? true : options.attachToViewer;\n\t    /**\n\t     * True if the control should have autofade behavior.\n\t     * @member {Boolean} autoFade\n\t     * @memberof OpenSeadragon.Control#\n\t     */\n\t    this.autoFade = (typeof options.autoFade === 'undefined') ? true : options.autoFade;\n\t    /**\n\t     * The element providing the user interface with some type of control (e.g. a zoom-in button).\n\t     * @member {Element} element\n\t     * @memberof OpenSeadragon.Control#\n\t     */\n\t    this.element    = element;\n\t    /**\n\t     * The position of the Control relative to its container.\n\t     * @member {OpenSeadragon.ControlAnchor} anchor\n\t     * @memberof OpenSeadragon.Control#\n\t     */\n\t    this.anchor     = options.anchor;\n\t    /**\n\t     * The Control's containing element.\n\t     * @member {Element} container\n\t     * @memberof OpenSeadragon.Control#\n\t     */\n\t    this.container  = container;\n\t    /**\n\t     * A neutral element surrounding the control element.\n\t     * @member {Element} wrapper\n\t     * @memberof OpenSeadragon.Control#\n\t     */\n\t    if ( this.anchor == $.ControlAnchor.ABSOLUTE ) {\n\t        this.wrapper    = $.makeNeutralElement( \"div\" );\n\t        this.wrapper.style.position = \"absolute\";\n\t        this.wrapper.style.top = typeof (options.top) == \"number\" ? (options.top + 'px') : options.top;\n\t        this.wrapper.style.left  = typeof (options.left) == \"number\" ? (options.left + 'px') : options.left;\n\t        this.wrapper.style.height = typeof (options.height) == \"number\" ? (options.height + 'px') : options.height;\n\t        this.wrapper.style.width  = typeof (options.width) == \"number\" ? (options.width + 'px') : options.width;\n\t        this.wrapper.style.margin = \"0px\";\n\t        this.wrapper.style.padding = \"0px\";\n\t\n\t        this.element.style.position = \"relative\";\n\t        this.element.style.top = \"0px\";\n\t        this.element.style.left = \"0px\";\n\t        this.element.style.height = \"100%\";\n\t        this.element.style.width = \"100%\";\n\t    } else {\n\t        this.wrapper    = $.makeNeutralElement( \"div\" );\n\t        this.wrapper.style.display = \"inline-block\";\n\t        if ( this.anchor == $.ControlAnchor.NONE ) {\n\t            // IE6 fix\n\t            this.wrapper.style.width = this.wrapper.style.height = \"100%\";\n\t        }\n\t    }\n\t    this.wrapper.appendChild( this.element );\n\t\n\t    if (options.attachToViewer ) {\n\t        if ( this.anchor == $.ControlAnchor.TOP_RIGHT ||\n\t             this.anchor == $.ControlAnchor.BOTTOM_RIGHT ) {\n\t            this.container.insertBefore(\n\t                this.wrapper,\n\t                this.container.firstChild\n\t            );\n\t        } else {\n\t            this.container.appendChild( this.wrapper );\n\t        }\n\t    } else {\n\t        parent.appendChild( this.wrapper );\n\t    }\n\t};\n\t\n\t/** @lends OpenSeadragon.Control.prototype */\n\t$.Control.prototype = {\n\t\n\t    /**\n\t     * Removes the control from the container.\n\t     * @function\n\t     */\n\t    destroy: function() {\n\t        this.wrapper.removeChild( this.element );\n\t        this.container.removeChild( this.wrapper );\n\t    },\n\t\n\t    /**\n\t     * Determines if the control is currently visible.\n\t     * @function\n\t     * @return {Boolean} true if currently visible, false otherwise.\n\t     */\n\t    isVisible: function() {\n\t        return this.wrapper.style.display != \"none\";\n\t    },\n\t\n\t    /**\n\t     * Toggles the visibility of the control.\n\t     * @function\n\t     * @param {Boolean} visible - true to make visible, false to hide.\n\t     */\n\t    setVisible: function( visible ) {\n\t        this.wrapper.style.display = visible ?\n\t            ( this.anchor == $.ControlAnchor.ABSOLUTE ? 'block' : 'inline-block' ) :\n\t            \"none\";\n\t    },\n\t\n\t    /**\n\t     * Sets the opacity level for the control.\n\t     * @function\n\t     * @param {Number} opactiy - a value between 1 and 0 inclusively.\n\t     */\n\t    setOpacity: function( opacity ) {\n\t        if ( this.element[ $.SIGNAL ] && $.Browser.vendor == $.BROWSERS.IE ) {\n\t            $.setElementOpacity( this.element, opacity, true );\n\t        } else {\n\t            $.setElementOpacity( this.wrapper, opacity, true );\n\t        }\n\t    }\n\t};\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - ControlDock\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t    /**\n\t     * @class ControlDock\n\t     * @classdesc Provides a container element (a &lt;form&gt; element) with support for the layout of control elements.\n\t     *\n\t     * @memberof OpenSeadragon\n\t     */\n\t    $.ControlDock = function( options ){\n\t        var layouts = [ 'topleft', 'topright', 'bottomright', 'bottomleft'],\n\t            layout,\n\t            i;\n\t\n\t        $.extend( true, this, {\n\t            id: 'controldock-' + $.now() + '-' + Math.floor(Math.random() * 1000000),\n\t            container: $.makeNeutralElement( 'div' ),\n\t            controls: []\n\t        }, options );\n\t\n\t        // Disable the form's submit; otherwise button clicks and return keys\n\t        // can trigger it.\n\t        this.container.onsubmit = function() {\n\t            return false;\n\t        };\n\t\n\t        if( this.element ){\n\t            this.element = $.getElement( this.element );\n\t            this.element.appendChild( this.container );\n\t            this.element.style.position = 'relative';\n\t            this.container.style.width = '100%';\n\t            this.container.style.height = '100%';\n\t        }\n\t\n\t        for( i = 0; i < layouts.length; i++ ){\n\t            layout = layouts[ i ];\n\t            this.controls[ layout ] = $.makeNeutralElement( \"div\" );\n\t            this.controls[ layout ].style.position = 'absolute';\n\t            if ( layout.match( 'left' ) ){\n\t                this.controls[ layout ].style.left = '0px';\n\t            }\n\t            if ( layout.match( 'right' ) ){\n\t                this.controls[ layout ].style.right = '0px';\n\t            }\n\t            if ( layout.match( 'top' ) ){\n\t                this.controls[ layout ].style.top = '0px';\n\t            }\n\t            if ( layout.match( 'bottom' ) ){\n\t                this.controls[ layout ].style.bottom = '0px';\n\t            }\n\t        }\n\t\n\t        this.container.appendChild( this.controls.topleft );\n\t        this.container.appendChild( this.controls.topright );\n\t        this.container.appendChild( this.controls.bottomright );\n\t        this.container.appendChild( this.controls.bottomleft );\n\t    };\n\t\n\t    /** @lends OpenSeadragon.ControlDock.prototype */\n\t    $.ControlDock.prototype = {\n\t\n\t        /**\n\t         * @function\n\t         */\n\t        addControl: function ( element, controlOptions ) {\n\t            element = $.getElement( element );\n\t            var div = null;\n\t\n\t            if ( getControlIndex( this, element ) >= 0 ) {\n\t                return;     // they're trying to add a duplicate control\n\t            }\n\t\n\t            switch ( controlOptions.anchor ) {\n\t                case $.ControlAnchor.TOP_RIGHT:\n\t                    div = this.controls.topright;\n\t                    element.style.position = \"relative\";\n\t                    element.style.paddingRight = \"0px\";\n\t                    element.style.paddingTop = \"0px\";\n\t                    break;\n\t                case $.ControlAnchor.BOTTOM_RIGHT:\n\t                    div = this.controls.bottomright;\n\t                    element.style.position = \"relative\";\n\t                    element.style.paddingRight = \"0px\";\n\t                    element.style.paddingBottom = \"0px\";\n\t                    break;\n\t                case $.ControlAnchor.BOTTOM_LEFT:\n\t                    div = this.controls.bottomleft;\n\t                    element.style.position = \"relative\";\n\t                    element.style.paddingLeft = \"0px\";\n\t                    element.style.paddingBottom = \"0px\";\n\t                    break;\n\t                case $.ControlAnchor.TOP_LEFT:\n\t                    div = this.controls.topleft;\n\t                    element.style.position = \"relative\";\n\t                    element.style.paddingLeft = \"0px\";\n\t                    element.style.paddingTop = \"0px\";\n\t                    break;\n\t                case $.ControlAnchor.ABSOLUTE:\n\t                    div = this.container;\n\t                    element.style.margin = \"0px\";\n\t                    element.style.padding = \"0px\";\n\t                    break;\n\t                default:\n\t                case $.ControlAnchor.NONE:\n\t                    div = this.container;\n\t                    element.style.margin = \"0px\";\n\t                    element.style.padding = \"0px\";\n\t                    break;\n\t            }\n\t\n\t            this.controls.push(\n\t                new $.Control( element, controlOptions, div )\n\t            );\n\t            element.style.display = \"inline-block\";\n\t        },\n\t\n\t\n\t        /**\n\t         * @function\n\t         * @return {OpenSeadragon.ControlDock} Chainable.\n\t         */\n\t        removeControl: function ( element ) {\n\t            element = $.getElement( element );\n\t            var i = getControlIndex( this, element );\n\t\n\t            if ( i >= 0 ) {\n\t                this.controls[ i ].destroy();\n\t                this.controls.splice( i, 1 );\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @function\n\t         * @return {OpenSeadragon.ControlDock} Chainable.\n\t         */\n\t        clearControls: function () {\n\t            while ( this.controls.length > 0 ) {\n\t                this.controls.pop().destroy();\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t\n\t        /**\n\t         * @function\n\t         * @return {Boolean}\n\t         */\n\t        areControlsEnabled: function () {\n\t            var i;\n\t\n\t            for ( i = this.controls.length - 1; i >= 0; i-- ) {\n\t                if ( this.controls[ i ].isVisible() ) {\n\t                    return true;\n\t                }\n\t            }\n\t\n\t            return false;\n\t        },\n\t\n\t\n\t        /**\n\t         * @function\n\t         * @return {OpenSeadragon.ControlDock} Chainable.\n\t         */\n\t        setControlsEnabled: function( enabled ) {\n\t            var i;\n\t\n\t            for ( i = this.controls.length - 1; i >= 0; i-- ) {\n\t                this.controls[ i ].setVisible( enabled );\n\t            }\n\t\n\t            return this;\n\t        }\n\t\n\t    };\n\t\n\t\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    // Utility methods\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    function getControlIndex( dock, element ) {\n\t        var controls = dock.controls,\n\t            i;\n\t\n\t        for ( i = controls.length - 1; i >= 0; i-- ) {\n\t            if ( controls[ i ].element == element ) {\n\t                return i;\n\t            }\n\t        }\n\t\n\t        return -1;\n\t    }\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - Placement\n\t *\n\t * Copyright (C) 2010-2016 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function($) {\n\t\n\t    /**\n\t     * An enumeration of positions to anchor an element.\n\t     * @member Placement\n\t     * @memberOf OpenSeadragon\n\t     * @static\n\t     * @readonly\n\t     * @property {OpenSeadragon.Placement} CENTER\n\t     * @property {OpenSeadragon.Placement} TOP_LEFT\n\t     * @property {OpenSeadragon.Placement} TOP\n\t     * @property {OpenSeadragon.Placement} TOP_RIGHT\n\t     * @property {OpenSeadragon.Placement} RIGHT\n\t     * @property {OpenSeadragon.Placement} BOTTOM_RIGHT\n\t     * @property {OpenSeadragon.Placement} BOTTOM\n\t     * @property {OpenSeadragon.Placement} BOTTOM_LEFT\n\t     * @property {OpenSeadragon.Placement} LEFT\n\t     */\n\t    $.Placement = $.freezeObject({\n\t        CENTER:       0,\n\t        TOP_LEFT:     1,\n\t        TOP:          2,\n\t        TOP_RIGHT:    3,\n\t        RIGHT:        4,\n\t        BOTTOM_RIGHT: 5,\n\t        BOTTOM:       6,\n\t        BOTTOM_LEFT:  7,\n\t        LEFT:         8,\n\t        properties: {\n\t            0: {\n\t                isLeft: false,\n\t                isHorizontallyCentered: true,\n\t                isRight: false,\n\t                isTop: false,\n\t                isVerticallyCentered: true,\n\t                isBottom: false\n\t            },\n\t            1: {\n\t                isLeft: true,\n\t                isHorizontallyCentered: false,\n\t                isRight: false,\n\t                isTop: true,\n\t                isVerticallyCentered: false,\n\t                isBottom: false\n\t            },\n\t            2: {\n\t                isLeft: false,\n\t                isHorizontallyCentered: true,\n\t                isRight: false,\n\t                isTop: true,\n\t                isVerticallyCentered: false,\n\t                isBottom: false\n\t            },\n\t            3: {\n\t                isLeft: false,\n\t                isHorizontallyCentered: false,\n\t                isRight: true,\n\t                isTop: true,\n\t                isVerticallyCentered: false,\n\t                isBottom: false\n\t            },\n\t            4: {\n\t                isLeft: false,\n\t                isHorizontallyCentered: false,\n\t                isRight: true,\n\t                isTop: false,\n\t                isVerticallyCentered: true,\n\t                isBottom: false\n\t            },\n\t            5: {\n\t                isLeft: false,\n\t                isHorizontallyCentered: false,\n\t                isRight: true,\n\t                isTop: false,\n\t                isVerticallyCentered: false,\n\t                isBottom: true\n\t            },\n\t            6: {\n\t                isLeft: false,\n\t                isHorizontallyCentered: true,\n\t                isRight: false,\n\t                isTop: false,\n\t                isVerticallyCentered: false,\n\t                isBottom: true\n\t            },\n\t            7: {\n\t                isLeft: true,\n\t                isHorizontallyCentered: false,\n\t                isRight: false,\n\t                isTop: false,\n\t                isVerticallyCentered: false,\n\t                isBottom: true\n\t            },\n\t            8: {\n\t                isLeft: true,\n\t                isHorizontallyCentered: false,\n\t                isRight: false,\n\t                isTop: false,\n\t                isVerticallyCentered: true,\n\t                isBottom: false\n\t            }\n\t        }\n\t    });\n\t\n\t}(OpenSeadragon));\n\t\n\t/*\n\t * OpenSeadragon - Viewer\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t// dictionary from hash to private properties\n\tvar THIS = {};\n\tvar nextHash = 1;\n\t\n\t/**\n\t *\n\t * The main point of entry into creating a zoomable image on the page.<br>\n\t * <br>\n\t * We have provided an idiomatic javascript constructor which takes\n\t * a single object, but still support the legacy positional arguments.<br>\n\t * <br>\n\t * The options below are given in order that they appeared in the constructor\n\t * as arguments and we translate a positional call into an idiomatic call.<br>\n\t * <br>\n\t * To create a viewer, you can use either of this methods:<br>\n\t * <ul>\n\t * <li><code>var viewer = new OpenSeadragon.Viewer(options);</code></li>\n\t * <li><code>var viewer = OpenSeadragon(options);</code></li>\n\t * </ul>\n\t * @class Viewer\n\t * @classdesc The main OpenSeadragon viewer class.\n\t *\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.EventSource\n\t * @extends OpenSeadragon.ControlDock\n\t * @param {OpenSeadragon.Options} options - Viewer options.\n\t *\n\t **/\n\t$.Viewer = function( options ) {\n\t\n\t    var args  = arguments,\n\t        _this = this,\n\t        i;\n\t\n\t\n\t    //backward compatibility for positional args while preferring more\n\t    //idiomatic javascript options object as the only argument\n\t    if( !$.isPlainObject( options ) ){\n\t        options = {\n\t            id:                 args[ 0 ],\n\t            xmlPath:            args.length > 1 ? args[ 1 ] : undefined,\n\t            prefixUrl:          args.length > 2 ? args[ 2 ] : undefined,\n\t            controls:           args.length > 3 ? args[ 3 ] : undefined,\n\t            overlays:           args.length > 4 ? args[ 4 ] : undefined\n\t        };\n\t    }\n\t\n\t    //options.config and the general config argument are deprecated\n\t    //in favor of the more direct specification of optional settings\n\t    //being pass directly on the options object\n\t    if ( options.config ){\n\t        $.extend( true, options, options.config );\n\t        delete options.config;\n\t    }\n\t\n\t    //Public properties\n\t    //Allow the options object to override global defaults\n\t    $.extend( true, this, {\n\t\n\t        //internal state and dom identifiers\n\t        id:             options.id,\n\t        hash:           options.hash || nextHash++,\n\t        /**\n\t         * Index for page to be shown first next time open() is called (only used in sequenceMode).\n\t         * @member {Number} initialPage\n\t         * @memberof OpenSeadragon.Viewer#\n\t         */\n\t        initialPage:    0,\n\t\n\t        //dom nodes\n\t        /**\n\t         * The parent element of this Viewer instance, passed in when the Viewer was created.\n\t         * @member {Element} element\n\t         * @memberof OpenSeadragon.Viewer#\n\t         */\n\t        element:        null,\n\t        /**\n\t         * A &lt;div&gt; element (provided by {@link OpenSeadragon.ControlDock}), the base element of this Viewer instance.<br><br>\n\t         * Child element of {@link OpenSeadragon.Viewer#element}.\n\t         * @member {Element} container\n\t         * @memberof OpenSeadragon.Viewer#\n\t         */\n\t        container:      null,\n\t        /**\n\t         * A &lt;div&gt; element, the element where user-input events are handled for panning and zooming.<br><br>\n\t         * Child element of {@link OpenSeadragon.Viewer#container},\n\t         * positioned on top of {@link OpenSeadragon.Viewer#keyboardCommandArea}.<br><br>\n\t         * The parent of {@link OpenSeadragon.Drawer#canvas} instances.\n\t         * @member {Element} canvas\n\t         * @memberof OpenSeadragon.Viewer#\n\t         */\n\t        canvas:         null,\n\t\n\t        // Overlays list. An overlay allows to add html on top of the viewer.\n\t        overlays:           [],\n\t        // Container inside the canvas where overlays are drawn.\n\t        overlaysContainer:  null,\n\t\n\t        //private state properties\n\t        previousBody:   [],\n\t\n\t        //This was originally initialized in the constructor and so could never\n\t        //have anything in it.  now it can because we allow it to be specified\n\t        //in the options and is only empty by default if not specified. Also\n\t        //this array was returned from get_controls which I find confusing\n\t        //since this object has a controls property which is treated in other\n\t        //functions like clearControls.  I'm removing the accessors.\n\t        customControls: [],\n\t\n\t        //These are originally not part options but declared as members\n\t        //in initialize.  It's still considered idiomatic to put them here\n\t        //source is here for backwards compatibility. It is not an official\n\t        //part of the API and should not be relied upon.\n\t        source:         null,\n\t        /**\n\t         * Handles rendering of tiles in the viewer. Created for each TileSource opened.\n\t         * @member {OpenSeadragon.Drawer} drawer\n\t         * @memberof OpenSeadragon.Viewer#\n\t         */\n\t        drawer:             null,\n\t        /**\n\t         * Keeps track of all of the tiled images in the scene.\n\t         * @member {OpenSeadragon.Drawer} world\n\t         * @memberof OpenSeadragon.Viewer#\n\t         */\n\t        world:              null,\n\t        /**\n\t         * Handles coordinate-related functionality - zoom, pan, rotation, etc. Created for each TileSource opened.\n\t         * @member {OpenSeadragon.Viewport} viewport\n\t         * @memberof OpenSeadragon.Viewer#\n\t         */\n\t        viewport:       null,\n\t        /**\n\t         * @member {OpenSeadragon.Navigator} navigator\n\t         * @memberof OpenSeadragon.Viewer#\n\t         */\n\t        navigator:      null,\n\t\n\t        //A collection viewport is a separate viewport used to provide\n\t        //simultaneous rendering of sets of tiles\n\t        collectionViewport:     null,\n\t        collectionDrawer:       null,\n\t\n\t        //UI image resources\n\t        //TODO: rename navImages to uiImages\n\t        navImages:      null,\n\t\n\t        //interface button controls\n\t        buttons:        null,\n\t\n\t        //TODO: this is defunct so safely remove it\n\t        profiler:       null\n\t\n\t    }, $.DEFAULT_SETTINGS, options );\n\t\n\t    if ( typeof ( this.hash) === \"undefined\" ) {\n\t        throw new Error(\"A hash must be defined, either by specifying options.id or options.hash.\");\n\t    }\n\t    if ( typeof ( THIS[ this.hash ] ) !== \"undefined\" ) {\n\t        // We don't want to throw an error here, as the user might have discarded\n\t        // the previous viewer with the same hash and now want to recreate it.\n\t        $.console.warn(\"Hash \" + this.hash + \" has already been used.\");\n\t    }\n\t\n\t    //Private state properties\n\t    THIS[ this.hash ] = {\n\t        \"fsBoundsDelta\":     new $.Point( 1, 1 ),\n\t        \"prevContainerSize\": null,\n\t        \"animating\":         false,\n\t        \"forceRedraw\":       false,\n\t        \"mouseInside\":       false,\n\t        \"group\":             null,\n\t        // whether we should be continuously zooming\n\t        \"zooming\":           false,\n\t        // how much we should be continuously zooming by\n\t        \"zoomFactor\":        null,\n\t        \"lastZoomTime\":      null,\n\t        \"fullPage\":          false,\n\t        \"onfullscreenchange\": null\n\t    };\n\t\n\t    this._sequenceIndex = 0;\n\t    this._firstOpen = true;\n\t    this._updateRequestId = null;\n\t    this._loadQueue = [];\n\t    this.currentOverlays = [];\n\t\n\t    this._lastScrollTime = $.now(); // variable used to help normalize the scroll event speed of different devices\n\t\n\t    //Inherit some behaviors and properties\n\t    $.EventSource.call( this );\n\t\n\t    this.addHandler( 'open-failed', function ( event ) {\n\t        var msg = $.getString( \"Errors.OpenFailed\", event.eventSource, event.message);\n\t        _this._showMessage( msg );\n\t    });\n\t\n\t    $.ControlDock.call( this, options );\n\t\n\t    //Deal with tile sources\n\t    if (this.xmlPath) {\n\t        //Deprecated option.  Now it is preferred to use the tileSources option\n\t        this.tileSources = [ this.xmlPath ];\n\t    }\n\t\n\t    this.element              = this.element || document.getElementById( this.id );\n\t    this.canvas               = $.makeNeutralElement( \"div\" );\n\t\n\t    this.canvas.className = \"openseadragon-canvas\";\n\t    (function( style ){\n\t        style.width    = \"100%\";\n\t        style.height   = \"100%\";\n\t        style.overflow = \"hidden\";\n\t        style.position = \"absolute\";\n\t        style.top      = \"0px\";\n\t        style.left     = \"0px\";\n\t    }(this.canvas.style));\n\t    $.setElementTouchActionNone( this.canvas );\n\t    if (options.tabIndex !== \"\") {\n\t        this.canvas.tabIndex = (options.tabIndex === undefined ? 0 : options.tabIndex);\n\t    }\n\t\n\t    //the container is created through applying the ControlDock constructor above\n\t    this.container.className = \"openseadragon-container\";\n\t    (function( style ){\n\t        style.width     = \"100%\";\n\t        style.height    = \"100%\";\n\t        style.position  = \"relative\";\n\t        style.overflow  = \"hidden\";\n\t        style.left      = \"0px\";\n\t        style.top       = \"0px\";\n\t        style.textAlign = \"left\";  // needed to protect against\n\t    }( this.container.style ));\n\t\n\t    this.container.insertBefore( this.canvas, this.container.firstChild );\n\t    this.element.appendChild( this.container );\n\t\n\t    //Used for toggling between fullscreen and default container size\n\t    //TODO: these can be closure private and shared across Viewer\n\t    //      instances.\n\t    this.bodyWidth      = document.body.style.width;\n\t    this.bodyHeight     = document.body.style.height;\n\t    this.bodyOverflow   = document.body.style.overflow;\n\t    this.docOverflow    = document.documentElement.style.overflow;\n\t\n\t    this.innerTracker = new $.MouseTracker({\n\t        element:                  this.canvas,\n\t        startDisabled:            !this.mouseNavEnabled,\n\t        clickTimeThreshold:       this.clickTimeThreshold,\n\t        clickDistThreshold:       this.clickDistThreshold,\n\t        dblClickTimeThreshold:    this.dblClickTimeThreshold,\n\t        dblClickDistThreshold:    this.dblClickDistThreshold,\n\t        keyDownHandler:           $.delegate( this, onCanvasKeyDown ),\n\t        keyHandler:               $.delegate( this, onCanvasKeyPress ),\n\t        clickHandler:             $.delegate( this, onCanvasClick ),\n\t        dblClickHandler:          $.delegate( this, onCanvasDblClick ),\n\t        dragHandler:              $.delegate( this, onCanvasDrag ),\n\t        dragEndHandler:           $.delegate( this, onCanvasDragEnd ),\n\t        enterHandler:             $.delegate( this, onCanvasEnter ),\n\t        exitHandler:              $.delegate( this, onCanvasExit ),\n\t        pressHandler:             $.delegate( this, onCanvasPress ),\n\t        releaseHandler:           $.delegate( this, onCanvasRelease ),\n\t        nonPrimaryPressHandler:   $.delegate( this, onCanvasNonPrimaryPress ),\n\t        nonPrimaryReleaseHandler: $.delegate( this, onCanvasNonPrimaryRelease ),\n\t        scrollHandler:            $.delegate( this, onCanvasScroll ),\n\t        pinchHandler:             $.delegate( this, onCanvasPinch )\n\t    });\n\t\n\t    this.outerTracker = new $.MouseTracker({\n\t        element:               this.container,\n\t        startDisabled:         !this.mouseNavEnabled,\n\t        clickTimeThreshold:    this.clickTimeThreshold,\n\t        clickDistThreshold:    this.clickDistThreshold,\n\t        dblClickTimeThreshold: this.dblClickTimeThreshold,\n\t        dblClickDistThreshold: this.dblClickDistThreshold,\n\t        enterHandler:          $.delegate( this, onContainerEnter ),\n\t        exitHandler:           $.delegate( this, onContainerExit )\n\t    });\n\t\n\t    if( this.toolbar ){\n\t        this.toolbar = new $.ControlDock({ element: this.toolbar });\n\t    }\n\t\n\t    this.bindStandardControls();\n\t\n\t    THIS[ this.hash ].prevContainerSize = _getSafeElemSize( this.container );\n\t\n\t    // Create the world\n\t    this.world = new $.World({\n\t        viewer: this\n\t    });\n\t\n\t    this.world.addHandler('add-item', function(event) {\n\t        // For backwards compatibility, we maintain the source property\n\t        _this.source = _this.world.getItemAt(0).source;\n\t\n\t        THIS[ _this.hash ].forceRedraw = true;\n\t\n\t        if (!_this._updateRequestId) {\n\t            _this._updateRequestId = scheduleUpdate( _this, updateMulti );\n\t        }\n\t    });\n\t\n\t    this.world.addHandler('remove-item', function(event) {\n\t        // For backwards compatibility, we maintain the source property\n\t        if (_this.world.getItemCount()) {\n\t            _this.source = _this.world.getItemAt(0).source;\n\t        } else {\n\t            _this.source = null;\n\t        }\n\t\n\t        THIS[ _this.hash ].forceRedraw = true;\n\t    });\n\t\n\t    this.world.addHandler('metrics-change', function(event) {\n\t        if (_this.viewport) {\n\t            _this.viewport._setContentBounds(_this.world.getHomeBounds(), _this.world.getContentFactor());\n\t        }\n\t    });\n\t\n\t    this.world.addHandler('item-index-change', function(event) {\n\t        // For backwards compatibility, we maintain the source property\n\t        _this.source = _this.world.getItemAt(0).source;\n\t    });\n\t\n\t    // Create the viewport\n\t    this.viewport = new $.Viewport({\n\t        containerSize:      THIS[ this.hash ].prevContainerSize,\n\t        springStiffness:    this.springStiffness,\n\t        animationTime:      this.animationTime,\n\t        minZoomImageRatio:  this.minZoomImageRatio,\n\t        maxZoomPixelRatio:  this.maxZoomPixelRatio,\n\t        visibilityRatio:    this.visibilityRatio,\n\t        wrapHorizontal:     this.wrapHorizontal,\n\t        wrapVertical:       this.wrapVertical,\n\t        defaultZoomLevel:   this.defaultZoomLevel,\n\t        minZoomLevel:       this.minZoomLevel,\n\t        maxZoomLevel:       this.maxZoomLevel,\n\t        viewer:             this,\n\t        degrees:            this.degrees,\n\t        flipped:            this.flipped,\n\t        navigatorRotate:    this.navigatorRotate,\n\t        homeFillsViewer:    this.homeFillsViewer,\n\t        margins:            this.viewportMargins\n\t    });\n\t\n\t    this.viewport._setContentBounds(this.world.getHomeBounds(), this.world.getContentFactor());\n\t\n\t    // Create the image loader\n\t    this.imageLoader = new $.ImageLoader({\n\t        jobLimit: this.imageLoaderLimit,\n\t        timeout: options.timeout\n\t    });\n\t\n\t    // Create the tile cache\n\t    this.tileCache = new $.TileCache({\n\t        maxImageCacheCount: this.maxImageCacheCount\n\t    });\n\t\n\t    // Create the drawer\n\t    this.drawer = new $.Drawer({\n\t        viewer:             this,\n\t        viewport:           this.viewport,\n\t        element:            this.canvas,\n\t        debugGridColor:     this.debugGridColor\n\t    });\n\t\n\t    // Overlay container\n\t    this.overlaysContainer    = $.makeNeutralElement( \"div\" );\n\t    this.canvas.appendChild( this.overlaysContainer );\n\t\n\t    // Now that we have a drawer, see if it supports rotate. If not we need to remove the rotate buttons\n\t    if (!this.drawer.canRotate()) {\n\t        // Disable/remove the rotate left/right buttons since they aren't supported\n\t        if (this.rotateLeft) {\n\t            i = this.buttons.buttons.indexOf(this.rotateLeft);\n\t            this.buttons.buttons.splice(i, 1);\n\t            this.buttons.element.removeChild(this.rotateLeft.element);\n\t        }\n\t        if (this.rotateRight) {\n\t            i = this.buttons.buttons.indexOf(this.rotateRight);\n\t            this.buttons.buttons.splice(i, 1);\n\t            this.buttons.element.removeChild(this.rotateRight.element);\n\t        }\n\t    }\n\t\n\t    //Instantiate a navigator if configured\n\t    if ( this.showNavigator){\n\t        this.navigator = new $.Navigator({\n\t            id:                this.navigatorId,\n\t            position:          this.navigatorPosition,\n\t            sizeRatio:         this.navigatorSizeRatio,\n\t            maintainSizeRatio: this.navigatorMaintainSizeRatio,\n\t            top:               this.navigatorTop,\n\t            left:              this.navigatorLeft,\n\t            width:             this.navigatorWidth,\n\t            height:            this.navigatorHeight,\n\t            autoResize:        this.navigatorAutoResize,\n\t            autoFade:          this.navigatorAutoFade,\n\t            prefixUrl:         this.prefixUrl,\n\t            viewer:            this,\n\t            navigatorRotate:   this.navigatorRotate,\n\t            background:        this.navigatorBackground,\n\t            opacity:           this.navigatorOpacity,\n\t            borderColor:       this.navigatorBorderColor,\n\t            displayRegionColor: this.navigatorDisplayRegionColor,\n\t            crossOriginPolicy: this.crossOriginPolicy\n\t        });\n\t    }\n\t\n\t    // Sequence mode\n\t    if (this.sequenceMode) {\n\t        this.bindSequenceControls();\n\t    }\n\t\n\t    // Open initial tilesources\n\t    if (this.tileSources) {\n\t        this.open( this.tileSources );\n\t    }\n\t\n\t    // Add custom controls\n\t    for ( i = 0; i < this.customControls.length; i++ ) {\n\t        this.addControl(\n\t            this.customControls[ i ].id,\n\t            {anchor: this.customControls[ i ].anchor}\n\t        );\n\t    }\n\t\n\t    // Initial fade out\n\t    $.requestAnimationFrame( function(){\n\t        beginControlsAutoHide( _this );\n\t    } );\n\t\n\t    // Initial canvas options\n\t    if ( this.imageSmoothingEnabled !== undefined && !this.imageSmoothingEnabled){\n\t        this.drawer.setImageSmoothingEnabled(this.imageSmoothingEnabled);\n\t    }\n\t\n\t};\n\t\n\t$.extend( $.Viewer.prototype, $.EventSource.prototype, $.ControlDock.prototype, /** @lends OpenSeadragon.Viewer.prototype */{\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @return {Boolean}\n\t     */\n\t    isOpen: function () {\n\t        return !!this.world.getItemCount();\n\t    },\n\t\n\t    // deprecated\n\t    openDzi: function ( dzi ) {\n\t        $.console.error( \"[Viewer.openDzi] this function is deprecated; use Viewer.open() instead.\" );\n\t        return this.open( dzi );\n\t    },\n\t\n\t    // deprecated\n\t    openTileSource: function ( tileSource ) {\n\t        $.console.error( \"[Viewer.openTileSource] this function is deprecated; use Viewer.open() instead.\" );\n\t        return this.open( tileSource );\n\t    },\n\t\n\t    /**\n\t     * Open tiled images into the viewer, closing any others.\n\t     * To get the TiledImage instance created by open, add an event listener for\n\t     * {@link OpenSeadragon.Viewer.html#.event:open}, which when fired can be used to get access\n\t     * to the instance, i.e., viewer.world.getItemAt(0).\n\t     * @function\n\t     * @param {Array|String|Object|Function} tileSources - This can be a TiledImage\n\t     * specifier, a TileSource specifier, or an array of either. A TiledImage specifier\n\t     * is the same as the options parameter for {@link OpenSeadragon.Viewer#addTiledImage},\n\t     * except for the index property; images are added in sequence.\n\t     * A TileSource specifier is anything you could pass as the tileSource property\n\t     * of the options parameter for {@link OpenSeadragon.Viewer#addTiledImage}.\n\t     * @param {Number} initialPage - If sequenceMode is true, display this page initially\n\t     * for the given tileSources. If specified, will overwrite the Viewer's existing initialPage property.\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:open\n\t     * @fires OpenSeadragon.Viewer.event:open-failed\n\t     */\n\t    open: function (tileSources, initialPage) {\n\t        var _this = this;\n\t\n\t        this.close();\n\t\n\t        if (!tileSources) {\n\t            return;\n\t        }\n\t\n\t        if (this.sequenceMode && $.isArray(tileSources)) {\n\t            if (this.referenceStrip) {\n\t                this.referenceStrip.destroy();\n\t                this.referenceStrip = null;\n\t            }\n\t\n\t            if (typeof initialPage != 'undefined' && !isNaN(initialPage)) {\n\t              this.initialPage = initialPage;\n\t            }\n\t\n\t            this.tileSources = tileSources;\n\t            this._sequenceIndex = Math.max(0, Math.min(this.tileSources.length - 1, this.initialPage));\n\t            if (this.tileSources.length) {\n\t                this.open(this.tileSources[this._sequenceIndex]);\n\t\n\t                if ( this.showReferenceStrip ){\n\t                    this.addReferenceStrip();\n\t                }\n\t            }\n\t\n\t            this._updateSequenceButtons( this._sequenceIndex );\n\t            return;\n\t        }\n\t\n\t        if (!$.isArray(tileSources)) {\n\t            tileSources = [tileSources];\n\t        }\n\t\n\t        if (!tileSources.length) {\n\t            return;\n\t        }\n\t\n\t        this._opening = true;\n\t\n\t        var expected = tileSources.length;\n\t        var successes = 0;\n\t        var failures = 0;\n\t        var failEvent;\n\t\n\t        var checkCompletion = function() {\n\t            if (successes + failures === expected) {\n\t                if (successes) {\n\t                    if (_this._firstOpen || !_this.preserveViewport) {\n\t                        _this.viewport.goHome( true );\n\t                        _this.viewport.update();\n\t                    }\n\t\n\t                    _this._firstOpen = false;\n\t\n\t                    var source = tileSources[0];\n\t                    if (source.tileSource) {\n\t                        source = source.tileSource;\n\t                    }\n\t\n\t                    // Global overlays\n\t                    if( _this.overlays && !_this.preserveOverlays ){\n\t                        for ( var i = 0; i < _this.overlays.length; i++ ) {\n\t                            _this.currentOverlays[ i ] = getOverlayObject( _this, _this.overlays[ i ] );\n\t                        }\n\t                    }\n\t\n\t                    _this._drawOverlays();\n\t                    _this._opening = false;\n\t\n\t                    /**\n\t                     * Raised when the viewer has opened and loaded one or more TileSources.\n\t                     *\n\t                     * @event open\n\t                     * @memberof OpenSeadragon.Viewer\n\t                     * @type {object}\n\t                     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t                     * @property {OpenSeadragon.TileSource} source - The tile source that was opened.\n\t                     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                     */\n\t                    // TODO: what if there are multiple sources?\n\t                    _this.raiseEvent( 'open', { source: source } );\n\t                } else {\n\t                    _this._opening = false;\n\t\n\t                    /**\n\t                     * Raised when an error occurs loading a TileSource.\n\t                     *\n\t                     * @event open-failed\n\t                     * @memberof OpenSeadragon.Viewer\n\t                     * @type {object}\n\t                     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t                     * @property {String} message - Information about what failed.\n\t                     * @property {String} source - The tile source that failed.\n\t                     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                     */\n\t                    _this.raiseEvent( 'open-failed', failEvent );\n\t                }\n\t            }\n\t        };\n\t\n\t        var doOne = function(options) {\n\t            if (!$.isPlainObject(options) || !options.tileSource) {\n\t                options = {\n\t                    tileSource: options\n\t                };\n\t            }\n\t\n\t            if (options.index !== undefined) {\n\t                $.console.error('[Viewer.open] setting indexes here is not supported; use addTiledImage instead');\n\t                delete options.index;\n\t            }\n\t\n\t            if (options.collectionImmediately === undefined) {\n\t                options.collectionImmediately = true;\n\t            }\n\t\n\t            var originalSuccess = options.success;\n\t            options.success = function(event) {\n\t                successes++;\n\t\n\t                // TODO: now that options has other things besides tileSource, the overlays\n\t                // should probably be at the options level, not the tileSource level.\n\t                if (options.tileSource.overlays) {\n\t                    for (var i = 0; i < options.tileSource.overlays.length; i++) {\n\t                        _this.addOverlay(options.tileSource.overlays[i]);\n\t                    }\n\t                }\n\t\n\t                if (originalSuccess) {\n\t                    originalSuccess(event);\n\t                }\n\t\n\t                checkCompletion();\n\t            };\n\t\n\t            var originalError = options.error;\n\t            options.error = function(event) {\n\t                failures++;\n\t\n\t                if (!failEvent) {\n\t                    failEvent = event;\n\t                }\n\t\n\t                if (originalError) {\n\t                    originalError(event);\n\t                }\n\t\n\t                checkCompletion();\n\t            };\n\t\n\t            _this.addTiledImage(options);\n\t        };\n\t\n\t        // TileSources\n\t        for (var i = 0; i < tileSources.length; i++) {\n\t            doOne(tileSources[i]);\n\t        }\n\t\n\t        return this;\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:close\n\t     */\n\t    close: function ( ) {\n\t        if ( !THIS[ this.hash ] ) {\n\t            //this viewer has already been destroyed: returning immediately\n\t            return this;\n\t        }\n\t\n\t        this._opening = false;\n\t\n\t        if ( this.navigator ) {\n\t            this.navigator.close();\n\t        }\n\t\n\t        if (!this.preserveOverlays) {\n\t            this.clearOverlays();\n\t            this.overlaysContainer.innerHTML = \"\";\n\t        }\n\t\n\t        THIS[ this.hash ].animating = false;\n\t        this.world.removeAll();\n\t        this.imageLoader.clear();\n\t\n\t        /**\n\t         * Raised when the viewer is closed (see {@link OpenSeadragon.Viewer#close}).\n\t         *\n\t         * @event close\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'close' );\n\t\n\t        return this;\n\t    },\n\t\n\t\n\t    /**\n\t     * Function to destroy the viewer and clean up everything created by OpenSeadragon.\n\t     *\n\t     * Example:\n\t     * var viewer = OpenSeadragon({\n\t     *   [...]\n\t     * });\n\t     *\n\t     * //when you are done with the viewer:\n\t     * viewer.destroy();\n\t     * viewer = null; //important\n\t     *\n\t     * @function\n\t     */\n\t    destroy: function( ) {\n\t        if ( !THIS[ this.hash ] ) {\n\t            //this viewer has already been destroyed: returning immediately\n\t            return;\n\t        }\n\t\n\t        this.close();\n\t\n\t        this.clearOverlays();\n\t        this.overlaysContainer.innerHTML = \"\";\n\t\n\t        //TODO: implement this...\n\t        //this.unbindSequenceControls()\n\t        //this.unbindStandardControls()\n\t\n\t        if (this.referenceStrip) {\n\t            this.referenceStrip.destroy();\n\t            this.referenceStrip = null;\n\t        }\n\t\n\t        if ( this._updateRequestId !== null ) {\n\t            $.cancelAnimationFrame( this._updateRequestId );\n\t            this._updateRequestId = null;\n\t        }\n\t\n\t        if ( this.drawer ) {\n\t            this.drawer.destroy();\n\t        }\n\t\n\t        this.removeAllHandlers();\n\t\n\t        // Go through top element (passed to us) and remove all children\n\t        // Use removeChild to make sure it handles SVG or any non-html\n\t        // also it performs better - http://jsperf.com/innerhtml-vs-removechild/15\n\t        if (this.element){\n\t            while (this.element.firstChild) {\n\t                this.element.removeChild(this.element.firstChild);\n\t            }\n\t        }\n\t\n\t        // destroy the mouse trackers\n\t        if (this.innerTracker){\n\t            this.innerTracker.destroy();\n\t        }\n\t        if (this.outerTracker){\n\t            this.outerTracker.destroy();\n\t        }\n\t\n\t        THIS[ this.hash ] = null;\n\t        delete THIS[ this.hash ];\n\t\n\t        // clear all our references to dom objects\n\t        this.canvas = null;\n\t        this.container = null;\n\t\n\t        // clear our reference to the main element - they will need to pass it in again, creating a new viewer\n\t        this.element = null;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @return {Boolean}\n\t     */\n\t    isMouseNavEnabled: function () {\n\t        return this.innerTracker.isTracking();\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Boolean} enabled - true to enable, false to disable\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:mouse-enabled\n\t     */\n\t    setMouseNavEnabled: function( enabled ){\n\t        this.innerTracker.setTracking( enabled );\n\t        this.outerTracker.setTracking( enabled );\n\t        /**\n\t         * Raised when mouse/touch navigation is enabled or disabled (see {@link OpenSeadragon.Viewer#setMouseNavEnabled}).\n\t         *\n\t         * @event mouse-enabled\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {Boolean} enabled\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'mouse-enabled', { enabled: enabled } );\n\t        return this;\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @return {Boolean}\n\t     */\n\t    areControlsEnabled: function () {\n\t        var enabled = this.controls.length,\n\t            i;\n\t        for( i = 0; i < this.controls.length; i++ ){\n\t            enabled = enabled && this.controls[ i ].isVisible();\n\t        }\n\t        return enabled;\n\t    },\n\t\n\t\n\t    /**\n\t     * Shows or hides the controls (e.g. the default navigation buttons).\n\t     *\n\t     * @function\n\t     * @param {Boolean} true to show, false to hide.\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:controls-enabled\n\t     */\n\t    setControlsEnabled: function( enabled ) {\n\t        if( enabled ){\n\t            abortControlsAutoHide( this );\n\t        } else {\n\t            beginControlsAutoHide( this );\n\t        }\n\t        /**\n\t         * Raised when the navigation controls are shown or hidden (see {@link OpenSeadragon.Viewer#setControlsEnabled}).\n\t         *\n\t         * @event controls-enabled\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {Boolean} enabled\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'controls-enabled', { enabled: enabled } );\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Turns debugging mode on or off for this viewer.\n\t     *\n\t     * @function\n\t     * @param {Boolean} true to turn debug on, false to turn debug off.\n\t     */\n\t    setDebugMode: function(debugMode){\n\t\n\t        for (var i = 0; i < this.world.getItemCount(); i++) {\n\t            this.world.getItemAt(i).debugMode = debugMode;\n\t        }\n\t\n\t        this.debugMode = debugMode;\n\t        this.forceRedraw();\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @return {Boolean}\n\t     */\n\t    isFullPage: function () {\n\t        return THIS[ this.hash ].fullPage;\n\t    },\n\t\n\t\n\t    /**\n\t     * Toggle full page mode.\n\t     * @function\n\t     * @param {Boolean} fullPage\n\t     *      If true, enter full page mode.  If false, exit full page mode.\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:pre-full-page\n\t     * @fires OpenSeadragon.Viewer.event:full-page\n\t     */\n\t    setFullPage: function( fullPage ) {\n\t\n\t        var body = document.body,\n\t            bodyStyle = body.style,\n\t            docStyle = document.documentElement.style,\n\t            _this = this,\n\t            nodes,\n\t            i;\n\t\n\t        //don't bother modifying the DOM if we are already in full page mode.\n\t        if ( fullPage == this.isFullPage() ) {\n\t            return this;\n\t        }\n\t\n\t        var fullPageEventArgs = {\n\t            fullPage: fullPage,\n\t            preventDefaultAction: false\n\t        };\n\t        /**\n\t         * Raised when the viewer is about to change to/from full-page mode (see {@link OpenSeadragon.Viewer#setFullPage}).\n\t         *\n\t         * @event pre-full-page\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {Boolean} fullPage - True if entering full-page mode, false if exiting full-page mode.\n\t         * @property {Boolean} preventDefaultAction - Set to true to prevent full-page mode change. Default: false.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'pre-full-page', fullPageEventArgs );\n\t        if ( fullPageEventArgs.preventDefaultAction ) {\n\t            return this;\n\t        }\n\t\n\t        if ( fullPage ) {\n\t\n\t            this.elementSize = $.getElementSize( this.element );\n\t            this.pageScroll = $.getPageScroll();\n\t\n\t            this.elementMargin = this.element.style.margin;\n\t            this.element.style.margin = \"0\";\n\t            this.elementPadding = this.element.style.padding;\n\t            this.element.style.padding = \"0\";\n\t\n\t            this.bodyMargin = bodyStyle.margin;\n\t            this.docMargin = docStyle.margin;\n\t            bodyStyle.margin = \"0\";\n\t            docStyle.margin = \"0\";\n\t\n\t            this.bodyPadding = bodyStyle.padding;\n\t            this.docPadding = docStyle.padding;\n\t            bodyStyle.padding = \"0\";\n\t            docStyle.padding = \"0\";\n\t\n\t            this.bodyWidth = bodyStyle.width;\n\t            this.docWidth = docStyle.width;\n\t            bodyStyle.width = \"100%\";\n\t            docStyle.width = \"100%\";\n\t\n\t            this.bodyHeight = bodyStyle.height;\n\t            this.docHeight = docStyle.height;\n\t            bodyStyle.height = \"100%\";\n\t            docStyle.height = \"100%\";\n\t\n\t            //when entering full screen on the ipad it wasn't sufficient to leave\n\t            //the body intact as only only the top half of the screen would\n\t            //respond to touch events on the canvas, while the bottom half treated\n\t            //them as touch events on the document body.  Thus we remove and store\n\t            //the bodies elements and replace them when we leave full screen.\n\t            this.previousBody = [];\n\t            THIS[ this.hash ].prevElementParent = this.element.parentNode;\n\t            THIS[ this.hash ].prevNextSibling = this.element.nextSibling;\n\t            THIS[ this.hash ].prevElementWidth = this.element.style.width;\n\t            THIS[ this.hash ].prevElementHeight = this.element.style.height;\n\t            nodes = body.childNodes.length;\n\t            for ( i = 0; i < nodes; i++ ) {\n\t                this.previousBody.push( body.childNodes[ 0 ] );\n\t                body.removeChild( body.childNodes[ 0 ] );\n\t            }\n\t\n\t            //If we've got a toolbar, we need to enable the user to use css to\n\t            //preserve it in fullpage mode\n\t            if ( this.toolbar && this.toolbar.element ) {\n\t                //save a reference to the parent so we can put it back\n\t                //in the long run we need a better strategy\n\t                this.toolbar.parentNode = this.toolbar.element.parentNode;\n\t                this.toolbar.nextSibling = this.toolbar.element.nextSibling;\n\t                body.appendChild( this.toolbar.element );\n\t\n\t                //Make sure the user has some ability to style the toolbar based\n\t                //on the mode\n\t                $.addClass( this.toolbar.element, 'fullpage' );\n\t            }\n\t\n\t            $.addClass( this.element, 'fullpage' );\n\t            body.appendChild( this.element );\n\t\n\t            this.element.style.height = $.getWindowSize().y + 'px';\n\t            this.element.style.width = $.getWindowSize().x + 'px';\n\t\n\t            if ( this.toolbar && this.toolbar.element ) {\n\t                this.element.style.height = (\n\t                    $.getElementSize( this.element ).y - $.getElementSize( this.toolbar.element ).y\n\t                ) + 'px';\n\t            }\n\t\n\t            THIS[ this.hash ].fullPage = true;\n\t\n\t            // mouse will be inside container now\n\t            $.delegate( this, onContainerEnter )( {} );\n\t\n\t        } else {\n\t\n\t            this.element.style.margin = this.elementMargin;\n\t            this.element.style.padding = this.elementPadding;\n\t\n\t            bodyStyle.margin = this.bodyMargin;\n\t            docStyle.margin = this.docMargin;\n\t\n\t            bodyStyle.padding = this.bodyPadding;\n\t            docStyle.padding = this.docPadding;\n\t\n\t            bodyStyle.width = this.bodyWidth;\n\t            docStyle.width = this.docWidth;\n\t\n\t            bodyStyle.height = this.bodyHeight;\n\t            docStyle.height = this.docHeight;\n\t\n\t            body.removeChild( this.element );\n\t            nodes = this.previousBody.length;\n\t            for ( i = 0; i < nodes; i++ ) {\n\t                body.appendChild( this.previousBody.shift() );\n\t            }\n\t\n\t            $.removeClass( this.element, 'fullpage' );\n\t            THIS[ this.hash ].prevElementParent.insertBefore(\n\t                this.element,\n\t                THIS[ this.hash ].prevNextSibling\n\t            );\n\t\n\t            //If we've got a toolbar, we need to enable the user to use css to\n\t            //reset it to its original state\n\t            if ( this.toolbar && this.toolbar.element ) {\n\t                body.removeChild( this.toolbar.element );\n\t\n\t                //Make sure the user has some ability to style the toolbar based\n\t                //on the mode\n\t                $.removeClass( this.toolbar.element, 'fullpage' );\n\t\n\t                this.toolbar.parentNode.insertBefore(\n\t                    this.toolbar.element,\n\t                    this.toolbar.nextSibling\n\t                );\n\t                delete this.toolbar.parentNode;\n\t                delete this.toolbar.nextSibling;\n\t            }\n\t\n\t            this.element.style.width = THIS[ this.hash ].prevElementWidth;\n\t            this.element.style.height = THIS[ this.hash ].prevElementHeight;\n\t\n\t            // After exiting fullPage or fullScreen, it can take some time\n\t            // before the browser can actually set the scroll.\n\t            var restoreScrollCounter = 0;\n\t            var restoreScroll = function() {\n\t                $.setPageScroll( _this.pageScroll );\n\t                var pageScroll = $.getPageScroll();\n\t                restoreScrollCounter++;\n\t                if (restoreScrollCounter < 10 &&\n\t                    (pageScroll.x !== _this.pageScroll.x ||\n\t                    pageScroll.y !== _this.pageScroll.y)) {\n\t                    $.requestAnimationFrame( restoreScroll );\n\t                }\n\t            };\n\t            $.requestAnimationFrame( restoreScroll );\n\t\n\t            THIS[ this.hash ].fullPage = false;\n\t\n\t            // mouse will likely be outside now\n\t            $.delegate( this, onContainerExit )( { } );\n\t\n\t        }\n\t\n\t        if ( this.navigator && this.viewport ) {\n\t            this.navigator.update( this.viewport );\n\t        }\n\t\n\t        /**\n\t         * Raised when the viewer has changed to/from full-page mode (see {@link OpenSeadragon.Viewer#setFullPage}).\n\t         *\n\t         * @event full-page\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {Boolean} fullPage - True if changed to full-page mode, false if exited full-page mode.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'full-page', { fullPage: fullPage } );\n\t\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Toggle full screen mode if supported. Toggle full page mode otherwise.\n\t     * @function\n\t     * @param {Boolean} fullScreen\n\t     *      If true, enter full screen mode.  If false, exit full screen mode.\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:pre-full-screen\n\t     * @fires OpenSeadragon.Viewer.event:full-screen\n\t     */\n\t    setFullScreen: function( fullScreen ) {\n\t        var _this = this;\n\t\n\t        if ( !$.supportsFullScreen ) {\n\t            return this.setFullPage( fullScreen );\n\t        }\n\t\n\t        if ( $.isFullScreen() === fullScreen ) {\n\t            return this;\n\t        }\n\t\n\t        var fullScreeEventArgs = {\n\t            fullScreen: fullScreen,\n\t            preventDefaultAction: false\n\t        };\n\t        /**\n\t         * Raised when the viewer is about to change to/from full-screen mode (see {@link OpenSeadragon.Viewer#setFullScreen}).\n\t         * Note: the pre-full-screen event is not raised when the user is exiting\n\t         * full-screen mode by pressing the Esc key. In that case, consider using\n\t         * the full-screen, pre-full-page or full-page events.\n\t         *\n\t         * @event pre-full-screen\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {Boolean} fullScreen - True if entering full-screen mode, false if exiting full-screen mode.\n\t         * @property {Boolean} preventDefaultAction - Set to true to prevent full-screen mode change. Default: false.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'pre-full-screen', fullScreeEventArgs );\n\t        if ( fullScreeEventArgs.preventDefaultAction ) {\n\t            return this;\n\t        }\n\t\n\t        if ( fullScreen ) {\n\t\n\t            this.setFullPage( true );\n\t            // If the full page mode is not actually entered, we need to prevent\n\t            // the full screen mode.\n\t            if ( !this.isFullPage() ) {\n\t                return this;\n\t            }\n\t\n\t            this.fullPageStyleWidth = this.element.style.width;\n\t            this.fullPageStyleHeight = this.element.style.height;\n\t            this.element.style.width = '100%';\n\t            this.element.style.height = '100%';\n\t\n\t            var onFullScreenChange = function() {\n\t                var isFullScreen = $.isFullScreen();\n\t                if ( !isFullScreen ) {\n\t                    $.removeEvent( document, $.fullScreenEventName, onFullScreenChange );\n\t                    $.removeEvent( document, $.fullScreenErrorEventName, onFullScreenChange );\n\t\n\t                    _this.setFullPage( false );\n\t                    if ( _this.isFullPage() ) {\n\t                        _this.element.style.width = _this.fullPageStyleWidth;\n\t                        _this.element.style.height = _this.fullPageStyleHeight;\n\t                    }\n\t                }\n\t                if ( _this.navigator && _this.viewport ) {\n\t                    //09/08/2018 - Fabroh : Fix issue #1504 : Ensure to get the navigator updated on fullscreen out with custom location with a timeout\n\t                    setTimeout(function(){\n\t                        _this.navigator.update( _this.viewport );\n\t                    });\n\t                }\n\t                /**\n\t                 * Raised when the viewer has changed to/from full-screen mode (see {@link OpenSeadragon.Viewer#setFullScreen}).\n\t                 *\n\t                 * @event full-screen\n\t                 * @memberof OpenSeadragon.Viewer\n\t                 * @type {object}\n\t                 * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t                 * @property {Boolean} fullScreen - True if changed to full-screen mode, false if exited full-screen mode.\n\t                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                 */\n\t                _this.raiseEvent( 'full-screen', { fullScreen: isFullScreen } );\n\t            };\n\t            $.addEvent( document, $.fullScreenEventName, onFullScreenChange );\n\t            $.addEvent( document, $.fullScreenErrorEventName, onFullScreenChange );\n\t\n\t            $.requestFullScreen( document.body );\n\t\n\t        } else {\n\t            $.exitFullScreen();\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @return {Boolean}\n\t     */\n\t    isVisible: function () {\n\t        return this.container.style.visibility != \"hidden\";\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @param {Boolean} visible\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:visible\n\t     */\n\t    setVisible: function( visible ){\n\t        this.container.style.visibility = visible ? \"\" : \"hidden\";\n\t        /**\n\t         * Raised when the viewer is shown or hidden (see {@link OpenSeadragon.Viewer#setVisible}).\n\t         *\n\t         * @event visible\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {Boolean} visible\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'visible', { visible: visible } );\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Add a tiled image to the viewer.\n\t     * options.tileSource can be anything that {@link OpenSeadragon.Viewer#open}\n\t     *  supports except arrays of images.\n\t     * Note that you can specify options.width or options.height, but not both.\n\t     * The other dimension will be calculated according to the item's aspect ratio.\n\t     * If collectionMode is on (see {@link OpenSeadragon.Options}), the new image is\n\t     * automatically arranged with the others.\n\t     * @function\n\t     * @param {Object} options\n\t     * @param {String|Object|Function} options.tileSource - The TileSource specifier.\n\t     * A String implies a url used to determine the tileSource implementation\n\t     *      based on the file extension of url. JSONP is implied by *.js,\n\t     *      otherwise the url is retrieved as text and the resulting text is\n\t     *      introspected to determine if its json, xml, or text and parsed.\n\t     * An Object implies an inline configuration which has a single\n\t     *      property sufficient for being able to determine tileSource\n\t     *      implementation. If the object has a property which is a function\n\t     *      named 'getTileUrl', it is treated as a custom TileSource.\n\t     * @param {Number} [options.index] The index of the item. Added on top of\n\t     * all other items if not specified.\n\t     * @param {Boolean} [options.replace=false] If true, the item at options.index will be\n\t     * removed and the new item is added in its place. options.tileSource will be\n\t     * interpreted and fetched if necessary before the old item is removed to avoid leaving\n\t     * a gap in the world.\n\t     * @param {Number} [options.x=0] The X position for the image in viewport coordinates.\n\t     * @param {Number} [options.y=0] The Y position for the image in viewport coordinates.\n\t     * @param {Number} [options.width=1] The width for the image in viewport coordinates.\n\t     * @param {Number} [options.height] The height for the image in viewport coordinates.\n\t     * @param {OpenSeadragon.Rect} [options.fitBounds] The bounds in viewport coordinates\n\t     * to fit the image into. If specified, x, y, width and height get ignored.\n\t     * @param {OpenSeadragon.Placement} [options.fitBoundsPlacement=OpenSeadragon.Placement.CENTER]\n\t     * How to anchor the image in the bounds if options.fitBounds is set.\n\t     * @param {OpenSeadragon.Rect} [options.clip] - An area, in image pixels, to clip to\n\t     * (portions of the image outside of this area will not be visible). Only works on\n\t     * browsers that support the HTML5 canvas.\n\t     * @param {Number} [options.opacity=1] Proportional opacity of the tiled images (1=opaque, 0=hidden)\n\t     * @param {Boolean} [options.preload=false]  Default switch for loading hidden images (true loads, false blocks)\n\t     * @param {Number} [options.degrees=0] Initial rotation of the tiled image around\n\t     * its top left corner in degrees.\n\t     * @param {String} [options.compositeOperation] How the image is composited onto other images.\n\t     * @param {String} [options.crossOriginPolicy] The crossOriginPolicy for this specific image,\n\t     * overriding viewer.crossOriginPolicy.\n\t     * @param {Boolean} [options.ajaxWithCredentials] Whether to set withCredentials on tile AJAX\n\t     * @param {Boolean} [options.loadTilesWithAjax]\n\t     *      Whether to load tile data using AJAX requests.\n\t     *      Defaults to the setting in {@link OpenSeadragon.Options}.\n\t     * @param {Object} [options.ajaxHeaders]\n\t     *      A set of headers to include when making tile AJAX requests.\n\t     *      Note that these headers will be merged over any headers specified in {@link OpenSeadragon.Options}.\n\t     *      Specifying a falsy value for a header will clear its existing value set at the Viewer level (if any).\n\t     * requests.\n\t     * @param {Function} [options.success] A function that gets called when the image is\n\t     * successfully added. It's passed the event object which contains a single property:\n\t     * \"item\", which is the resulting instance of TiledImage.\n\t     * @param {Function} [options.error] A function that gets called if the image is\n\t     * unable to be added. It's passed the error event object, which contains \"message\"\n\t     * and \"source\" properties.\n\t     * @param {Boolean} [options.collectionImmediately=false] If collectionMode is on,\n\t     * specifies whether to snap to the new arrangement immediately or to animate to it.\n\t     * @param {String|CanvasGradient|CanvasPattern|Function} [options.placeholderFillStyle] - See {@link OpenSeadragon.Options}.\n\t     * @fires OpenSeadragon.World.event:add-item\n\t     * @fires OpenSeadragon.Viewer.event:add-item-failed\n\t     */\n\t    addTiledImage: function( options ) {\n\t        $.console.assert(options, \"[Viewer.addTiledImage] options is required\");\n\t        $.console.assert(options.tileSource, \"[Viewer.addTiledImage] options.tileSource is required\");\n\t        $.console.assert(!options.replace || (options.index > -1 && options.index < this.world.getItemCount()),\n\t            \"[Viewer.addTiledImage] if options.replace is used, options.index must be a valid index in Viewer.world\");\n\t\n\t        var _this = this;\n\t\n\t        if (options.replace) {\n\t            options.replaceItem = _this.world.getItemAt(options.index);\n\t        }\n\t\n\t        this._hideMessage();\n\t\n\t        if (options.placeholderFillStyle === undefined) {\n\t            options.placeholderFillStyle = this.placeholderFillStyle;\n\t        }\n\t        if (options.opacity === undefined) {\n\t            options.opacity = this.opacity;\n\t        }\n\t        if (options.preload === undefined) {\n\t            options.preload = this.preload;\n\t        }\n\t        if (options.compositeOperation === undefined) {\n\t            options.compositeOperation = this.compositeOperation;\n\t        }\n\t        if (options.crossOriginPolicy === undefined) {\n\t            options.crossOriginPolicy = options.tileSource.crossOriginPolicy !== undefined ? options.tileSource.crossOriginPolicy : this.crossOriginPolicy;\n\t        }\n\t        if (options.ajaxWithCredentials === undefined) {\n\t            options.ajaxWithCredentials = this.ajaxWithCredentials;\n\t        }\n\t        if (options.loadTilesWithAjax === undefined) {\n\t            options.loadTilesWithAjax = this.loadTilesWithAjax;\n\t        }\n\t        if (options.ajaxHeaders === undefined || options.ajaxHeaders === null) {\n\t            options.ajaxHeaders = this.ajaxHeaders;\n\t        } else if ($.isPlainObject(options.ajaxHeaders) && $.isPlainObject(this.ajaxHeaders)) {\n\t            options.ajaxHeaders = $.extend({}, this.ajaxHeaders, options.ajaxHeaders);\n\t        }\n\t\n\t        var myQueueItem = {\n\t            options: options\n\t        };\n\t\n\t        function raiseAddItemFailed( event ) {\n\t            for (var i = 0; i < _this._loadQueue.length; i++) {\n\t                if (_this._loadQueue[i] === myQueueItem) {\n\t                    _this._loadQueue.splice(i, 1);\n\t                    break;\n\t                }\n\t            }\n\t\n\t            if (_this._loadQueue.length === 0) {\n\t                refreshWorld(myQueueItem);\n\t            }\n\t\n\t             /**\n\t             * Raised when an error occurs while adding a item.\n\t             * @event add-item-failed\n\t             * @memberOf OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t             * @property {String} message\n\t             * @property {String} source\n\t             * @property {Object} options The options passed to the addTiledImage method.\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            _this.raiseEvent( 'add-item-failed', event );\n\t\n\t            if (options.error) {\n\t                options.error(event);\n\t            }\n\t        }\n\t\n\t        function refreshWorld(theItem) {\n\t            if (_this.collectionMode) {\n\t                _this.world.arrange({\n\t                    immediately: theItem.options.collectionImmediately,\n\t                    rows: _this.collectionRows,\n\t                    columns: _this.collectionColumns,\n\t                    layout: _this.collectionLayout,\n\t                    tileSize: _this.collectionTileSize,\n\t                    tileMargin: _this.collectionTileMargin\n\t                });\n\t                _this.world.setAutoRefigureSizes(true);\n\t            }\n\t        }\n\t\n\t        if ($.isArray(options.tileSource)) {\n\t            setTimeout(function() {\n\t                raiseAddItemFailed({\n\t                    message: \"[Viewer.addTiledImage] Sequences can not be added; add them one at a time instead.\",\n\t                    source: options.tileSource,\n\t                    options: options\n\t                });\n\t            });\n\t            return;\n\t        }\n\t\n\t        this._loadQueue.push(myQueueItem);\n\t\n\t        function processReadyItems() {\n\t            var queueItem, tiledImage, optionsClone;\n\t            while (_this._loadQueue.length) {\n\t                queueItem = _this._loadQueue[0];\n\t                if (!queueItem.tileSource) {\n\t                    break;\n\t                }\n\t\n\t                _this._loadQueue.splice(0, 1);\n\t\n\t                if (queueItem.options.replace) {\n\t                    var newIndex = _this.world.getIndexOfItem(queueItem.options.replaceItem);\n\t                    if (newIndex != -1) {\n\t                        queueItem.options.index = newIndex;\n\t                    }\n\t                    _this.world.removeItem(queueItem.options.replaceItem);\n\t                }\n\t\n\t                tiledImage = new $.TiledImage({\n\t                    viewer: _this,\n\t                    source: queueItem.tileSource,\n\t                    viewport: _this.viewport,\n\t                    drawer: _this.drawer,\n\t                    tileCache: _this.tileCache,\n\t                    imageLoader: _this.imageLoader,\n\t                    x: queueItem.options.x,\n\t                    y: queueItem.options.y,\n\t                    width: queueItem.options.width,\n\t                    height: queueItem.options.height,\n\t                    fitBounds: queueItem.options.fitBounds,\n\t                    fitBoundsPlacement: queueItem.options.fitBoundsPlacement,\n\t                    clip: queueItem.options.clip,\n\t                    placeholderFillStyle: queueItem.options.placeholderFillStyle,\n\t                    opacity: queueItem.options.opacity,\n\t                    preload: queueItem.options.preload,\n\t                    degrees: queueItem.options.degrees,\n\t                    compositeOperation: queueItem.options.compositeOperation,\n\t                    springStiffness: _this.springStiffness,\n\t                    animationTime: _this.animationTime,\n\t                    minZoomImageRatio: _this.minZoomImageRatio,\n\t                    wrapHorizontal: _this.wrapHorizontal,\n\t                    wrapVertical: _this.wrapVertical,\n\t                    immediateRender: _this.immediateRender,\n\t                    blendTime: _this.blendTime,\n\t                    alwaysBlend: _this.alwaysBlend,\n\t                    minPixelRatio: _this.minPixelRatio,\n\t                    smoothTileEdgesMinZoom: _this.smoothTileEdgesMinZoom,\n\t                    iOSDevice: _this.iOSDevice,\n\t                    crossOriginPolicy: queueItem.options.crossOriginPolicy,\n\t                    ajaxWithCredentials: queueItem.options.ajaxWithCredentials,\n\t                    loadTilesWithAjax: queueItem.options.loadTilesWithAjax,\n\t                    ajaxHeaders: queueItem.options.ajaxHeaders,\n\t                    debugMode: _this.debugMode\n\t                });\n\t\n\t                if (_this.collectionMode) {\n\t                    _this.world.setAutoRefigureSizes(false);\n\t                }\n\t                _this.world.addItem( tiledImage, {\n\t                    index: queueItem.options.index\n\t                });\n\t\n\t                if (_this._loadQueue.length === 0) {\n\t                    //this restores the autoRefigureSizes flag to true.\n\t                    refreshWorld(queueItem);\n\t                }\n\t\n\t                if (_this.world.getItemCount() === 1 && !_this.preserveViewport) {\n\t                    _this.viewport.goHome(true);\n\t                }\n\t\n\t                if (_this.navigator) {\n\t                    optionsClone = $.extend({}, queueItem.options, {\n\t                        replace: false, // navigator already removed the layer, nothing to replace\n\t                        originalTiledImage: tiledImage,\n\t                        tileSource: queueItem.tileSource\n\t                    });\n\t\n\t                    _this.navigator.addTiledImage(optionsClone);\n\t                }\n\t\n\t                if (queueItem.options.success) {\n\t                    queueItem.options.success({\n\t                        item: tiledImage\n\t                    });\n\t                }\n\t            }\n\t        }\n\t\n\t        getTileSourceImplementation( this, options.tileSource, options, function( tileSource ) {\n\t\n\t            myQueueItem.tileSource = tileSource;\n\t\n\t            // add everybody at the front of the queue that's ready to go\n\t            processReadyItems();\n\t        }, function( event ) {\n\t            event.options = options;\n\t            raiseAddItemFailed(event);\n\t\n\t            // add everybody at the front of the queue that's ready to go\n\t            processReadyItems();\n\t        } );\n\t    },\n\t\n\t    /**\n\t     * Add a simple image to the viewer.\n\t     * The options are the same as the ones in {@link OpenSeadragon.Viewer#addTiledImage}\n\t     * except for options.tileSource which is replaced by options.url.\n\t     * @function\n\t     * @param {Object} options - See {@link OpenSeadragon.Viewer#addTiledImage}\n\t     * for all the options\n\t     * @param {String} options.url - The URL of the image to add.\n\t     * @fires OpenSeadragon.World.event:add-item\n\t     * @fires OpenSeadragon.Viewer.event:add-item-failed\n\t     */\n\t    addSimpleImage: function(options) {\n\t        $.console.assert(options, \"[Viewer.addSimpleImage] options is required\");\n\t        $.console.assert(options.url, \"[Viewer.addSimpleImage] options.url is required\");\n\t\n\t        var opts = $.extend({}, options, {\n\t            tileSource: {\n\t                type: 'image',\n\t                url:  options.url\n\t            }\n\t        });\n\t        delete opts.url;\n\t        this.addTiledImage(opts);\n\t    },\n\t\n\t    // deprecated\n\t    addLayer: function( options ) {\n\t        var _this = this;\n\t\n\t        $.console.error( \"[Viewer.addLayer] this function is deprecated; use Viewer.addTiledImage() instead.\" );\n\t\n\t        var optionsClone = $.extend({}, options, {\n\t            success: function(event) {\n\t                _this.raiseEvent(\"add-layer\", {\n\t                    options: options,\n\t                    drawer: event.item\n\t                });\n\t            },\n\t            error: function(event) {\n\t                _this.raiseEvent(\"add-layer-failed\", event);\n\t            }\n\t        });\n\t\n\t        this.addTiledImage(optionsClone);\n\t        return this;\n\t    },\n\t\n\t    // deprecated\n\t    getLayerAtLevel: function( level ) {\n\t        $.console.error( \"[Viewer.getLayerAtLevel] this function is deprecated; use World.getItemAt() instead.\" );\n\t        return this.world.getItemAt(level);\n\t    },\n\t\n\t    // deprecated\n\t    getLevelOfLayer: function( drawer ) {\n\t        $.console.error( \"[Viewer.getLevelOfLayer] this function is deprecated; use World.getIndexOfItem() instead.\" );\n\t        return this.world.getIndexOfItem(drawer);\n\t    },\n\t\n\t    // deprecated\n\t    getLayersCount: function() {\n\t        $.console.error( \"[Viewer.getLayersCount] this function is deprecated; use World.getItemCount() instead.\" );\n\t        return this.world.getItemCount();\n\t    },\n\t\n\t    // deprecated\n\t    setLayerLevel: function( drawer, level ) {\n\t        $.console.error( \"[Viewer.setLayerLevel] this function is deprecated; use World.setItemIndex() instead.\" );\n\t        return this.world.setItemIndex(drawer, level);\n\t    },\n\t\n\t    // deprecated\n\t    removeLayer: function( drawer ) {\n\t        $.console.error( \"[Viewer.removeLayer] this function is deprecated; use World.removeItem() instead.\" );\n\t        return this.world.removeItem(drawer);\n\t    },\n\t\n\t    /**\n\t     * Force the viewer to redraw its contents.\n\t     * @returns {OpenSeadragon.Viewer} Chainable.\n\t     */\n\t    forceRedraw: function() {\n\t        THIS[ this.hash ].forceRedraw = true;\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     */\n\t    bindSequenceControls: function(){\n\t\n\t        //////////////////////////////////////////////////////////////////////////\n\t        // Image Sequence Controls\n\t        //////////////////////////////////////////////////////////////////////////\n\t        var onFocusHandler          = $.delegate( this, onFocus ),\n\t            onBlurHandler           = $.delegate( this, onBlur ),\n\t            onNextHandler           = $.delegate( this, onNext ),\n\t            onPreviousHandler       = $.delegate( this, onPrevious ),\n\t            navImages               = this.navImages,\n\t            useGroup                = true;\n\t\n\t        if( this.showSequenceControl ){\n\t\n\t            if( this.previousButton || this.nextButton ){\n\t                //if we are binding to custom buttons then layout and\n\t                //grouping is the responsibility of the page author\n\t                useGroup = false;\n\t            }\n\t\n\t            this.previousButton = new $.Button({\n\t                element:    this.previousButton ? $.getElement( this.previousButton ) : null,\n\t                clickTimeThreshold: this.clickTimeThreshold,\n\t                clickDistThreshold: this.clickDistThreshold,\n\t                tooltip:    $.getString( \"Tooltips.PreviousPage\" ),\n\t                srcRest:    resolveUrl( this.prefixUrl, navImages.previous.REST ),\n\t                srcGroup:   resolveUrl( this.prefixUrl, navImages.previous.GROUP ),\n\t                srcHover:   resolveUrl( this.prefixUrl, navImages.previous.HOVER ),\n\t                srcDown:    resolveUrl( this.prefixUrl, navImages.previous.DOWN ),\n\t                onRelease:  onPreviousHandler,\n\t                onFocus:    onFocusHandler,\n\t                onBlur:     onBlurHandler\n\t            });\n\t\n\t            this.nextButton = new $.Button({\n\t                element:    this.nextButton ? $.getElement( this.nextButton ) : null,\n\t                clickTimeThreshold: this.clickTimeThreshold,\n\t                clickDistThreshold: this.clickDistThreshold,\n\t                tooltip:    $.getString( \"Tooltips.NextPage\" ),\n\t                srcRest:    resolveUrl( this.prefixUrl, navImages.next.REST ),\n\t                srcGroup:   resolveUrl( this.prefixUrl, navImages.next.GROUP ),\n\t                srcHover:   resolveUrl( this.prefixUrl, navImages.next.HOVER ),\n\t                srcDown:    resolveUrl( this.prefixUrl, navImages.next.DOWN ),\n\t                onRelease:  onNextHandler,\n\t                onFocus:    onFocusHandler,\n\t                onBlur:     onBlurHandler\n\t            });\n\t\n\t            if( !this.navPrevNextWrap ){\n\t                this.previousButton.disable();\n\t            }\n\t\n\t            if (!this.tileSources || !this.tileSources.length) {\n\t                this.nextButton.disable();\n\t            }\n\t\n\t            if( useGroup ){\n\t                this.paging = new $.ButtonGroup({\n\t                    buttons: [\n\t                        this.previousButton,\n\t                        this.nextButton\n\t                    ],\n\t                    clickTimeThreshold: this.clickTimeThreshold,\n\t                    clickDistThreshold: this.clickDistThreshold\n\t                });\n\t\n\t                this.pagingControl = this.paging.element;\n\t\n\t                if( this.toolbar ){\n\t                    this.toolbar.addControl(\n\t                        this.pagingControl,\n\t                        {anchor: $.ControlAnchor.BOTTOM_RIGHT}\n\t                    );\n\t                }else{\n\t                    this.addControl(\n\t                        this.pagingControl,\n\t                        {anchor: this.sequenceControlAnchor || $.ControlAnchor.TOP_LEFT}\n\t                    );\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     */\n\t    bindStandardControls: function(){\n\t        //////////////////////////////////////////////////////////////////////////\n\t        // Navigation Controls\n\t        //////////////////////////////////////////////////////////////////////////\n\t        var beginZoomingInHandler   = $.delegate( this, beginZoomingIn ),\n\t            endZoomingHandler       = $.delegate( this, endZooming ),\n\t            doSingleZoomInHandler   = $.delegate( this, doSingleZoomIn ),\n\t            beginZoomingOutHandler  = $.delegate( this, beginZoomingOut ),\n\t            doSingleZoomOutHandler  = $.delegate( this, doSingleZoomOut ),\n\t            onHomeHandler           = $.delegate( this, onHome ),\n\t            onFullScreenHandler     = $.delegate( this, onFullScreen ),\n\t            onRotateLeftHandler     = $.delegate( this, onRotateLeft ),\n\t            onRotateRightHandler    = $.delegate( this, onRotateRight ),\n\t            onFlipHandler           = $.delegate( this, onFlip),\n\t            onFocusHandler          = $.delegate( this, onFocus ),\n\t            onBlurHandler           = $.delegate( this, onBlur ),\n\t            navImages               = this.navImages,\n\t            buttons                 = [],\n\t            useGroup                = true;\n\t\n\t\n\t        if ( this.showNavigationControl ) {\n\t\n\t            if( this.zoomInButton || this.zoomOutButton ||\n\t                this.homeButton || this.fullPageButton ||\n\t                this.rotateLeftButton || this.rotateRightButton ||\n\t                this.flipButton ) {\n\t                //if we are binding to custom buttons then layout and\n\t                //grouping is the responsibility of the page author\n\t                useGroup = false;\n\t            }\n\t\n\t            if ( this.showZoomControl ) {\n\t                buttons.push( this.zoomInButton = new $.Button({\n\t                    element:    this.zoomInButton ? $.getElement( this.zoomInButton ) : null,\n\t                    clickTimeThreshold: this.clickTimeThreshold,\n\t                    clickDistThreshold: this.clickDistThreshold,\n\t                    tooltip:    $.getString( \"Tooltips.ZoomIn\" ),\n\t                    srcRest:    resolveUrl( this.prefixUrl, navImages.zoomIn.REST ),\n\t                    srcGroup:   resolveUrl( this.prefixUrl, navImages.zoomIn.GROUP ),\n\t                    srcHover:   resolveUrl( this.prefixUrl, navImages.zoomIn.HOVER ),\n\t                    srcDown:    resolveUrl( this.prefixUrl, navImages.zoomIn.DOWN ),\n\t                    onPress:    beginZoomingInHandler,\n\t                    onRelease:  endZoomingHandler,\n\t                    onClick:    doSingleZoomInHandler,\n\t                    onEnter:    beginZoomingInHandler,\n\t                    onExit:     endZoomingHandler,\n\t                    onFocus:    onFocusHandler,\n\t                    onBlur:     onBlurHandler\n\t                }));\n\t\n\t                buttons.push( this.zoomOutButton = new $.Button({\n\t                    element:    this.zoomOutButton ? $.getElement( this.zoomOutButton ) : null,\n\t                    clickTimeThreshold: this.clickTimeThreshold,\n\t                    clickDistThreshold: this.clickDistThreshold,\n\t                    tooltip:    $.getString( \"Tooltips.ZoomOut\" ),\n\t                    srcRest:    resolveUrl( this.prefixUrl, navImages.zoomOut.REST ),\n\t                    srcGroup:   resolveUrl( this.prefixUrl, navImages.zoomOut.GROUP ),\n\t                    srcHover:   resolveUrl( this.prefixUrl, navImages.zoomOut.HOVER ),\n\t                    srcDown:    resolveUrl( this.prefixUrl, navImages.zoomOut.DOWN ),\n\t                    onPress:    beginZoomingOutHandler,\n\t                    onRelease:  endZoomingHandler,\n\t                    onClick:    doSingleZoomOutHandler,\n\t                    onEnter:    beginZoomingOutHandler,\n\t                    onExit:     endZoomingHandler,\n\t                    onFocus:    onFocusHandler,\n\t                    onBlur:     onBlurHandler\n\t                }));\n\t            }\n\t\n\t            if ( this.showHomeControl ) {\n\t                buttons.push( this.homeButton = new $.Button({\n\t                    element:    this.homeButton ? $.getElement( this.homeButton ) : null,\n\t                    clickTimeThreshold: this.clickTimeThreshold,\n\t                    clickDistThreshold: this.clickDistThreshold,\n\t                    tooltip:    $.getString( \"Tooltips.Home\" ),\n\t                    srcRest:    resolveUrl( this.prefixUrl, navImages.home.REST ),\n\t                    srcGroup:   resolveUrl( this.prefixUrl, navImages.home.GROUP ),\n\t                    srcHover:   resolveUrl( this.prefixUrl, navImages.home.HOVER ),\n\t                    srcDown:    resolveUrl( this.prefixUrl, navImages.home.DOWN ),\n\t                    onRelease:  onHomeHandler,\n\t                    onFocus:    onFocusHandler,\n\t                    onBlur:     onBlurHandler\n\t                }));\n\t            }\n\t\n\t            if ( this.showFullPageControl ) {\n\t                buttons.push( this.fullPageButton = new $.Button({\n\t                    element:    this.fullPageButton ? $.getElement( this.fullPageButton ) : null,\n\t                    clickTimeThreshold: this.clickTimeThreshold,\n\t                    clickDistThreshold: this.clickDistThreshold,\n\t                    tooltip:    $.getString( \"Tooltips.FullPage\" ),\n\t                    srcRest:    resolveUrl( this.prefixUrl, navImages.fullpage.REST ),\n\t                    srcGroup:   resolveUrl( this.prefixUrl, navImages.fullpage.GROUP ),\n\t                    srcHover:   resolveUrl( this.prefixUrl, navImages.fullpage.HOVER ),\n\t                    srcDown:    resolveUrl( this.prefixUrl, navImages.fullpage.DOWN ),\n\t                    onRelease:  onFullScreenHandler,\n\t                    onFocus:    onFocusHandler,\n\t                    onBlur:     onBlurHandler\n\t                }));\n\t            }\n\t\n\t            if ( this.showRotationControl ) {\n\t                buttons.push( this.rotateLeftButton = new $.Button({\n\t                    element:    this.rotateLeftButton ? $.getElement( this.rotateLeftButton ) : null,\n\t                    clickTimeThreshold: this.clickTimeThreshold,\n\t                    clickDistThreshold: this.clickDistThreshold,\n\t                    tooltip:    $.getString( \"Tooltips.RotateLeft\" ),\n\t                    srcRest:    resolveUrl( this.prefixUrl, navImages.rotateleft.REST ),\n\t                    srcGroup:   resolveUrl( this.prefixUrl, navImages.rotateleft.GROUP ),\n\t                    srcHover:   resolveUrl( this.prefixUrl, navImages.rotateleft.HOVER ),\n\t                    srcDown:    resolveUrl( this.prefixUrl, navImages.rotateleft.DOWN ),\n\t                    onRelease:  onRotateLeftHandler,\n\t                    onFocus:    onFocusHandler,\n\t                    onBlur:     onBlurHandler\n\t                }));\n\t\n\t                buttons.push( this.rotateRightButton = new $.Button({\n\t                    element:    this.rotateRightButton ? $.getElement( this.rotateRightButton ) : null,\n\t                    clickTimeThreshold: this.clickTimeThreshold,\n\t                    clickDistThreshold: this.clickDistThreshold,\n\t                    tooltip:    $.getString( \"Tooltips.RotateRight\" ),\n\t                    srcRest:    resolveUrl( this.prefixUrl, navImages.rotateright.REST ),\n\t                    srcGroup:   resolveUrl( this.prefixUrl, navImages.rotateright.GROUP ),\n\t                    srcHover:   resolveUrl( this.prefixUrl, navImages.rotateright.HOVER ),\n\t                    srcDown:    resolveUrl( this.prefixUrl, navImages.rotateright.DOWN ),\n\t                    onRelease:  onRotateRightHandler,\n\t                    onFocus:    onFocusHandler,\n\t                    onBlur:     onBlurHandler\n\t                }));\n\t            }\n\t\n\t            if ( this.showFlipControl ) {\n\t                buttons.push( this.flipButton = new $.Button({\n\t                    element:    this.flipButton ? $.getElement( this.flipButton ) : null,\n\t                    clickTimeThreshold: this.clickTimeThreshold,\n\t                    clickDistThreshold: this.clickDistThreshold,\n\t                    tooltip:    $.getString( \"Tooltips.Flip\" ),\n\t                    srcRest:    resolveUrl( this.prefixUrl, navImages.flip.REST ),\n\t                    srcGroup:   resolveUrl( this.prefixUrl, navImages.flip.GROUP ),\n\t                    srcHover:   resolveUrl( this.prefixUrl, navImages.flip.HOVER ),\n\t                    srcDown:    resolveUrl( this.prefixUrl, navImages.flip.DOWN ),\n\t                    onRelease:  onFlipHandler,\n\t                    onFocus:    onFocusHandler,\n\t                    onBlur:     onBlurHandler\n\t                }));\n\t            }\n\t\n\t            if ( useGroup ) {\n\t                this.buttons = new $.ButtonGroup({\n\t                    buttons:            buttons,\n\t                    clickTimeThreshold: this.clickTimeThreshold,\n\t                    clickDistThreshold: this.clickDistThreshold\n\t                });\n\t\n\t                this.navControl  = this.buttons.element;\n\t                this.addHandler( 'open', $.delegate( this, lightUp ) );\n\t\n\t                if( this.toolbar ){\n\t                    this.toolbar.addControl(\n\t                        this.navControl,\n\t                        {anchor: this.navigationControlAnchor || $.ControlAnchor.TOP_LEFT}\n\t                    );\n\t                } else {\n\t                    this.addControl(\n\t                        this.navControl,\n\t                        {anchor: this.navigationControlAnchor || $.ControlAnchor.TOP_LEFT}\n\t                    );\n\t                }\n\t            }\n\t\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Gets the active page of a sequence\n\t     * @function\n\t     * @return {Number}\n\t     */\n\t    currentPage: function() {\n\t        return this._sequenceIndex;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:page\n\t     */\n\t    goToPage: function( page ){\n\t        if( this.tileSources && page >= 0 && page < this.tileSources.length ){\n\t            this._sequenceIndex = page;\n\t\n\t            this._updateSequenceButtons( page );\n\t\n\t            this.open( this.tileSources[ page ] );\n\t\n\t            if( this.referenceStrip ){\n\t                this.referenceStrip.setFocus( page );\n\t            }\n\t\n\t            /**\n\t             * Raised when the page is changed on a viewer configured with multiple image sources (see {@link OpenSeadragon.Viewer#goToPage}).\n\t             *\n\t             * @event page\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {Object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t             * @property {Number} page - The page index.\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            this.raiseEvent( 'page', { page: page } );\n\t        }\n\t\n\t        return this;\n\t    },\n\t\n\t   /**\n\t     * Adds an html element as an overlay to the current viewport.  Useful for\n\t     * highlighting words or areas of interest on an image or other zoomable\n\t     * interface. The overlays added via this method are removed when the viewport\n\t     * is closed which include when changing page.\n\t     * @method\n\t     * @param {Element|String|Object} element - A reference to an element or an id for\n\t     *      the element which will be overlaid. Or an Object specifying the configuration for the overlay.\n\t     *      If using an object, see {@link OpenSeadragon.Overlay} for a list of\n\t     *      all available options.\n\t     * @param {OpenSeadragon.Point|OpenSeadragon.Rect} location - The point or\n\t     *      rectangle which will be overlaid. This is a viewport relative location.\n\t     * @param {OpenSeadragon.Placement} placement - The position of the\n\t     *      viewport which the location coordinates will be treated as relative\n\t     *      to.\n\t     * @param {function} onDraw - If supplied the callback is called when the overlay\n\t     *      needs to be drawn. It it the responsibility of the callback to do any drawing/positioning.\n\t     *      It is passed position, size and element.\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:add-overlay\n\t     */\n\t    addOverlay: function( element, location, placement, onDraw ) {\n\t        var options;\n\t        if( $.isPlainObject( element ) ){\n\t            options = element;\n\t        } else {\n\t            options = {\n\t                element: element,\n\t                location: location,\n\t                placement: placement,\n\t                onDraw: onDraw\n\t            };\n\t        }\n\t\n\t        element = $.getElement( options.element );\n\t\n\t        if ( getOverlayIndex( this.currentOverlays, element ) >= 0 ) {\n\t            // they're trying to add a duplicate overlay\n\t            return this;\n\t        }\n\t\n\t        var overlay = getOverlayObject( this, options);\n\t        this.currentOverlays.push(overlay);\n\t        overlay.drawHTML( this.overlaysContainer, this.viewport );\n\t\n\t        /**\n\t         * Raised when an overlay is added to the viewer (see {@link OpenSeadragon.Viewer#addOverlay}).\n\t         *\n\t         * @event add-overlay\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {Element} element - The overlay element.\n\t         * @property {OpenSeadragon.Point|OpenSeadragon.Rect} location\n\t         * @property {OpenSeadragon.Placement} placement\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'add-overlay', {\n\t            element: element,\n\t            location: options.location,\n\t            placement: options.placement\n\t        });\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Updates the overlay represented by the reference to the element or\n\t     * element id moving it to the new location, relative to the new placement.\n\t     * @method\n\t     * @param {Element|String} element - A reference to an element or an id for\n\t     *      the element which is overlaid.\n\t     * @param {OpenSeadragon.Point|OpenSeadragon.Rect} location - The point or\n\t     *      rectangle which will be overlaid. This is a viewport relative location.\n\t     * @param {OpenSeadragon.Placement} placement - The position of the\n\t     *      viewport which the location coordinates will be treated as relative\n\t     *      to.\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:update-overlay\n\t     */\n\t    updateOverlay: function( element, location, placement ) {\n\t        var i;\n\t\n\t        element = $.getElement( element );\n\t        i = getOverlayIndex( this.currentOverlays, element );\n\t\n\t        if ( i >= 0 ) {\n\t            this.currentOverlays[ i ].update( location, placement );\n\t            THIS[ this.hash ].forceRedraw = true;\n\t            /**\n\t             * Raised when an overlay's location or placement changes\n\t             * (see {@link OpenSeadragon.Viewer#updateOverlay}).\n\t             *\n\t             * @event update-overlay\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the\n\t             * Viewer which raised the event.\n\t             * @property {Element} element\n\t             * @property {OpenSeadragon.Point|OpenSeadragon.Rect} location\n\t             * @property {OpenSeadragon.Placement} placement\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            this.raiseEvent( 'update-overlay', {\n\t                element: element,\n\t                location: location,\n\t                placement: placement\n\t            });\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Removes an overlay identified by the reference element or element id\n\t     * and schedules an update.\n\t     * @method\n\t     * @param {Element|String} element - A reference to the element or an\n\t     *      element id which represent the ovelay content to be removed.\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:remove-overlay\n\t     */\n\t    removeOverlay: function( element ) {\n\t        var i;\n\t\n\t        element = $.getElement( element );\n\t        i = getOverlayIndex( this.currentOverlays, element );\n\t\n\t        if ( i >= 0 ) {\n\t            this.currentOverlays[ i ].destroy();\n\t            this.currentOverlays.splice( i, 1 );\n\t            THIS[ this.hash ].forceRedraw = true;\n\t            /**\n\t             * Raised when an overlay is removed from the viewer\n\t             * (see {@link OpenSeadragon.Viewer#removeOverlay}).\n\t             *\n\t             * @event remove-overlay\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the\n\t             * Viewer which raised the event.\n\t             * @property {Element} element - The overlay element.\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            this.raiseEvent( 'remove-overlay', {\n\t                element: element\n\t            });\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Removes all currently configured Overlays from this Viewer and schedules\n\t     * an update.\n\t     * @method\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:clear-overlay\n\t     */\n\t    clearOverlays: function() {\n\t        while ( this.currentOverlays.length > 0 ) {\n\t            this.currentOverlays.pop().destroy();\n\t        }\n\t        THIS[ this.hash ].forceRedraw = true;\n\t        /**\n\t         * Raised when all overlays are removed from the viewer (see {@link OpenSeadragon.Drawer#clearOverlays}).\n\t         *\n\t         * @event clear-overlay\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'clear-overlay', {} );\n\t        return this;\n\t    },\n\t\n\t     /**\n\t     * Finds an overlay identified by the reference element or element id\n\t     * and returns it as an object, return null if not found.\n\t     * @method\n\t     * @param {Element|String} element - A reference to the element or an\n\t     *      element id which represents the overlay content.\n\t     * @return {OpenSeadragon.Overlay} the matching overlay or null if none found.\n\t     */\n\t    getOverlayById: function( element ) {\n\t        var i;\n\t\n\t        element = $.getElement( element );\n\t        i = getOverlayIndex( this.currentOverlays, element );\n\t\n\t        if (i >= 0) {\n\t            return this.currentOverlays[i];\n\t        } else {\n\t            return null;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Updates the sequence buttons.\n\t     * @function OpenSeadragon.Viewer.prototype._updateSequenceButtons\n\t     * @private\n\t     * @param {Number} Sequence Value\n\t     */\n\t    _updateSequenceButtons: function( page ) {\n\t\n\t            if ( this.nextButton ) {\n\t                if(!this.tileSources || this.tileSources.length - 1 === page) {\n\t                    //Disable next button\n\t                    if ( !this.navPrevNextWrap ) {\n\t                        this.nextButton.disable();\n\t                    }\n\t                } else {\n\t                    this.nextButton.enable();\n\t                }\n\t            }\n\t            if ( this.previousButton ) {\n\t                if ( page > 0 ) {\n\t                    //Enable previous button\n\t                    this.previousButton.enable();\n\t                } else {\n\t                    if ( !this.navPrevNextWrap ) {\n\t                        this.previousButton.disable();\n\t                    }\n\t                }\n\t            }\n\t      },\n\t\n\t    /**\n\t     * Display a message in the viewport\n\t     * @function OpenSeadragon.Viewer.prototype._showMessage\n\t     * @private\n\t     * @param {String} text message\n\t     */\n\t    _showMessage: function ( message ) {\n\t        this._hideMessage();\n\t\n\t        var div = $.makeNeutralElement( \"div\" );\n\t        div.appendChild( document.createTextNode( message ) );\n\t\n\t        this.messageDiv = $.makeCenteredNode( div );\n\t\n\t        $.addClass(this.messageDiv, \"openseadragon-message\");\n\t\n\t        this.container.appendChild( this.messageDiv );\n\t    },\n\t\n\t    /**\n\t     * Hide any currently displayed viewport message\n\t     * @function OpenSeadragon.Viewer.prototype._hideMessage\n\t     * @private\n\t     */\n\t    _hideMessage: function () {\n\t        var div = this.messageDiv;\n\t        if (div) {\n\t            div.parentNode.removeChild(div);\n\t            delete this.messageDiv;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Gets this viewer's gesture settings for the given pointer device type.\n\t     * @method\n\t     * @param {String} type - The pointer device type to get the gesture settings for (\"mouse\", \"touch\", \"pen\", etc.).\n\t     * @return {OpenSeadragon.GestureSettings}\n\t     */\n\t    gestureSettingsByDeviceType: function ( type ) {\n\t        switch ( type ) {\n\t            case 'mouse':\n\t                return this.gestureSettingsMouse;\n\t            case 'touch':\n\t                return this.gestureSettingsTouch;\n\t            case 'pen':\n\t                return this.gestureSettingsPen;\n\t            default:\n\t                return this.gestureSettingsUnknown;\n\t        }\n\t    },\n\t\n\t    // private\n\t    _drawOverlays: function() {\n\t        var i,\n\t            length = this.currentOverlays.length;\n\t        for ( i = 0; i < length; i++ ) {\n\t            this.currentOverlays[ i ].drawHTML( this.overlaysContainer, this.viewport );\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Cancel the \"in flight\" images.\n\t     */\n\t    _cancelPendingImages: function() {\n\t        this._loadQueue = [];\n\t    },\n\t\n\t    /**\n\t     * Removes the reference strip and disables displaying it.\n\t     * @function\n\t     */\n\t    removeReferenceStrip: function() {\n\t        this.showReferenceStrip = false;\n\t\n\t        if (this.referenceStrip) {\n\t            this.referenceStrip.destroy();\n\t            this.referenceStrip = null;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Enables and displays the reference strip based on the currently set tileSources.\n\t     * Works only when the Viewer has sequenceMode set to true.\n\t     * @function\n\t     */\n\t    addReferenceStrip: function() {\n\t        this.showReferenceStrip = true;\n\t\n\t        if (this.sequenceMode) {\n\t            if (this.referenceStrip) {\n\t                return;\n\t            }\n\t\n\t            if (this.tileSources.length && this.tileSources.length > 1) {\n\t                this.referenceStrip = new $.ReferenceStrip({\n\t                    id:          this.referenceStripElement,\n\t                    position:    this.referenceStripPosition,\n\t                    sizeRatio:   this.referenceStripSizeRatio,\n\t                    scroll:      this.referenceStripScroll,\n\t                    height:      this.referenceStripHeight,\n\t                    width:       this.referenceStripWidth,\n\t                    tileSources: this.tileSources,\n\t                    prefixUrl:   this.prefixUrl,\n\t                    viewer:      this\n\t                });\n\t\n\t                this.referenceStrip.setFocus( this._sequenceIndex );\n\t            }\n\t        } else {\n\t            $.console.warn('Attempting to display a reference strip while \"sequenceMode\" is off.');\n\t        }\n\t    }\n\t});\n\t\n\t\n\t/**\n\t * _getSafeElemSize is like getElementSize(), but refuses to return 0 for x or y,\n\t * which was causing some calling operations to return NaN.\n\t * @returns {Point}\n\t * @private\n\t */\n\tfunction _getSafeElemSize (oElement) {\n\t    oElement = $.getElement( oElement );\n\t\n\t    return new $.Point(\n\t        (oElement.clientWidth === 0 ? 1 : oElement.clientWidth),\n\t        (oElement.clientHeight === 0 ? 1 : oElement.clientHeight)\n\t    );\n\t}\n\t\n\t\n\t/**\n\t * @function\n\t * @private\n\t */\n\tfunction getTileSourceImplementation( viewer, tileSource, imgOptions, successCallback,\n\t    failCallback ) {\n\t    var _this = viewer;\n\t\n\t    //allow plain xml strings or json strings to be parsed here\n\t    if ( $.type( tileSource ) == 'string' ) {\n\t        //xml should start with \"<\" and end with \">\"\n\t        if ( tileSource.match( /^\\s*<.*>\\s*$/ ) ) {\n\t            tileSource = $.parseXml( tileSource );\n\t        //json should start with \"{\" or \"[\" and end with \"}\" or \"]\"\n\t        } else if ( tileSource.match(/^\\s*[\\{\\[].*[\\}\\]]\\s*$/ ) ) {\n\t            try {\n\t              var tileSourceJ = $.parseJSON(tileSource);\n\t              tileSource = tileSourceJ;\n\t            } catch (e) {\n\t              //tileSource = tileSource;\n\t            }\n\t        }\n\t    }\n\t\n\t    function waitUntilReady(tileSource, originalTileSource) {\n\t        if (tileSource.ready) {\n\t            successCallback(tileSource);\n\t        } else {\n\t            tileSource.addHandler('ready', function () {\n\t                successCallback(tileSource);\n\t            });\n\t            tileSource.addHandler('open-failed', function (event) {\n\t                failCallback({\n\t                    message: event.message,\n\t                    source: originalTileSource\n\t                });\n\t            });\n\t        }\n\t    }\n\t\n\t    setTimeout( function() {\n\t        if ( $.type( tileSource ) == 'string' ) {\n\t            //If its still a string it means it must be a url at this point\n\t            tileSource = new $.TileSource({\n\t                url: tileSource,\n\t                crossOriginPolicy: imgOptions.crossOriginPolicy !== undefined ?\n\t                    imgOptions.crossOriginPolicy : viewer.crossOriginPolicy,\n\t                ajaxWithCredentials: viewer.ajaxWithCredentials,\n\t                ajaxHeaders: viewer.ajaxHeaders,\n\t                useCanvas: viewer.useCanvas,\n\t                success: function( event ) {\n\t                    successCallback( event.tileSource );\n\t                }\n\t            });\n\t            tileSource.addHandler( 'open-failed', function( event ) {\n\t                failCallback( event );\n\t            } );\n\t\n\t        } else if ($.isPlainObject(tileSource) || tileSource.nodeType) {\n\t            if (tileSource.crossOriginPolicy === undefined &&\n\t                (imgOptions.crossOriginPolicy !== undefined || viewer.crossOriginPolicy !== undefined)) {\n\t                tileSource.crossOriginPolicy = imgOptions.crossOriginPolicy !== undefined ?\n\t                    imgOptions.crossOriginPolicy : viewer.crossOriginPolicy;\n\t            }\n\t            if (tileSource.ajaxWithCredentials === undefined) {\n\t                tileSource.ajaxWithCredentials = viewer.ajaxWithCredentials;\n\t            }\n\t            if (tileSource.useCanvas === undefined) {\n\t                tileSource.useCanvas = viewer.useCanvas;\n\t            }\n\t\n\t            if ( $.isFunction( tileSource.getTileUrl ) ) {\n\t                //Custom tile source\n\t                var customTileSource = new $.TileSource( tileSource );\n\t                customTileSource.getTileUrl = tileSource.getTileUrl;\n\t                successCallback( customTileSource );\n\t            } else {\n\t                //inline configuration\n\t                var $TileSource = $.TileSource.determineType( _this, tileSource );\n\t                if ( !$TileSource ) {\n\t                    failCallback( {\n\t                        message: \"Unable to load TileSource\",\n\t                        source: tileSource\n\t                    });\n\t                    return;\n\t                }\n\t                var options = $TileSource.prototype.configure.apply( _this, [ tileSource ] );\n\t                waitUntilReady(new $TileSource(options), tileSource);\n\t            }\n\t        } else {\n\t            //can assume it's already a tile source implementation\n\t            waitUntilReady(tileSource, tileSource);\n\t        }\n\t    });\n\t}\n\t\n\tfunction getOverlayObject( viewer, overlay ) {\n\t    if ( overlay instanceof $.Overlay ) {\n\t        return overlay;\n\t    }\n\t\n\t    var element = null;\n\t    if ( overlay.element ) {\n\t        element = $.getElement( overlay.element );\n\t    } else {\n\t        var id = overlay.id ?\n\t            overlay.id :\n\t            \"openseadragon-overlay-\" + Math.floor( Math.random() * 10000000 );\n\t\n\t        element = $.getElement( overlay.id );\n\t        if ( !element ) {\n\t            element         = document.createElement( \"a\" );\n\t            element.href    = \"#/overlay/\" + id;\n\t        }\n\t        element.id = id;\n\t        $.addClass( element, overlay.className ?\n\t            overlay.className :\n\t            \"openseadragon-overlay\"\n\t        );\n\t    }\n\t\n\t    var location = overlay.location;\n\t    var width = overlay.width;\n\t    var height = overlay.height;\n\t    if (!location) {\n\t        var x = overlay.x;\n\t        var y = overlay.y;\n\t        if (overlay.px !== undefined) {\n\t            var rect = viewer.viewport.imageToViewportRectangle(new $.Rect(\n\t                overlay.px,\n\t                overlay.py,\n\t                width || 0,\n\t                height || 0));\n\t            x = rect.x;\n\t            y = rect.y;\n\t            width = width !== undefined ? rect.width : undefined;\n\t            height = height !== undefined ? rect.height : undefined;\n\t        }\n\t        location = new $.Point(x, y);\n\t    }\n\t\n\t    var placement = overlay.placement;\n\t    if (placement && $.type(placement) === \"string\") {\n\t        placement = $.Placement[overlay.placement.toUpperCase()];\n\t    }\n\t\n\t    return new $.Overlay({\n\t        element: element,\n\t        location: location,\n\t        placement: placement,\n\t        onDraw: overlay.onDraw,\n\t        checkResize: overlay.checkResize,\n\t        width: width,\n\t        height: height,\n\t        rotationMode: overlay.rotationMode\n\t    });\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Determines the index of the given overlay in the given overlays array.\n\t */\n\tfunction getOverlayIndex( overlays, element ) {\n\t    var i;\n\t    for ( i = overlays.length - 1; i >= 0; i-- ) {\n\t        if ( overlays[ i ].element === element ) {\n\t            return i;\n\t        }\n\t    }\n\t\n\t    return -1;\n\t}\n\t\n\t///////////////////////////////////////////////////////////////////////////////\n\t// Schedulers provide the general engine for animation\n\t///////////////////////////////////////////////////////////////////////////////\n\tfunction scheduleUpdate( viewer, updateFunc ){\n\t    return $.requestAnimationFrame( function(){\n\t        updateFunc( viewer );\n\t    } );\n\t}\n\t\n\t\n\t//provides a sequence in the fade animation\n\tfunction scheduleControlsFade( viewer ) {\n\t    $.requestAnimationFrame( function(){\n\t        updateControlsFade( viewer );\n\t    });\n\t}\n\t\n\t\n\t//initiates an animation to hide the controls\n\tfunction beginControlsAutoHide( viewer ) {\n\t    if ( !viewer.autoHideControls ) {\n\t        return;\n\t    }\n\t    viewer.controlsShouldFade = true;\n\t    viewer.controlsFadeBeginTime =\n\t        $.now() +\n\t        viewer.controlsFadeDelay;\n\t\n\t    window.setTimeout( function(){\n\t        scheduleControlsFade( viewer );\n\t    }, viewer.controlsFadeDelay );\n\t}\n\t\n\t\n\t//determines if fade animation is done or continues the animation\n\tfunction updateControlsFade( viewer ) {\n\t    var currentTime,\n\t        deltaTime,\n\t        opacity,\n\t        i;\n\t    if ( viewer.controlsShouldFade ) {\n\t        currentTime = $.now();\n\t        deltaTime = currentTime - viewer.controlsFadeBeginTime;\n\t        opacity = 1.0 - deltaTime / viewer.controlsFadeLength;\n\t\n\t        opacity = Math.min( 1.0, opacity );\n\t        opacity = Math.max( 0.0, opacity );\n\t\n\t        for ( i = viewer.controls.length - 1; i >= 0; i--) {\n\t            if (viewer.controls[ i ].autoFade) {\n\t                viewer.controls[ i ].setOpacity( opacity );\n\t            }\n\t        }\n\t\n\t        if ( opacity > 0 ) {\n\t            // fade again\n\t            scheduleControlsFade( viewer );\n\t        }\n\t    }\n\t}\n\t\n\t\n\t//stop the fade animation on the controls and show them\n\tfunction abortControlsAutoHide( viewer ) {\n\t    var i;\n\t    viewer.controlsShouldFade = false;\n\t    for ( i = viewer.controls.length - 1; i >= 0; i-- ) {\n\t        viewer.controls[ i ].setOpacity( 1.0 );\n\t    }\n\t}\n\t\n\t\n\t\n\t///////////////////////////////////////////////////////////////////////////////\n\t// Default view event handlers.\n\t///////////////////////////////////////////////////////////////////////////////\n\tfunction onFocus(){\n\t    abortControlsAutoHide( this );\n\t}\n\t\n\tfunction onBlur(){\n\t    beginControlsAutoHide( this );\n\t\n\t}\n\t\n\tfunction onCanvasKeyDown( event ) {\n\t    var canvasKeyDownEventArgs = {\n\t      originalEvent: event.originalEvent,\n\t      preventDefaultAction: event.preventDefaultAction,\n\t      preventVerticalPan: event.preventVerticalPan,\n\t      preventHorizontalPan: event.preventHorizontalPan\n\t    };\n\t\n\t    /**\n\t     * Raised when a keyboard key is pressed and the focus is on the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-key\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {Boolean} preventDefaultAction - Set to true to prevent default keyboard behaviour. Default: false.\n\t     * @property {Boolean} preventVerticalPan - Set to true to prevent keyboard vertical panning. Default: false.\n\t     * @property {Boolean} preventHorizontalPan - Set to true to prevent keyboard horizontal panning. Default: false.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t\n\t    this.raiseEvent('canvas-key', canvasKeyDownEventArgs);\n\t\n\t    if ( !canvasKeyDownEventArgs.preventDefaultAction && !event.ctrl && !event.alt && !event.meta ) {\n\t        switch( event.keyCode ){\n\t            case 38://up arrow\n\t                if (!canvasKeyDownEventArgs.preventVerticalPan) {\n\t                  if ( event.shift ) {\n\t                    this.viewport.zoomBy(1.1);\n\t                  } else {\n\t                    this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0, -this.pixelsPerArrowPress)));\n\t                  }\n\t                  this.viewport.applyConstraints();\n\t                }\n\t                return false;\n\t            case 40://down arrow\n\t                if (!canvasKeyDownEventArgs.preventVerticalPan) {\n\t                  if ( event.shift ) {\n\t                    this.viewport.zoomBy(0.9);\n\t                  } else {\n\t                    this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0, this.pixelsPerArrowPress)));\n\t                  }\n\t                  this.viewport.applyConstraints();\n\t                }\n\t                return false;\n\t            case 37://left arrow\n\t                if (!canvasKeyDownEventArgs.preventHorizontalPan) {\n\t                  this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(-this.pixelsPerArrowPress, 0)));\n\t                  this.viewport.applyConstraints();\n\t                }\n\t                return false;\n\t            case 39://right arrow\n\t                if (!canvasKeyDownEventArgs.preventHorizontalPan) {\n\t                  this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(this.pixelsPerArrowPress, 0)));\n\t                  this.viewport.applyConstraints();\n\t                }\n\t                return false;\n\t            default:\n\t                //console.log( 'navigator keycode %s', event.keyCode );\n\t                return true;\n\t        }\n\t    } else {\n\t        return true;\n\t    }\n\t}\n\tfunction onCanvasKeyPress( event ) {\n\t    var canvasKeyPressEventArgs = {\n\t      originalEvent: event.originalEvent,\n\t      preventDefaultAction: event.preventDefaultAction,\n\t      preventVerticalPan: event.preventVerticalPan,\n\t      preventHorizontalPan: event.preventHorizontalPan\n\t    };\n\t\n\t    // This event is documented in onCanvasKeyDown\n\t    this.raiseEvent('canvas-key', canvasKeyPressEventArgs);\n\t\n\t    if ( !canvasKeyPressEventArgs.preventDefaultAction && !event.ctrl && !event.alt && !event.meta ) {\n\t        switch( event.keyCode ){\n\t            case 43://=|+\n\t            case 61://=|+\n\t                this.viewport.zoomBy(1.1);\n\t                this.viewport.applyConstraints();\n\t                return false;\n\t            case 45://-|_\n\t                this.viewport.zoomBy(0.9);\n\t                this.viewport.applyConstraints();\n\t                return false;\n\t            case 48://0|)\n\t                this.viewport.goHome();\n\t                this.viewport.applyConstraints();\n\t                return false;\n\t            case 119://w\n\t            case 87://W\n\t                if (!canvasKeyPressEventArgs.preventVerticalPan) {\n\t                    if ( event.shift ) {\n\t                        this.viewport.zoomBy(1.1);\n\t                    } else {\n\t                        this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0, -40)));\n\t                    }\n\t                    this.viewport.applyConstraints();\n\t                  }\n\t                  return false;\n\t            case 115://s\n\t            case 83://S\n\t                if (!canvasKeyPressEventArgs.preventVerticalPan) {\n\t                  if ( event.shift ) {\n\t                    this.viewport.zoomBy(0.9);\n\t                  } else {\n\t                    this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0, 40)));\n\t                  }\n\t                  this.viewport.applyConstraints();\n\t                }\n\t                return false;\n\t            case 97://a\n\t                if (!canvasKeyPressEventArgs.preventHorizontalPan) {\n\t                  this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(-40, 0)));\n\t                  this.viewport.applyConstraints();\n\t                }\n\t                return false;\n\t            case 100://d\n\t                if (!canvasKeyPressEventArgs.preventHorizontalPan) {\n\t                  this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(40, 0)));\n\t                  this.viewport.applyConstraints();\n\t                }\n\t                return false;\n\t            case 114: //r - clockwise rotation\n\t              if(this.viewport.flipped){\n\t                this.viewport.setRotation($.positiveModulo(this.viewport.degrees - this.rotationIncrement, 360));\n\t              } else{\n\t                this.viewport.setRotation($.positiveModulo(this.viewport.degrees + this.rotationIncrement, 360));\n\t              }\n\t              this.viewport.applyConstraints();\n\t              return false;\n\t            case 82: //R - counterclockwise  rotation\n\t              if(this.viewport.flipped){\n\t                this.viewport.setRotation($.positiveModulo(this.viewport.degrees + this.rotationIncrement, 360));\n\t              } else{\n\t                this.viewport.setRotation($.positiveModulo(this.viewport.degrees - this.rotationIncrement, 360));\n\t              }\n\t              this.viewport.applyConstraints();\n\t              return false;\n\t            case 102: //f\n\t              this.viewport.toggleFlip();\n\t              return false;\n\t            default:\n\t                // console.log( 'navigator keycode %s', event.keyCode );\n\t                return true;\n\t        }\n\t    } else {\n\t        return true;\n\t    }\n\t}\n\t\n\tfunction onCanvasClick( event ) {\n\t    var gestureSettings;\n\t\n\t    var haveKeyboardFocus = document.activeElement == this.canvas;\n\t\n\t    // If we don't have keyboard focus, request it.\n\t    if ( !haveKeyboardFocus ) {\n\t        this.canvas.focus();\n\t    }\n\t    if(this.viewport.flipped){\n\t        event.position.x = this.viewport.getContainerSize().x - event.position.x;\n\t    }\n\t\n\t    var canvasClickEventArgs = {\n\t        tracker: event.eventSource,\n\t        position: event.position,\n\t        quick: event.quick,\n\t        shift: event.shift,\n\t        originalEvent: event.originalEvent,\n\t        preventDefaultAction: event.preventDefaultAction\n\t    };\n\t\n\t    /**\n\t     * Raised when a mouse press/release or touch/remove occurs on the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-click\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {Boolean} quick - True only if the clickDistThreshold and clickTimeThreshold are both passed. Useful for differentiating between clicks and drags.\n\t     * @property {Boolean} shift - True if the shift key was pressed during this event.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {Boolean} preventDefaultAction - Set to true to prevent default click to zoom behaviour. Default: false.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'canvas-click', canvasClickEventArgs);\n\t\n\t    if ( !canvasClickEventArgs.preventDefaultAction && this.viewport && event.quick ) {\n\t        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n\t        if ( gestureSettings.clickToZoom ) {\n\t            this.viewport.zoomBy(\n\t                event.shift ? 1.0 / this.zoomPerClick : this.zoomPerClick,\n\t                gestureSettings.zoomToRefPoint ? this.viewport.pointFromPixel( event.position, true ) : null\n\t            );\n\t            this.viewport.applyConstraints();\n\t        }\n\t    }\n\t}\n\t\n\tfunction onCanvasDblClick( event ) {\n\t    var gestureSettings;\n\t\n\t    var canvasDblClickEventArgs = {\n\t        tracker: event.eventSource,\n\t        position: event.position,\n\t        shift: event.shift,\n\t        originalEvent: event.originalEvent,\n\t        preventDefaultAction: event.preventDefaultAction\n\t    };\n\t\n\t    /**\n\t     * Raised when a double mouse press/release or touch/remove occurs on the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-double-click\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {Boolean} shift - True if the shift key was pressed during this event.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {Boolean} preventDefaultAction - Set to true to prevent default double tap to zoom behaviour. Default: false.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'canvas-double-click', canvasDblClickEventArgs);\n\t\n\t    if ( !canvasDblClickEventArgs.preventDefaultAction && this.viewport ) {\n\t        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n\t        if ( gestureSettings.dblClickToZoom ) {\n\t            this.viewport.zoomBy(\n\t                event.shift ? 1.0 / this.zoomPerClick : this.zoomPerClick,\n\t                gestureSettings.zoomToRefPoint ? this.viewport.pointFromPixel( event.position, true ) : null\n\t            );\n\t            this.viewport.applyConstraints();\n\t        }\n\t    }\n\t}\n\t\n\tfunction onCanvasDrag( event ) {\n\t    var gestureSettings;\n\t\n\t    var canvasDragEventArgs = {\n\t        tracker: event.eventSource,\n\t        position: event.position,\n\t        delta: event.delta,\n\t        speed: event.speed,\n\t        direction: event.direction,\n\t        shift: event.shift,\n\t        originalEvent: event.originalEvent,\n\t        preventDefaultAction: event.preventDefaultAction\n\t    };\n\t\n\t    /**\n\t     * Raised when a mouse or touch drag operation occurs on the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-drag\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {OpenSeadragon.Point} delta - The x,y components of the difference between start drag and end drag.\n\t     * @property {Number} speed - Current computed speed, in pixels per second.\n\t     * @property {Number} direction - Current computed direction, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n\t     * @property {Boolean} shift - True if the shift key was pressed during this event.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {Boolean} preventDefaultAction - Set to true to prevent default drag behaviour. Default: false.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'canvas-drag', canvasDragEventArgs);\n\t\n\t    if ( !canvasDragEventArgs.preventDefaultAction && this.viewport ) {\n\t        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n\t        if( !this.panHorizontal ){\n\t            event.delta.x = 0;\n\t        }\n\t        if( !this.panVertical ){\n\t            event.delta.y = 0;\n\t        }\n\t        if(this.viewport.flipped){\n\t            event.delta.x = -event.delta.x;\n\t        }\n\t\n\t        if( this.constrainDuringPan ){\n\t            var delta = this.viewport.deltaPointsFromPixels( event.delta.negate() );\n\t\n\t            this.viewport.centerSpringX.target.value += delta.x;\n\t            this.viewport.centerSpringY.target.value += delta.y;\n\t\n\t            var bounds = this.viewport.getBounds();\n\t            var constrainedBounds = this.viewport.getConstrainedBounds();\n\t\n\t            this.viewport.centerSpringX.target.value -= delta.x;\n\t            this.viewport.centerSpringY.target.value -= delta.y;\n\t\n\t            if (bounds.x != constrainedBounds.x) {\n\t                event.delta.x = 0;\n\t            }\n\t\n\t            if (bounds.y != constrainedBounds.y) {\n\t                event.delta.y = 0;\n\t            }\n\t        }\n\t\n\t        this.viewport.panBy( this.viewport.deltaPointsFromPixels( event.delta.negate() ), gestureSettings.flickEnabled && !this.constrainDuringPan);\n\t    }\n\t}\n\t\n\tfunction onCanvasDragEnd( event ) {\n\t    if (!event.preventDefaultAction && this.viewport) {\n\t        var gestureSettings = this.gestureSettingsByDeviceType(event.pointerType);\n\t        if (gestureSettings.flickEnabled &&\n\t            event.speed >= gestureSettings.flickMinSpeed) {\n\t            var amplitudeX = 0;\n\t            if (this.panHorizontal) {\n\t                amplitudeX = gestureSettings.flickMomentum * event.speed *\n\t                    Math.cos(event.direction);\n\t            }\n\t            var amplitudeY = 0;\n\t            if (this.panVertical) {\n\t                amplitudeY = gestureSettings.flickMomentum * event.speed *\n\t                    Math.sin(event.direction);\n\t            }\n\t            var center = this.viewport.pixelFromPoint(\n\t                this.viewport.getCenter(true));\n\t            var target = this.viewport.pointFromPixel(\n\t                new $.Point(center.x - amplitudeX, center.y - amplitudeY));\n\t            this.viewport.panTo(target, false);\n\t        }\n\t        this.viewport.applyConstraints();\n\t    }\n\t    /**\n\t     * Raised when a mouse or touch drag operation ends on the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-drag-end\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {Number} speed - Speed at the end of a drag gesture, in pixels per second.\n\t     * @property {Number} direction - Direction at the end of a drag gesture, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n\t     * @property {Boolean} shift - True if the shift key was pressed during this event.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent('canvas-drag-end', {\n\t        tracker: event.eventSource,\n\t        position: event.position,\n\t        speed: event.speed,\n\t        direction: event.direction,\n\t        shift: event.shift,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\tfunction onCanvasEnter( event ) {\n\t    /**\n\t     * Raised when a pointer enters the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-enter\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {Number} buttons - Current buttons pressed. A combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t     * @property {Number} pointers - Number of pointers (all types) active in the tracked element.\n\t     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n\t     * @property {Boolean} buttonDownAny - Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'canvas-enter', {\n\t        tracker: event.eventSource,\n\t        pointerType: event.pointerType,\n\t        position: event.position,\n\t        buttons: event.buttons,\n\t        pointers: event.pointers,\n\t        insideElementPressed: event.insideElementPressed,\n\t        buttonDownAny: event.buttonDownAny,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\tfunction onCanvasExit( event ) {\n\t\n\t    if (window.location != window.parent.location){\n\t        $.MouseTracker.resetAllMouseTrackers();\n\t    }\n\t\n\t    /**\n\t     * Raised when a pointer leaves the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-exit\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {Number} buttons - Current buttons pressed. A combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t     * @property {Number} pointers - Number of pointers (all types) active in the tracked element.\n\t     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n\t     * @property {Boolean} buttonDownAny - Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'canvas-exit', {\n\t        tracker: event.eventSource,\n\t        pointerType: event.pointerType,\n\t        position: event.position,\n\t        buttons: event.buttons,\n\t        pointers: event.pointers,\n\t        insideElementPressed: event.insideElementPressed,\n\t        buttonDownAny: event.buttonDownAny,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\tfunction onCanvasPress( event ) {\n\t    /**\n\t     * Raised when the primary mouse button is pressed or touch starts on the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-press\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n\t     * @property {Boolean} insideElementReleased - True if the cursor still inside the tracked element when the button was released.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'canvas-press', {\n\t        tracker: event.eventSource,\n\t        pointerType: event.pointerType,\n\t        position: event.position,\n\t        insideElementPressed: event.insideElementPressed,\n\t        insideElementReleased: event.insideElementReleased,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\tfunction onCanvasRelease( event ) {\n\t    /**\n\t     * Raised when the primary mouse button is released or touch ends on the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-release\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n\t     * @property {Boolean} insideElementReleased - True if the cursor still inside the tracked element when the button was released.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'canvas-release', {\n\t        tracker: event.eventSource,\n\t        pointerType: event.pointerType,\n\t        position: event.position,\n\t        insideElementPressed: event.insideElementPressed,\n\t        insideElementReleased: event.insideElementReleased,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\tfunction onCanvasNonPrimaryPress( event ) {\n\t    /**\n\t     * Raised when any non-primary pointer button is pressed on the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-nonprimary-press\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n\t     * @property {Number} button - Button which caused the event.\n\t     *      -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n\t     * @property {Number} buttons - Current buttons pressed.\n\t     *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'canvas-nonprimary-press', {\n\t        tracker: event.eventSource,\n\t        position: event.position,\n\t        pointerType: event.pointerType,\n\t        button: event.button,\n\t        buttons: event.buttons,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\tfunction onCanvasNonPrimaryRelease( event ) {\n\t    /**\n\t     * Raised when any non-primary pointer button is released on the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-nonprimary-release\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n\t     * @property {Number} button - Button which caused the event.\n\t     *      -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n\t     * @property {Number} buttons - Current buttons pressed.\n\t     *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'canvas-nonprimary-release', {\n\t        tracker: event.eventSource,\n\t        position: event.position,\n\t        pointerType: event.pointerType,\n\t        button: event.button,\n\t        buttons: event.buttons,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\tfunction onCanvasPinch( event ) {\n\t    var gestureSettings,\n\t        centerPt,\n\t        lastCenterPt,\n\t        panByPt;\n\t\n\t    if ( !event.preventDefaultAction && this.viewport ) {\n\t        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n\t        if ( gestureSettings.pinchToZoom ) {\n\t            centerPt = this.viewport.pointFromPixel( event.center, true );\n\t            lastCenterPt = this.viewport.pointFromPixel( event.lastCenter, true );\n\t            panByPt = lastCenterPt.minus( centerPt );\n\t            if( !this.panHorizontal ) {\n\t                panByPt.x = 0;\n\t            }\n\t            if( !this.panVertical ) {\n\t                panByPt.y = 0;\n\t            }\n\t            this.viewport.zoomBy( event.distance / event.lastDistance, centerPt, true );\n\t            if ( gestureSettings.zoomToRefPoint ) {\n\t                this.viewport.panBy(panByPt, true);\n\t            }\n\t            this.viewport.applyConstraints();\n\t        }\n\t        if ( gestureSettings.pinchRotate ) {\n\t            // Pinch rotate\n\t            var angle1 = Math.atan2(event.gesturePoints[0].currentPos.y - event.gesturePoints[1].currentPos.y,\n\t                event.gesturePoints[0].currentPos.x - event.gesturePoints[1].currentPos.x);\n\t            var angle2 = Math.atan2(event.gesturePoints[0].lastPos.y - event.gesturePoints[1].lastPos.y,\n\t                event.gesturePoints[0].lastPos.x - event.gesturePoints[1].lastPos.x);\n\t            this.viewport.setRotation(this.viewport.getRotation() + ((angle1 - angle2) * (180 / Math.PI)));\n\t        }\n\t    }\n\t    /**\n\t     * Raised when a pinch event occurs on the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-pinch\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gesturePoints - Gesture points associated with the gesture. Velocity data can be found here.\n\t     * @property {OpenSeadragon.Point} lastCenter - The previous center point of the two pinch contact points relative to the tracked element.\n\t     * @property {OpenSeadragon.Point} center - The center point of the two pinch contact points relative to the tracked element.\n\t     * @property {Number} lastDistance - The previous distance between the two pinch contact points in CSS pixels.\n\t     * @property {Number} distance - The distance between the two pinch contact points in CSS pixels.\n\t     * @property {Boolean} shift - True if the shift key was pressed during this event.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent('canvas-pinch', {\n\t        tracker: event.eventSource,\n\t        gesturePoints: event.gesturePoints,\n\t        lastCenter: event.lastCenter,\n\t        center: event.center,\n\t        lastDistance: event.lastDistance,\n\t        distance: event.distance,\n\t        shift: event.shift,\n\t        originalEvent: event.originalEvent\n\t    });\n\t    //cancels event\n\t    return false;\n\t}\n\t\n\tfunction onCanvasScroll( event ) {\n\t    var gestureSettings,\n\t        factor,\n\t        thisScrollTime,\n\t        deltaScrollTime;\n\t\n\t    /* Certain scroll devices fire the scroll event way too fast so we are injecting a simple adjustment to keep things\n\t     * partially normalized. If we have already fired an event within the last 'minScrollDelta' milliseconds we skip\n\t     * this one and wait for the next event. */\n\t    thisScrollTime = $.now();\n\t    deltaScrollTime = thisScrollTime - this._lastScrollTime;\n\t    if (deltaScrollTime > this.minScrollDeltaTime) {\n\t        this._lastScrollTime = thisScrollTime;\n\t\n\t        if(this.viewport.flipped){\n\t          event.position.x = this.viewport.getContainerSize().x - event.position.x;\n\t        }\n\t\n\t        if ( !event.preventDefaultAction && this.viewport ) {\n\t            gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n\t            if ( gestureSettings.scrollToZoom ) {\n\t                factor = Math.pow( this.zoomPerScroll, event.scroll );\n\t                this.viewport.zoomBy(\n\t                    factor,\n\t                    gestureSettings.zoomToRefPoint ? this.viewport.pointFromPixel( event.position, true ) : null\n\t                );\n\t                this.viewport.applyConstraints();\n\t            }\n\t        }\n\t        /**\n\t         * Raised when a scroll event occurs on the {@link OpenSeadragon.Viewer#canvas} element (mouse wheel).\n\t         *\n\t         * @event canvas-scroll\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t         * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t         * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t         * @property {Number} scroll - The scroll delta for the event.\n\t         * @property {Boolean} shift - True if the shift key was pressed during this event.\n\t         * @property {Object} originalEvent - The original DOM event.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'canvas-scroll', {\n\t            tracker: event.eventSource,\n\t            position: event.position,\n\t            scroll: event.scroll,\n\t            shift: event.shift,\n\t            originalEvent: event.originalEvent\n\t        });\n\t        if (gestureSettings && gestureSettings.scrollToZoom) {\n\t            //cancels event\n\t            return false;\n\t        }\n\t    }\n\t    else {\n\t        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n\t        if (gestureSettings && gestureSettings.scrollToZoom) {\n\t            return false;   // We are swallowing this event\n\t        }\n\t    }\n\t}\n\t\n\tfunction onContainerEnter( event ) {\n\t    THIS[ this.hash ].mouseInside = true;\n\t    abortControlsAutoHide( this );\n\t    /**\n\t     * Raised when the cursor enters the {@link OpenSeadragon.Viewer#container} element.\n\t     *\n\t     * @event container-enter\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {Number} buttons - Current buttons pressed. A combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t     * @property {Number} pointers - Number of pointers (all types) active in the tracked element.\n\t     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n\t     * @property {Boolean} buttonDownAny - Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'container-enter', {\n\t        tracker: event.eventSource,\n\t        position: event.position,\n\t        buttons: event.buttons,\n\t        pointers: event.pointers,\n\t        insideElementPressed: event.insideElementPressed,\n\t        buttonDownAny: event.buttonDownAny,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\tfunction onContainerExit( event ) {\n\t    if ( event.pointers < 1 ) {\n\t        THIS[ this.hash ].mouseInside = false;\n\t        if ( !THIS[ this.hash ].animating ) {\n\t            beginControlsAutoHide( this );\n\t        }\n\t    }\n\t    /**\n\t     * Raised when the cursor leaves the {@link OpenSeadragon.Viewer#container} element.\n\t     *\n\t     * @event container-exit\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {Number} buttons - Current buttons pressed. A combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t     * @property {Number} pointers - Number of pointers (all types) active in the tracked element.\n\t     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n\t     * @property {Boolean} buttonDownAny - Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'container-exit', {\n\t        tracker: event.eventSource,\n\t        position: event.position,\n\t        buttons: event.buttons,\n\t        pointers: event.pointers,\n\t        insideElementPressed: event.insideElementPressed,\n\t        buttonDownAny: event.buttonDownAny,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\t\n\t///////////////////////////////////////////////////////////////////////////////\n\t// Page update routines ( aka Views - for future reference )\n\t///////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction updateMulti( viewer ) {\n\t    updateOnce( viewer );\n\t\n\t    // Request the next frame, unless we've been closed\n\t    if ( viewer.isOpen() ) {\n\t        viewer._updateRequestId = scheduleUpdate( viewer, updateMulti );\n\t    } else {\n\t        viewer._updateRequestId = false;\n\t    }\n\t}\n\t\n\tfunction updateOnce( viewer ) {\n\t\n\t    //viewer.profiler.beginUpdate();\n\t\n\t    if (viewer._opening) {\n\t        return;\n\t    }\n\t\n\t    if (viewer.autoResize) {\n\t        var containerSize = _getSafeElemSize(viewer.container);\n\t        var prevContainerSize = THIS[viewer.hash].prevContainerSize;\n\t        if (!containerSize.equals(prevContainerSize)) {\n\t            var viewport = viewer.viewport;\n\t            if (viewer.preserveImageSizeOnResize) {\n\t                var resizeRatio = prevContainerSize.x / containerSize.x;\n\t                var zoom = viewport.getZoom() * resizeRatio;\n\t                var center = viewport.getCenter();\n\t                viewport.resize(containerSize, false);\n\t                viewport.zoomTo(zoom, null, true);\n\t                viewport.panTo(center, true);\n\t            } else {\n\t                // maintain image position\n\t                var oldBounds = viewport.getBounds();\n\t                viewport.resize(containerSize, true);\n\t                viewport.fitBoundsWithConstraints(oldBounds, true);\n\t            }\n\t            THIS[viewer.hash].prevContainerSize = containerSize;\n\t            THIS[viewer.hash].forceRedraw = true;\n\t        }\n\t    }\n\t\n\t    var viewportChange = viewer.viewport.update();\n\t    var animated = viewer.world.update() || viewportChange;\n\t\n\t    if (viewportChange) {\n\t        /**\n\t         * Raised when any spring animation update occurs (zoom, pan, etc.),\n\t         * before the viewer has drawn the new location.\n\t         *\n\t         * @event viewport-change\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        viewer.raiseEvent('viewport-change');\n\t    }\n\t\n\t    if( viewer.referenceStrip ){\n\t        animated = viewer.referenceStrip.update( viewer.viewport ) || animated;\n\t    }\n\t\n\t    if ( !THIS[ viewer.hash ].animating && animated ) {\n\t        /**\n\t         * Raised when any spring animation starts (zoom, pan, etc.).\n\t         *\n\t         * @event animation-start\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        viewer.raiseEvent( \"animation-start\" );\n\t        abortControlsAutoHide( viewer );\n\t    }\n\t\n\t    if ( animated || THIS[ viewer.hash ].forceRedraw || viewer.world.needsDraw() ) {\n\t        drawWorld( viewer );\n\t        viewer._drawOverlays();\n\t        if( viewer.navigator ){\n\t          viewer.navigator.update( viewer.viewport );\n\t        }\n\t\n\t        THIS[ viewer.hash ].forceRedraw = false;\n\t\n\t        if (animated) {\n\t            /**\n\t             * Raised when any spring animation update occurs (zoom, pan, etc.),\n\t             * after the viewer has drawn the new location.\n\t             *\n\t             * @event animation\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            viewer.raiseEvent( \"animation\" );\n\t        }\n\t    }\n\t\n\t    if ( THIS[ viewer.hash ].animating && !animated ) {\n\t        /**\n\t         * Raised when any spring animation ends (zoom, pan, etc.).\n\t         *\n\t         * @event animation-finish\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        viewer.raiseEvent( \"animation-finish\" );\n\t\n\t        if ( !THIS[ viewer.hash ].mouseInside ) {\n\t            beginControlsAutoHide( viewer );\n\t        }\n\t    }\n\t\n\t    THIS[ viewer.hash ].animating = animated;\n\t\n\t    //viewer.profiler.endUpdate();\n\t}\n\t\n\tfunction drawWorld( viewer ) {\n\t    viewer.imageLoader.clear();\n\t    viewer.drawer.clear();\n\t    viewer.world.draw();\n\t\n\t    /**\n\t     * <em>- Needs documentation -</em>\n\t     *\n\t     * @event update-viewport\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    viewer.raiseEvent( 'update-viewport', {} );\n\t}\n\t\n\t///////////////////////////////////////////////////////////////////////////////\n\t// Navigation Controls\n\t///////////////////////////////////////////////////////////////////////////////\n\tfunction resolveUrl( prefix, url ) {\n\t    return prefix ? prefix + url : url;\n\t}\n\t\n\t\n\t\n\tfunction beginZoomingIn() {\n\t    THIS[ this.hash ].lastZoomTime = $.now();\n\t    THIS[ this.hash ].zoomFactor = this.zoomPerSecond;\n\t    THIS[ this.hash ].zooming = true;\n\t    scheduleZoom( this );\n\t}\n\t\n\t\n\tfunction beginZoomingOut() {\n\t    THIS[ this.hash ].lastZoomTime = $.now();\n\t    THIS[ this.hash ].zoomFactor = 1.0 / this.zoomPerSecond;\n\t    THIS[ this.hash ].zooming = true;\n\t    scheduleZoom( this );\n\t}\n\t\n\t\n\tfunction endZooming() {\n\t    THIS[ this.hash ].zooming = false;\n\t}\n\t\n\t\n\tfunction scheduleZoom( viewer ) {\n\t    $.requestAnimationFrame( $.delegate( viewer, doZoom ) );\n\t}\n\t\n\t\n\tfunction doZoom() {\n\t    var currentTime,\n\t        deltaTime,\n\t        adjustedFactor;\n\t\n\t    if ( THIS[ this.hash ].zooming && this.viewport) {\n\t        currentTime     = $.now();\n\t        deltaTime       = currentTime - THIS[ this.hash ].lastZoomTime;\n\t        adjustedFactor  = Math.pow( THIS[ this.hash ].zoomFactor, deltaTime / 1000 );\n\t\n\t        this.viewport.zoomBy( adjustedFactor );\n\t        this.viewport.applyConstraints();\n\t        THIS[ this.hash ].lastZoomTime = currentTime;\n\t        scheduleZoom( this );\n\t    }\n\t}\n\t\n\t\n\tfunction doSingleZoomIn() {\n\t    if ( this.viewport ) {\n\t        THIS[ this.hash ].zooming = false;\n\t        this.viewport.zoomBy(\n\t            this.zoomPerClick / 1.0\n\t        );\n\t        this.viewport.applyConstraints();\n\t    }\n\t}\n\t\n\t\n\tfunction doSingleZoomOut() {\n\t    if ( this.viewport ) {\n\t        THIS[ this.hash ].zooming = false;\n\t        this.viewport.zoomBy(\n\t            1.0 / this.zoomPerClick\n\t        );\n\t        this.viewport.applyConstraints();\n\t    }\n\t}\n\t\n\t\n\tfunction lightUp() {\n\t    this.buttons.emulateEnter();\n\t    this.buttons.emulateExit();\n\t}\n\t\n\t\n\tfunction onHome() {\n\t    if ( this.viewport ) {\n\t        this.viewport.goHome();\n\t    }\n\t}\n\t\n\t\n\tfunction onFullScreen() {\n\t    if ( this.isFullPage() && !$.isFullScreen() ) {\n\t        // Is fullPage but not fullScreen\n\t        this.setFullPage( false );\n\t    } else {\n\t        this.setFullScreen( !this.isFullPage() );\n\t    }\n\t    // correct for no mouseout event on change\n\t    if ( this.buttons ) {\n\t        this.buttons.emulateExit();\n\t    }\n\t    this.fullPageButton.element.focus();\n\t    if ( this.viewport ) {\n\t        this.viewport.applyConstraints();\n\t    }\n\t}\n\t\n\tfunction onRotateLeft() {\n\t    if ( this.viewport ) {\n\t        var currRotation = this.viewport.getRotation();\n\t\n\t        if ( this.viewport.flipped ){\n\t          currRotation = $.positiveModulo(currRotation + this.rotationIncrement, 360);\n\t        } else {\n\t          currRotation = $.positiveModulo(currRotation - this.rotationIncrement, 360);\n\t        }\n\t        this.viewport.setRotation(currRotation);\n\t    }\n\t}\n\t\n\tfunction onRotateRight() {\n\t    if ( this.viewport ) {\n\t        var currRotation = this.viewport.getRotation();\n\t\n\t        if ( this.viewport.flipped ){\n\t          currRotation = $.positiveModulo(currRotation - this.rotationIncrement, 360);\n\t        } else {\n\t          currRotation = $.positiveModulo(currRotation + this.rotationIncrement, 360);\n\t        }\n\t        this.viewport.setRotation(currRotation);\n\t    }\n\t}\n\t/**\n\t * Note: When pressed flip control button\n\t */\n\tfunction onFlip() {\n\t   this.viewport.toggleFlip();\n\t}\n\t\n\tfunction onPrevious(){\n\t    var previous = this._sequenceIndex - 1;\n\t    if(this.navPrevNextWrap && previous < 0){\n\t        previous += this.tileSources.length;\n\t    }\n\t    this.goToPage( previous );\n\t}\n\t\n\t\n\tfunction onNext(){\n\t    var next = this._sequenceIndex + 1;\n\t    if(this.navPrevNextWrap && next >= this.tileSources.length){\n\t        next = 0;\n\t    }\n\t    this.goToPage( next );\n\t}\n\t\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - Navigator\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class Navigator\n\t * @classdesc The Navigator provides a small view of the current image as fixed\n\t * while representing the viewport as a moving box serving as a frame\n\t * of reference in the larger viewport as to which portion of the image\n\t * is currently being examined.  The navigator's viewport can be interacted\n\t * with using the keyboard or the mouse.\n\t *\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.Viewer\n\t * @extends OpenSeadragon.EventSource\n\t * @param {Object} options\n\t */\n\t$.Navigator = function( options ){\n\t\n\t    var viewer      = options.viewer,\n\t        _this = this,\n\t        viewerSize,\n\t        navigatorSize;\n\t\n\t    //We may need to create a new element and id if they did not\n\t    //provide the id for the existing element\n\t    if( !options.id ){\n\t        options.id              = 'navigator-' + $.now();\n\t        this.element            = $.makeNeutralElement( \"div\" );\n\t        options.controlOptions  = {\n\t            anchor:           $.ControlAnchor.TOP_RIGHT,\n\t            attachToViewer:   true,\n\t            autoFade:         options.autoFade\n\t        };\n\t\n\t        if( options.position ){\n\t            if( 'BOTTOM_RIGHT' == options.position ){\n\t               options.controlOptions.anchor = $.ControlAnchor.BOTTOM_RIGHT;\n\t            } else if( 'BOTTOM_LEFT' == options.position ){\n\t               options.controlOptions.anchor = $.ControlAnchor.BOTTOM_LEFT;\n\t            } else if( 'TOP_RIGHT' == options.position ){\n\t               options.controlOptions.anchor = $.ControlAnchor.TOP_RIGHT;\n\t            } else if( 'TOP_LEFT' == options.position ){\n\t               options.controlOptions.anchor = $.ControlAnchor.TOP_LEFT;\n\t            } else if( 'ABSOLUTE' == options.position ){\n\t               options.controlOptions.anchor = $.ControlAnchor.ABSOLUTE;\n\t               options.controlOptions.top = options.top;\n\t               options.controlOptions.left = options.left;\n\t               options.controlOptions.height = options.height;\n\t               options.controlOptions.width = options.width;\n\t            }\n\t        }\n\t\n\t    } else {\n\t        this.element            = document.getElementById( options.id );\n\t        options.controlOptions  = {\n\t            anchor:           $.ControlAnchor.NONE,\n\t            attachToViewer:   false,\n\t            autoFade:         false\n\t        };\n\t    }\n\t    this.element.id         = options.id;\n\t    this.element.className  += ' navigator';\n\t\n\t    options = $.extend( true, {\n\t        sizeRatio:     $.DEFAULT_SETTINGS.navigatorSizeRatio\n\t    }, options, {\n\t        element:                this.element,\n\t        tabIndex:               -1, // No keyboard navigation, omit from tab order\n\t        //These need to be overridden to prevent recursion since\n\t        //the navigator is a viewer and a viewer has a navigator\n\t        showNavigator:          false,\n\t        mouseNavEnabled:        false,\n\t        showNavigationControl:  false,\n\t        showSequenceControl:    false,\n\t        immediateRender:        true,\n\t        blendTime:              0,\n\t        animationTime:          0,\n\t        autoResize:             options.autoResize,\n\t        // prevent resizing the navigator from adding unwanted space around the image\n\t        minZoomImageRatio:      1.0,\n\t        background:             options.background,\n\t        opacity:                options.opacity,\n\t        borderColor:            options.borderColor,\n\t        displayRegionColor:     options.displayRegionColor\n\t    });\n\t\n\t    options.minPixelRatio = this.minPixelRatio = viewer.minPixelRatio;\n\t\n\t    $.setElementTouchActionNone( this.element );\n\t\n\t    this.borderWidth = 2;\n\t    //At some browser magnification levels the display regions lines up correctly, but at some there appears to\n\t    //be a one pixel gap.\n\t    this.fudge = new $.Point(1, 1);\n\t    this.totalBorderWidths = new $.Point(this.borderWidth * 2, this.borderWidth * 2).minus(this.fudge);\n\t\n\t\n\t    if ( options.controlOptions.anchor != $.ControlAnchor.NONE ) {\n\t        (function( style, borderWidth ){\n\t            style.margin        = '0px';\n\t            style.border        = borderWidth + 'px solid ' + options.borderColor;\n\t            style.padding       = '0px';\n\t            style.background    = options.background;\n\t            style.opacity       = options.opacity;\n\t            style.overflow      = 'hidden';\n\t        }( this.element.style, this.borderWidth));\n\t    }\n\t\n\t    this.displayRegion           = $.makeNeutralElement( \"div\" );\n\t    this.displayRegion.id        = this.element.id + '-displayregion';\n\t    this.displayRegion.className = 'displayregion';\n\t\n\t    (function( style, borderWidth ){\n\t        style.position      = 'relative';\n\t        style.top           = '0px';\n\t        style.left          = '0px';\n\t        style.fontSize      = '0px';\n\t        style.overflow      = 'hidden';\n\t        style.border        = borderWidth + 'px solid ' + options.displayRegionColor;\n\t        style.margin        = '0px';\n\t        style.padding       = '0px';\n\t        //TODO: IE doesn't like this property being set\n\t        //try{ style.outline  = '2px auto #909'; }catch(e){/*ignore*/}\n\t\n\t        style.background    = 'transparent';\n\t\n\t        // We use square bracket notation on the statement below, because float is a keyword.\n\t        // This is important for the Google Closure compiler, if nothing else.\n\t        /*jshint sub:true */\n\t        style['float']      = 'left'; //Webkit\n\t\n\t        style.cssFloat      = 'left'; //Firefox\n\t        style.styleFloat    = 'left'; //IE\n\t        style.zIndex        = 999999999;\n\t        style.cursor        = 'default';\n\t    }( this.displayRegion.style, this.borderWidth ));\n\t\n\t    this.displayRegionContainer = $.makeNeutralElement(\"div\");\n\t    this.displayRegionContainer.id = this.element.id + '-displayregioncontainer';\n\t    this.displayRegionContainer.className = \"displayregioncontainer\";\n\t    this.displayRegionContainer.style.width = \"100%\";\n\t    this.displayRegionContainer.style.height = \"100%\";\n\t\n\t    viewer.addControl(\n\t        this.element,\n\t        options.controlOptions\n\t    );\n\t\n\t    this._resizeWithViewer = options.controlOptions.anchor != $.ControlAnchor.ABSOLUTE &&\n\t        options.controlOptions.anchor != $.ControlAnchor.NONE;\n\t\n\t    if ( this._resizeWithViewer ) {\n\t        if ( options.width && options.height ) {\n\t            this.element.style.height = typeof (options.height) == \"number\" ? (options.height + 'px') : options.height;\n\t            this.element.style.width  = typeof (options.width) == \"number\" ? (options.width + 'px') : options.width;\n\t        } else {\n\t            viewerSize = $.getElementSize( viewer.element );\n\t            this.element.style.height = Math.round( viewerSize.y * options.sizeRatio ) + 'px';\n\t            this.element.style.width  = Math.round( viewerSize.x * options.sizeRatio ) + 'px';\n\t            this.oldViewerSize = viewerSize;\n\t        }\n\t        navigatorSize = $.getElementSize( this.element );\n\t        this.elementArea = navigatorSize.x * navigatorSize.y;\n\t    }\n\t\n\t    this.oldContainerSize = new $.Point( 0, 0 );\n\t\n\t    $.Viewer.apply( this, [ options ] );\n\t\n\t    this.displayRegionContainer.appendChild(this.displayRegion);\n\t    this.element.getElementsByTagName('div')[0].appendChild(this.displayRegionContainer);\n\t\n\t    function rotate(degrees) {\n\t        _setTransformRotate(_this.displayRegionContainer, degrees);\n\t        _setTransformRotate(_this.displayRegion, -degrees);\n\t        _this.viewport.setRotation(degrees);\n\t    }\n\t    if (options.navigatorRotate) {\n\t        var degrees = options.viewer.viewport ?\n\t            options.viewer.viewport.getRotation() :\n\t            options.viewer.degrees || 0;\n\t\n\t        rotate(degrees);\n\t        options.viewer.addHandler(\"rotate\", function (args) {\n\t            rotate(args.degrees);\n\t        });\n\t    }\n\t\n\t\n\t    // Remove the base class' (Viewer's) innerTracker and replace it with our own\n\t    this.innerTracker.destroy();\n\t    this.innerTracker = new $.MouseTracker({\n\t        element:         this.element,\n\t        dragHandler:     $.delegate( this, onCanvasDrag ),\n\t        clickHandler:    $.delegate( this, onCanvasClick ),\n\t        releaseHandler:  $.delegate( this, onCanvasRelease ),\n\t        scrollHandler:   $.delegate( this, onCanvasScroll )\n\t    });\n\t\n\t    this.addHandler(\"reset-size\", function() {\n\t        if (_this.viewport) {\n\t            _this.viewport.goHome(true);\n\t        }\n\t    });\n\t\n\t    viewer.world.addHandler(\"item-index-change\", function(event) {\n\t        window.setTimeout(function(){\n\t            var item = _this.world.getItemAt(event.previousIndex);\n\t            _this.world.setItemIndex(item, event.newIndex);\n\t        }, 1);\n\t    });\n\t\n\t    viewer.world.addHandler(\"remove-item\", function(event) {\n\t        var theirItem = event.item;\n\t        var myItem = _this._getMatchingItem(theirItem);\n\t        if (myItem) {\n\t            _this.world.removeItem(myItem);\n\t        }\n\t    });\n\t\n\t    this.update(viewer.viewport);\n\t};\n\t\n\t$.extend( $.Navigator.prototype, $.EventSource.prototype, $.Viewer.prototype, /** @lends OpenSeadragon.Navigator.prototype */{\n\t\n\t    /**\n\t     * Used to notify the navigator when its size has changed.\n\t     * Especially useful when {@link OpenSeadragon.Options}.navigatorAutoResize is set to false and the navigator is resizable.\n\t     * @function\n\t     */\n\t    updateSize: function () {\n\t        if ( this.viewport ) {\n\t            var containerSize = new $.Point(\n\t                    (this.container.clientWidth === 0 ? 1 : this.container.clientWidth),\n\t                    (this.container.clientHeight === 0 ? 1 : this.container.clientHeight)\n\t                );\n\t\n\t            if ( !containerSize.equals( this.oldContainerSize ) ) {\n\t                this.viewport.resize( containerSize, true );\n\t                this.viewport.goHome(true);\n\t                this.oldContainerSize = containerSize;\n\t                this.drawer.clear();\n\t                this.world.draw();\n\t            }\n\t        }\n\t    },\n\t    /**\n\t      /* Flip navigator element\n\t      * @param {Boolean} state - Flip state to set.\n\t      */\n\t    setFlip: function(state) {\n\t      this.viewport.setFlip(state);\n\t\n\t      this.setDisplayTransform(this.viewer.viewport.getFlip() ? \"scale(-1,1)\" : \"scale(1,1)\");\n\t      return this;\n\t    },\n\t\n\t    setDisplayTransform: function(rule) {\n\t      setElementTransform(this.displayRegion, rule);\n\t      setElementTransform(this.canvas, rule);\n\t      setElementTransform(this.element, rule);\n\t    },\n\t\n\t    /**\n\t     * Used to update the navigator minimap's viewport rectangle when a change in the viewer's viewport occurs.\n\t     * @function\n\t     * @param {OpenSeadragon.Viewport} The viewport this navigator is tracking.\n\t     */\n\t    update: function( viewport ) {\n\t\n\t        var viewerSize,\n\t            newWidth,\n\t            newHeight,\n\t            bounds,\n\t            topleft,\n\t            bottomright;\n\t\n\t        viewerSize = $.getElementSize( this.viewer.element );\n\t        if ( this._resizeWithViewer && viewerSize.x && viewerSize.y && !viewerSize.equals( this.oldViewerSize ) ) {\n\t            this.oldViewerSize = viewerSize;\n\t\n\t            if ( this.maintainSizeRatio || !this.elementArea) {\n\t                newWidth  = viewerSize.x * this.sizeRatio;\n\t                newHeight = viewerSize.y * this.sizeRatio;\n\t            } else {\n\t                newWidth = Math.sqrt(this.elementArea * (viewerSize.x / viewerSize.y));\n\t                newHeight = this.elementArea / newWidth;\n\t            }\n\t\n\t            this.element.style.width  = Math.round( newWidth ) + 'px';\n\t            this.element.style.height = Math.round( newHeight ) + 'px';\n\t\n\t            if (!this.elementArea) {\n\t                this.elementArea = newWidth * newHeight;\n\t            }\n\t\n\t            this.updateSize();\n\t        }\n\t\n\t        if (viewport && this.viewport) {\n\t            bounds      = viewport.getBoundsNoRotate(true);\n\t            topleft     = this.viewport.pixelFromPointNoRotate(bounds.getTopLeft(), false);\n\t            bottomright = this.viewport.pixelFromPointNoRotate(bounds.getBottomRight(), false)\n\t                .minus( this.totalBorderWidths );\n\t\n\t            //update style for navigator-box\n\t            var style = this.displayRegion.style;\n\t            style.display = this.world.getItemCount() ? 'block' : 'none';\n\t\n\t            style.top    = Math.round( topleft.y ) + 'px';\n\t            style.left   = Math.round( topleft.x ) + 'px';\n\t\n\t            var width = Math.abs( topleft.x - bottomright.x );\n\t            var height = Math.abs( topleft.y - bottomright.y );\n\t            // make sure width and height are non-negative so IE doesn't throw\n\t            style.width  = Math.round( Math.max( width, 0 ) ) + 'px';\n\t            style.height = Math.round( Math.max( height, 0 ) ) + 'px';\n\t        }\n\t\n\t    },\n\t\n\t    // overrides Viewer.addTiledImage\n\t    addTiledImage: function(options) {\n\t        var _this = this;\n\t\n\t        var original = options.originalTiledImage;\n\t        delete options.original;\n\t\n\t        var optionsClone = $.extend({}, options, {\n\t            success: function(event) {\n\t                var myItem = event.item;\n\t                myItem._originalForNavigator = original;\n\t                _this._matchBounds(myItem, original, true);\n\t\n\t                function matchBounds() {\n\t                    _this._matchBounds(myItem, original);\n\t                }\n\t\n\t                function matchOpacity() {\n\t                    _this._matchOpacity(myItem, original);\n\t                }\n\t\n\t                function matchCompositeOperation() {\n\t                    _this._matchCompositeOperation(myItem, original);\n\t                }\n\t\n\t                original.addHandler('bounds-change', matchBounds);\n\t                original.addHandler('clip-change', matchBounds);\n\t                original.addHandler('opacity-change', matchOpacity);\n\t                original.addHandler('composite-operation-change', matchCompositeOperation);\n\t            }\n\t        });\n\t\n\t        return $.Viewer.prototype.addTiledImage.apply(this, [optionsClone]);\n\t    },\n\t\n\t    // private\n\t    _getMatchingItem: function(theirItem) {\n\t        var count = this.world.getItemCount();\n\t        var item;\n\t        for (var i = 0; i < count; i++) {\n\t            item = this.world.getItemAt(i);\n\t            if (item._originalForNavigator === theirItem) {\n\t                return item;\n\t            }\n\t        }\n\t\n\t        return null;\n\t    },\n\t\n\t    // private\n\t    _matchBounds: function(myItem, theirItem, immediately) {\n\t        var bounds = theirItem.getBoundsNoRotate();\n\t        myItem.setPosition(bounds.getTopLeft(), immediately);\n\t        myItem.setWidth(bounds.width, immediately);\n\t        myItem.setRotation(theirItem.getRotation(), immediately);\n\t        myItem.setClip(theirItem.getClip());\n\t    },\n\t\n\t    // private\n\t    _matchOpacity: function(myItem, theirItem) {\n\t        myItem.setOpacity(theirItem.opacity);\n\t    },\n\t\n\t    // private\n\t    _matchCompositeOperation: function(myItem, theirItem) {\n\t        myItem.setCompositeOperation(theirItem.compositeOperation);\n\t    }\n\t});\n\t\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction onCanvasClick( event ) {\n\t  var canvasClickEventArgs = {\n\t    tracker: event.eventSource,\n\t    position: event.position,\n\t    quick: event.quick,\n\t    shift: event.shift,\n\t    originalEvent: event.originalEvent,\n\t    preventDefaultAction: event.preventDefaultAction\n\t  };\n\t  /**\n\t   * Raised when a click event occurs on the {@link OpenSeadragon.Viewer#navigator} element.\n\t   *\n\t   * @event navigator-click\n\t   * @memberof OpenSeadragon.Viewer\n\t   * @type {object}\n\t   * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t   * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t   * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t   * @property {Boolean} quick - True only if the clickDistThreshold and clickTimeThreshold are both passed. Useful for differentiating between clicks and drags.\n\t   * @property {Boolean} shift - True if the shift key was pressed during this event.\n\t   * @property {Object} originalEvent - The original DOM event.\n\t   * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t   * @property {Boolean} preventDefaultAction - Set to true to prevent default click to zoom behaviour. Default: false.\n\t   */\n\t\n\t   this.viewer.raiseEvent('navigator-click', canvasClickEventArgs);\n\t\n\t   if ( !canvasClickEventArgs.preventDefaultAction && event.quick && this.viewer.viewport && (this.panVertical || this.panHorizontal)) {\n\t    if(this.viewer.viewport.flipped) {\n\t      event.position.x = this.viewport.getContainerSize().x - event.position.x;\n\t    }\n\t    var target = this.viewport.pointFromPixel(event.position);\n\t    if (!this.panVertical) {\n\t      // perform only horizonal pan\n\t      target.y = this.viewer.viewport.getCenter(true).y;\n\t    } else if (!this.panHorizontal) {\n\t      // perform only vertical pan\n\t      target.x = this.viewer.viewport.getCenter(true).x;\n\t    }\n\t    this.viewer.viewport.panTo(target);\n\t    this.viewer.viewport.applyConstraints();\n\t  }\n\t\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction onCanvasDrag( event ) {\n\t    var canvasDragEventArgs = {\n\t      tracker: event.eventSource,\n\t      position: event.position,\n\t      delta: event.delta,\n\t      speed: event.speed,\n\t      direction: event.direction,\n\t      shift: event.shift,\n\t      originalEvent: event.originalEvent,\n\t      preventDefaultAction: event.preventDefaultAction\n\t    };\n\t    /**\n\t     * Raised when a drag event occurs on the {@link OpenSeadragon.Viewer#navigator} element.\n\t     *\n\t     * @event navigator-drag\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {OpenSeadragon.Point} delta - The x,y components of the difference between start drag and end drag.\n\t     * @property {Number} speed - Current computed speed, in pixels per second.\n\t     * @property {Number} direction - Current computed direction, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n\t     * @property {Boolean} shift - True if the shift key was pressed during this event.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     * @property {Boolean} preventDefaultAction - Set to true to prevent default click to zoom behaviour. Default: false.\n\t     */\n\t     this.viewer.raiseEvent('navigator-drag', canvasDragEventArgs);\n\t\n\t     if ( !canvasDragEventArgs.preventDefaultAction && this.viewer.viewport ) {\n\t       if( !this.panHorizontal ){\n\t            event.delta.x = 0;\n\t        }\n\t        if( !this.panVertical ){\n\t            event.delta.y = 0;\n\t        }\n\t\n\t        if(this.viewer.viewport.flipped){\n\t            event.delta.x = -event.delta.x;\n\t        }\n\t\n\t        this.viewer.viewport.panBy(\n\t            this.viewport.deltaPointsFromPixels(\n\t                event.delta\n\t            )\n\t        );\n\t        if( this.viewer.constrainDuringPan ){\n\t            this.viewer.viewport.applyConstraints();\n\t        }\n\t    }\n\t}\n\t\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction onCanvasRelease( event ) {\n\t    if ( event.insideElementPressed && this.viewer.viewport ) {\n\t        this.viewer.viewport.applyConstraints();\n\t    }\n\t}\n\t\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction onCanvasScroll( event ) {\n\t    /**\n\t     * Raised when a scroll event occurs on the {@link OpenSeadragon.Viewer#navigator} element (mouse wheel, touch pinch, etc.).\n\t     *\n\t     * @event navigator-scroll\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {Number} scroll - The scroll delta for the event.\n\t     * @property {Boolean} shift - True if the shift key was pressed during this event.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.viewer.raiseEvent( 'navigator-scroll', {\n\t        tracker: event.eventSource,\n\t        position: event.position,\n\t        scroll: event.scroll,\n\t        shift: event.shift,\n\t        originalEvent: event.originalEvent\n\t    });\n\t\n\t    //don't scroll the page up and down if the user is scrolling\n\t    //in the navigator\n\t    return false;\n\t}\n\t\n\t/**\n\t    * @function\n\t    * @private\n\t    * @param {Object} element\n\t    * @param {Number} degrees\n\t    */\n\tfunction _setTransformRotate( element, degrees ) {\n\t  setElementTransform(element, \"rotate(\" + degrees + \"deg)\");\n\t}\n\t\n\tfunction setElementTransform( element, rule ) {\n\t  element.style.webkitTransform = rule;\n\t  element.style.mozTransform = rule;\n\t  element.style.msTransform = rule;\n\t  element.style.oTransform = rule;\n\t  element.style.transform = rule;\n\t}\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - getString/setString\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t//TODO: I guess this is where the i18n needs to be reimplemented.  I'll look\n\t//      into existing patterns for i18n in javascript but i think that mimicking\n\t//      pythons gettext might be a reasonable approach.\n\tvar I18N = {\n\t    Errors: {\n\t        Dzc:            \"Sorry, we don't support Deep Zoom Collections!\",\n\t        Dzi:            \"Hmm, this doesn't appear to be a valid Deep Zoom Image.\",\n\t        Xml:            \"Hmm, this doesn't appear to be a valid Deep Zoom Image.\",\n\t        ImageFormat:    \"Sorry, we don't support {0}-based Deep Zoom Images.\",\n\t        Security:       \"It looks like a security restriction stopped us from \" +\n\t                        \"loading this Deep Zoom Image.\",\n\t        Status:         \"This space unintentionally left blank ({0} {1}).\",\n\t        OpenFailed:     \"Unable to open {0}: {1}\"\n\t    },\n\t\n\t    Tooltips: {\n\t        FullPage:       \"Toggle full page\",\n\t        Home:           \"Go home\",\n\t        ZoomIn:         \"Zoom in\",\n\t        ZoomOut:        \"Zoom out\",\n\t        NextPage:       \"Next page\",\n\t        PreviousPage:   \"Previous page\",\n\t        RotateLeft:     \"Rotate left\",\n\t        RotateRight:    \"Rotate right\",\n\t        Flip:           \"Flip Horizontally\"\n\t    }\n\t};\n\t\n\t$.extend( $, /** @lends OpenSeadragon */{\n\t\n\t    /**\n\t     * @function\n\t     * @param {String} property\n\t     */\n\t    getString: function( prop ) {\n\t\n\t        var props   = prop.split('.'),\n\t            string  = null,\n\t            args    = arguments,\n\t            container = I18N,\n\t            i;\n\t\n\t        for (i = 0; i < props.length - 1; i++) {\n\t            // in case not a subproperty\n\t            container = container[ props[ i ] ] || {};\n\t        }\n\t        string = container[ props[ i ] ];\n\t\n\t        if ( typeof ( string ) != \"string\" ) {\n\t            $.console.log( \"Untranslated source string:\", prop );\n\t            string = \"\"; // FIXME: this breaks gettext()-style convention, which would return source\n\t        }\n\t\n\t        return string.replace(/\\{\\d+\\}/g, function(capture) {\n\t            var i = parseInt( capture.match( /\\d+/ ), 10 ) + 1;\n\t            return i < args.length ?\n\t                args[ i ] :\n\t                \"\";\n\t        });\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {String} property\n\t     * @param {*} value\n\t     */\n\t    setString: function( prop, value ) {\n\t\n\t        var props     = prop.split('.'),\n\t            container = I18N,\n\t            i;\n\t\n\t        for ( i = 0; i < props.length - 1; i++ ) {\n\t            if ( !container[ props[ i ] ] ) {\n\t                container[ props[ i ] ] = {};\n\t            }\n\t            container = container[ props[ i ] ];\n\t        }\n\t\n\t        container[ props[ i ] ] = value;\n\t    }\n\t\n\t});\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - Point\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class Point\n\t * @classdesc A Point is really used as a 2-dimensional vector, equally useful for\n\t * representing a point on a plane, or the height and width of a plane\n\t * not requiring any other frame of reference.\n\t *\n\t * @memberof OpenSeadragon\n\t * @param {Number} [x] The vector component 'x'. Defaults to the origin at 0.\n\t * @param {Number} [y] The vector component 'y'. Defaults to the origin at 0.\n\t */\n\t$.Point = function( x, y ) {\n\t    /**\n\t     * The vector component 'x'.\n\t     * @member {Number} x\n\t     * @memberof OpenSeadragon.Point#\n\t     */\n\t    this.x = typeof ( x ) == \"number\" ? x : 0;\n\t    /**\n\t     * The vector component 'y'.\n\t     * @member {Number} y\n\t     * @memberof OpenSeadragon.Point#\n\t     */\n\t    this.y = typeof ( y ) == \"number\" ? y : 0;\n\t};\n\t\n\t/** @lends OpenSeadragon.Point.prototype */\n\t$.Point.prototype = {\n\t    /**\n\t     * @function\n\t     * @returns {OpenSeadragon.Point} a duplicate of this Point\n\t     */\n\t    clone: function() {\n\t        return new $.Point(this.x, this.y);\n\t    },\n\t\n\t    /**\n\t     * Add another Point to this point and return a new Point.\n\t     * @function\n\t     * @param {OpenSeadragon.Point} point The point to add vector components.\n\t     * @returns {OpenSeadragon.Point} A new point representing the sum of the\n\t     *  vector components\n\t     */\n\t    plus: function( point ) {\n\t        return new $.Point(\n\t            this.x + point.x,\n\t            this.y + point.y\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Subtract another Point to this point and return a new Point.\n\t     * @function\n\t     * @param {OpenSeadragon.Point} point The point to subtract vector components.\n\t     * @returns {OpenSeadragon.Point} A new point representing the subtraction of the\n\t     *  vector components\n\t     */\n\t    minus: function( point ) {\n\t        return new $.Point(\n\t            this.x - point.x,\n\t            this.y - point.y\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Multiply this point by a factor and return a new Point.\n\t     * @function\n\t     * @param {Number} factor The factor to multiply vector components.\n\t     * @returns {OpenSeadragon.Point} A new point representing the multiplication\n\t     *  of the vector components by the factor\n\t     */\n\t    times: function( factor ) {\n\t        return new $.Point(\n\t            this.x * factor,\n\t            this.y * factor\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Divide this point by a factor and return a new Point.\n\t     * @function\n\t     * @param {Number} factor The factor to divide vector components.\n\t     * @returns {OpenSeadragon.Point} A new point representing the division of the\n\t     *  vector components by the factor\n\t     */\n\t    divide: function( factor ) {\n\t        return new $.Point(\n\t            this.x / factor,\n\t            this.y / factor\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Compute the opposite of this point and return a new Point.\n\t     * @function\n\t     * @returns {OpenSeadragon.Point} A new point representing the opposite of the\n\t     *  vector components\n\t     */\n\t    negate: function() {\n\t        return new $.Point( -this.x, -this.y );\n\t    },\n\t\n\t    /**\n\t     * Compute the distance between this point and another point.\n\t     * @function\n\t     * @param {OpenSeadragon.Point} point The point to compute the distance with.\n\t     * @returns {Number} The distance between the 2 points\n\t     */\n\t    distanceTo: function( point ) {\n\t        return Math.sqrt(\n\t            Math.pow( this.x - point.x, 2 ) +\n\t            Math.pow( this.y - point.y, 2 )\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Compute the squared distance between this point and another point.\n\t     * Useful for optimizing things like comparing distances.\n\t     * @function\n\t     * @param {OpenSeadragon.Point} point The point to compute the squared distance with.\n\t     * @returns {Number} The squared distance between the 2 points\n\t     */\n\t    squaredDistanceTo: function( point ) {\n\t        return Math.pow( this.x - point.x, 2 ) +\n\t            Math.pow( this.y - point.y, 2 );\n\t    },\n\t\n\t    /**\n\t     * Apply a function to each coordinate of this point and return a new point.\n\t     * @function\n\t     * @param {function} func The function to apply to each coordinate.\n\t     * @returns {OpenSeadragon.Point} A new point with the coordinates computed\n\t     * by the specified function\n\t     */\n\t    apply: function( func ) {\n\t        return new $.Point( func( this.x ), func( this.y ) );\n\t    },\n\t\n\t    /**\n\t     * Check if this point is equal to another one.\n\t     * @function\n\t     * @param {OpenSeadragon.Point} point The point to compare this point with.\n\t     * @returns {Boolean} true if they are equal, false otherwise.\n\t     */\n\t    equals: function( point ) {\n\t        return (\n\t            point instanceof $.Point\n\t        ) && (\n\t            this.x === point.x\n\t        ) && (\n\t            this.y === point.y\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Rotates the point around the specified pivot\n\t     * From http://stackoverflow.com/questions/4465931/rotate-rectangle-around-a-point\n\t     * @function\n\t     * @param {Number} degress to rotate around the pivot.\n\t     * @param {OpenSeadragon.Point} [pivot=(0,0)] Point around which to rotate.\n\t     * Defaults to the origin.\n\t     * @returns {OpenSeadragon.Point}. A new point representing the point rotated around the specified pivot\n\t     */\n\t    rotate: function (degrees, pivot) {\n\t        pivot = pivot || new $.Point(0, 0);\n\t        var cos;\n\t        var sin;\n\t        // Avoid float computations when possible\n\t        if (degrees % 90 === 0) {\n\t            var d = $.positiveModulo(degrees, 360);\n\t            switch (d) {\n\t                case 0:\n\t                    cos = 1;\n\t                    sin = 0;\n\t                    break;\n\t                case 90:\n\t                    cos = 0;\n\t                    sin = 1;\n\t                    break;\n\t                case 180:\n\t                    cos = -1;\n\t                    sin = 0;\n\t                    break;\n\t                case 270:\n\t                    cos = 0;\n\t                    sin = -1;\n\t                    break;\n\t            }\n\t        } else {\n\t            var angle = degrees * Math.PI / 180.0;\n\t            cos = Math.cos(angle);\n\t            sin = Math.sin(angle);\n\t        }\n\t        var x = cos * (this.x - pivot.x) - sin * (this.y - pivot.y) + pivot.x;\n\t        var y = sin * (this.x - pivot.x) + cos * (this.y - pivot.y) + pivot.y;\n\t        return new $.Point(x, y);\n\t    },\n\t\n\t    /**\n\t     * Convert this point to a string in the format (x,y) where x and y are\n\t     * rounded to the nearest integer.\n\t     * @function\n\t     * @returns {String} A string representation of this point.\n\t     */\n\t    toString: function() {\n\t        return \"(\" + (Math.round(this.x * 100) / 100) + \",\" + (Math.round(this.y * 100) / 100) + \")\";\n\t    }\n\t};\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - TileSource\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t\n\t/**\n\t * @class TileSource\n\t * @classdesc The TileSource contains the most basic implementation required to create a\n\t * smooth transition between layers in an image pyramid. It has only a single key\n\t * interface that must be implemented to complete its key functionality:\n\t * 'getTileUrl'.  It also has several optional interfaces that can be\n\t * implemented if a new TileSource wishes to support configuration via a simple\n\t * object or array ('configure') and if the tile source supports or requires\n\t * configuration via retrieval of a document on the network ala AJAX or JSONP,\n\t * ('getImageInfo').\n\t * <br/>\n\t * By default the image pyramid is split into N layers where the image's longest\n\t * side in M (in pixels), where N is the smallest integer which satisfies\n\t *      <strong>2^(N+1) >= M</strong>.\n\t *\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.EventSource\n\t * @param {Object} options\n\t *      You can either specify a URL, or literally define the TileSource (by specifying\n\t *      width, height, tileSize, tileOverlap, minLevel, and maxLevel). For the former,\n\t *      the extending class is expected to implement 'getImageInfo' and 'configure'.\n\t *      For the latter, the construction is assumed to occur through\n\t *      the extending classes implementation of 'configure'.\n\t * @param {String} [options.url]\n\t *      The URL for the data necessary for this TileSource.\n\t * @param {String} [options.referenceStripThumbnailUrl]\n\t *      The URL for a thumbnail image to be used by the reference strip\n\t * @param {Function} [options.success]\n\t *      A function to be called upon successful creation.\n\t * @param {Boolean} [options.ajaxWithCredentials]\n\t *      If this TileSource needs to make an AJAX call, this specifies whether to set\n\t *      the XHR's withCredentials (for accessing secure data).\n\t * @param {Object} [options.ajaxHeaders]\n\t *      A set of headers to include in AJAX requests.\n\t * @param {Number} [options.width]\n\t *      Width of the source image at max resolution in pixels.\n\t * @param {Number} [options.height]\n\t *      Height of the source image at max resolution in pixels.\n\t * @param {Number} [options.tileSize]\n\t *      The size of the tiles to assumed to make up each pyramid layer in pixels.\n\t *      Tile size determines the point at which the image pyramid must be\n\t *      divided into a matrix of smaller images.\n\t *      Use options.tileWidth and options.tileHeight to support non-square tiles.\n\t * @param {Number} [options.tileWidth]\n\t *      The width of the tiles to assumed to make up each pyramid layer in pixels.\n\t * @param {Number} [options.tileHeight]\n\t *      The height of the tiles to assumed to make up each pyramid layer in pixels.\n\t * @param {Number} [options.tileOverlap]\n\t *      The number of pixels each tile is expected to overlap touching tiles.\n\t * @param {Number} [options.minLevel]\n\t *      The minimum level to attempt to load.\n\t * @param {Number} [options.maxLevel]\n\t *      The maximum level to attempt to load.\n\t */\n\t$.TileSource = function( width, height, tileSize, tileOverlap, minLevel, maxLevel ) {\n\t    var _this = this;\n\t\n\t    var args = arguments,\n\t        options,\n\t        i;\n\t\n\t    if( $.isPlainObject( width ) ){\n\t        options = width;\n\t    }else{\n\t        options = {\n\t            width: args[0],\n\t            height: args[1],\n\t            tileSize: args[2],\n\t            tileOverlap: args[3],\n\t            minLevel: args[4],\n\t            maxLevel: args[5]\n\t        };\n\t    }\n\t\n\t    //Tile sources supply some events, namely 'ready' when they must be configured\n\t    //by asynchronously fetching their configuration data.\n\t    $.EventSource.call( this );\n\t\n\t    //we allow options to override anything we don't treat as\n\t    //required via idiomatic options or which is functionally\n\t    //set depending on the state of the readiness of this tile\n\t    //source\n\t    $.extend( true, this, options );\n\t\n\t    if (!this.success) {\n\t        //Any functions that are passed as arguments are bound to the ready callback\n\t        for ( i = 0; i < arguments.length; i++ ) {\n\t            if ( $.isFunction( arguments[ i ] ) ) {\n\t                this.success = arguments[ i ];\n\t                //only one callback per constructor\n\t                break;\n\t            }\n\t        }\n\t    }\n\t\n\t    if (this.success) {\n\t        this.addHandler( 'ready', function ( event ) {\n\t            _this.success( event );\n\t        } );\n\t    }\n\t\n\t    /**\n\t     * Ratio of width to height\n\t     * @member {Number} aspectRatio\n\t     * @memberof OpenSeadragon.TileSource#\n\t     */\n\t    /**\n\t     * Vector storing x and y dimensions ( width and height respectively ).\n\t     * @member {OpenSeadragon.Point} dimensions\n\t     * @memberof OpenSeadragon.TileSource#\n\t     */\n\t    /**\n\t     * The overlap in pixels each tile shares with its adjacent neighbors.\n\t     * @member {Number} tileOverlap\n\t     * @memberof OpenSeadragon.TileSource#\n\t     */\n\t    /**\n\t     * The minimum pyramid level this tile source supports or should attempt to load.\n\t     * @member {Number} minLevel\n\t     * @memberof OpenSeadragon.TileSource#\n\t     */\n\t    /**\n\t     * The maximum pyramid level this tile source supports or should attempt to load.\n\t     * @member {Number} maxLevel\n\t     * @memberof OpenSeadragon.TileSource#\n\t     */\n\t    /**\n\t     *\n\t     * @member {Boolean} ready\n\t     * @memberof OpenSeadragon.TileSource#\n\t     */\n\t\n\t    if( 'string' == $.type( arguments[ 0 ] ) ){\n\t        this.url = arguments[0];\n\t    }\n\t\n\t    if (this.url) {\n\t        //in case the getImageInfo method is overridden and/or implies an\n\t        //async mechanism set some safe defaults first\n\t        this.aspectRatio = 1;\n\t        this.dimensions  = new $.Point( 10, 10 );\n\t        this._tileWidth  = 0;\n\t        this._tileHeight = 0;\n\t        this.tileOverlap = 0;\n\t        this.minLevel    = 0;\n\t        this.maxLevel    = 0;\n\t        this.ready       = false;\n\t        //configuration via url implies the extending class\n\t        //implements and 'configure'\n\t        this.getImageInfo( this.url );\n\t\n\t    } else {\n\t\n\t        //explicit configuration via positional args in constructor\n\t        //or the more idiomatic 'options' object\n\t        this.ready       = true;\n\t        this.aspectRatio = (options.width && options.height) ?\n\t            (options.width / options.height) : 1;\n\t        this.dimensions  = new $.Point( options.width, options.height );\n\t\n\t        if ( this.tileSize ){\n\t            this._tileWidth = this._tileHeight = this.tileSize;\n\t            delete this.tileSize;\n\t        } else {\n\t            if( this.tileWidth ){\n\t                // We were passed tileWidth in options, but we want to rename it\n\t                // with a leading underscore to make clear that it is not safe to directly modify it\n\t                this._tileWidth = this.tileWidth;\n\t                delete this.tileWidth;\n\t            } else {\n\t                this._tileWidth = 0;\n\t            }\n\t\n\t            if( this.tileHeight ){\n\t                // See note above about renaming this.tileWidth\n\t                this._tileHeight = this.tileHeight;\n\t                delete this.tileHeight;\n\t            } else {\n\t                this._tileHeight = 0;\n\t            }\n\t        }\n\t\n\t        this.tileOverlap = options.tileOverlap ? options.tileOverlap : 0;\n\t        this.minLevel    = options.minLevel ? options.minLevel : 0;\n\t        this.maxLevel    = ( undefined !== options.maxLevel && null !== options.maxLevel ) ?\n\t            options.maxLevel : (\n\t                ( options.width && options.height ) ? Math.ceil(\n\t                    Math.log( Math.max( options.width, options.height ) ) /\n\t                    Math.log( 2 )\n\t                ) : 0\n\t            );\n\t        if( this.success && $.isFunction( this.success ) ){\n\t            this.success( this );\n\t        }\n\t    }\n\t\n\t\n\t};\n\t\n\t/** @lends OpenSeadragon.TileSource.prototype */\n\t$.TileSource.prototype = {\n\t\n\t    getTileSize: function( level ) {\n\t        $.console.error(\n\t            \"[TileSource.getTileSize] is deprecated. \" +\n\t            \"Use TileSource.getTileWidth() and TileSource.getTileHeight() instead\"\n\t        );\n\t        return this._tileWidth;\n\t    },\n\t\n\t    /**\n\t     * Return the tileWidth for a given level.\n\t     * Subclasses should override this if tileWidth can be different at different levels\n\t     *   such as in IIIFTileSource.  Code should use this function rather than reading\n\t     *   from ._tileWidth directly.\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getTileWidth: function( level ) {\n\t        if (!this._tileWidth) {\n\t            return this.getTileSize(level);\n\t        }\n\t        return this._tileWidth;\n\t    },\n\t\n\t    /**\n\t     * Return the tileHeight for a given level.\n\t     * Subclasses should override this if tileHeight can be different at different levels\n\t     *   such as in IIIFTileSource.  Code should use this function rather than reading\n\t     *   from ._tileHeight directly.\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getTileHeight: function( level ) {\n\t        if (!this._tileHeight) {\n\t            return this.getTileSize(level);\n\t        }\n\t        return this._tileHeight;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getLevelScale: function( level ) {\n\t\n\t        // see https://github.com/openseadragon/openseadragon/issues/22\n\t        // we use the tilesources implementation of getLevelScale to generate\n\t        // a memoized re-implementation\n\t        var levelScaleCache = {},\n\t            i;\n\t        for( i = 0; i <= this.maxLevel; i++ ){\n\t            levelScaleCache[ i ] = 1 / Math.pow(2, this.maxLevel - i);\n\t        }\n\t        this.getLevelScale = function( _level ){\n\t            return levelScaleCache[ _level ];\n\t        };\n\t        return this.getLevelScale( level );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getNumTiles: function( level ) {\n\t        var scale = this.getLevelScale( level ),\n\t            x = Math.ceil( scale * this.dimensions.x / this.getTileWidth(level) ),\n\t            y = Math.ceil( scale * this.dimensions.y / this.getTileHeight(level) );\n\t\n\t        return new $.Point( x, y );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getPixelRatio: function( level ) {\n\t        var imageSizeScaled = this.dimensions.times( this.getLevelScale( level ) ),\n\t            rx = 1.0 / imageSizeScaled.x,\n\t            ry = 1.0 / imageSizeScaled.y;\n\t\n\t        return new $.Point(rx, ry);\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @returns {Number} The highest level in this tile source that can be contained in a single tile.\n\t     */\n\t    getClosestLevel: function() {\n\t        var i,\n\t            tiles;\n\t\n\t        for (i = this.minLevel + 1; i <= this.maxLevel; i++){\n\t            tiles = this.getNumTiles(i);\n\t            if (tiles.x > 1 || tiles.y > 1) {\n\t                break;\n\t            }\n\t        }\n\t\n\t        return i - 1;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {OpenSeadragon.Point} point\n\t     */\n\t    getTileAtPoint: function(level, point) {\n\t        var validPoint = point.x >= 0 && point.x <= 1 &&\n\t            point.y >= 0 && point.y <= 1 / this.aspectRatio;\n\t        $.console.assert(validPoint, \"[TileSource.getTileAtPoint] must be called with a valid point.\");\n\t\n\t        var widthScaled = this.dimensions.x * this.getLevelScale(level);\n\t        var pixelX = point.x * widthScaled;\n\t        var pixelY = point.y * widthScaled;\n\t\n\t        var x = Math.floor(pixelX / this.getTileWidth(level));\n\t        var y = Math.floor(pixelY / this.getTileHeight(level));\n\t\n\t        // When point.x == 1 or point.y == 1 / this.aspectRatio we want to\n\t        // return the last tile of the row/column\n\t        if (point.x >= 1) {\n\t            x = this.getNumTiles(level).x - 1;\n\t        }\n\t        var EPSILON = 1e-15;\n\t        if (point.y >= 1 / this.aspectRatio - EPSILON) {\n\t            y = this.getNumTiles(level).y - 1;\n\t        }\n\t\n\t        return new $.Point(x, y);\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     * @param {Boolean} [isSource=false] Whether to return the source bounds of the tile.\n\t     * @returns {OpenSeadragon.Rect} Either where this tile fits (in normalized coordinates) or the\n\t     * portion of the tile to use as the source of the drawing operation (in pixels), depending on\n\t     * the isSource parameter.\n\t     */\n\t    getTileBounds: function( level, x, y, isSource ) {\n\t        var dimensionsScaled = this.dimensions.times( this.getLevelScale( level ) ),\n\t            tileWidth = this.getTileWidth(level),\n\t            tileHeight = this.getTileHeight(level),\n\t            px = ( x === 0 ) ? 0 : tileWidth * x - this.tileOverlap,\n\t            py = ( y === 0 ) ? 0 : tileHeight * y - this.tileOverlap,\n\t            sx = tileWidth + ( x === 0 ? 1 : 2 ) * this.tileOverlap,\n\t            sy = tileHeight + ( y === 0 ? 1 : 2 ) * this.tileOverlap,\n\t            scale = 1.0 / dimensionsScaled.x;\n\t\n\t        sx = Math.min( sx, dimensionsScaled.x - px );\n\t        sy = Math.min( sy, dimensionsScaled.y - py );\n\t\n\t        if (isSource) {\n\t            return new $.Rect(0, 0, sx, sy);\n\t        }\n\t\n\t        return new $.Rect( px * scale, py * scale, sx * scale, sy * scale );\n\t    },\n\t\n\t\n\t    /**\n\t     * Responsible for retrieving, and caching the\n\t     * image metadata pertinent to this TileSources implementation.\n\t     * @function\n\t     * @param {String} url\n\t     * @throws {Error}\n\t     */\n\t    getImageInfo: function( url ) {\n\t        var _this = this,\n\t            callbackName,\n\t            callback,\n\t            readySource,\n\t            options,\n\t            urlParts,\n\t            filename,\n\t            lastDot;\n\t\n\t\n\t        if( url ) {\n\t            urlParts = url.split( '/' );\n\t            filename = urlParts[ urlParts.length - 1 ];\n\t            lastDot  = filename.lastIndexOf( '.' );\n\t            if ( lastDot > -1 ) {\n\t                urlParts[ urlParts.length - 1 ] = filename.slice( 0, lastDot );\n\t            }\n\t        }\n\t\n\t        callback = function( data ){\n\t            if( typeof (data) === \"string\" ) {\n\t                data = $.parseXml( data );\n\t            }\n\t            var $TileSource = $.TileSource.determineType( _this, data, url );\n\t            if ( !$TileSource ) {\n\t                /**\n\t                 * Raised when an error occurs loading a TileSource.\n\t                 *\n\t                 * @event open-failed\n\t                 * @memberof OpenSeadragon.TileSource\n\t                 * @type {object}\n\t                 * @property {OpenSeadragon.TileSource} eventSource - A reference to the TileSource which raised the event.\n\t                 * @property {String} message\n\t                 * @property {String} source\n\t                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                 */\n\t                _this.raiseEvent( 'open-failed', { message: \"Unable to load TileSource\", source: url } );\n\t                return;\n\t            }\n\t\n\t            options = $TileSource.prototype.configure.apply( _this, [ data, url ]);\n\t            if (options.ajaxWithCredentials === undefined) {\n\t                options.ajaxWithCredentials = _this.ajaxWithCredentials;\n\t            }\n\t\n\t            readySource = new $TileSource( options );\n\t            _this.ready = true;\n\t            /**\n\t             * Raised when a TileSource is opened and initialized.\n\t             *\n\t             * @event ready\n\t             * @memberof OpenSeadragon.TileSource\n\t             * @type {object}\n\t             * @property {OpenSeadragon.TileSource} eventSource - A reference to the TileSource which raised the event.\n\t             * @property {Object} tileSource\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            _this.raiseEvent( 'ready', { tileSource: readySource } );\n\t        };\n\t\n\t        if( url.match(/\\.js$/) ){\n\t            //TODO: Its not very flexible to require tile sources to end jsonp\n\t            //      request for info  with a url that ends with '.js' but for\n\t            //      now it's the only way I see to distinguish uniformly.\n\t            callbackName = url.split('/').pop().replace('.js', '');\n\t            $.jsonp({\n\t                url: url,\n\t                async: false,\n\t                callbackName: callbackName,\n\t                callback: callback\n\t            });\n\t        } else {\n\t            // request info via xhr asynchronously.\n\t            $.makeAjaxRequest( {\n\t                url: url,\n\t                withCredentials: this.ajaxWithCredentials,\n\t                headers: this.ajaxHeaders,\n\t                success: function( xhr ) {\n\t                    var data = processResponse( xhr );\n\t                    callback( data );\n\t                },\n\t                error: function ( xhr, exc ) {\n\t                    var msg;\n\t\n\t                    /*\n\t                        IE < 10 will block XHR requests to different origins. Any property access on the request\n\t                        object will raise an exception which we'll attempt to handle by formatting the original\n\t                        exception rather than the second one raised when we try to access xhr.status\n\t                     */\n\t                    try {\n\t                        msg = \"HTTP \" + xhr.status + \" attempting to load TileSource\";\n\t                    } catch ( e ) {\n\t                        var formattedExc;\n\t                        if ( typeof ( exc ) == \"undefined\" || !exc.toString ) {\n\t                            formattedExc = \"Unknown error\";\n\t                        } else {\n\t                            formattedExc = exc.toString();\n\t                        }\n\t\n\t                        msg = formattedExc + \" attempting to load TileSource\";\n\t                    }\n\t\n\t                    /***\n\t                     * Raised when an error occurs loading a TileSource.\n\t                     *\n\t                     * @event open-failed\n\t                     * @memberof OpenSeadragon.TileSource\n\t                     * @type {object}\n\t                     * @property {OpenSeadragon.TileSource} eventSource - A reference to the TileSource which raised the event.\n\t                     * @property {String} message\n\t                     * @property {String} source\n\t                     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                     */\n\t                    _this.raiseEvent( 'open-failed', {\n\t                        message: msg,\n\t                        source: url\n\t                    });\n\t                }\n\t            });\n\t        }\n\t\n\t    },\n\t\n\t    /**\n\t     * Responsible determining if a the particular TileSource supports the\n\t     * data format ( and allowed to apply logic against the url the data was\n\t     * loaded from, if any ). Overriding implementations are expected to do\n\t     * something smart with data and / or url to determine support.  Also\n\t     * understand that iteration order of TileSources is not guarunteed so\n\t     * please make sure your data or url is expressive enough to ensure a simple\n\t     * and sufficient mechanisim for clear determination.\n\t     * @function\n\t     * @param {String|Object|Array|Document} data\n\t     * @param {String} url - the url the data was loaded\n\t     *      from if any.\n\t     * @return {Boolean}\n\t     */\n\t    supports: function( data, url ) {\n\t        return false;\n\t    },\n\t\n\t    /**\n\t     * Responsible for parsing and configuring the\n\t     * image metadata pertinent to this TileSources implementation.\n\t     * This method is not implemented by this class other than to throw an Error\n\t     * announcing you have to implement it.  Because of the variety of tile\n\t     * server technologies, and various specifications for building image\n\t     * pyramids, this method is here to allow easy integration.\n\t     * @function\n\t     * @param {String|Object|Array|Document} data\n\t     * @param {String} url - the url the data was loaded\n\t     *      from if any.\n\t     * @return {Object} options - A dictionary of keyword arguments sufficient\n\t     *      to configure this tile sources constructor.\n\t     * @throws {Error}\n\t     */\n\t    configure: function( data, url ) {\n\t        throw new Error( \"Method not implemented.\" );\n\t    },\n\t\n\t    /**\n\t     * Responsible for retrieving the url which will return an image for the\n\t     * region specified by the given x, y, and level components.\n\t     * This method is not implemented by this class other than to throw an Error\n\t     * announcing you have to implement it.  Because of the variety of tile\n\t     * server technologies, and various specifications for building image\n\t     * pyramids, this method is here to allow easy integration.\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     * @throws {Error}\n\t     */\n\t    getTileUrl: function( level, x, y ) {\n\t        throw new Error( \"Method not implemented.\" );\n\t    },\n\t\n\t    /**\n\t     * Responsible for retrieving the headers which will be attached to the image request for the\n\t     * region specified by the given x, y, and level components.\n\t     * This option is only relevant if {@link OpenSeadragon.Options}.loadTilesWithAjax is set to true.\n\t     * The headers returned here will override headers specified at the Viewer or TiledImage level.\n\t     * Specifying a falsy value for a header will clear its existing value set at the Viewer or\n\t     * TiledImage level (if any).\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     * @returns {Object}\n\t     */\n\t    getTileAjaxHeaders: function( level, x, y ) {\n\t        return {};\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     */\n\t    tileExists: function( level, x, y ) {\n\t        var numTiles = this.getNumTiles( level );\n\t        return level >= this.minLevel &&\n\t               level <= this.maxLevel &&\n\t               x >= 0 &&\n\t               y >= 0 &&\n\t               x < numTiles.x &&\n\t               y < numTiles.y;\n\t    }\n\t};\n\t\n\t\n\t$.extend( true, $.TileSource.prototype, $.EventSource.prototype );\n\t\n\t\n\t/**\n\t * Decides whether to try to process the response as xml, json, or hand back\n\t * the text\n\t * @private\n\t * @inner\n\t * @function\n\t * @param {XMLHttpRequest} xhr - the completed network request\n\t */\n\tfunction processResponse( xhr ){\n\t    var responseText = xhr.responseText,\n\t        status       = xhr.status,\n\t        statusText,\n\t        data;\n\t\n\t    if ( !xhr ) {\n\t        throw new Error( $.getString( \"Errors.Security\" ) );\n\t    } else if ( xhr.status !== 200 && xhr.status !== 0 ) {\n\t        status     = xhr.status;\n\t        statusText = ( status == 404 ) ?\n\t            \"Not Found\" :\n\t            xhr.statusText;\n\t        throw new Error( $.getString( \"Errors.Status\", status, statusText ) );\n\t    }\n\t\n\t    if( responseText.match(/\\s*<.*/) ){\n\t        try{\n\t        data = ( xhr.responseXML && xhr.responseXML.documentElement ) ?\n\t            xhr.responseXML :\n\t            $.parseXml( responseText );\n\t        } catch (e){\n\t            data = xhr.responseText;\n\t        }\n\t    }else if( responseText.match(/\\s*[\\{\\[].*/) ){\n\t        try{\n\t          data = $.parseJSON(responseText);\n\t        } catch(e){\n\t          data =  responseText;\n\t        }\n\t    }else{\n\t        data = responseText;\n\t    }\n\t    return data;\n\t}\n\t\n\t\n\t/**\n\t * Determines the TileSource Implementation by introspection of OpenSeadragon\n\t * namespace, calling each TileSource implementation of 'isType'\n\t * @private\n\t * @inner\n\t * @function\n\t * @param {Object|Array|Document} data - the tile source configuration object\n\t * @param {String} url - the url where the tile source configuration object was\n\t *      loaded from, if any.\n\t */\n\t$.TileSource.determineType = function( tileSource, data, url ){\n\t    var property;\n\t    for( property in OpenSeadragon ){\n\t        if( property.match(/.+TileSource$/) &&\n\t            $.isFunction( OpenSeadragon[ property ] ) &&\n\t            $.isFunction( OpenSeadragon[ property ].prototype.supports ) &&\n\t            OpenSeadragon[ property ].prototype.supports.call( tileSource, data, url )\n\t        ){\n\t            return OpenSeadragon[ property ];\n\t        }\n\t    }\n\t\n\t    $.console.error( \"No TileSource was able to open %s %s\", url, data );\n\t};\n\t\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - DziTileSource\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class DziTileSource\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.TileSource\n\t * @param {Number|Object} width - the pixel width of the image or the idiomatic\n\t *      options object which is used instead of positional arguments.\n\t * @param {Number} height\n\t * @param {Number} tileSize\n\t * @param {Number} tileOverlap\n\t * @param {String} tilesUrl\n\t * @param {String} fileFormat\n\t * @param {OpenSeadragon.DisplayRect[]} displayRects\n\t * @property {String} tilesUrl\n\t * @property {String} fileFormat\n\t * @property {OpenSeadragon.DisplayRect[]} displayRects\n\t */\n\t$.DziTileSource = function( width, height, tileSize, tileOverlap, tilesUrl, fileFormat, displayRects, minLevel, maxLevel ) {\n\t    var i,\n\t        rect,\n\t        level,\n\t        options;\n\t\n\t    if( $.isPlainObject( width ) ){\n\t        options = width;\n\t    }else{\n\t        options = {\n\t            width: arguments[ 0 ],\n\t            height: arguments[ 1 ],\n\t            tileSize: arguments[ 2 ],\n\t            tileOverlap: arguments[ 3 ],\n\t            tilesUrl: arguments[ 4 ],\n\t            fileFormat: arguments[ 5 ],\n\t            displayRects: arguments[ 6 ],\n\t            minLevel: arguments[ 7 ],\n\t            maxLevel: arguments[ 8 ]\n\t        };\n\t    }\n\t\n\t    this._levelRects  = {};\n\t    this.tilesUrl     = options.tilesUrl;\n\t    this.fileFormat   = options.fileFormat;\n\t    this.displayRects = options.displayRects;\n\t\n\t    if ( this.displayRects ) {\n\t        for ( i = this.displayRects.length - 1; i >= 0; i-- ) {\n\t            rect = this.displayRects[ i ];\n\t            for ( level = rect.minLevel; level <= rect.maxLevel; level++ ) {\n\t                if ( !this._levelRects[ level ] ) {\n\t                    this._levelRects[ level ] = [];\n\t                }\n\t                this._levelRects[ level ].push( rect );\n\t            }\n\t        }\n\t    }\n\t\n\t    $.TileSource.apply( this, [ options ] );\n\t\n\t};\n\t\n\t$.extend( $.DziTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.DziTileSource.prototype */{\n\t\n\t\n\t    /**\n\t     * Determine if the data and/or url imply the image service is supported by\n\t     * this tile source.\n\t     * @function\n\t     * @param {Object|Array} data\n\t     * @param {String} optional - url\n\t     */\n\t    supports: function( data, url ){\n\t        var ns;\n\t        if ( data.Image ) {\n\t            ns = data.Image.xmlns;\n\t        } else if ( data.documentElement) {\n\t            if (\"Image\" == data.documentElement.localName || \"Image\" == data.documentElement.tagName) {\n\t                ns = data.documentElement.namespaceURI;\n\t            }\n\t        }\n\t\n\t        ns = (ns || '').toLowerCase();\n\t\n\t        return (ns.indexOf('schemas.microsoft.com/deepzoom/2008') !== -1 ||\n\t            ns.indexOf('schemas.microsoft.com/deepzoom/2009') !== -1);\n\t    },\n\t\n\t    /**\n\t     *\n\t     * @function\n\t     * @param {Object|XMLDocument} data - the raw configuration\n\t     * @param {String} url - the url the data was retrieved from if any.\n\t     * @return {Object} options - A dictionary of keyword arguments sufficient\n\t     *      to configure this tile sources constructor.\n\t     */\n\t    configure: function( data, url ){\n\t\n\t        var options;\n\t\n\t        if( !$.isPlainObject(data) ){\n\t\n\t            options = configureFromXML( this, data );\n\t\n\t        }else{\n\t\n\t            options = configureFromObject( this, data );\n\t        }\n\t\n\t        if (url && !options.tilesUrl) {\n\t            options.tilesUrl = url.replace(\n\t                    /([^\\/]+?)(\\.(dzi|xml|js)?(\\?[^\\/]*)?)?\\/?$/, '$1_files/');\n\t\n\t            if (url.search(/\\.(dzi|xml|js)\\?/) != -1) {\n\t                options.queryParams = url.match(/\\?.*/);\n\t            }else{\n\t                options.queryParams = '';\n\t            }\n\t        }\n\t\n\t        return options;\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     */\n\t    getTileUrl: function( level, x, y ) {\n\t        return [ this.tilesUrl, level, '/', x, '_', y, '.', this.fileFormat, this.queryParams ].join( '' );\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     */\n\t    tileExists: function( level, x, y ) {\n\t        var rects = this._levelRects[ level ],\n\t            rect,\n\t            scale,\n\t            xMin,\n\t            yMin,\n\t            xMax,\n\t            yMax,\n\t            i;\n\t\n\t        if ((this.minLevel && level < this.minLevel) || (this.maxLevel && level > this.maxLevel)) {\n\t            return false;\n\t        }\n\t\n\t        if ( !rects || !rects.length ) {\n\t            return true;\n\t        }\n\t\n\t        for ( i = rects.length - 1; i >= 0; i-- ) {\n\t            rect = rects[ i ];\n\t\n\t            if ( level < rect.minLevel || level > rect.maxLevel ) {\n\t                continue;\n\t            }\n\t\n\t            scale = this.getLevelScale( level );\n\t            xMin = rect.x * scale;\n\t            yMin = rect.y * scale;\n\t            xMax = xMin + rect.width * scale;\n\t            yMax = yMin + rect.height * scale;\n\t\n\t            xMin = Math.floor( xMin / this._tileWidth );\n\t            yMin = Math.floor( yMin / this._tileWidth ); // DZI tiles are square, so we just use _tileWidth\n\t            xMax = Math.ceil( xMax / this._tileWidth );\n\t            yMax = Math.ceil( yMax / this._tileWidth );\n\t\n\t            if ( xMin <= x && x < xMax && yMin <= y && y < yMax ) {\n\t                return true;\n\t            }\n\t        }\n\t\n\t        return false;\n\t    }\n\t});\n\t\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction configureFromXML( tileSource, xmlDoc ){\n\t\n\t    if ( !xmlDoc || !xmlDoc.documentElement ) {\n\t        throw new Error( $.getString( \"Errors.Xml\" ) );\n\t    }\n\t\n\t    var root           = xmlDoc.documentElement,\n\t        rootName       = root.localName || root.tagName,\n\t        ns             = xmlDoc.documentElement.namespaceURI,\n\t        configuration  = null,\n\t        displayRects   = [],\n\t        dispRectNodes,\n\t        dispRectNode,\n\t        rectNode,\n\t        sizeNode,\n\t        i;\n\t\n\t    if ( rootName == \"Image\" ) {\n\t\n\t        try {\n\t            sizeNode = root.getElementsByTagName(\"Size\" )[ 0 ];\n\t            if (sizeNode === undefined) {\n\t                sizeNode = root.getElementsByTagNameNS(ns, \"Size\" )[ 0 ];\n\t            }\n\t\n\t            configuration = {\n\t                Image: {\n\t                    xmlns:       \"http://schemas.microsoft.com/deepzoom/2008\",\n\t                    Url:         root.getAttribute( \"Url\" ),\n\t                    Format:      root.getAttribute( \"Format\" ),\n\t                    DisplayRect: null,\n\t                    Overlap:     parseInt( root.getAttribute( \"Overlap\" ), 10 ),\n\t                    TileSize:    parseInt( root.getAttribute( \"TileSize\" ), 10 ),\n\t                    Size: {\n\t                        Height: parseInt( sizeNode.getAttribute( \"Height\" ), 10 ),\n\t                        Width:  parseInt( sizeNode.getAttribute( \"Width\" ), 10 )\n\t                    }\n\t                }\n\t            };\n\t\n\t            if ( !$.imageFormatSupported( configuration.Image.Format ) ) {\n\t                throw new Error(\n\t                    $.getString( \"Errors.ImageFormat\", configuration.Image.Format.toUpperCase() )\n\t                );\n\t            }\n\t\n\t            dispRectNodes = root.getElementsByTagName(\"DisplayRect\" );\n\t            if (dispRectNodes === undefined) {\n\t                dispRectNodes = root.getElementsByTagNameNS(ns, \"DisplayRect\" )[ 0 ];\n\t            }\n\t\n\t            for ( i = 0; i < dispRectNodes.length; i++ ) {\n\t                dispRectNode = dispRectNodes[ i ];\n\t                rectNode     = dispRectNode.getElementsByTagName(\"Rect\" )[ 0 ];\n\t                if (rectNode === undefined) {\n\t                    rectNode = dispRectNode.getElementsByTagNameNS(ns, \"Rect\" )[ 0 ];\n\t                }\n\t\n\t                displayRects.push({\n\t                    Rect: {\n\t                        X: parseInt( rectNode.getAttribute( \"X\" ), 10 ),\n\t                        Y: parseInt( rectNode.getAttribute( \"Y\" ), 10 ),\n\t                        Width: parseInt( rectNode.getAttribute( \"Width\" ), 10 ),\n\t                        Height: parseInt( rectNode.getAttribute( \"Height\" ), 10 ),\n\t                        MinLevel: parseInt( dispRectNode.getAttribute( \"MinLevel\" ), 10 ),\n\t                        MaxLevel: parseInt( dispRectNode.getAttribute( \"MaxLevel\" ), 10 )\n\t                    }\n\t                });\n\t            }\n\t\n\t            if( displayRects.length ){\n\t                configuration.Image.DisplayRect = displayRects;\n\t            }\n\t\n\t            return configureFromObject( tileSource, configuration );\n\t\n\t        } catch ( e ) {\n\t            throw (e instanceof Error) ?\n\t                e :\n\t                new Error( $.getString(\"Errors.Dzi\") );\n\t        }\n\t    } else if ( rootName == \"Collection\" ) {\n\t        throw new Error( $.getString( \"Errors.Dzc\" ) );\n\t    } else if ( rootName == \"Error\" ) {\n\t        var messageNode = root.getElementsByTagName(\"Message\")[0];\n\t        var message = messageNode.firstChild.nodeValue;\n\t        throw new Error(message);\n\t    }\n\t\n\t    throw new Error( $.getString( \"Errors.Dzi\" ) );\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction configureFromObject( tileSource, configuration ){\n\t    var imageData     = configuration.Image,\n\t        tilesUrl      = imageData.Url,\n\t        fileFormat    = imageData.Format,\n\t        sizeData      = imageData.Size,\n\t        dispRectData  = imageData.DisplayRect || [],\n\t        width         = parseInt( sizeData.Width, 10 ),\n\t        height        = parseInt( sizeData.Height, 10 ),\n\t        tileSize      = parseInt( imageData.TileSize, 10 ),\n\t        tileOverlap   = parseInt( imageData.Overlap, 10 ),\n\t        displayRects  = [],\n\t        rectData,\n\t        i;\n\t\n\t    //TODO: need to figure out out to better handle image format compatibility\n\t    //      which actually includes additional file formats like xml and pdf\n\t    //      and plain text for various tilesource implementations to avoid low\n\t    //      level errors.\n\t    //\n\t    //      For now, just don't perform the check.\n\t    //\n\t    /*if ( !imageFormatSupported( fileFormat ) ) {\n\t        throw new Error(\n\t            $.getString( \"Errors.ImageFormat\", fileFormat.toUpperCase() )\n\t        );\n\t    }*/\n\t\n\t    for ( i = 0; i < dispRectData.length; i++ ) {\n\t        rectData = dispRectData[ i ].Rect;\n\t\n\t        displayRects.push( new $.DisplayRect(\n\t            parseInt( rectData.X, 10 ),\n\t            parseInt( rectData.Y, 10 ),\n\t            parseInt( rectData.Width, 10 ),\n\t            parseInt( rectData.Height, 10 ),\n\t            parseInt( rectData.MinLevel, 10 ),\n\t            parseInt( rectData.MaxLevel, 10 )\n\t        ));\n\t    }\n\t\n\t    return $.extend(true, {\n\t        width: width, /* width *required */\n\t        height: height, /* height *required */\n\t        tileSize: tileSize, /* tileSize *required */\n\t        tileOverlap: tileOverlap, /* tileOverlap *required */\n\t        minLevel: null, /* minLevel */\n\t        maxLevel: null, /* maxLevel */\n\t        tilesUrl: tilesUrl, /* tilesUrl */\n\t        fileFormat: fileFormat, /* fileFormat */\n\t        displayRects: displayRects /* displayRects */\n\t    }, configuration );\n\t\n\t}\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - IIIFTileSource\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class IIIFTileSource\n\t * @classdesc A client implementation of the International Image Interoperability Framework\n\t * Format: Image API 1.0 - 2.1\n\t *\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.TileSource\n\t * @see http://iiif.io/api/image/\n\t * @param {String} [options.tileFormat='jpg']\n\t *      The extension that will be used when requiring tiles.\n\t */\n\t$.IIIFTileSource = function( options ){\n\t\n\t    /* eslint-disable camelcase */\n\t\n\t    $.extend( true, this, options );\n\t\n\t    if ( !( this.height && this.width && this['@id'] ) ) {\n\t        throw new Error( 'IIIF required parameters not provided.' );\n\t    }\n\t\n\t    options.tileSizePerScaleFactor = {};\n\t\n\t    this.tileFormat = this.tileFormat || 'jpg';\n\t\n\t    // N.B. 2.0 renamed scale_factors to scaleFactors\n\t    if ( this.tile_width && this.tile_height ) {\n\t        options.tileWidth = this.tile_width;\n\t        options.tileHeight = this.tile_height;\n\t    } else if ( this.tile_width ) {\n\t        options.tileSize = this.tile_width;\n\t    } else if ( this.tile_height ) {\n\t        options.tileSize = this.tile_height;\n\t    } else if ( this.tiles ) {\n\t        // Version 2.0 forwards\n\t        if ( this.tiles.length == 1 ) {\n\t            options.tileWidth  = this.tiles[0].width;\n\t            // Use height if provided, otherwise assume square tiles and use width.\n\t            options.tileHeight = this.tiles[0].height || this.tiles[0].width;\n\t            this.scale_factors = this.tiles[0].scaleFactors;\n\t        } else {\n\t            // Multiple tile sizes at different levels\n\t            this.scale_factors = [];\n\t            for (var t = 0; t < this.tiles.length; t++ ) {\n\t                for (var sf = 0; sf < this.tiles[t].scaleFactors.length; sf++) {\n\t                    var scaleFactor = this.tiles[t].scaleFactors[sf];\n\t                    this.scale_factors.push(scaleFactor);\n\t                    options.tileSizePerScaleFactor[scaleFactor] = {\n\t                        width: this.tiles[t].width,\n\t                        height: this.tiles[t].height || this.tiles[t].width\n\t                    };\n\t                }\n\t            }\n\t        }\n\t    } else if ( canBeTiled(options.profile) ) {\n\t        // use the largest of tileOptions that is smaller than the short dimension\n\t        var shortDim = Math.min( this.height, this.width ),\n\t            tileOptions = [256, 512, 1024],\n\t            smallerTiles = [];\n\t\n\t        for ( var c = 0; c < tileOptions.length; c++ ) {\n\t            if ( tileOptions[c] <= shortDim ) {\n\t                smallerTiles.push( tileOptions[c] );\n\t            }\n\t        }\n\t\n\t        if ( smallerTiles.length > 0 ) {\n\t            options.tileSize = Math.max.apply( null, smallerTiles );\n\t        } else {\n\t            // If we're smaller than 256, just use the short side.\n\t            options.tileSize = shortDim;\n\t        }\n\t    } else if (this.sizes && this.sizes.length > 0) {\n\t        // This info.json can't be tiled, but we can still construct a legacy pyramid from the sizes array.\n\t        // In this mode, IIIFTileSource will call functions from the abstract baseTileSource or the\n\t        // LegacyTileSource instead of performing IIIF tiling.\n\t        this.emulateLegacyImagePyramid = true;\n\t\n\t        options.levels = constructLevels( this );\n\t        // use the largest available size to define tiles\n\t        $.extend( true, options, {\n\t            width: options.levels[ options.levels.length - 1 ].width,\n\t            height: options.levels[ options.levels.length - 1 ].height,\n\t            tileSize: Math.max( options.height, options.width ),\n\t            tileOverlap: 0,\n\t            minLevel: 0,\n\t            maxLevel: options.levels.length - 1\n\t        });\n\t        this.levels = options.levels;\n\t    } else {\n\t        $.console.error(\"Nothing in the info.json to construct image pyramids from\");\n\t    }\n\t\n\t    if (!options.maxLevel && !this.emulateLegacyImagePyramid) {\n\t        if (!this.scale_factors) {\n\t            options.maxLevel = Number(Math.ceil(Math.log(Math.max(this.width, this.height), 2)));\n\t        } else {\n\t            var maxScaleFactor = Math.max.apply(null, this.scale_factors);\n\t            options.maxLevel = Math.round(Math.log(maxScaleFactor) * Math.LOG2E);\n\t        }\n\t    }\n\t\n\t    $.TileSource.apply( this, [ options ] );\n\t};\n\t\n\t$.extend( $.IIIFTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.IIIFTileSource.prototype */{\n\t    /**\n\t     * Determine if the data and/or url imply the image service is supported by\n\t     * this tile source.\n\t     * @function\n\t     * @param {Object|Array} data\n\t     * @param {String} optional - url\n\t     */\n\t\n\t    supports: function( data, url ) {\n\t        // Version 2.0 and forwards\n\t        if (data.protocol && data.protocol == 'http://iiif.io/api/image') {\n\t            return true;\n\t        // Version 1.1\n\t        } else if ( data['@context'] && (\n\t            data['@context'] == \"http://library.stanford.edu/iiif/image-api/1.1/context.json\" ||\n\t            data['@context'] == \"http://iiif.io/api/image/1/context.json\") ) {\n\t            // N.B. the iiif.io context is wrong, but where the representation lives so likely to be used\n\t            return true;\n\t\n\t        // Version 1.0\n\t        } else if ( data.profile &&\n\t            data.profile.indexOf(\"http://library.stanford.edu/iiif/image-api/compliance.html\") === 0) {\n\t            return true;\n\t        } else if ( data.identifier && data.width && data.height ) {\n\t            return true;\n\t        } else if ( data.documentElement &&\n\t            \"info\" == data.documentElement.tagName &&\n\t            \"http://library.stanford.edu/iiif/image-api/ns/\" ==\n\t                data.documentElement.namespaceURI) {\n\t            return true;\n\t\n\t        // Not IIIF\n\t        } else {\n\t            return false;\n\t        }\n\t    },\n\t\n\t    /**\n\t     *\n\t     * @function\n\t     * @param {Object} data - the raw configuration\n\t     * @example <caption>IIIF 1.1 Info Looks like this</caption>\n\t     * {\n\t     *   \"@context\" : \"http://library.stanford.edu/iiif/image-api/1.1/context.json\",\n\t     *   \"@id\" : \"http://iiif.example.com/prefix/1E34750D-38DB-4825-A38A-B60A345E591C\",\n\t     *   \"width\" : 6000,\n\t     *   \"height\" : 4000,\n\t     *   \"scale_factors\" : [ 1, 2, 4 ],\n\t     *   \"tile_width\" : 1024,\n\t     *   \"tile_height\" : 1024,\n\t     *   \"formats\" : [ \"jpg\", \"png\" ],\n\t     *   \"qualities\" : [ \"native\", \"grey\" ],\n\t     *   \"profile\" : \"http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0\"\n\t     * }\n\t     */\n\t    configure: function( data, url ){\n\t        // Try to deduce our version and fake it upwards if needed\n\t        if ( !$.isPlainObject(data) ) {\n\t            var options = configureFromXml10( data );\n\t            options['@context'] = \"http://iiif.io/api/image/1.0/context.json\";\n\t            options['@id'] = url.replace('/info.xml', '');\n\t            return options;\n\t        } else {\n\t            if ( !data['@context'] ) {\n\t                data['@context'] = 'http://iiif.io/api/image/1.0/context.json';\n\t                data['@id'] = url.replace('/info.json', '');\n\t            }\n\t            if(data.preferredFormats) {\n\t                for (var f = 0; f < data.preferredFormats.length; f++ ) {\n\t                    if ( OpenSeadragon.imageFormatSupported(data.preferredFormats[f]) ) {\n\t                        data.tileFormat = data.preferredFormats[f];\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            return data;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Return the tileWidth for the given level.\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getTileWidth: function( level ) {\n\t\n\t        if(this.emulateLegacyImagePyramid) {\n\t            return $.TileSource.prototype.getTileWidth.call(this, level);\n\t        }\n\t\n\t        var scaleFactor = Math.pow(2, this.maxLevel - level);\n\t\n\t        if (this.tileSizePerScaleFactor && this.tileSizePerScaleFactor[scaleFactor]) {\n\t            return this.tileSizePerScaleFactor[scaleFactor].width;\n\t        }\n\t        return this._tileWidth;\n\t    },\n\t\n\t    /**\n\t     * Return the tileHeight for the given level.\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getTileHeight: function( level ) {\n\t\n\t        if(this.emulateLegacyImagePyramid) {\n\t            return $.TileSource.prototype.getTileHeight.call(this, level);\n\t        }\n\t\n\t        var scaleFactor = Math.pow(2, this.maxLevel - level);\n\t\n\t        if (this.tileSizePerScaleFactor && this.tileSizePerScaleFactor[scaleFactor]) {\n\t            return this.tileSizePerScaleFactor[scaleFactor].height;\n\t        }\n\t        return this._tileHeight;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getLevelScale: function ( level ) {\n\t\n\t        if(this.emulateLegacyImagePyramid) {\n\t            var levelScale = NaN;\n\t            if (this.levels.length > 0 && level >= this.minLevel && level <= this.maxLevel) {\n\t                levelScale =\n\t                    this.levels[level].width /\n\t                    this.levels[this.maxLevel].width;\n\t            }\n\t            return levelScale;\n\t        }\n\t\n\t        return $.TileSource.prototype.getLevelScale.call(this, level);\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getNumTiles: function( level ) {\n\t\n\t        if(this.emulateLegacyImagePyramid) {\n\t            var scale = this.getLevelScale(level);\n\t            if (scale) {\n\t                return new $.Point(1, 1);\n\t            } else {\n\t                return new $.Point(0, 0);\n\t            }\n\t        }\n\t\n\t        return $.TileSource.prototype.getNumTiles.call(this, level);\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {OpenSeadragon.Point} point\n\t     */\n\t    getTileAtPoint: function( level, point ) {\n\t\n\t        if(this.emulateLegacyImagePyramid) {\n\t            return new $.Point(0, 0);\n\t        }\n\t\n\t        return $.TileSource.prototype.getTileAtPoint.call(this, level, point);\n\t    },\n\t\n\t\n\t    /**\n\t     * Responsible for retrieving the url which will return an image for the\n\t     * region specified by the given x, y, and level components.\n\t     * @function\n\t     * @param {Number} level - z index\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     * @throws {Error}\n\t     */\n\t    getTileUrl: function( level, x, y ){\n\t\n\t        if(this.emulateLegacyImagePyramid) {\n\t            var url = null;\n\t            if ( this.levels.length > 0 && level >= this.minLevel && level <= this.maxLevel ) {\n\t                url = this.levels[ level ].url;\n\t            }\n\t            return url;\n\t        }\n\t\n\t        //# constants\n\t        var IIIF_ROTATION = '0',\n\t            //## get the scale (level as a decimal)\n\t            scale = Math.pow( 0.5, this.maxLevel - level ),\n\t\n\t            //# image dimensions at this level\n\t            levelWidth = Math.ceil( this.width * scale ),\n\t            levelHeight = Math.ceil( this.height * scale ),\n\t\n\t            //## iiif region\n\t            tileWidth,\n\t            tileHeight,\n\t            iiifTileSizeWidth,\n\t            iiifTileSizeHeight,\n\t            iiifRegion,\n\t            iiifTileX,\n\t            iiifTileY,\n\t            iiifTileW,\n\t            iiifTileH,\n\t            iiifSize,\n\t            iiifSizeW,\n\t            iiifQuality,\n\t            uri,\n\t            isv1;\n\t\n\t        tileWidth = this.getTileWidth(level);\n\t        tileHeight = this.getTileHeight(level);\n\t        iiifTileSizeWidth = Math.ceil( tileWidth / scale );\n\t        iiifTileSizeHeight = Math.ceil( tileHeight / scale );\n\t        isv1 = ( this['@context'].indexOf('/1.0/context.json') > -1 ||\n\t             this['@context'].indexOf('/1.1/context.json') > -1 ||\n\t             this['@context'].indexOf('/1/context.json') > -1 );\n\t        if (isv1) {\n\t            iiifQuality = \"native.\" + this.tileFormat;\n\t        } else {\n\t            iiifQuality = \"default.\" + this.tileFormat;\n\t        }\n\t        if ( levelWidth < tileWidth && levelHeight < tileHeight ){\n\t            if ( isv1 || levelWidth !== this.width ) {\n\t                iiifSize = levelWidth + \",\";\n\t            } else {\n\t                iiifSize = \"max\";\n\t            }\n\t            iiifRegion = 'full';\n\t        } else {\n\t            iiifTileX = x * iiifTileSizeWidth;\n\t            iiifTileY = y * iiifTileSizeHeight;\n\t            iiifTileW = Math.min( iiifTileSizeWidth, this.width - iiifTileX );\n\t            iiifTileH = Math.min( iiifTileSizeHeight, this.height - iiifTileY );\n\t            if ( x === 0 && y === 0 && iiifTileW === this.width && iiifTileH === this.height ) {\n\t                iiifRegion = \"full\";\n\t            } else {\n\t                iiifRegion = [ iiifTileX, iiifTileY, iiifTileW, iiifTileH ].join( ',' );\n\t            }\n\t            iiifSizeW = Math.ceil( iiifTileW * scale );\n\t            if ( (!isv1) && iiifSizeW === this.width ) {\n\t                iiifSize = \"max\";\n\t            } else {\n\t                iiifSize = iiifSizeW + \",\";\n\t            }\n\t        }\n\t        uri = [ this['@id'], iiifRegion, iiifSize, IIIF_ROTATION, iiifQuality ].join( '/' );\n\t\n\t        return uri;\n\t    }\n\t\n\t  });\n\t\n\t    /**\n\t     * Determine whether arbitrary tile requests can be made against a service with the given profile\n\t     * @function\n\t     * @param {array} profile - IIIF profile array\n\t     * @throws {Error}\n\t     */\n\t    function canBeTiled ( profile ) {\n\t        var level0Profiles = [\n\t            \"http://library.stanford.edu/iiif/image-api/compliance.html#level0\",\n\t            \"http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0\",\n\t            \"http://iiif.io/api/image/2/level0.json\"\n\t        ];\n\t        var isLevel0 = (level0Profiles.indexOf(profile[0]) !== -1);\n\t        var hasSizeByW = false;\n\t        if ( profile.length > 1 && profile[1].supports ) {\n\t            hasSizeByW = profile[1].supports.indexOf( \"sizeByW\" ) !== -1;\n\t        }\n\t        return !isLevel0 || hasSizeByW;\n\t    }\n\t\n\t    /**\n\t     * Build the legacy pyramid URLs (one tile per level)\n\t     * @function\n\t     * @param {object} options - infoJson\n\t     * @throws {Error}\n\t     */\n\t    function constructLevels(options) {\n\t        var levels = [];\n\t        for(var i = 0; i < options.sizes.length; i++) {\n\t            levels.push({\n\t                url: options['@id'] + '/full/' + options.sizes[i].width + ',/0/default.' + options.tileFormat,\n\t                width: options.sizes[i].width,\n\t                height: options.sizes[i].height\n\t            });\n\t        }\n\t        return levels.sort(function(a, b) {\n\t            return a.width - b.width;\n\t        });\n\t    }\n\t\n\t\n\t    function configureFromXml10(xmlDoc) {\n\t        //parse the xml\n\t        if ( !xmlDoc || !xmlDoc.documentElement ) {\n\t            throw new Error( $.getString( \"Errors.Xml\" ) );\n\t        }\n\t\n\t        var root            = xmlDoc.documentElement,\n\t            rootName        = root.tagName,\n\t            configuration   = null;\n\t\n\t        if ( rootName == \"info\" ) {\n\t            try {\n\t                configuration = {};\n\t                parseXML10( root, configuration );\n\t                return configuration;\n\t\n\t            } catch ( e ) {\n\t                throw (e instanceof Error) ?\n\t                    e :\n\t                    new Error( $.getString(\"Errors.IIIF\") );\n\t            }\n\t        }\n\t        throw new Error( $.getString( \"Errors.IIIF\" ) );\n\t    }\n\t\n\t    function parseXML10( node, configuration, property ) {\n\t        var i,\n\t            value;\n\t        if ( node.nodeType == 3 && property ) {//text node\n\t            value = node.nodeValue.trim();\n\t            if( value.match(/^\\d*$/)){\n\t                value = Number( value );\n\t            }\n\t            if( !configuration[ property ] ){\n\t                configuration[ property ] = value;\n\t            }else{\n\t                if( !$.isArray( configuration[ property ] ) ){\n\t                    configuration[ property ] = [ configuration[ property ] ];\n\t                }\n\t                configuration[ property ].push( value );\n\t            }\n\t        } else if( node.nodeType == 1 ){\n\t            for( i = 0; i < node.childNodes.length; i++ ){\n\t                parseXML10( node.childNodes[ i ], configuration, node.nodeName );\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - OsmTileSource\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t/*\n\t * Derived from the OSM tile source in Rainer Simon's seajax-utils project\n\t * <http://github.com/rsimon/seajax-utils>.  Rainer Simon has contributed\n\t * the included code to the OpenSeadragon project under the New BSD license;\n\t * see <https://github.com/openseadragon/openseadragon/issues/58>.\n\t */\n\t\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class OsmTileSource\n\t * @classdesc A tilesource implementation for OpenStreetMap.<br><br>\n\t *\n\t * Note 1. Zoomlevels. Deep Zoom and OSM define zoom levels differently. In  Deep\n\t * Zoom, level 0 equals an image of 1x1 pixels. In OSM, level 0 equals an image of\n\t * 256x256 levels (see http://gasi.ch/blog/inside-deep-zoom-2). I.e. there is a\n\t * difference of log2(256)=8 levels.<br><br>\n\t *\n\t * Note 2. Image dimension. According to the OSM Wiki\n\t * (http://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Zoom_levels)\n\t * the highest Mapnik zoom level has 256.144x256.144 tiles, with a 256x256\n\t * pixel size. I.e. the Deep Zoom image dimension is 65.572.864x65.572.864\n\t * pixels.\n\t *\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.TileSource\n\t * @param {Number|Object} width - the pixel width of the image or the idiomatic\n\t *      options object which is used instead of positional arguments.\n\t * @param {Number} height\n\t * @param {Number} tileSize\n\t * @param {Number} tileOverlap\n\t * @param {String} tilesUrl\n\t */\n\t$.OsmTileSource = function( width, height, tileSize, tileOverlap, tilesUrl ) {\n\t    var options;\n\t\n\t    if( $.isPlainObject( width ) ){\n\t        options = width;\n\t    }else{\n\t        options = {\n\t            width: arguments[0],\n\t            height: arguments[1],\n\t            tileSize: arguments[2],\n\t            tileOverlap: arguments[3],\n\t            tilesUrl: arguments[4]\n\t        };\n\t    }\n\t    //apply default setting for standard public OpenStreatMaps service\n\t    //but allow them to be specified so fliks can host there own instance\n\t    //or apply against other services supportting the same standard\n\t    if( !options.width || !options.height ){\n\t        options.width = 65572864;\n\t        options.height = 65572864;\n\t    }\n\t    if( !options.tileSize ){\n\t        options.tileSize = 256;\n\t        options.tileOverlap = 0;\n\t    }\n\t    if( !options.tilesUrl ){\n\t        options.tilesUrl = \"http://tile.openstreetmap.org/\";\n\t    }\n\t    options.minLevel = 8;\n\t\n\t    $.TileSource.apply( this, [ options ] );\n\t\n\t};\n\t\n\t$.extend( $.OsmTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.OsmTileSource.prototype */{\n\t\n\t\n\t    /**\n\t     * Determine if the data and/or url imply the image service is supported by\n\t     * this tile source.\n\t     * @function\n\t     * @param {Object|Array} data\n\t     * @param {String} optional - url\n\t     */\n\t    supports: function( data, url ){\n\t        return (\n\t            data.type &&\n\t            \"openstreetmaps\" == data.type\n\t        );\n\t    },\n\t\n\t    /**\n\t     *\n\t     * @function\n\t     * @param {Object} data - the raw configuration\n\t     * @param {String} url - the url the data was retrieved from if any.\n\t     * @return {Object} options - A dictionary of keyword arguments sufficient\n\t     *      to configure this tile sources constructor.\n\t     */\n\t    configure: function( data, url ){\n\t        return data;\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     */\n\t    getTileUrl: function( level, x, y ) {\n\t        return this.tilesUrl + (level - 8) + \"/\" + x + \"/\" + y + \".png\";\n\t    }\n\t});\n\t\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - TmsTileSource\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t/*\n\t * Derived from the TMS tile source in Rainer Simon's seajax-utils project\n\t * <http://github.com/rsimon/seajax-utils>.  Rainer Simon has contributed\n\t * the included code to the OpenSeadragon project under the New BSD license;\n\t * see <https://github.com/openseadragon/openseadragon/issues/58>.\n\t */\n\t\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class TmsTileSource\n\t * @classdesc A tilesource implementation for Tiled Map Services (TMS).\n\t * TMS tile scheme ( [ as supported by OpenLayers ] is described here\n\t * ( http://openlayers.org/dev/examples/tms.html ).\n\t *\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.TileSource\n\t * @param {Number|Object} width - the pixel width of the image or the idiomatic\n\t *      options object which is used instead of positional arguments.\n\t * @param {Number} height\n\t * @param {Number} tileSize\n\t * @param {Number} tileOverlap\n\t * @param {String} tilesUrl\n\t */\n\t$.TmsTileSource = function( width, height, tileSize, tileOverlap, tilesUrl ) {\n\t    var options;\n\t\n\t    if( $.isPlainObject( width ) ){\n\t        options = width;\n\t    }else{\n\t        options = {\n\t            width: arguments[0],\n\t            height: arguments[1],\n\t            tileSize: arguments[2],\n\t            tileOverlap: arguments[3],\n\t            tilesUrl: arguments[4]\n\t        };\n\t    }\n\t    // TMS has integer multiples of 256 for width/height and adds buffer\n\t    // if necessary -> account for this!\n\t    var bufferedWidth = Math.ceil(options.width / 256) * 256,\n\t        bufferedHeight = Math.ceil(options.height / 256) * 256,\n\t        max;\n\t\n\t    // Compute number of zoomlevels in this tileset\n\t    if (bufferedWidth > bufferedHeight) {\n\t        max = bufferedWidth / 256;\n\t    } else {\n\t        max = bufferedHeight / 256;\n\t    }\n\t    options.maxLevel = Math.ceil(Math.log(max) / Math.log(2)) - 1;\n\t    options.tileSize = 256;\n\t    options.width = bufferedWidth;\n\t    options.height = bufferedHeight;\n\t\n\t    $.TileSource.apply( this, [ options ] );\n\t\n\t};\n\t\n\t$.extend( $.TmsTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.TmsTileSource.prototype */{\n\t\n\t\n\t    /**\n\t     * Determine if the data and/or url imply the image service is supported by\n\t     * this tile source.\n\t     * @function\n\t     * @param {Object|Array} data\n\t     * @param {String} optional - url\n\t     */\n\t    supports: function( data, url ){\n\t        return ( data.type && \"tiledmapservice\" == data.type );\n\t    },\n\t\n\t    /**\n\t     *\n\t     * @function\n\t     * @param {Object} data - the raw configuration\n\t     * @param {String} url - the url the data was retrieved from if any.\n\t     * @return {Object} options - A dictionary of keyword arguments sufficient\n\t     *      to configure this tile sources constructor.\n\t     */\n\t    configure: function( data, url ){\n\t        return data;\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     */\n\t    getTileUrl: function( level, x, y ) {\n\t        // Convert from Deep Zoom definition to TMS zoom definition\n\t        var yTiles = this.getNumTiles( level ).y - 1;\n\t\n\t        return this.tilesUrl + level + \"/\" + x + \"/\" + (yTiles - y) + \".png\";\n\t    }\n\t});\n\t\n\t\n\t}( OpenSeadragon ));\n\t\n\t(function($) {\n\t\n\t    /**\n\t     * @class ZoomifyTileSource\n\t     * @classdesc A tilesource implementation for the zoomify format.\n\t     *\n\t     * A description of the format can be found here:\n\t     * https://ecommons.cornell.edu/bitstream/handle/1813/5410/Introducing_Zoomify_Image.pdf\n\t     *\n\t     * There are two ways of creating a zoomify tilesource for openseadragon\n\t     *\n\t     * 1) Supplying all necessary information in the tilesource object. A minimal example object for this method looks like this:\n\t     *\n\t     * {\n\t     *      type: \"zoomifytileservice\",\n\t     *      width: 1000,\n\t     *      height: 1000,\n\t     *      tilesUrl: \"/test/data/zoomify/\"\n\t     * }\n\t     *\n\t     * The tileSize is currently hardcoded to 256 (the usual Zoomify default). The tileUrl must the path to the image _directory_.\n\t     *\n\t     * 2) Loading image metadata from xml file: (CURRENTLY NOT SUPPORTED)\n\t     *\n\t     * When creating zoomify formatted images one \"xml\" like file with name ImageProperties.xml\n\t     * will be created as well. Here is an example of such a file:\n\t     *\n\t     * <IMAGE_PROPERTIES WIDTH=\"1000\" HEIGHT=\"1000\" NUMTILES=\"21\" NUMIMAGES=\"1\" VERSION=\"1.8\" TILESIZE=\"256\" />\n\t     *\n\t     * To use this xml file as metadata source you must supply the path to the ImageProperties.xml file and leave out all other parameters:\n\t     * As stated above, this method of loading a zoomify tilesource is currently not supported\n\t     *\n\t     * {\n\t     *      type: \"zoomifytileservice\",\n\t     *      tilesUrl: \"/test/data/zoomify/ImageProperties.xml\"\n\t     * }\n\t\n\t    *\n\t    * @memberof OpenSeadragon\n\t     * @extends OpenSeadragon.TileSource\n\t     * @param {Number} width - the pixel width of the image.\n\t     * @param {Number} height\n\t     * @param {Number} tileSize\n\t     * @param {String} tilesUrl\n\t     */\n\t    $.ZoomifyTileSource = function(options) {\n\t        options.tileSize = 256;\n\t\n\t        var currentImageSize = {\n\t            x: options.width,\n\t            y: options.height\n\t        };\n\t        options.imageSizes = [{\n\t            x: options.width,\n\t            y: options.height\n\t        }];\n\t        options.gridSize = [this._getGridSize(options.width, options.height, options.tileSize)];\n\t\n\t        while (parseInt(currentImageSize.x, 10) > options.tileSize || parseInt(currentImageSize.y, 10) > options.tileSize) {\n\t            currentImageSize.x = Math.floor(currentImageSize.x / 2);\n\t            currentImageSize.y = Math.floor(currentImageSize.y / 2);\n\t            options.imageSizes.push({\n\t                x: currentImageSize.x,\n\t                y: currentImageSize.y\n\t            });\n\t            options.gridSize.push(this._getGridSize(currentImageSize.x, currentImageSize.y, options.tileSize));\n\t        }\n\t        options.imageSizes.reverse();\n\t        options.gridSize.reverse();\n\t        options.minLevel = 0;\n\t        options.maxLevel = options.gridSize.length - 1;\n\t\n\t        OpenSeadragon.TileSource.apply(this, [options]);\n\t    };\n\t\n\t    $.extend($.ZoomifyTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.ZoomifyTileSource.prototype */ {\n\t\n\t        //private\n\t        _getGridSize: function(width, height, tileSize) {\n\t            return {\n\t                x: Math.ceil(width / tileSize),\n\t                y: Math.ceil(height / tileSize)\n\t            };\n\t        },\n\t\n\t        //private\n\t        _calculateAbsoluteTileNumber: function(level, x, y) {\n\t            var num = 0;\n\t            var size = {};\n\t\n\t            //Sum up all tiles below the level we want the number of tiles\n\t            for (var z = 0; z < level; z++) {\n\t                size = this.gridSize[z];\n\t                num += size.x * size.y;\n\t            }\n\t            //Add the tiles of the level\n\t            size = this.gridSize[level];\n\t            num += size.x * y + x;\n\t            return num;\n\t        },\n\t\n\t        /**\n\t         * Determine if the data and/or url imply the image service is supported by\n\t         * this tile source.\n\t         * @function\n\t         * @param {Object|Array} data\n\t         * @param {String} optional - url\n\t         */\n\t        supports: function(data, url) {\n\t            return (data.type && \"zoomifytileservice\" == data.type);\n\t        },\n\t\n\t        /**\n\t         *\n\t         * @function\n\t         * @param {Object} data - the raw configuration\n\t         * @param {String} url - the url the data was retrieved from if any.\n\t         * @return {Object} options - A dictionary of keyword arguments sufficient\n\t         *      to configure this tile sources constructor.\n\t         */\n\t        configure: function(data, url) {\n\t            return data;\n\t        },\n\t\n\t        /**\n\t         * @function\n\t         * @param {Number} level\n\t         * @param {Number} x\n\t         * @param {Number} y\n\t         */\n\t        getTileUrl: function(level, x, y) {\n\t            //console.log(level);\n\t            var result = 0;\n\t            var num = this._calculateAbsoluteTileNumber(level, x, y);\n\t            result = Math.floor(num / 256);\n\t            return this.tilesUrl + 'TileGroup' + result + '/' + level + '-' + x + '-' + y + '.jpg';\n\t\n\t        }\n\t    });\n\t\n\t}(OpenSeadragon));\n\t\n\t\n\t/*\n\t * OpenSeadragon - LegacyTileSource\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class LegacyTileSource\n\t * @classdesc The LegacyTileSource allows simple, traditional image pyramids to be loaded\n\t * into an OpenSeadragon Viewer.  Basically, this translates to the historically\n\t * common practice of starting with a 'master' image, maybe a tiff for example,\n\t * and generating a set of 'service' images like one or more thumbnails, a medium\n\t * resolution image and a high resolution image in standard web formats like\n\t * png or jpg.\n\t *\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.TileSource\n\t * @param {Array} levels An array of file descriptions, each is an object with\n\t *      a 'url', a 'width', and a 'height'.  Overriding classes can expect more\n\t *      properties but these properties are sufficient for this implementation.\n\t *      Additionally, the levels are required to be listed in order from\n\t *      smallest to largest.\n\t * @property {Number} aspectRatio\n\t * @property {Number} dimensions\n\t * @property {Number} tileSize\n\t * @property {Number} tileOverlap\n\t * @property {Number} minLevel\n\t * @property {Number} maxLevel\n\t * @property {Array}  levels\n\t */\n\t$.LegacyTileSource = function( levels ) {\n\t\n\t    var options,\n\t        width,\n\t        height;\n\t\n\t    if( $.isArray( levels ) ){\n\t        options = {\n\t            type: 'legacy-image-pyramid',\n\t            levels: levels\n\t        };\n\t    }\n\t\n\t    //clean up the levels to make sure we support all formats\n\t    options.levels = filterFiles( options.levels );\n\t\n\t    if ( options.levels.length > 0 ) {\n\t        width = options.levels[ options.levels.length - 1 ].width;\n\t        height = options.levels[ options.levels.length - 1 ].height;\n\t    }\n\t    else {\n\t        width = 0;\n\t        height = 0;\n\t        $.console.error( \"No supported image formats found\" );\n\t    }\n\t\n\t    $.extend( true, options, {\n\t        width: width,\n\t        height: height,\n\t        tileSize: Math.max( height, width ),\n\t        tileOverlap: 0,\n\t        minLevel: 0,\n\t        maxLevel: options.levels.length > 0 ? options.levels.length - 1 : 0\n\t    } );\n\t\n\t    $.TileSource.apply( this, [ options ] );\n\t\n\t    this.levels = options.levels;\n\t};\n\t\n\t$.extend( $.LegacyTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.LegacyTileSource.prototype */{\n\t    /**\n\t     * Determine if the data and/or url imply the image service is supported by\n\t     * this tile source.\n\t     * @function\n\t     * @param {Object|Array} data\n\t     * @param {String} optional - url\n\t     */\n\t    supports: function( data, url ){\n\t        return (\n\t            data.type &&\n\t            \"legacy-image-pyramid\" == data.type\n\t        ) || (\n\t            data.documentElement &&\n\t            \"legacy-image-pyramid\" == data.documentElement.getAttribute('type')\n\t        );\n\t    },\n\t\n\t\n\t    /**\n\t     *\n\t     * @function\n\t     * @param {Object|XMLDocument} configuration - the raw configuration\n\t     * @param {String} dataUrl - the url the data was retrieved from if any.\n\t     * @return {Object} options - A dictionary of keyword arguments sufficient\n\t     *      to configure this tile sources constructor.\n\t     */\n\t    configure: function( configuration, dataUrl ){\n\t\n\t        var options;\n\t\n\t        if( !$.isPlainObject(configuration) ){\n\t\n\t            options = configureFromXML( this, configuration );\n\t\n\t        }else{\n\t\n\t            options = configureFromObject( this, configuration );\n\t        }\n\t\n\t        return options;\n\t\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getLevelScale: function ( level ) {\n\t        var levelScale = NaN;\n\t        if ( this.levels.length > 0 && level >= this.minLevel && level <= this.maxLevel ) {\n\t            levelScale =\n\t                this.levels[ level ].width /\n\t                this.levels[ this.maxLevel ].width;\n\t        }\n\t        return levelScale;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getNumTiles: function( level ) {\n\t        var scale = this.getLevelScale( level );\n\t        if ( scale ){\n\t            return new $.Point( 1, 1 );\n\t        } else {\n\t            return new $.Point( 0, 0 );\n\t        }\n\t    },\n\t\n\t    /**\n\t     * This method is not implemented by this class other than to throw an Error\n\t     * announcing you have to implement it.  Because of the variety of tile\n\t     * server technologies, and various specifications for building image\n\t     * pyramids, this method is here to allow easy integration.\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     * @throws {Error}\n\t     */\n\t    getTileUrl: function ( level, x, y ) {\n\t        var url = null;\n\t        if ( this.levels.length > 0 && level >= this.minLevel && level <= this.maxLevel ) {\n\t            url = this.levels[ level ].url;\n\t        }\n\t        return url;\n\t    }\n\t} );\n\t\n\t/**\n\t * This method removes any files from the Array which don't conform to our\n\t * basic requirements for a 'level' in the LegacyTileSource.\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction filterFiles( files ){\n\t    var filtered = [],\n\t        file,\n\t        i;\n\t    for( i = 0; i < files.length; i++ ){\n\t        file = files[ i ];\n\t        if( file.height &&\n\t            file.width &&\n\t            file.url ){\n\t            //This is sufficient to serve as a level\n\t            filtered.push({\n\t                url: file.url,\n\t                width: Number( file.width ),\n\t                height: Number( file.height )\n\t            });\n\t        }\n\t        else {\n\t            $.console.error( 'Unsupported image format: %s', file.url ? file.url : '<no URL>' );\n\t        }\n\t    }\n\t\n\t    return filtered.sort(function(a, b) {\n\t        return a.height - b.height;\n\t    });\n\t\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction configureFromXML( tileSource, xmlDoc ){\n\t\n\t    if ( !xmlDoc || !xmlDoc.documentElement ) {\n\t        throw new Error( $.getString( \"Errors.Xml\" ) );\n\t    }\n\t\n\t    var root         = xmlDoc.documentElement,\n\t        rootName     = root.tagName,\n\t        conf         = null,\n\t        levels       = [],\n\t        level,\n\t        i;\n\t\n\t    if ( rootName == \"image\" ) {\n\t\n\t        try {\n\t            conf = {\n\t                type:        root.getAttribute( \"type\" ),\n\t                levels:      []\n\t            };\n\t\n\t            levels = root.getElementsByTagName( \"level\" );\n\t            for ( i = 0; i < levels.length; i++ ) {\n\t                level = levels[ i ];\n\t\n\t                conf.levels.push({\n\t                    url:    level.getAttribute( \"url\" ),\n\t                    width:  parseInt( level.getAttribute( \"width\" ), 10 ),\n\t                    height: parseInt( level.getAttribute( \"height\" ), 10 )\n\t                });\n\t            }\n\t\n\t            return configureFromObject( tileSource, conf );\n\t\n\t        } catch ( e ) {\n\t            throw (e instanceof Error) ?\n\t                e :\n\t                new Error( 'Unknown error parsing Legacy Image Pyramid XML.' );\n\t        }\n\t    } else if ( rootName == \"collection\" ) {\n\t        throw new Error( 'Legacy Image Pyramid Collections not yet supported.' );\n\t    } else if ( rootName == \"error\" ) {\n\t        throw new Error( 'Error: ' + xmlDoc );\n\t    }\n\t\n\t    throw new Error( 'Unknown element ' + rootName );\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction configureFromObject( tileSource, configuration ){\n\t\n\t    return configuration.levels;\n\t\n\t}\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - ImageTileSource\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function ($) {\n\t\n\t    /**\n\t     * @class ImageTileSource\n\t     * @classdesc The ImageTileSource allows a simple image to be loaded\n\t     * into an OpenSeadragon Viewer.\n\t     * There are 2 ways to open an ImageTileSource:\n\t     * 1. viewer.open({type: 'image', url: fooUrl});\n\t     * 2. viewer.open(new OpenSeadragon.ImageTileSource({url: fooUrl}));\n\t     *\n\t     * With the first syntax, the crossOriginPolicy, ajaxWithCredentials and\n\t     * useCanvas options are inherited from the viewer if they are not\n\t     * specified directly in the options object.\n\t     *\n\t     * @memberof OpenSeadragon\n\t     * @extends OpenSeadragon.TileSource\n\t     * @param {Object} options Options object.\n\t     * @param {String} options.url URL of the image\n\t     * @param {Boolean} [options.buildPyramid=true] If set to true (default), a\n\t     * pyramid will be built internally to provide a better downsampling.\n\t     * @param {String|Boolean} [options.crossOriginPolicy=false] Valid values are\n\t     * 'Anonymous', 'use-credentials', and false. If false, image requests will\n\t     * not use CORS preventing internal pyramid building for images from other\n\t     * domains.\n\t     * @param {String|Boolean} [options.ajaxWithCredentials=false] Whether to set\n\t     * the withCredentials XHR flag for AJAX requests (when loading tile sources).\n\t     * @param {Boolean} [options.useCanvas=true] Set to false to prevent any use\n\t     * of the canvas API.\n\t     */\n\t    $.ImageTileSource = function (options) {\n\t\n\t        options = $.extend({\n\t            buildPyramid: true,\n\t            crossOriginPolicy: false,\n\t            ajaxWithCredentials: false,\n\t            useCanvas: true\n\t        }, options);\n\t        $.TileSource.apply(this, [options]);\n\t\n\t    };\n\t\n\t    $.extend($.ImageTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.ImageTileSource.prototype */{\n\t        /**\n\t         * Determine if the data and/or url imply the image service is supported by\n\t         * this tile source.\n\t         * @function\n\t         * @param {Object|Array} data\n\t         * @param {String} optional - url\n\t         */\n\t        supports: function (data, url) {\n\t            return data.type && data.type === \"image\";\n\t        },\n\t        /**\n\t         *\n\t         * @function\n\t         * @param {Object} options - the options\n\t         * @param {String} dataUrl - the url the image was retrieved from, if any.\n\t         * @return {Object} options - A dictionary of keyword arguments sufficient\n\t         *      to configure this tile sources constructor.\n\t         */\n\t        configure: function (options, dataUrl) {\n\t            return options;\n\t        },\n\t        /**\n\t         * Responsible for retrieving, and caching the\n\t         * image metadata pertinent to this TileSources implementation.\n\t         * @function\n\t         * @param {String} url\n\t         * @throws {Error}\n\t         */\n\t        getImageInfo: function (url) {\n\t            var image = this._image = new Image();\n\t            var _this = this;\n\t\n\t            if (this.crossOriginPolicy) {\n\t                image.crossOrigin = this.crossOriginPolicy;\n\t            }\n\t            if (this.ajaxWithCredentials) {\n\t                image.useCredentials = this.ajaxWithCredentials;\n\t            }\n\t\n\t            $.addEvent(image, 'load', function () {\n\t                /* IE8 fix since it has no naturalWidth and naturalHeight */\n\t                _this.width = Object.prototype.hasOwnProperty.call(image, 'naturalWidth') ? image.naturalWidth : image.width;\n\t                _this.height = Object.prototype.hasOwnProperty.call(image, 'naturalHeight') ? image.naturalHeight : image.height;\n\t                _this.aspectRatio = _this.width / _this.height;\n\t                _this.dimensions = new $.Point(_this.width, _this.height);\n\t                _this._tileWidth = _this.width;\n\t                _this._tileHeight = _this.height;\n\t                _this.tileOverlap = 0;\n\t                _this.minLevel = 0;\n\t                _this.levels = _this._buildLevels();\n\t                _this.maxLevel = _this.levels.length - 1;\n\t\n\t                _this.ready = true;\n\t\n\t                // Note: this event is documented elsewhere, in TileSource\n\t                _this.raiseEvent('ready', {tileSource: _this});\n\t            });\n\t\n\t            $.addEvent(image, 'error', function () {\n\t                // Note: this event is documented elsewhere, in TileSource\n\t                _this.raiseEvent('open-failed', {\n\t                    message: \"Error loading image at \" + url,\n\t                    source: url\n\t                });\n\t            });\n\t\n\t            image.src = url;\n\t        },\n\t        /**\n\t         * @function\n\t         * @param {Number} level\n\t         */\n\t        getLevelScale: function (level) {\n\t            var levelScale = NaN;\n\t            if (level >= this.minLevel && level <= this.maxLevel) {\n\t                levelScale =\n\t                        this.levels[level].width /\n\t                        this.levels[this.maxLevel].width;\n\t            }\n\t            return levelScale;\n\t        },\n\t        /**\n\t         * @function\n\t         * @param {Number} level\n\t         */\n\t        getNumTiles: function (level) {\n\t            var scale = this.getLevelScale(level);\n\t            if (scale) {\n\t                return new $.Point(1, 1);\n\t            } else {\n\t                return new $.Point(0, 0);\n\t            }\n\t        },\n\t        /**\n\t         * Retrieves a tile url\n\t         * @function\n\t         * @param {Number} level Level of the tile\n\t         * @param {Number} x x coordinate of the tile\n\t         * @param {Number} y y coordinate of the tile\n\t         */\n\t        getTileUrl: function (level, x, y) {\n\t            var url = null;\n\t            if (level >= this.minLevel && level <= this.maxLevel) {\n\t                url = this.levels[level].url;\n\t            }\n\t            return url;\n\t        },\n\t        /**\n\t         * Retrieves a tile context 2D\n\t         * @function\n\t         * @param {Number} level Level of the tile\n\t         * @param {Number} x x coordinate of the tile\n\t         * @param {Number} y y coordinate of the tile\n\t         */\n\t        getContext2D: function (level, x, y) {\n\t            var context = null;\n\t            if (level >= this.minLevel && level <= this.maxLevel) {\n\t                context = this.levels[level].context2D;\n\t            }\n\t            return context;\n\t        },\n\t\n\t        // private\n\t        //\n\t        // Builds the different levels of the pyramid if possible\n\t        // (i.e. if canvas API enabled and no canvas tainting issue).\n\t        _buildLevels: function () {\n\t            var levels = [{\n\t                    url: this._image.src,\n\t                    /* IE8 fix since it has no naturalWidth and naturalHeight */\n\t                    width: Object.prototype.hasOwnProperty.call(this._image, 'naturalWidth') ? this._image.naturalWidth : this._image.width,\n\t                    height:  Object.prototype.hasOwnProperty.call(this._image, 'naturalHeight') ? this._image.naturalHeight : this._image.height\n\t                }];\n\t\n\t            if (!this.buildPyramid || !$.supportsCanvas || !this.useCanvas) {\n\t                // We don't need the image anymore. Allows it to be GC.\n\t                delete this._image;\n\t                return levels;\n\t            }\n\t\n\t            /* IE8 fix since it has no naturalWidth and naturalHeight */\n\t            var currentWidth = Object.prototype.hasOwnProperty.call(this._image, 'naturalWidth') ? this._image.naturalWidth : this._image.width;\n\t            var currentHeight = Object.prototype.hasOwnProperty.call(this._image, 'naturalHeight') ? this._image.naturalHeight : this._image.height;\n\t\n\t\n\t            var bigCanvas = document.createElement(\"canvas\");\n\t            var bigContext = bigCanvas.getContext(\"2d\");\n\t\n\t            bigCanvas.width = currentWidth;\n\t            bigCanvas.height = currentHeight;\n\t            bigContext.drawImage(this._image, 0, 0, currentWidth, currentHeight);\n\t            // We cache the context of the highest level because the browser\n\t            // is a lot faster at downsampling something it already has\n\t            // downsampled before.\n\t            levels[0].context2D = bigContext;\n\t            // We don't need the image anymore. Allows it to be GC.\n\t            delete this._image;\n\t\n\t            if ($.isCanvasTainted(bigCanvas)) {\n\t                // If the canvas is tainted, we can't compute the pyramid.\n\t                return levels;\n\t            }\n\t\n\t            // We build smaller levels until either width or height becomes\n\t            // 1 pixel wide.\n\t            while (currentWidth >= 2 && currentHeight >= 2) {\n\t                currentWidth = Math.floor(currentWidth / 2);\n\t                currentHeight = Math.floor(currentHeight / 2);\n\t                var smallCanvas = document.createElement(\"canvas\");\n\t                var smallContext = smallCanvas.getContext(\"2d\");\n\t                smallCanvas.width = currentWidth;\n\t                smallCanvas.height = currentHeight;\n\t                smallContext.drawImage(bigCanvas, 0, 0, currentWidth, currentHeight);\n\t\n\t                levels.splice(0, 0, {\n\t                    context2D: smallContext,\n\t                    width: currentWidth,\n\t                    height: currentHeight\n\t                });\n\t\n\t                bigCanvas = smallCanvas;\n\t                bigContext = smallContext;\n\t            }\n\t            return levels;\n\t        }\n\t    });\n\t\n\t}(OpenSeadragon));\n\t\n\t/*\n\t * OpenSeadragon - TileSourceCollection\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function($) {\n\t\n\t// deprecated\n\t$.TileSourceCollection = function(tileSize, tileSources, rows, layout) {\n\t    $.console.error('TileSourceCollection is deprecated; use World instead');\n\t};\n\t\n\t}(OpenSeadragon));\n\t\n\t/*\n\t * OpenSeadragon - Button\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * An enumeration of button states\n\t * @member ButtonState\n\t * @memberof OpenSeadragon\n\t * @static\n\t * @type {Object}\n\t * @property {Number} REST\n\t * @property {Number} GROUP\n\t * @property {Number} HOVER\n\t * @property {Number} DOWN\n\t */\n\t$.ButtonState = {\n\t    REST:   0,\n\t    GROUP:  1,\n\t    HOVER:  2,\n\t    DOWN:   3\n\t};\n\t\n\t/**\n\t * @class Button\n\t * @classdesc Manages events, hover states for individual buttons, tool-tips, as well\n\t * as fading the buttons out when the user has not interacted with them\n\t * for a specified period.\n\t *\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.EventSource\n\t * @param {Object} options\n\t * @param {Element} [options.element=null] Element to use as the button. If not specified, an HTML &lt;div&gt; element is created.\n\t * @param {String} [options.tooltip=null] Provides context help for the button when the\n\t *  user hovers over it.\n\t * @param {String} [options.srcRest=null] URL of image to use in 'rest' state.\n\t * @param {String} [options.srcGroup=null] URL of image to use in 'up' state.\n\t * @param {String} [options.srcHover=null] URL of image to use in 'hover' state.\n\t * @param {String} [options.srcDown=null] URL of image to use in 'down' state.\n\t * @param {Number} [options.fadeDelay=0] How long to wait before fading.\n\t * @param {Number} [options.fadeLength=2000] How long should it take to fade the button.\n\t * @param {OpenSeadragon.EventHandler} [options.onPress=null] Event handler callback for {@link OpenSeadragon.Button.event:press}.\n\t * @param {OpenSeadragon.EventHandler} [options.onRelease=null] Event handler callback for {@link OpenSeadragon.Button.event:release}.\n\t * @param {OpenSeadragon.EventHandler} [options.onClick=null] Event handler callback for {@link OpenSeadragon.Button.event:click}.\n\t * @param {OpenSeadragon.EventHandler} [options.onEnter=null] Event handler callback for {@link OpenSeadragon.Button.event:enter}.\n\t * @param {OpenSeadragon.EventHandler} [options.onExit=null] Event handler callback for {@link OpenSeadragon.Button.event:exit}.\n\t * @param {OpenSeadragon.EventHandler} [options.onFocus=null] Event handler callback for {@link OpenSeadragon.Button.event:focus}.\n\t * @param {OpenSeadragon.EventHandler} [options.onBlur=null] Event handler callback for {@link OpenSeadragon.Button.event:blur}.\n\t */\n\t$.Button = function( options ) {\n\t\n\t    var _this = this;\n\t\n\t    $.EventSource.call( this );\n\t\n\t    $.extend( true, this, {\n\t\n\t        tooltip:            null,\n\t        srcRest:            null,\n\t        srcGroup:           null,\n\t        srcHover:           null,\n\t        srcDown:            null,\n\t        clickTimeThreshold: $.DEFAULT_SETTINGS.clickTimeThreshold,\n\t        clickDistThreshold: $.DEFAULT_SETTINGS.clickDistThreshold,\n\t        /**\n\t         * How long to wait before fading.\n\t         * @member {Number} fadeDelay\n\t         * @memberof OpenSeadragon.Button#\n\t         */\n\t        fadeDelay:          0,\n\t        /**\n\t         * How long should it take to fade the button.\n\t         * @member {Number} fadeLength\n\t         * @memberof OpenSeadragon.Button#\n\t         */\n\t        fadeLength:         2000,\n\t        onPress:            null,\n\t        onRelease:          null,\n\t        onClick:            null,\n\t        onEnter:            null,\n\t        onExit:             null,\n\t        onFocus:            null,\n\t        onBlur:             null\n\t\n\t    }, options );\n\t\n\t    /**\n\t     * The button element.\n\t     * @member {Element} element\n\t     * @memberof OpenSeadragon.Button#\n\t     */\n\t    this.element = options.element || $.makeNeutralElement(\"div\");\n\t\n\t    //if the user has specified the element to bind the control to explicitly\n\t    //then do not add the default control images\n\t    if ( !options.element ) {\n\t        this.imgRest      = $.makeTransparentImage( this.srcRest );\n\t        this.imgGroup     = $.makeTransparentImage( this.srcGroup );\n\t        this.imgHover     = $.makeTransparentImage( this.srcHover );\n\t        this.imgDown      = $.makeTransparentImage( this.srcDown );\n\t\n\t        this.imgRest.alt  =\n\t        this.imgGroup.alt =\n\t        this.imgHover.alt =\n\t        this.imgDown.alt  =\n\t            this.tooltip;\n\t\n\t        this.element.style.position = \"relative\";\n\t        $.setElementTouchActionNone( this.element );\n\t\n\t        this.imgGroup.style.position =\n\t        this.imgHover.style.position =\n\t        this.imgDown.style.position  =\n\t            \"absolute\";\n\t\n\t        this.imgGroup.style.top =\n\t        this.imgHover.style.top =\n\t        this.imgDown.style.top  =\n\t            \"0px\";\n\t\n\t        this.imgGroup.style.left =\n\t        this.imgHover.style.left =\n\t        this.imgDown.style.left  =\n\t            \"0px\";\n\t\n\t        this.imgHover.style.visibility =\n\t        this.imgDown.style.visibility  =\n\t            \"hidden\";\n\t\n\t        if ($.Browser.vendor == $.BROWSERS.FIREFOX && $.Browser.version < 3) {\n\t            this.imgGroup.style.top =\n\t            this.imgHover.style.top =\n\t            this.imgDown.style.top  =\n\t                \"\";\n\t        }\n\t\n\t        this.element.appendChild( this.imgRest );\n\t        this.element.appendChild( this.imgGroup );\n\t        this.element.appendChild( this.imgHover );\n\t        this.element.appendChild( this.imgDown );\n\t    }\n\t\n\t\n\t    this.addHandler(\"press\", this.onPress);\n\t    this.addHandler(\"release\", this.onRelease);\n\t    this.addHandler(\"click\", this.onClick);\n\t    this.addHandler(\"enter\", this.onEnter);\n\t    this.addHandler(\"exit\", this.onExit);\n\t    this.addHandler(\"focus\", this.onFocus);\n\t    this.addHandler(\"blur\", this.onBlur);\n\t\n\t    /**\n\t     * The button's current state.\n\t     * @member {OpenSeadragon.ButtonState} currentState\n\t     * @memberof OpenSeadragon.Button#\n\t     */\n\t    this.currentState = $.ButtonState.GROUP;\n\t\n\t    // When the button last began to fade.\n\t    this.fadeBeginTime  = null;\n\t    // Whether this button should fade after user stops interacting with the viewport.\n\t    this.shouldFade     = false;\n\t\n\t    this.element.style.display  = \"inline-block\";\n\t    this.element.style.position = \"relative\";\n\t    this.element.title          = this.tooltip;\n\t\n\t    /**\n\t     * Tracks mouse/touch/key events on the button.\n\t     * @member {OpenSeadragon.MouseTracker} tracker\n\t     * @memberof OpenSeadragon.Button#\n\t     */\n\t    this.tracker = new $.MouseTracker({\n\t\n\t        element:            this.element,\n\t        clickTimeThreshold: this.clickTimeThreshold,\n\t        clickDistThreshold: this.clickDistThreshold,\n\t\n\t        enterHandler: function( event ) {\n\t            if ( event.insideElementPressed ) {\n\t                inTo( _this, $.ButtonState.DOWN );\n\t                /**\n\t                 * Raised when the cursor enters the Button element.\n\t                 *\n\t                 * @event enter\n\t                 * @memberof OpenSeadragon.Button\n\t                 * @type {object}\n\t                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n\t                 * @property {Object} originalEvent - The original DOM event.\n\t                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                 */\n\t                _this.raiseEvent( \"enter\", { originalEvent: event.originalEvent } );\n\t            } else if ( !event.buttonDownAny ) {\n\t                inTo( _this, $.ButtonState.HOVER );\n\t            }\n\t        },\n\t\n\t        focusHandler: function ( event ) {\n\t            this.enterHandler( event );\n\t            /**\n\t             * Raised when the Button element receives focus.\n\t             *\n\t             * @event focus\n\t             * @memberof OpenSeadragon.Button\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n\t             * @property {Object} originalEvent - The original DOM event.\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            _this.raiseEvent( \"focus\", { originalEvent: event.originalEvent } );\n\t        },\n\t\n\t        exitHandler: function( event ) {\n\t            outTo( _this, $.ButtonState.GROUP );\n\t            if ( event.insideElementPressed ) {\n\t                /**\n\t                 * Raised when the cursor leaves the Button element.\n\t                 *\n\t                 * @event exit\n\t                 * @memberof OpenSeadragon.Button\n\t                 * @type {object}\n\t                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n\t                 * @property {Object} originalEvent - The original DOM event.\n\t                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                 */\n\t                _this.raiseEvent( \"exit\", { originalEvent: event.originalEvent } );\n\t            }\n\t        },\n\t\n\t        blurHandler: function ( event ) {\n\t            this.exitHandler( event );\n\t            /**\n\t             * Raised when the Button element loses focus.\n\t             *\n\t             * @event blur\n\t             * @memberof OpenSeadragon.Button\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n\t             * @property {Object} originalEvent - The original DOM event.\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            _this.raiseEvent( \"blur\", { originalEvent: event.originalEvent } );\n\t        },\n\t\n\t        pressHandler: function ( event ) {\n\t            inTo( _this, $.ButtonState.DOWN );\n\t            /**\n\t             * Raised when a mouse button is pressed or touch occurs in the Button element.\n\t             *\n\t             * @event press\n\t             * @memberof OpenSeadragon.Button\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n\t             * @property {Object} originalEvent - The original DOM event.\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            _this.raiseEvent( \"press\", { originalEvent: event.originalEvent } );\n\t        },\n\t\n\t        releaseHandler: function( event ) {\n\t            if ( event.insideElementPressed && event.insideElementReleased ) {\n\t                outTo( _this, $.ButtonState.HOVER );\n\t                /**\n\t                 * Raised when the mouse button is released or touch ends in the Button element.\n\t                 *\n\t                 * @event release\n\t                 * @memberof OpenSeadragon.Button\n\t                 * @type {object}\n\t                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n\t                 * @property {Object} originalEvent - The original DOM event.\n\t                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                 */\n\t                _this.raiseEvent( \"release\", { originalEvent: event.originalEvent } );\n\t            } else if ( event.insideElementPressed ) {\n\t                outTo( _this, $.ButtonState.GROUP );\n\t            } else {\n\t                inTo( _this, $.ButtonState.HOVER );\n\t            }\n\t        },\n\t\n\t        clickHandler: function( event ) {\n\t            if ( event.quick ) {\n\t                /**\n\t                 * Raised when a mouse button is pressed and released or touch is initiated and ended in the Button element within the time and distance threshold.\n\t                 *\n\t                 * @event click\n\t                 * @memberof OpenSeadragon.Button\n\t                 * @type {object}\n\t                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n\t                 * @property {Object} originalEvent - The original DOM event.\n\t                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                 */\n\t                _this.raiseEvent(\"click\", { originalEvent: event.originalEvent });\n\t            }\n\t        },\n\t\n\t        keyHandler: function( event ){\n\t            //console.log( \"%s : handling key %s!\", _this.tooltip, event.keyCode);\n\t            if( 13 === event.keyCode ){\n\t                /***\n\t                 * Raised when a mouse button is pressed and released or touch is initiated and ended in the Button element within the time and distance threshold.\n\t                 *\n\t                 * @event click\n\t                 * @memberof OpenSeadragon.Button\n\t                 * @type {object}\n\t                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n\t                 * @property {Object} originalEvent - The original DOM event.\n\t                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                 */\n\t                _this.raiseEvent( \"click\", { originalEvent: event.originalEvent } );\n\t                /***\n\t                 * Raised when the mouse button is released or touch ends in the Button element.\n\t                 *\n\t                 * @event release\n\t                 * @memberof OpenSeadragon.Button\n\t                 * @type {object}\n\t                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n\t                 * @property {Object} originalEvent - The original DOM event.\n\t                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                 */\n\t                _this.raiseEvent( \"release\", { originalEvent: event.originalEvent } );\n\t                return false;\n\t            }\n\t            return true;\n\t        }\n\t\n\t    });\n\t\n\t    outTo( this, $.ButtonState.REST );\n\t};\n\t\n\t$.extend( $.Button.prototype, $.EventSource.prototype, /** @lends OpenSeadragon.Button.prototype */{\n\t\n\t    /**\n\t     * TODO: Determine what this function is intended to do and if it's actually\n\t     * useful as an API point.\n\t     * @function\n\t     */\n\t    notifyGroupEnter: function() {\n\t        inTo( this, $.ButtonState.GROUP );\n\t    },\n\t\n\t    /**\n\t     * TODO: Determine what this function is intended to do and if it's actually\n\t     * useful as an API point.\n\t     * @function\n\t     */\n\t    notifyGroupExit: function() {\n\t        outTo( this, $.ButtonState.REST );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     */\n\t    disable: function(){\n\t        this.notifyGroupExit();\n\t        this.element.disabled = true;\n\t        $.setElementOpacity( this.element, 0.2, true );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     */\n\t    enable: function(){\n\t        this.element.disabled = false;\n\t        $.setElementOpacity( this.element, 1.0, true );\n\t        this.notifyGroupEnter();\n\t    }\n\t\n\t});\n\t\n\t\n\tfunction scheduleFade( button ) {\n\t    $.requestAnimationFrame(function(){\n\t        updateFade( button );\n\t    });\n\t}\n\t\n\tfunction updateFade( button ) {\n\t    var currentTime,\n\t        deltaTime,\n\t        opacity;\n\t\n\t    if ( button.shouldFade ) {\n\t        currentTime = $.now();\n\t        deltaTime   = currentTime - button.fadeBeginTime;\n\t        opacity     = 1.0 - deltaTime / button.fadeLength;\n\t        opacity     = Math.min( 1.0, opacity );\n\t        opacity     = Math.max( 0.0, opacity );\n\t\n\t        if( button.imgGroup ){\n\t            $.setElementOpacity( button.imgGroup, opacity, true );\n\t        }\n\t        if ( opacity > 0 ) {\n\t            // fade again\n\t            scheduleFade( button );\n\t        }\n\t    }\n\t}\n\t\n\tfunction beginFading( button ) {\n\t    button.shouldFade = true;\n\t    button.fadeBeginTime = $.now() + button.fadeDelay;\n\t    window.setTimeout( function(){\n\t        scheduleFade( button );\n\t    }, button.fadeDelay );\n\t}\n\t\n\tfunction stopFading( button ) {\n\t    button.shouldFade = false;\n\t    if( button.imgGroup ){\n\t        $.setElementOpacity( button.imgGroup, 1.0, true );\n\t    }\n\t}\n\t\n\tfunction inTo( button, newState ) {\n\t\n\t    if( button.element.disabled ){\n\t        return;\n\t    }\n\t\n\t    if ( newState >= $.ButtonState.GROUP &&\n\t         button.currentState == $.ButtonState.REST ) {\n\t        stopFading( button );\n\t        button.currentState = $.ButtonState.GROUP;\n\t    }\n\t\n\t    if ( newState >= $.ButtonState.HOVER &&\n\t         button.currentState == $.ButtonState.GROUP ) {\n\t        if( button.imgHover ){\n\t            button.imgHover.style.visibility = \"\";\n\t        }\n\t        button.currentState = $.ButtonState.HOVER;\n\t    }\n\t\n\t    if ( newState >= $.ButtonState.DOWN &&\n\t         button.currentState == $.ButtonState.HOVER ) {\n\t        if( button.imgDown ){\n\t            button.imgDown.style.visibility = \"\";\n\t        }\n\t        button.currentState = $.ButtonState.DOWN;\n\t    }\n\t}\n\t\n\t\n\tfunction outTo( button, newState ) {\n\t\n\t    if( button.element.disabled ){\n\t        return;\n\t    }\n\t\n\t    if ( newState <= $.ButtonState.HOVER &&\n\t         button.currentState == $.ButtonState.DOWN ) {\n\t        if( button.imgDown ){\n\t            button.imgDown.style.visibility = \"hidden\";\n\t        }\n\t        button.currentState = $.ButtonState.HOVER;\n\t    }\n\t\n\t    if ( newState <= $.ButtonState.GROUP &&\n\t         button.currentState == $.ButtonState.HOVER ) {\n\t        if( button.imgHover ){\n\t            button.imgHover.style.visibility = \"hidden\";\n\t        }\n\t        button.currentState = $.ButtonState.GROUP;\n\t    }\n\t\n\t    if ( newState <= $.ButtonState.REST &&\n\t         button.currentState == $.ButtonState.GROUP ) {\n\t        beginFading( button );\n\t        button.currentState = $.ButtonState.REST;\n\t    }\n\t}\n\t\n\t\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - ButtonGroup\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t/**\n\t * @class ButtonGroup\n\t * @classdesc Manages events on groups of buttons.\n\t *\n\t * @memberof OpenSeadragon\n\t * @param {Object} options - A dictionary of settings applied against the entire group of buttons.\n\t * @param {Array} options.buttons Array of buttons\n\t * @param {Element} [options.element] Element to use as the container\n\t **/\n\t$.ButtonGroup = function( options ) {\n\t\n\t    $.extend( true, this, {\n\t        /**\n\t         * An array containing the buttons themselves.\n\t         * @member {Array} buttons\n\t         * @memberof OpenSeadragon.ButtonGroup#\n\t         */\n\t        buttons:            [],\n\t        clickTimeThreshold: $.DEFAULT_SETTINGS.clickTimeThreshold,\n\t        clickDistThreshold: $.DEFAULT_SETTINGS.clickDistThreshold,\n\t        labelText:          \"\"\n\t    }, options );\n\t\n\t    // copy the button elements  TODO: Why?\n\t    var buttons = this.buttons.concat([]),\n\t        _this = this,\n\t        i;\n\t\n\t    /**\n\t     * The shared container for the buttons.\n\t     * @member {Element} element\n\t     * @memberof OpenSeadragon.ButtonGroup#\n\t     */\n\t    this.element = options.element || $.makeNeutralElement( \"div\" );\n\t\n\t    // TODO What if there IS an options.group specified?\n\t    if( !options.group ){\n\t        this.element.style.display = \"inline-block\";\n\t        //this.label   = $.makeNeutralElement( \"label\" );\n\t        //TODO: support labels for ButtonGroups\n\t        //this.label.innerHTML = this.labelText;\n\t        //this.element.appendChild( this.label );\n\t        for ( i = 0; i < buttons.length; i++ ) {\n\t            this.element.appendChild( buttons[ i ].element );\n\t        }\n\t    }\n\t\n\t    $.setElementTouchActionNone( this.element );\n\t\n\t    /**\n\t     * Tracks mouse/touch/key events across the group of buttons.\n\t     * @member {OpenSeadragon.MouseTracker} tracker\n\t     * @memberof OpenSeadragon.ButtonGroup#\n\t     */\n\t    this.tracker = new $.MouseTracker({\n\t        element:            this.element,\n\t        clickTimeThreshold: this.clickTimeThreshold,\n\t        clickDistThreshold: this.clickDistThreshold,\n\t        enterHandler: function ( event ) {\n\t            var i;\n\t            for ( i = 0; i < _this.buttons.length; i++ ) {\n\t                _this.buttons[ i ].notifyGroupEnter();\n\t            }\n\t        },\n\t        exitHandler: function ( event ) {\n\t            var i;\n\t            if ( !event.insideElementPressed ) {\n\t                for ( i = 0; i < _this.buttons.length; i++ ) {\n\t                    _this.buttons[ i ].notifyGroupExit();\n\t                }\n\t            }\n\t        },\n\t    });\n\t};\n\t\n\t/** @lends OpenSeadragon.ButtonGroup.prototype */\n\t$.ButtonGroup.prototype = {\n\t\n\t    /**\n\t     * TODO: Figure out why this is used on the public API and if a more useful\n\t     * api can be created.\n\t     * @function\n\t     * @private\n\t     */\n\t    emulateEnter: function() {\n\t        this.tracker.enterHandler( { eventSource: this.tracker } );\n\t    },\n\t\n\t    /**\n\t     * TODO: Figure out why this is used on the public API and if a more useful\n\t     * api can be created.\n\t     * @function\n\t     * @private\n\t     */\n\t    emulateExit: function() {\n\t        this.tracker.exitHandler( { eventSource: this.tracker } );\n\t    }\n\t};\n\t\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - Rect\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function($) {\n\t\n\t/**\n\t * @class Rect\n\t * @classdesc A Rectangle is described by it top left coordinates (x, y), width,\n\t * height and degrees of rotation around (x, y).\n\t * Note that the coordinate system used is the one commonly used with images:\n\t * x increases when going to the right\n\t * y increases when going to the bottom\n\t * degrees increases clockwise with 0 being the horizontal\n\t *\n\t * The constructor normalizes the rectangle to always have 0 <= degrees < 90\n\t *\n\t * @memberof OpenSeadragon\n\t * @param {Number} [x=0] The vector component 'x'.\n\t * @param {Number} [y=0] The vector component 'y'.\n\t * @param {Number} [width=0] The vector component 'width'.\n\t * @param {Number} [height=0] The vector component 'height'.\n\t * @param {Number} [degrees=0] Rotation of the rectangle around (x,y) in degrees.\n\t */\n\t$.Rect = function(x, y, width, height, degrees) {\n\t    /**\n\t     * The vector component 'x'.\n\t     * @member {Number} x\n\t     * @memberof OpenSeadragon.Rect#\n\t     */\n\t    this.x = typeof (x) === \"number\" ? x : 0;\n\t    /**\n\t     * The vector component 'y'.\n\t     * @member {Number} y\n\t     * @memberof OpenSeadragon.Rect#\n\t     */\n\t    this.y = typeof (y) === \"number\" ? y : 0;\n\t    /**\n\t     * The vector component 'width'.\n\t     * @member {Number} width\n\t     * @memberof OpenSeadragon.Rect#\n\t     */\n\t    this.width  = typeof (width) === \"number\" ? width : 0;\n\t    /**\n\t     * The vector component 'height'.\n\t     * @member {Number} height\n\t     * @memberof OpenSeadragon.Rect#\n\t     */\n\t    this.height = typeof (height) === \"number\" ? height : 0;\n\t\n\t    this.degrees = typeof (degrees) === \"number\" ? degrees : 0;\n\t\n\t    // Normalizes the rectangle.\n\t    this.degrees = $.positiveModulo(this.degrees, 360);\n\t    var newTopLeft, newWidth;\n\t    if (this.degrees >= 270) {\n\t        newTopLeft = this.getTopRight();\n\t        this.x = newTopLeft.x;\n\t        this.y = newTopLeft.y;\n\t        newWidth = this.height;\n\t        this.height = this.width;\n\t        this.width = newWidth;\n\t        this.degrees -= 270;\n\t    } else if (this.degrees >= 180) {\n\t        newTopLeft = this.getBottomRight();\n\t        this.x = newTopLeft.x;\n\t        this.y = newTopLeft.y;\n\t        this.degrees -= 180;\n\t    } else if (this.degrees >= 90) {\n\t        newTopLeft = this.getBottomLeft();\n\t        this.x = newTopLeft.x;\n\t        this.y = newTopLeft.y;\n\t        newWidth = this.height;\n\t        this.height = this.width;\n\t        this.width = newWidth;\n\t        this.degrees -= 90;\n\t    }\n\t};\n\t\n\t/**\n\t * Builds a rectangle having the 3 specified points as summits.\n\t * @static\n\t * @memberof OpenSeadragon.Rect\n\t * @param {OpenSeadragon.Point} topLeft\n\t * @param {OpenSeadragon.Point} topRight\n\t * @param {OpenSeadragon.Point} bottomLeft\n\t * @returns {OpenSeadragon.Rect}\n\t */\n\t$.Rect.fromSummits = function(topLeft, topRight, bottomLeft) {\n\t    var width = topLeft.distanceTo(topRight);\n\t    var height = topLeft.distanceTo(bottomLeft);\n\t    var diff = topRight.minus(topLeft);\n\t    var radians = Math.atan(diff.y / diff.x);\n\t    if (diff.x < 0) {\n\t        radians += Math.PI;\n\t    } else if (diff.y < 0) {\n\t        radians += 2 * Math.PI;\n\t    }\n\t    return new $.Rect(\n\t        topLeft.x,\n\t        topLeft.y,\n\t        width,\n\t        height,\n\t        radians / Math.PI * 180);\n\t};\n\t\n\t/** @lends OpenSeadragon.Rect.prototype */\n\t$.Rect.prototype = {\n\t    /**\n\t     * @function\n\t     * @returns {OpenSeadragon.Rect} a duplicate of this Rect\n\t     */\n\t    clone: function() {\n\t        return new $.Rect(\n\t            this.x,\n\t            this.y,\n\t            this.width,\n\t            this.height,\n\t            this.degrees);\n\t    },\n\t\n\t    /**\n\t     * The aspect ratio is simply the ratio of width to height.\n\t     * @function\n\t     * @returns {Number} The ratio of width to height.\n\t     */\n\t    getAspectRatio: function() {\n\t        return this.width / this.height;\n\t    },\n\t\n\t    /**\n\t     * Provides the coordinates of the upper-left corner of the rectangle as a\n\t     * point.\n\t     * @function\n\t     * @returns {OpenSeadragon.Point} The coordinate of the upper-left corner of\n\t     *  the rectangle.\n\t     */\n\t    getTopLeft: function() {\n\t        return new $.Point(\n\t            this.x,\n\t            this.y\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Provides the coordinates of the bottom-right corner of the rectangle as a\n\t     * point.\n\t     * @function\n\t     * @returns {OpenSeadragon.Point} The coordinate of the bottom-right corner of\n\t     *  the rectangle.\n\t     */\n\t    getBottomRight: function() {\n\t        return new $.Point(this.x + this.width, this.y + this.height)\n\t            .rotate(this.degrees, this.getTopLeft());\n\t    },\n\t\n\t    /**\n\t     * Provides the coordinates of the top-right corner of the rectangle as a\n\t     * point.\n\t     * @function\n\t     * @returns {OpenSeadragon.Point} The coordinate of the top-right corner of\n\t     *  the rectangle.\n\t     */\n\t    getTopRight: function() {\n\t        return new $.Point(this.x + this.width, this.y)\n\t            .rotate(this.degrees, this.getTopLeft());\n\t    },\n\t\n\t    /**\n\t     * Provides the coordinates of the bottom-left corner of the rectangle as a\n\t     * point.\n\t     * @function\n\t     * @returns {OpenSeadragon.Point} The coordinate of the bottom-left corner of\n\t     *  the rectangle.\n\t     */\n\t    getBottomLeft: function() {\n\t        return new $.Point(this.x, this.y + this.height)\n\t            .rotate(this.degrees, this.getTopLeft());\n\t    },\n\t\n\t    /**\n\t     * Computes the center of the rectangle.\n\t     * @function\n\t     * @returns {OpenSeadragon.Point} The center of the rectangle as represented\n\t     *  as represented by a 2-dimensional vector (x,y)\n\t     */\n\t    getCenter: function() {\n\t        return new $.Point(\n\t            this.x + this.width / 2.0,\n\t            this.y + this.height / 2.0\n\t        ).rotate(this.degrees, this.getTopLeft());\n\t    },\n\t\n\t    /**\n\t     * Returns the width and height component as a vector OpenSeadragon.Point\n\t     * @function\n\t     * @returns {OpenSeadragon.Point} The 2 dimensional vector representing the\n\t     *  the width and height of the rectangle.\n\t     */\n\t    getSize: function() {\n\t        return new $.Point(this.width, this.height);\n\t    },\n\t\n\t    /**\n\t     * Determines if two Rectangles have equivalent components.\n\t     * @function\n\t     * @param {OpenSeadragon.Rect} rectangle The Rectangle to compare to.\n\t     * @return {Boolean} 'true' if all components are equal, otherwise 'false'.\n\t     */\n\t    equals: function(other) {\n\t        return (other instanceof $.Rect) &&\n\t            this.x === other.x &&\n\t            this.y === other.y &&\n\t            this.width === other.width &&\n\t            this.height === other.height &&\n\t            this.degrees === other.degrees;\n\t    },\n\t\n\t    /**\n\t    * Multiply all dimensions (except degrees) in this Rect by a factor and\n\t    * return a new Rect.\n\t    * @function\n\t    * @param {Number} factor The factor to multiply vector components.\n\t    * @returns {OpenSeadragon.Rect} A new rect representing the multiplication\n\t    *  of the vector components by the factor\n\t    */\n\t    times: function(factor) {\n\t        return new $.Rect(\n\t            this.x * factor,\n\t            this.y * factor,\n\t            this.width * factor,\n\t            this.height * factor,\n\t            this.degrees);\n\t    },\n\t\n\t    /**\n\t    * Translate/move this Rect by a vector and return new Rect.\n\t    * @function\n\t    * @param {OpenSeadragon.Point} delta The translation vector.\n\t    * @returns {OpenSeadragon.Rect} A new rect with altered position\n\t    */\n\t    translate: function(delta) {\n\t        return new $.Rect(\n\t            this.x + delta.x,\n\t            this.y + delta.y,\n\t            this.width,\n\t            this.height,\n\t            this.degrees);\n\t    },\n\t\n\t    /**\n\t     * Returns the smallest rectangle that will contain this and the given\n\t     * rectangle bounding boxes.\n\t     * @param {OpenSeadragon.Rect} rect\n\t     * @return {OpenSeadragon.Rect} The new rectangle.\n\t     */\n\t    union: function(rect) {\n\t        var thisBoundingBox = this.getBoundingBox();\n\t        var otherBoundingBox = rect.getBoundingBox();\n\t\n\t        var left = Math.min(thisBoundingBox.x, otherBoundingBox.x);\n\t        var top = Math.min(thisBoundingBox.y, otherBoundingBox.y);\n\t        var right = Math.max(\n\t            thisBoundingBox.x + thisBoundingBox.width,\n\t            otherBoundingBox.x + otherBoundingBox.width);\n\t        var bottom = Math.max(\n\t            thisBoundingBox.y + thisBoundingBox.height,\n\t            otherBoundingBox.y + otherBoundingBox.height);\n\t\n\t        return new $.Rect(\n\t            left,\n\t            top,\n\t            right - left,\n\t            bottom - top);\n\t    },\n\t\n\t    /**\n\t     * Returns the bounding box of the intersection of this rectangle with the\n\t     * given rectangle.\n\t     * @param {OpenSeadragon.Rect} rect\n\t     * @return {OpenSeadragon.Rect} the bounding box of the intersection\n\t     * or null if the rectangles don't intersect.\n\t     */\n\t    intersection: function(rect) {\n\t        // Simplified version of Weiler Atherton clipping algorithm\n\t        // https://en.wikipedia.org/wiki/Weiler%E2%80%93Atherton_clipping_algorithm\n\t        // Because we just want the bounding box of the intersection,\n\t        // we can just compute the bounding box of:\n\t        // 1. all the summits of this which are inside rect\n\t        // 2. all the summits of rect which are inside this\n\t        // 3. all the intersections of rect and this\n\t        var EPSILON = 0.0000000001;\n\t\n\t        var intersectionPoints = [];\n\t\n\t        var thisTopLeft = this.getTopLeft();\n\t        if (rect.containsPoint(thisTopLeft, EPSILON)) {\n\t            intersectionPoints.push(thisTopLeft);\n\t        }\n\t        var thisTopRight = this.getTopRight();\n\t        if (rect.containsPoint(thisTopRight, EPSILON)) {\n\t            intersectionPoints.push(thisTopRight);\n\t        }\n\t        var thisBottomLeft = this.getBottomLeft();\n\t        if (rect.containsPoint(thisBottomLeft, EPSILON)) {\n\t            intersectionPoints.push(thisBottomLeft);\n\t        }\n\t        var thisBottomRight = this.getBottomRight();\n\t        if (rect.containsPoint(thisBottomRight, EPSILON)) {\n\t            intersectionPoints.push(thisBottomRight);\n\t        }\n\t\n\t        var rectTopLeft = rect.getTopLeft();\n\t        if (this.containsPoint(rectTopLeft, EPSILON)) {\n\t            intersectionPoints.push(rectTopLeft);\n\t        }\n\t        var rectTopRight = rect.getTopRight();\n\t        if (this.containsPoint(rectTopRight, EPSILON)) {\n\t            intersectionPoints.push(rectTopRight);\n\t        }\n\t        var rectBottomLeft = rect.getBottomLeft();\n\t        if (this.containsPoint(rectBottomLeft, EPSILON)) {\n\t            intersectionPoints.push(rectBottomLeft);\n\t        }\n\t        var rectBottomRight = rect.getBottomRight();\n\t        if (this.containsPoint(rectBottomRight, EPSILON)) {\n\t            intersectionPoints.push(rectBottomRight);\n\t        }\n\t\n\t        var thisSegments = this._getSegments();\n\t        var rectSegments = rect._getSegments();\n\t        for (var i = 0; i < thisSegments.length; i++) {\n\t            var thisSegment = thisSegments[i];\n\t            for (var j = 0; j < rectSegments.length; j++) {\n\t                var rectSegment = rectSegments[j];\n\t                var intersect = getIntersection(thisSegment[0], thisSegment[1],\n\t                    rectSegment[0], rectSegment[1]);\n\t                if (intersect) {\n\t                    intersectionPoints.push(intersect);\n\t                }\n\t            }\n\t        }\n\t\n\t        // Get intersection point of segments [a,b] and [c,d]\n\t        function getIntersection(a, b, c, d) {\n\t            // http://stackoverflow.com/a/1968345/1440403\n\t            var abVector = b.minus(a);\n\t            var cdVector = d.minus(c);\n\t\n\t            var denom = -cdVector.x * abVector.y + abVector.x * cdVector.y;\n\t            if (denom === 0) {\n\t                return null;\n\t            }\n\t\n\t            var s = (abVector.x * (a.y - c.y) - abVector.y * (a.x - c.x)) / denom;\n\t            var t = (cdVector.x * (a.y - c.y) - cdVector.y * (a.x - c.x)) / denom;\n\t\n\t            if (-EPSILON <= s && s <= 1 - EPSILON &&\n\t                -EPSILON <= t && t <= 1 - EPSILON) {\n\t                return new $.Point(a.x + t * abVector.x, a.y + t * abVector.y);\n\t            }\n\t            return null;\n\t        }\n\t\n\t        if (intersectionPoints.length === 0) {\n\t            return null;\n\t        }\n\t\n\t        var minX = intersectionPoints[0].x;\n\t        var maxX = intersectionPoints[0].x;\n\t        var minY = intersectionPoints[0].y;\n\t        var maxY = intersectionPoints[0].y;\n\t        for (var k = 1; k < intersectionPoints.length; k++) {\n\t            var point = intersectionPoints[k];\n\t            if (point.x < minX) {\n\t                minX = point.x;\n\t            }\n\t            if (point.x > maxX) {\n\t                maxX = point.x;\n\t            }\n\t            if (point.y < minY) {\n\t                minY = point.y;\n\t            }\n\t            if (point.y > maxY) {\n\t                maxY = point.y;\n\t            }\n\t        }\n\t        return new $.Rect(minX, minY, maxX - minX, maxY - minY);\n\t    },\n\t\n\t    // private\n\t    _getSegments: function() {\n\t        var topLeft = this.getTopLeft();\n\t        var topRight = this.getTopRight();\n\t        var bottomLeft = this.getBottomLeft();\n\t        var bottomRight = this.getBottomRight();\n\t        return [[topLeft, topRight],\n\t            [topRight, bottomRight],\n\t            [bottomRight, bottomLeft],\n\t            [bottomLeft, topLeft]];\n\t    },\n\t\n\t    /**\n\t     * Rotates a rectangle around a point.\n\t     * @function\n\t     * @param {Number} degrees The angle in degrees to rotate.\n\t     * @param {OpenSeadragon.Point} [pivot] The point about which to rotate.\n\t     * Defaults to the center of the rectangle.\n\t     * @return {OpenSeadragon.Rect}\n\t     */\n\t    rotate: function(degrees, pivot) {\n\t        degrees = $.positiveModulo(degrees, 360);\n\t        if (degrees === 0) {\n\t            return this.clone();\n\t        }\n\t\n\t        pivot = pivot || this.getCenter();\n\t        var newTopLeft = this.getTopLeft().rotate(degrees, pivot);\n\t        var newTopRight = this.getTopRight().rotate(degrees, pivot);\n\t\n\t        var diff = newTopRight.minus(newTopLeft);\n\t        // Handle floating point error\n\t        diff = diff.apply(function(x) {\n\t            var EPSILON = 1e-15;\n\t            return Math.abs(x) < EPSILON ? 0 : x;\n\t        });\n\t        var radians = Math.atan(diff.y / diff.x);\n\t        if (diff.x < 0) {\n\t            radians += Math.PI;\n\t        } else if (diff.y < 0) {\n\t            radians += 2 * Math.PI;\n\t        }\n\t        return new $.Rect(\n\t            newTopLeft.x,\n\t            newTopLeft.y,\n\t            this.width,\n\t            this.height,\n\t            radians / Math.PI * 180);\n\t    },\n\t\n\t    /**\n\t     * Retrieves the smallest horizontal (degrees=0) rectangle which contains\n\t     * this rectangle.\n\t     * @returns {OpenSeadragon.Rect}\n\t     */\n\t    getBoundingBox: function() {\n\t        if (this.degrees === 0) {\n\t            return this.clone();\n\t        }\n\t        var topLeft = this.getTopLeft();\n\t        var topRight = this.getTopRight();\n\t        var bottomLeft = this.getBottomLeft();\n\t        var bottomRight = this.getBottomRight();\n\t        var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n\t        var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n\t        var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n\t        var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n\t        return new $.Rect(\n\t            minX,\n\t            minY,\n\t            maxX - minX,\n\t            maxY - minY);\n\t    },\n\t\n\t    /**\n\t     * Retrieves the smallest horizontal (degrees=0) rectangle which contains\n\t     * this rectangle and has integers x, y, width and height\n\t     * @returns {OpenSeadragon.Rect}\n\t     */\n\t    getIntegerBoundingBox: function() {\n\t        var boundingBox = this.getBoundingBox();\n\t        var x = Math.floor(boundingBox.x);\n\t        var y = Math.floor(boundingBox.y);\n\t        var width = Math.ceil(boundingBox.width + boundingBox.x - x);\n\t        var height = Math.ceil(boundingBox.height + boundingBox.y - y);\n\t        return new $.Rect(x, y, width, height);\n\t    },\n\t\n\t    /**\n\t     * Determines whether a point is inside this rectangle (edge included).\n\t     * @function\n\t     * @param {OpenSeadragon.Point} point\n\t     * @param {Number} [epsilon=0] the margin of error allowed\n\t     * @returns {Boolean} true if the point is inside this rectangle, false\n\t     * otherwise.\n\t     */\n\t    containsPoint: function(point, epsilon) {\n\t        epsilon = epsilon || 0;\n\t\n\t        // See http://stackoverflow.com/a/2752754/1440403 for explanation\n\t        var topLeft = this.getTopLeft();\n\t        var topRight = this.getTopRight();\n\t        var bottomLeft = this.getBottomLeft();\n\t        var topDiff = topRight.minus(topLeft);\n\t        var leftDiff = bottomLeft.minus(topLeft);\n\t\n\t        return ((point.x - topLeft.x) * topDiff.x +\n\t            (point.y - topLeft.y) * topDiff.y >= -epsilon) &&\n\t\n\t            ((point.x - topRight.x) * topDiff.x +\n\t            (point.y - topRight.y) * topDiff.y <= epsilon) &&\n\t\n\t            ((point.x - topLeft.x) * leftDiff.x +\n\t            (point.y - topLeft.y) * leftDiff.y >= -epsilon) &&\n\t\n\t            ((point.x - bottomLeft.x) * leftDiff.x +\n\t            (point.y - bottomLeft.y) * leftDiff.y <= epsilon);\n\t    },\n\t\n\t    /**\n\t     * Provides a string representation of the rectangle which is useful for\n\t     * debugging.\n\t     * @function\n\t     * @returns {String} A string representation of the rectangle.\n\t     */\n\t    toString: function() {\n\t        return \"[\" +\n\t            (Math.round(this.x * 100) / 100) + \", \" +\n\t            (Math.round(this.y * 100) / 100) + \", \" +\n\t            (Math.round(this.width * 100) / 100) + \"x\" +\n\t            (Math.round(this.height * 100) / 100) + \", \" +\n\t            (Math.round(this.degrees * 100) / 100) + \"deg\" +\n\t            \"]\";\n\t    }\n\t};\n\t\n\t\n\t}(OpenSeadragon));\n\t\n\t/*\n\t * OpenSeadragon - ReferenceStrip\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function ( $ ) {\n\t\n\t// dictionary from id to private properties\n\tvar THIS = {};\n\t\n\t/**\n\t *  The CollectionDrawer is a reimplementation if the Drawer API that\n\t *  focuses on allowing a viewport to be redefined as a collection\n\t *  of smaller viewports, defined by a clear number of rows and / or\n\t *  columns of which each item in the matrix of viewports has its own\n\t *  source.\n\t *\n\t *  This idea is a reexpression of the idea of dzi collections\n\t *  which allows a clearer algorithm to reuse the tile sources already\n\t *  supported by OpenSeadragon, in heterogenious or homogenious\n\t *  sequences just like mixed groups already supported by the viewer\n\t *  for the purpose of image sequnces.\n\t *\n\t *  TODO:   The difficult part of this feature is figuring out how to express\n\t *          this functionality as a combination of the functionality already\n\t *          provided by Drawer, Viewport, TileSource, and Navigator.  It may\n\t *          require better abstraction at those points in order to efficiently\n\t *          reuse those paradigms.\n\t */\n\t/**\n\t * @class ReferenceStrip\n\t * @memberof OpenSeadragon\n\t * @param {Object} options\n\t */\n\t$.ReferenceStrip = function ( options ) {\n\t\n\t    var _this       = this,\n\t        viewer      = options.viewer,\n\t        viewerSize  = $.getElementSize( viewer.element ),\n\t        element,\n\t        style,\n\t        i;\n\t\n\t    //We may need to create a new element and id if they did not\n\t    //provide the id for the existing element\n\t    if ( !options.id ) {\n\t        options.id              = 'referencestrip-' + $.now();\n\t        this.element            = $.makeNeutralElement( \"div\" );\n\t        this.element.id         = options.id;\n\t        this.element.className  = 'referencestrip';\n\t    }\n\t\n\t    options = $.extend( true, {\n\t        sizeRatio:  $.DEFAULT_SETTINGS.referenceStripSizeRatio,\n\t        position:   $.DEFAULT_SETTINGS.referenceStripPosition,\n\t        scroll:     $.DEFAULT_SETTINGS.referenceStripScroll,\n\t        clickTimeThreshold:  $.DEFAULT_SETTINGS.clickTimeThreshold\n\t    }, options, {\n\t        //required overrides\n\t        element:                this.element,\n\t        //These need to be overridden to prevent recursion since\n\t        //the navigator is a viewer and a viewer has a navigator\n\t        showNavigator:          false,\n\t        mouseNavEnabled:        false,\n\t        showNavigationControl:  false,\n\t        showSequenceControl:    false\n\t    } );\n\t\n\t    $.extend( this, options );\n\t    //Private state properties\n\t    THIS[this.id] = {\n\t        \"animating\":           false\n\t    };\n\t\n\t    this.minPixelRatio = this.viewer.minPixelRatio;\n\t\n\t    style = this.element.style;\n\t    style.marginTop     = '0px';\n\t    style.marginRight   = '0px';\n\t    style.marginBottom  = '0px';\n\t    style.marginLeft    = '0px';\n\t    style.left          = '0px';\n\t    style.bottom        = '0px';\n\t    style.border        = '0px';\n\t    style.background    = '#000';\n\t    style.position      = 'relative';\n\t\n\t    $.setElementTouchActionNone( this.element );\n\t\n\t    $.setElementOpacity( this.element, 0.8 );\n\t\n\t    this.viewer = viewer;\n\t    this.innerTracker = new $.MouseTracker( {\n\t        element:        this.element,\n\t        dragHandler:    $.delegate( this, onStripDrag ),\n\t        scrollHandler:  $.delegate( this, onStripScroll ),\n\t        enterHandler:   $.delegate( this, onStripEnter ),\n\t        exitHandler:    $.delegate( this, onStripExit ),\n\t        keyDownHandler: $.delegate( this, onKeyDown ),\n\t        keyHandler:     $.delegate( this, onKeyPress )\n\t    } );\n\t\n\t    //Controls the position and orientation of the reference strip and sets the\n\t    //appropriate width and height\n\t    if ( options.width && options.height ) {\n\t        this.element.style.width  = options.width + 'px';\n\t        this.element.style.height = options.height + 'px';\n\t        viewer.addControl(\n\t            this.element,\n\t            { anchor: $.ControlAnchor.BOTTOM_LEFT }\n\t        );\n\t    } else {\n\t        if ( \"horizontal\" == options.scroll ) {\n\t            this.element.style.width = (\n\t                viewerSize.x *\n\t                options.sizeRatio *\n\t                viewer.tileSources.length\n\t            ) + ( 12 * viewer.tileSources.length ) + 'px';\n\t\n\t            this.element.style.height = (\n\t                viewerSize.y *\n\t                options.sizeRatio\n\t            ) + 'px';\n\t\n\t            viewer.addControl(\n\t                this.element,\n\t                { anchor: $.ControlAnchor.BOTTOM_LEFT }\n\t            );\n\t        } else {\n\t            this.element.style.height = (\n\t                viewerSize.y *\n\t                options.sizeRatio *\n\t                viewer.tileSources.length\n\t            ) + ( 12 * viewer.tileSources.length ) + 'px';\n\t\n\t            this.element.style.width = (\n\t                viewerSize.x *\n\t                options.sizeRatio\n\t            ) + 'px';\n\t\n\t            viewer.addControl(\n\t                this.element,\n\t                { anchor: $.ControlAnchor.TOP_LEFT }\n\t            );\n\t\n\t        }\n\t    }\n\t\n\t    this.panelWidth = ( viewerSize.x * this.sizeRatio ) + 8;\n\t    this.panelHeight = ( viewerSize.y * this.sizeRatio ) + 8;\n\t    this.panels = [];\n\t    this.miniViewers = {};\n\t\n\t    /*jshint loopfunc:true*/\n\t    for ( i = 0; i < viewer.tileSources.length; i++ ) {\n\t\n\t        element = $.makeNeutralElement( 'div' );\n\t        element.id = this.element.id + \"-\" + i;\n\t\n\t        element.style.width         = _this.panelWidth + 'px';\n\t        element.style.height        = _this.panelHeight + 'px';\n\t        element.style.display       = 'inline';\n\t        element.style.float         = 'left'; //Webkit\n\t        element.style.cssFloat      = 'left'; //Firefox\n\t        element.style.styleFloat    = 'left'; //IE\n\t        element.style.padding       = '2px';\n\t        $.setElementTouchActionNone( element );\n\t\n\t        element.innerTracker = new $.MouseTracker( {\n\t            element:            element,\n\t            clickTimeThreshold: this.clickTimeThreshold,\n\t            clickDistThreshold: this.clickDistThreshold,\n\t            pressHandler: function ( event ) {\n\t                event.eventSource.dragging = $.now();\n\t            },\n\t            releaseHandler: function ( event ) {\n\t                var tracker = event.eventSource,\n\t                    id      = tracker.element.id,\n\t                    page    = Number( id.split( '-' )[2] ),\n\t                    now     = $.now();\n\t\n\t                if ( event.insideElementPressed &&\n\t                     event.insideElementReleased &&\n\t                     tracker.dragging &&\n\t                     ( now - tracker.dragging ) < tracker.clickTimeThreshold ) {\n\t                    tracker.dragging = null;\n\t                    viewer.goToPage( page );\n\t                }\n\t            }\n\t        } );\n\t\n\t        this.element.appendChild( element );\n\t\n\t        element.activePanel = false;\n\t\n\t        this.panels.push( element );\n\t\n\t    }\n\t    loadPanels( this, this.scroll == 'vertical' ? viewerSize.y : viewerSize.x, 0 );\n\t    this.setFocus( 0 );\n\t\n\t};\n\t\n\t$.extend( $.ReferenceStrip.prototype, $.EventSource.prototype, $.Viewer.prototype, /** @lends OpenSeadragon.ReferenceStrip.prototype */{\n\t\n\t    /**\n\t     * @function\n\t     */\n\t    setFocus: function ( page ) {\n\t        var element      = $.getElement( this.element.id + '-' + page ),\n\t            viewerSize   = $.getElementSize( this.viewer.canvas ),\n\t            scrollWidth  = Number( this.element.style.width.replace( 'px', '' ) ),\n\t            scrollHeight = Number( this.element.style.height.replace( 'px', '' ) ),\n\t            offsetLeft   = -Number( this.element.style.marginLeft.replace( 'px', '' ) ),\n\t            offsetTop    = -Number( this.element.style.marginTop.replace( 'px', '' ) ),\n\t            offset;\n\t\n\t        if ( this.currentSelected !== element ) {\n\t            if ( this.currentSelected ) {\n\t                this.currentSelected.style.background = '#000';\n\t            }\n\t            this.currentSelected = element;\n\t            this.currentSelected.style.background = '#999';\n\t\n\t            if ( 'horizontal' == this.scroll ) {\n\t                //right left\n\t                offset = ( Number( page ) ) * ( this.panelWidth + 3 );\n\t                if ( offset > offsetLeft + viewerSize.x - this.panelWidth ) {\n\t                    offset = Math.min( offset, ( scrollWidth - viewerSize.x ) );\n\t                    this.element.style.marginLeft = -offset + 'px';\n\t                    loadPanels( this, viewerSize.x, -offset );\n\t                } else if ( offset < offsetLeft ) {\n\t                    offset = Math.max( 0, offset - viewerSize.x / 2 );\n\t                    this.element.style.marginLeft = -offset + 'px';\n\t                    loadPanels( this, viewerSize.x, -offset );\n\t                }\n\t            } else {\n\t                offset = ( Number( page ) ) * ( this.panelHeight + 3 );\n\t                if ( offset > offsetTop + viewerSize.y - this.panelHeight ) {\n\t                    offset = Math.min( offset, ( scrollHeight - viewerSize.y ) );\n\t                    this.element.style.marginTop = -offset + 'px';\n\t                    loadPanels( this, viewerSize.y, -offset );\n\t                } else if ( offset < offsetTop ) {\n\t                    offset = Math.max( 0, offset - viewerSize.y / 2 );\n\t                    this.element.style.marginTop = -offset + 'px';\n\t                    loadPanels( this, viewerSize.y, -offset );\n\t                }\n\t            }\n\t\n\t            this.currentPage = page;\n\t            onStripEnter.call( this, { eventSource: this.innerTracker } );\n\t        }\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     */\n\t    update: function () {\n\t        if ( THIS[this.id].animating ) {\n\t            $.console.log( 'image reference strip update' );\n\t            return true;\n\t        }\n\t        return false;\n\t    },\n\t\n\t    // Overrides Viewer.destroy\n\t    destroy: function() {\n\t        if (this.miniViewers) {\n\t          for (var key in this.miniViewers) {\n\t            this.miniViewers[key].destroy();\n\t          }\n\t        }\n\t\n\t        if (this.element) {\n\t            this.element.parentNode.removeChild(this.element);\n\t        }\n\t    }\n\t\n\t} );\n\t\n\t\n\t\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction onStripDrag( event ) {\n\t\n\t    var offsetLeft   = Number( this.element.style.marginLeft.replace( 'px', '' ) ),\n\t        offsetTop    = Number( this.element.style.marginTop.replace( 'px', '' ) ),\n\t        scrollWidth  = Number( this.element.style.width.replace( 'px', '' ) ),\n\t        scrollHeight = Number( this.element.style.height.replace( 'px', '' ) ),\n\t        viewerSize   = $.getElementSize( this.viewer.canvas );\n\t    this.dragging = true;\n\t    if ( this.element ) {\n\t        if ( 'horizontal' == this.scroll ) {\n\t            if ( -event.delta.x > 0 ) {\n\t                //forward\n\t                if ( offsetLeft > -( scrollWidth - viewerSize.x ) ) {\n\t                    this.element.style.marginLeft = ( offsetLeft + ( event.delta.x * 2 ) ) + 'px';\n\t                    loadPanels( this, viewerSize.x, offsetLeft + ( event.delta.x * 2 ) );\n\t                }\n\t            } else if ( -event.delta.x < 0 ) {\n\t                //reverse\n\t                if ( offsetLeft < 0 ) {\n\t                    this.element.style.marginLeft = ( offsetLeft + ( event.delta.x * 2 ) ) + 'px';\n\t                    loadPanels( this, viewerSize.x, offsetLeft + ( event.delta.x * 2 ) );\n\t                }\n\t            }\n\t        } else {\n\t            if ( -event.delta.y > 0 ) {\n\t                //forward\n\t                if ( offsetTop > -( scrollHeight - viewerSize.y ) ) {\n\t                    this.element.style.marginTop = ( offsetTop + ( event.delta.y * 2 ) ) + 'px';\n\t                    loadPanels( this, viewerSize.y, offsetTop + ( event.delta.y * 2 ) );\n\t                }\n\t            } else if ( -event.delta.y < 0 ) {\n\t                //reverse\n\t                if ( offsetTop < 0 ) {\n\t                    this.element.style.marginTop = ( offsetTop + ( event.delta.y * 2 ) ) + 'px';\n\t                    loadPanels( this, viewerSize.y, offsetTop + ( event.delta.y * 2 ) );\n\t                }\n\t            }\n\t        }\n\t    }\n\t    return false;\n\t\n\t}\n\t\n\t\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction onStripScroll( event ) {\n\t    var offsetLeft   = Number( this.element.style.marginLeft.replace( 'px', '' ) ),\n\t        offsetTop    = Number( this.element.style.marginTop.replace( 'px', '' ) ),\n\t        scrollWidth  = Number( this.element.style.width.replace( 'px', '' ) ),\n\t        scrollHeight = Number( this.element.style.height.replace( 'px', '' ) ),\n\t        viewerSize   = $.getElementSize( this.viewer.canvas );\n\t    if ( this.element ) {\n\t        if ( 'horizontal' == this.scroll ) {\n\t            if ( event.scroll > 0 ) {\n\t                //forward\n\t                if ( offsetLeft > -( scrollWidth - viewerSize.x ) ) {\n\t                    this.element.style.marginLeft = ( offsetLeft - ( event.scroll * 60 ) ) + 'px';\n\t                    loadPanels( this, viewerSize.x, offsetLeft - ( event.scroll * 60 ) );\n\t                }\n\t            } else if ( event.scroll < 0 ) {\n\t                //reverse\n\t                if ( offsetLeft < 0 ) {\n\t                    this.element.style.marginLeft = ( offsetLeft - ( event.scroll * 60 ) ) + 'px';\n\t                    loadPanels( this, viewerSize.x, offsetLeft - ( event.scroll * 60 ) );\n\t                }\n\t            }\n\t        } else {\n\t            if ( event.scroll < 0 ) {\n\t                //scroll up\n\t                if ( offsetTop > viewerSize.y - scrollHeight ) {\n\t                    this.element.style.marginTop = ( offsetTop + ( event.scroll * 60 ) ) + 'px';\n\t                    loadPanels( this, viewerSize.y, offsetTop + ( event.scroll * 60 ) );\n\t                }\n\t            } else if ( event.scroll > 0 ) {\n\t                //scroll dowm\n\t                if ( offsetTop < 0 ) {\n\t                    this.element.style.marginTop = ( offsetTop + ( event.scroll * 60 ) ) + 'px';\n\t                    loadPanels( this, viewerSize.y, offsetTop + ( event.scroll * 60 ) );\n\t                }\n\t            }\n\t        }\n\t    }\n\t    //cancels event\n\t    return false;\n\t}\n\t\n\t\n\tfunction loadPanels( strip, viewerSize, scroll ) {\n\t    var panelSize,\n\t        activePanelsStart,\n\t        activePanelsEnd,\n\t        miniViewer,\n\t        style,\n\t        i,\n\t        element;\n\t    if ( 'horizontal' == strip.scroll ) {\n\t        panelSize = strip.panelWidth;\n\t    } else {\n\t        panelSize = strip.panelHeight;\n\t    }\n\t    activePanelsStart = Math.ceil( viewerSize / panelSize ) + 5;\n\t    activePanelsEnd = Math.ceil( ( Math.abs( scroll ) + viewerSize ) / panelSize ) + 1;\n\t    activePanelsStart = activePanelsEnd - activePanelsStart;\n\t    activePanelsStart = activePanelsStart < 0 ? 0 : activePanelsStart;\n\t\n\t    for ( i = activePanelsStart; i < activePanelsEnd && i < strip.panels.length; i++ ) {\n\t        element = strip.panels[i];\n\t        if ( !element.activePanel ) {\n\t            var miniTileSource;\n\t            var originalTileSource = strip.viewer.tileSources[i];\n\t            if (originalTileSource.referenceStripThumbnailUrl) {\n\t                miniTileSource = {\n\t                    type: 'image',\n\t                    url: originalTileSource.referenceStripThumbnailUrl\n\t                };\n\t            } else {\n\t                miniTileSource = originalTileSource;\n\t            }\n\t            miniViewer = new $.Viewer( {\n\t                id:                     element.id,\n\t                tileSources:            [miniTileSource],\n\t                element:                element,\n\t                navigatorSizeRatio:     strip.sizeRatio,\n\t                showNavigator:          false,\n\t                mouseNavEnabled:        false,\n\t                showNavigationControl:  false,\n\t                showSequenceControl:    false,\n\t                immediateRender:        true,\n\t                blendTime:              0,\n\t                animationTime:          0\n\t            } );\n\t\n\t            miniViewer.displayRegion           = $.makeNeutralElement( \"div\" );\n\t            miniViewer.displayRegion.id        = element.id + '-displayregion';\n\t            miniViewer.displayRegion.className = 'displayregion';\n\t\n\t            style               = miniViewer.displayRegion.style;\n\t            style.position      = 'relative';\n\t            style.top           = '0px';\n\t            style.left          = '0px';\n\t            style.fontSize      = '0px';\n\t            style.overflow      = 'hidden';\n\t            style.float         = 'left'; //Webkit\n\t            style.cssFloat      = 'left'; //Firefox\n\t            style.styleFloat    = 'left'; //IE\n\t            style.zIndex        = 999999999;\n\t            style.cursor        = 'default';\n\t            style.width         = ( strip.panelWidth - 4 ) + 'px';\n\t            style.height        = ( strip.panelHeight - 4 ) + 'px';\n\t\n\t            // TODO: What is this for? Future keyboard navigation support?\n\t            miniViewer.displayRegion.innerTracker = new $.MouseTracker( {\n\t                element: miniViewer.displayRegion,\n\t                startDisabled: true\n\t            } );\n\t\n\t            element.getElementsByTagName( 'div' )[0].appendChild(\n\t                miniViewer.displayRegion\n\t            );\n\t\n\t            strip.miniViewers[element.id] = miniViewer;\n\t\n\t            element.activePanel = true;\n\t        }\n\t    }\n\t}\n\t\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction onStripEnter( event ) {\n\t    var element = event.eventSource.element;\n\t\n\t    //$.setElementOpacity(element, 0.8);\n\t\n\t    //element.style.border = '1px solid #555';\n\t    //element.style.background = '#000';\n\t\n\t    if ( 'horizontal' == this.scroll ) {\n\t\n\t        //element.style.paddingTop = \"0px\";\n\t        element.style.marginBottom = \"0px\";\n\t\n\t    } else {\n\t\n\t        //element.style.paddingRight = \"0px\";\n\t        element.style.marginLeft = \"0px\";\n\t\n\t    }\n\t    return false;\n\t}\n\t\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction onStripExit( event ) {\n\t    var element = event.eventSource.element;\n\t\n\t    if ( 'horizontal' == this.scroll ) {\n\t\n\t        //element.style.paddingTop = \"10px\";\n\t        element.style.marginBottom = \"-\" + ( $.getElementSize( element ).y / 2 ) + \"px\";\n\t\n\t    } else {\n\t\n\t        //element.style.paddingRight = \"10px\";\n\t        element.style.marginLeft = \"-\" + ( $.getElementSize( element ).x / 2 ) + \"px\";\n\t\n\t    }\n\t    return false;\n\t}\n\t\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction onKeyDown( event ) {\n\t    //console.log( event.keyCode );\n\t\n\t    if ( !event.preventDefaultAction && !event.ctrl && !event.alt && !event.meta ) {\n\t        switch ( event.keyCode ) {\n\t            case 38: //up arrow\n\t                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n\t                return false;\n\t            case 40: //down arrow\n\t                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n\t                return false;\n\t            case 37: //left arrow\n\t                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n\t                return false;\n\t            case 39: //right arrow\n\t                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n\t                return false;\n\t            default:\n\t                //console.log( 'navigator keycode %s', event.keyCode );\n\t                return true;\n\t        }\n\t    } else {\n\t        return true;\n\t    }\n\t}\n\t\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction onKeyPress( event ) {\n\t    //console.log( event.keyCode );\n\t\n\t    if ( !event.preventDefaultAction && !event.ctrl && !event.alt && !event.meta ) {\n\t        switch ( event.keyCode ) {\n\t            case 61: //=|+\n\t                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n\t                return false;\n\t            case 45: //-|_\n\t                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n\t                return false;\n\t            case 48: //0|)\n\t            case 119: //w\n\t            case 87: //W\n\t                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n\t                return false;\n\t            case 115: //s\n\t            case 83: //S\n\t                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n\t                return false;\n\t            case 97: //a\n\t                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n\t                return false;\n\t            case 100: //d\n\t                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n\t                return false;\n\t            default:\n\t                //console.log( 'navigator keycode %s', event.keyCode );\n\t                return true;\n\t        }\n\t    } else {\n\t        return true;\n\t    }\n\t}\n\t\n\t}(OpenSeadragon));\n\t\n\t/*\n\t * OpenSeadragon - DisplayRect\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class DisplayRect\n\t * @classdesc A display rectangle is very similar to {@link OpenSeadragon.Rect} but adds two\n\t * fields, 'minLevel' and 'maxLevel' which denote the supported zoom levels\n\t * for this rectangle.\n\t *\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.Rect\n\t * @param {Number} x The vector component 'x'.\n\t * @param {Number} y The vector component 'y'.\n\t * @param {Number} width The vector component 'height'.\n\t * @param {Number} height The vector component 'width'.\n\t * @param {Number} minLevel The lowest zoom level supported.\n\t * @param {Number} maxLevel The highest zoom level supported.\n\t */\n\t$.DisplayRect = function( x, y, width, height, minLevel, maxLevel ) {\n\t    $.Rect.apply( this, [ x, y, width, height ] );\n\t\n\t    /**\n\t     * The lowest zoom level supported.\n\t     * @member {Number} minLevel\n\t     * @memberof OpenSeadragon.DisplayRect#\n\t     */\n\t    this.minLevel = minLevel;\n\t    /**\n\t     * The highest zoom level supported.\n\t     * @member {Number} maxLevel\n\t     * @memberof OpenSeadragon.DisplayRect#\n\t     */\n\t    this.maxLevel = maxLevel;\n\t};\n\t\n\t$.extend( $.DisplayRect.prototype, $.Rect.prototype );\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - Spring\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class Spring\n\t * @memberof OpenSeadragon\n\t * @param {Object} options - Spring configuration settings.\n\t * @param {Number} options.springStiffness - Spring stiffness. Must be greater than zero.\n\t * The closer to zero, the closer to linear animation.\n\t * @param {Number} options.animationTime - Animation duration per spring, in seconds.\n\t * Must be zero or greater.\n\t * @param {Number} [options.initial=0] - Initial value of spring.\n\t * @param {Boolean} [options.exponential=false] - Whether this spring represents\n\t * an exponential scale (such as zoom) and should be animated accordingly. Note that\n\t * exponential springs must have non-zero values.\n\t */\n\t$.Spring = function( options ) {\n\t    var args = arguments;\n\t\n\t    if( typeof ( options ) != 'object' ){\n\t        //allows backward compatible use of ( initialValue, config ) as\n\t        //constructor parameters\n\t        options = {\n\t            initial: args.length && typeof ( args[ 0 ] ) == \"number\" ?\n\t                args[ 0 ] :\n\t                undefined,\n\t            /**\n\t             * Spring stiffness.\n\t             * @member {Number} springStiffness\n\t             * @memberof OpenSeadragon.Spring#\n\t             */\n\t            springStiffness: args.length > 1 ?\n\t                args[ 1 ].springStiffness :\n\t                5.0,\n\t            /**\n\t             * Animation duration per spring.\n\t             * @member {Number} animationTime\n\t             * @memberof OpenSeadragon.Spring#\n\t             */\n\t            animationTime: args.length > 1 ?\n\t                args[ 1 ].animationTime :\n\t                1.5\n\t        };\n\t    }\n\t\n\t    $.console.assert(typeof options.springStiffness === \"number\" && options.springStiffness !== 0,\n\t        \"[OpenSeadragon.Spring] options.springStiffness must be a non-zero number\");\n\t\n\t    $.console.assert(typeof options.animationTime === \"number\" && options.animationTime >= 0,\n\t        \"[OpenSeadragon.Spring] options.animationTime must be a number greater than or equal to 0\");\n\t\n\t    if (options.exponential) {\n\t        this._exponential = true;\n\t        delete options.exponential;\n\t    }\n\t\n\t    $.extend( true, this, options);\n\t\n\t    /**\n\t     * @member {Object} current\n\t     * @memberof OpenSeadragon.Spring#\n\t     * @property {Number} value\n\t     * @property {Number} time\n\t     */\n\t    this.current = {\n\t        value: typeof ( this.initial ) == \"number\" ?\n\t            this.initial :\n\t            (this._exponential ? 0 : 1),\n\t        time:  $.now() // always work in milliseconds\n\t    };\n\t\n\t    $.console.assert(!this._exponential || this.current.value !== 0,\n\t        \"[OpenSeadragon.Spring] value must be non-zero for exponential springs\");\n\t\n\t    /**\n\t     * @member {Object} start\n\t     * @memberof OpenSeadragon.Spring#\n\t     * @property {Number} value\n\t     * @property {Number} time\n\t     */\n\t    this.start = {\n\t        value: this.current.value,\n\t        time:  this.current.time\n\t    };\n\t\n\t    /**\n\t     * @member {Object} target\n\t     * @memberof OpenSeadragon.Spring#\n\t     * @property {Number} value\n\t     * @property {Number} time\n\t     */\n\t    this.target = {\n\t        value: this.current.value,\n\t        time:  this.current.time\n\t    };\n\t\n\t    if (this._exponential) {\n\t        this.start._logValue = Math.log(this.start.value);\n\t        this.target._logValue = Math.log(this.target.value);\n\t        this.current._logValue = Math.log(this.current.value);\n\t    }\n\t};\n\t\n\t/** @lends OpenSeadragon.Spring.prototype */\n\t$.Spring.prototype = {\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} target\n\t     */\n\t    resetTo: function( target ) {\n\t        $.console.assert(!this._exponential || target !== 0,\n\t            \"[OpenSeadragon.Spring.resetTo] target must be non-zero for exponential springs\");\n\t\n\t        this.start.value = this.target.value = this.current.value = target;\n\t        this.start.time = this.target.time = this.current.time = $.now();\n\t\n\t        if (this._exponential) {\n\t            this.start._logValue = Math.log(this.start.value);\n\t            this.target._logValue = Math.log(this.target.value);\n\t            this.current._logValue = Math.log(this.current.value);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} target\n\t     */\n\t    springTo: function( target ) {\n\t        $.console.assert(!this._exponential || target !== 0,\n\t            \"[OpenSeadragon.Spring.springTo] target must be non-zero for exponential springs\");\n\t\n\t        this.start.value  = this.current.value;\n\t        this.start.time   = this.current.time;\n\t        this.target.value = target;\n\t        this.target.time  = this.start.time + 1000 * this.animationTime;\n\t\n\t        if (this._exponential) {\n\t            this.start._logValue = Math.log(this.start.value);\n\t            this.target._logValue = Math.log(this.target.value);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} delta\n\t     */\n\t    shiftBy: function( delta ) {\n\t        this.start.value  += delta;\n\t        this.target.value += delta;\n\t\n\t        if (this._exponential) {\n\t            $.console.assert(this.target.value !== 0 && this.start.value !== 0,\n\t                \"[OpenSeadragon.Spring.shiftBy] spring value must be non-zero for exponential springs\");\n\t\n\t            this.start._logValue = Math.log(this.start.value);\n\t            this.target._logValue = Math.log(this.target.value);\n\t        }\n\t    },\n\t\n\t    setExponential: function(value) {\n\t        this._exponential = value;\n\t\n\t        if (this._exponential) {\n\t            $.console.assert(this.current.value !== 0 && this.target.value !== 0 && this.start.value !== 0,\n\t                \"[OpenSeadragon.Spring.setExponential] spring value must be non-zero for exponential springs\");\n\t\n\t            this.start._logValue = Math.log(this.start.value);\n\t            this.target._logValue = Math.log(this.target.value);\n\t            this.current._logValue = Math.log(this.current.value);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @returns true if the value got updated, false otherwise\n\t     */\n\t    update: function() {\n\t        this.current.time  = $.now();\n\t\n\t        var startValue, targetValue;\n\t        if (this._exponential) {\n\t            startValue = this.start._logValue;\n\t            targetValue = this.target._logValue;\n\t        } else {\n\t            startValue = this.start.value;\n\t            targetValue = this.target.value;\n\t        }\n\t\n\t        var currentValue = (this.current.time >= this.target.time) ?\n\t            targetValue :\n\t            startValue +\n\t                ( targetValue - startValue ) *\n\t                transform(\n\t                    this.springStiffness,\n\t                    ( this.current.time - this.start.time ) /\n\t                    ( this.target.time - this.start.time )\n\t                );\n\t\n\t        var oldValue = this.current.value;\n\t        if (this._exponential) {\n\t            this.current.value = Math.exp(currentValue);\n\t        } else {\n\t            this.current.value = currentValue;\n\t        }\n\t\n\t        return oldValue != this.current.value;\n\t    },\n\t\n\t    /**\n\t     * Returns whether the spring is at the target value\n\t     * @function\n\t     * @returns {Boolean} True if at target value, false otherwise\n\t     */\n\t    isAtTargetValue: function() {\n\t        return this.current.value === this.target.value;\n\t    }\n\t};\n\t\n\t/**\n\t * @private\n\t */\n\tfunction transform( stiffness, x ) {\n\t    return ( 1.0 - Math.exp( stiffness * -x ) ) /\n\t        ( 1.0 - Math.exp( -stiffness ) );\n\t}\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - ImageLoader\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function($){\n\t\n\t/**\n\t * @private\n\t * @class ImageJob\n\t * @classdesc Handles downloading of a single image.\n\t * @param {Object} options - Options for this ImageJob.\n\t * @param {String} [options.src] - URL of image to download.\n\t * @param {String} [options.loadWithAjax] - Whether to load this image with AJAX.\n\t * @param {String} [options.ajaxHeaders] - Headers to add to the image request if using AJAX.\n\t * @param {String} [options.crossOriginPolicy] - CORS policy to use for downloads\n\t * @param {Function} [options.callback] - Called once image has been downloaded.\n\t * @param {Function} [options.abort] - Called when this image job is aborted.\n\t * @param {Number} [options.timeout] - The max number of milliseconds that this image job may take to complete.\n\t */\n\tfunction ImageJob (options) {\n\t\n\t    $.extend(true, this, {\n\t        timeout: $.DEFAULT_SETTINGS.timeout,\n\t        jobId: null\n\t    }, options);\n\t\n\t    /**\n\t     * Image object which will contain downloaded image.\n\t     * @member {Image} image\n\t     * @memberof OpenSeadragon.ImageJob#\n\t     */\n\t    this.image = null;\n\t}\n\t\n\tImageJob.prototype = {\n\t    errorMsg: null,\n\t\n\t    /**\n\t     * Starts the image job.\n\t     * @method\n\t     */\n\t    start: function(){\n\t        var self = this;\n\t        var selfAbort = this.abort;\n\t\n\t        this.image = new Image();\n\t\n\t        this.image.onload = function(){\n\t            self.finish(true);\n\t        };\n\t        this.image.onabort = this.image.onerror = function() {\n\t            self.errorMsg = \"Image load aborted\";\n\t            self.finish(false);\n\t        };\n\t\n\t        this.jobId = window.setTimeout(function(){\n\t            self.errorMsg = \"Image load exceeded timeout (\" + self.timeout + \" ms)\";\n\t            self.finish(false);\n\t        }, this.timeout);\n\t\n\t        // Load the tile with an AJAX request if the loadWithAjax option is\n\t        // set. Otherwise load the image by setting the source proprety of the image object.\n\t        if (this.loadWithAjax) {\n\t            this.request = $.makeAjaxRequest({\n\t                url: this.src,\n\t                withCredentials: this.ajaxWithCredentials,\n\t                headers: this.ajaxHeaders,\n\t                responseType: \"arraybuffer\",\n\t                success: function(request) {\n\t                    var blb;\n\t                    // Make the raw data into a blob.\n\t                    // BlobBuilder fallback adapted from\n\t                    // http://stackoverflow.com/questions/15293694/blob-constructor-browser-compatibility\n\t                    try {\n\t                        blb = new window.Blob([request.response]);\n\t                    } catch (e) {\n\t                        var BlobBuilder = (\n\t                            window.BlobBuilder ||\n\t                            window.WebKitBlobBuilder ||\n\t                            window.MozBlobBuilder ||\n\t                            window.MSBlobBuilder\n\t                        );\n\t                        if (e.name === 'TypeError' && BlobBuilder) {\n\t                            var bb = new BlobBuilder();\n\t                            bb.append(request.response);\n\t                            blb = bb.getBlob();\n\t                        }\n\t                    }\n\t                    // If the blob is empty for some reason consider the image load a failure.\n\t                    if (blb.size === 0) {\n\t                        self.errorMsg = \"Empty image response.\";\n\t                        self.finish(false);\n\t                    }\n\t                    // Create a URL for the blob data and make it the source of the image object.\n\t                    // This will still trigger Image.onload to indicate a successful tile load.\n\t                    var url = (window.URL || window.webkitURL).createObjectURL(blb);\n\t                    self.image.src = url;\n\t                },\n\t                error: function(request) {\n\t                    self.errorMsg = \"Image load aborted - XHR error\";\n\t                    self.finish(false);\n\t                }\n\t            });\n\t\n\t            // Provide a function to properly abort the request.\n\t            this.abort = function() {\n\t                self.request.abort();\n\t\n\t                // Call the existing abort function if available\n\t                if (typeof selfAbort === \"function\") {\n\t                    selfAbort();\n\t                }\n\t            };\n\t        } else {\n\t            if (this.crossOriginPolicy !== false) {\n\t                this.image.crossOrigin = this.crossOriginPolicy;\n\t            }\n\t\n\t            this.image.src = this.src;\n\t        }\n\t    },\n\t\n\t    finish: function(successful) {\n\t        this.image.onload = this.image.onerror = this.image.onabort = null;\n\t        if (!successful) {\n\t            this.image = null;\n\t        }\n\t\n\t        if (this.jobId) {\n\t            window.clearTimeout(this.jobId);\n\t        }\n\t\n\t        this.callback(this);\n\t    }\n\t\n\t};\n\t\n\t/**\n\t * @class ImageLoader\n\t * @memberof OpenSeadragon\n\t * @classdesc Handles downloading of a set of images using asynchronous queue pattern.\n\t * You generally won't have to interact with the ImageLoader directly.\n\t * @param {Object} options - Options for this ImageLoader.\n\t * @param {Number} [options.jobLimit] - The number of concurrent image requests. See imageLoaderLimit in {@link OpenSeadragon.Options} for details.\n\t * @param {Number} [options.timeout] - The max number of milliseconds that an image job may take to complete.\n\t */\n\t$.ImageLoader = function(options) {\n\t\n\t    $.extend(true, this, {\n\t        jobLimit:       $.DEFAULT_SETTINGS.imageLoaderLimit,\n\t        timeout:        $.DEFAULT_SETTINGS.timeout,\n\t        jobQueue:       [],\n\t        jobsInProgress: 0\n\t    }, options);\n\t\n\t};\n\t\n\t/** @lends OpenSeadragon.ImageLoader.prototype */\n\t$.ImageLoader.prototype = {\n\t\n\t    /**\n\t     * Add an unloaded image to the loader queue.\n\t     * @method\n\t     * @param {Object} options - Options for this job.\n\t     * @param {String} [options.src] - URL of image to download.\n\t     * @param {String} [options.loadWithAjax] - Whether to load this image with AJAX.\n\t     * @param {String} [options.ajaxHeaders] - Headers to add to the image request if using AJAX.\n\t     * @param {String|Boolean} [options.crossOriginPolicy] - CORS policy to use for downloads\n\t     * @param {Boolean} [options.ajaxWithCredentials] - Whether to set withCredentials on AJAX\n\t     * requests.\n\t     * @param {Function} [options.callback] - Called once image has been downloaded.\n\t     * @param {Function} [options.abort] - Called when this image job is aborted.\n\t     */\n\t    addJob: function(options) {\n\t        var _this = this,\n\t            complete = function(job) {\n\t                completeJob(_this, job, options.callback);\n\t            },\n\t            jobOptions = {\n\t                src: options.src,\n\t                loadWithAjax: options.loadWithAjax,\n\t                ajaxHeaders: options.loadWithAjax ? options.ajaxHeaders : null,\n\t                crossOriginPolicy: options.crossOriginPolicy,\n\t                ajaxWithCredentials: options.ajaxWithCredentials,\n\t                callback: complete,\n\t                abort: options.abort,\n\t                timeout: this.timeout\n\t            },\n\t            newJob = new ImageJob(jobOptions);\n\t\n\t        if ( !this.jobLimit || this.jobsInProgress < this.jobLimit ) {\n\t            newJob.start();\n\t            this.jobsInProgress++;\n\t        }\n\t        else {\n\t            this.jobQueue.push( newJob );\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Clear any unstarted image loading jobs from the queue.\n\t     * @method\n\t     */\n\t    clear: function() {\n\t        for( var i = 0; i < this.jobQueue.length; i++ ) {\n\t            var job = this.jobQueue[i];\n\t            if ( typeof job.abort === \"function\" ) {\n\t                job.abort();\n\t            }\n\t        }\n\t\n\t        this.jobQueue = [];\n\t    }\n\t};\n\t\n\t/**\n\t * Cleans up ImageJob once completed.\n\t * @method\n\t * @private\n\t * @param loader - ImageLoader used to start job.\n\t * @param job - The ImageJob that has completed.\n\t * @param callback - Called once cleanup is finished.\n\t */\n\tfunction completeJob(loader, job, callback) {\n\t    var nextJob;\n\t\n\t    loader.jobsInProgress--;\n\t\n\t    if ((!loader.jobLimit || loader.jobsInProgress < loader.jobLimit) && loader.jobQueue.length > 0) {\n\t        nextJob = loader.jobQueue.shift();\n\t        nextJob.start();\n\t        loader.jobsInProgress++;\n\t    }\n\t\n\t    callback(job.image, job.errorMsg, job.request);\n\t}\n\t\n\t}(OpenSeadragon));\n\t\n\t/*\n\t * OpenSeadragon - Tile\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class Tile\n\t * @memberof OpenSeadragon\n\t * @param {Number} level The zoom level this tile belongs to.\n\t * @param {Number} x The vector component 'x'.\n\t * @param {Number} y The vector component 'y'.\n\t * @param {OpenSeadragon.Rect} bounds Where this tile fits, in normalized\n\t *      coordinates.\n\t * @param {Boolean} exists Is this tile a part of a sparse image? ( Also has\n\t *      this tile failed to load? )\n\t * @param {String} url The URL of this tile's image.\n\t * @param {CanvasRenderingContext2D} context2D The context2D of this tile if it\n\t * is provided directly by the tile source.\n\t * @param {Boolean} loadWithAjax Whether this tile image should be loaded with an AJAX request .\n\t * @param {Object} ajaxHeaders The headers to send with this tile's AJAX request (if applicable).\n\t * @param {OpenSeadragon.Rect} sourceBounds The portion of the tile to use as the source of the\n\t * drawing operation, in pixels. Note that this only works when drawing with canvas; when drawing\n\t * with HTML the entire tile is always used.\n\t */\n\t$.Tile = function(level, x, y, bounds, exists, url, context2D, loadWithAjax, ajaxHeaders, sourceBounds) {\n\t    /**\n\t     * The zoom level this tile belongs to.\n\t     * @member {Number} level\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.level   = level;\n\t    /**\n\t     * The vector component 'x'.\n\t     * @member {Number} x\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.x       = x;\n\t    /**\n\t     * The vector component 'y'.\n\t     * @member {Number} y\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.y       = y;\n\t    /**\n\t     * Where this tile fits, in normalized coordinates\n\t     * @member {OpenSeadragon.Rect} bounds\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.bounds  = bounds;\n\t    /**\n\t    * The portion of the tile to use as the source of the drawing operation, in pixels. Note that\n\t    * this only works when drawing with canvas; when drawing with HTML the entire tile is always used.\n\t    * @member {OpenSeadragon.Rect} sourceBounds\n\t    * @memberof OpenSeadragon.Tile#\n\t    */\n\t    this.sourceBounds = sourceBounds;\n\t    /**\n\t     * Is this tile a part of a sparse image? Also has this tile failed to load?\n\t     * @member {Boolean} exists\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.exists  = exists;\n\t    /**\n\t     * The URL of this tile's image.\n\t     * @member {String} url\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.url     = url;\n\t    /**\n\t     * The context2D of this tile if it is provided directly by the tile source.\n\t     * @member {CanvasRenderingContext2D} context2D\n\t     * @memberOf OpenSeadragon.Tile#\n\t     */\n\t    this.context2D = context2D;\n\t    /**\n\t     * Whether to load this tile's image with an AJAX request.\n\t     * @member {Boolean} loadWithAjax\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.loadWithAjax = loadWithAjax;\n\t    /**\n\t     * The headers to be used in requesting this tile's image.\n\t     * Only used if loadWithAjax is set to true.\n\t     * @member {Object} ajaxHeaders\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.ajaxHeaders = ajaxHeaders;\n\t    /**\n\t     * The unique cache key for this tile.\n\t     * @member {String} cacheKey\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    if (this.ajaxHeaders) {\n\t        this.cacheKey = this.url + \"+\" + JSON.stringify(this.ajaxHeaders);\n\t    } else {\n\t        this.cacheKey = this.url;\n\t    }\n\t    /**\n\t     * Is this tile loaded?\n\t     * @member {Boolean} loaded\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.loaded  = false;\n\t    /**\n\t     * Is this tile loading?\n\t     * @member {Boolean} loading\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.loading = false;\n\t\n\t    /**\n\t     * The HTML div element for this tile\n\t     * @member {Element} element\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.element    = null;\n\t    /**\n\t     * The HTML img element for this tile.\n\t     * @member {Element} imgElement\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.imgElement = null;\n\t    /**\n\t     * The Image object for this tile.\n\t     * @member {Object} image\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.image      = null;\n\t\n\t    /**\n\t     * The alias of this.element.style.\n\t     * @member {String} style\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.style      = null;\n\t    /**\n\t     * This tile's position on screen, in pixels.\n\t     * @member {OpenSeadragon.Point} position\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.position   = null;\n\t    /**\n\t     * This tile's size on screen, in pixels.\n\t     * @member {OpenSeadragon.Point} size\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.size       = null;\n\t    /**\n\t     * The start time of this tile's blending.\n\t     * @member {Number} blendStart\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.blendStart = null;\n\t    /**\n\t     * The current opacity this tile should be.\n\t     * @member {Number} opacity\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.opacity    = null;\n\t    /**\n\t     * The squared distance of this tile to the viewport center.\n\t     * Use for comparing tiles.\n\t     * @private\n\t     * @member {Number} squaredDistance\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.squaredDistance   = null;\n\t    /**\n\t     * The visibility score of this tile.\n\t     * @member {Number} visibility\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.visibility = null;\n\t\n\t    /**\n\t     * Whether this tile is currently being drawn.\n\t     * @member {Boolean} beingDrawn\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.beingDrawn     = false;\n\t\n\t    /**\n\t     * Timestamp the tile was last touched.\n\t     * @member {Number} lastTouchTime\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.lastTouchTime  = 0;\n\t\n\t    /**\n\t     * Whether this tile is in the right-most column for its level.\n\t     * @member {Boolean} isRightMost\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.isRightMost = false;\n\t\n\t    /**\n\t     * Whether this tile is in the bottom-most row for its level.\n\t     * @member {Boolean} isBottomMost\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.isBottomMost = false;\n\t};\n\t\n\t/** @lends OpenSeadragon.Tile.prototype */\n\t$.Tile.prototype = {\n\t\n\t    /**\n\t     * Provides a string representation of this tiles level and (x,y)\n\t     * components.\n\t     * @function\n\t     * @returns {String}\n\t     */\n\t    toString: function() {\n\t        return this.level + \"/\" + this.x + \"_\" + this.y;\n\t    },\n\t\n\t    // private\n\t    _hasTransparencyChannel: function() {\n\t        return !!this.context2D || this.url.match('.png');\n\t    },\n\t\n\t    /**\n\t     * Renders the tile in an html container.\n\t     * @function\n\t     * @param {Element} container\n\t     */\n\t    drawHTML: function( container ) {\n\t        if (!this.cacheImageRecord) {\n\t            $.console.warn(\n\t                '[Tile.drawHTML] attempting to draw tile %s when it\\'s not cached',\n\t                this.toString());\n\t            return;\n\t        }\n\t\n\t        if ( !this.loaded ) {\n\t            $.console.warn(\n\t                \"Attempting to draw tile %s when it's not yet loaded.\",\n\t                this.toString()\n\t            );\n\t            return;\n\t        }\n\t\n\t        //EXPERIMENTAL - trying to figure out how to scale the container\n\t        //               content during animation of the container size.\n\t\n\t        if ( !this.element ) {\n\t            this.element                              = $.makeNeutralElement( \"div\" );\n\t            this.imgElement                           = this.cacheImageRecord.getImage().cloneNode();\n\t            this.imgElement.style.msInterpolationMode = \"nearest-neighbor\";\n\t            this.imgElement.style.width               = \"100%\";\n\t            this.imgElement.style.height              = \"100%\";\n\t\n\t            this.style                     = this.element.style;\n\t            this.style.position            = \"absolute\";\n\t        }\n\t        if ( this.element.parentNode != container ) {\n\t            container.appendChild( this.element );\n\t        }\n\t        if ( this.imgElement.parentNode != this.element ) {\n\t            this.element.appendChild( this.imgElement );\n\t        }\n\t\n\t        this.style.top     = this.position.y + \"px\";\n\t        this.style.left    = this.position.x + \"px\";\n\t        this.style.height  = this.size.y + \"px\";\n\t        this.style.width   = this.size.x + \"px\";\n\t\n\t        $.setElementOpacity( this.element, this.opacity );\n\t    },\n\t\n\t    /**\n\t     * Renders the tile in a canvas-based context.\n\t     * @function\n\t     * @param {Canvas} context\n\t     * @param {Function} drawingHandler - Method for firing the drawing event.\n\t     * drawingHandler({context, tile, rendered})\n\t     * where <code>rendered</code> is the context with the pre-drawn image.\n\t     * @param {Number} [scale=1] - Apply a scale to position and size\n\t     * @param {OpenSeadragon.Point} [translate] - A translation vector\n\t     */\n\t    drawCanvas: function( context, drawingHandler, scale, translate ) {\n\t\n\t        var position = this.position.times($.pixelDensityRatio),\n\t            size     = this.size.times($.pixelDensityRatio),\n\t            rendered;\n\t\n\t        if (!this.context2D && !this.cacheImageRecord) {\n\t            $.console.warn(\n\t                '[Tile.drawCanvas] attempting to draw tile %s when it\\'s not cached',\n\t                this.toString());\n\t            return;\n\t        }\n\t\n\t        rendered = this.context2D || this.cacheImageRecord.getRenderedContext();\n\t\n\t        if ( !this.loaded || !rendered ){\n\t            $.console.warn(\n\t                \"Attempting to draw tile %s when it's not yet loaded.\",\n\t                this.toString()\n\t            );\n\t\n\t            return;\n\t        }\n\t\n\t        context.save();\n\t\n\t        context.globalAlpha = this.opacity;\n\t\n\t        if (typeof scale === 'number' && scale !== 1) {\n\t            // draw tile at a different scale\n\t            position = position.times(scale);\n\t            size = size.times(scale);\n\t        }\n\t\n\t        if (translate instanceof $.Point) {\n\t            // shift tile position slightly\n\t            position = position.plus(translate);\n\t        }\n\t\n\t        //if we are supposed to be rendering fully opaque rectangle,\n\t        //ie its done fading or fading is turned off, and if we are drawing\n\t        //an image with an alpha channel, then the only way\n\t        //to avoid seeing the tile underneath is to clear the rectangle\n\t        if (context.globalAlpha === 1 && this._hasTransparencyChannel()) {\n\t            //clearing only the inside of the rectangle occupied\n\t            //by the png prevents edge flikering\n\t            context.clearRect(\n\t                position.x,\n\t                position.y,\n\t                size.x,\n\t                size.y\n\t            );\n\t        }\n\t\n\t        // This gives the application a chance to make image manipulation\n\t        // changes as we are rendering the image\n\t        drawingHandler({context: context, tile: this, rendered: rendered});\n\t\n\t        var sourceWidth, sourceHeight;\n\t        if (this.sourceBounds) {\n\t            sourceWidth = Math.min(this.sourceBounds.width, rendered.canvas.width);\n\t            sourceHeight = Math.min(this.sourceBounds.height, rendered.canvas.height);\n\t        } else {\n\t            sourceWidth = rendered.canvas.width;\n\t            sourceHeight = rendered.canvas.height;\n\t        }\n\t\n\t        context.drawImage(\n\t            rendered.canvas,\n\t            0,\n\t            0,\n\t            sourceWidth,\n\t            sourceHeight,\n\t            position.x,\n\t            position.y,\n\t            size.x,\n\t            size.y\n\t        );\n\t\n\t        context.restore();\n\t    },\n\t\n\t    /**\n\t     * Get the ratio between current and original size.\n\t     * @function\n\t     * @return {Float}\n\t     */\n\t    getScaleForEdgeSmoothing: function() {\n\t        var context;\n\t        if (this.cacheImageRecord) {\n\t            context = this.cacheImageRecord.getRenderedContext();\n\t        } else if (this.context2D) {\n\t            context = this.context2D;\n\t        } else {\n\t            $.console.warn(\n\t                '[Tile.drawCanvas] attempting to get tile scale %s when tile\\'s not cached',\n\t                this.toString());\n\t            return 1;\n\t        }\n\t        return context.canvas.width / (this.size.x * $.pixelDensityRatio);\n\t    },\n\t\n\t    /**\n\t     * Get a translation vector that when applied to the tile position produces integer coordinates.\n\t     * Needed to avoid swimming and twitching.\n\t     * @function\n\t     * @param {Number} [scale=1] - Scale to be applied to position.\n\t     * @return {OpenSeadragon.Point}\n\t     */\n\t    getTranslationForEdgeSmoothing: function(scale, canvasSize, sketchCanvasSize) {\n\t        // The translation vector must have positive values, otherwise the image goes a bit off\n\t        // the sketch canvas to the top and left and we must use negative coordinates to repaint it\n\t        // to the main canvas. In that case, some browsers throw:\n\t        // INDEX_SIZE_ERR: DOM Exception 1: Index or size was negative, or greater than the allowed value.\n\t        var x = Math.max(1, Math.ceil((sketchCanvasSize.x - canvasSize.x) / 2));\n\t        var y = Math.max(1, Math.ceil((sketchCanvasSize.y - canvasSize.y) / 2));\n\t        return new $.Point(x, y).minus(\n\t            this.position\n\t                .times($.pixelDensityRatio)\n\t                .times(scale || 1)\n\t                .apply(function(x) {\n\t                    return x % 1;\n\t                })\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Removes tile from its container.\n\t     * @function\n\t     */\n\t    unload: function() {\n\t        if ( this.imgElement && this.imgElement.parentNode ) {\n\t            this.imgElement.parentNode.removeChild( this.imgElement );\n\t        }\n\t        if ( this.element && this.element.parentNode ) {\n\t            this.element.parentNode.removeChild( this.element );\n\t        }\n\t\n\t        this.element    = null;\n\t        this.imgElement = null;\n\t        this.loaded     = false;\n\t        this.loading    = false;\n\t    }\n\t};\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - Overlay\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function($) {\n\t\n\t    /**\n\t     * An enumeration of positions that an overlay may be assigned relative to\n\t     * the viewport.\n\t     * It is identical to OpenSeadragon.Placement but is kept for backward\n\t     * compatibility.\n\t     * @member OverlayPlacement\n\t     * @memberof OpenSeadragon\n\t     * @see OpenSeadragon.Placement\n\t     * @static\n\t     * @readonly\n\t     * @type {Object}\n\t     * @property {Number} CENTER\n\t     * @property {Number} TOP_LEFT\n\t     * @property {Number} TOP\n\t     * @property {Number} TOP_RIGHT\n\t     * @property {Number} RIGHT\n\t     * @property {Number} BOTTOM_RIGHT\n\t     * @property {Number} BOTTOM\n\t     * @property {Number} BOTTOM_LEFT\n\t     * @property {Number} LEFT\n\t     */\n\t    $.OverlayPlacement = $.Placement;\n\t\n\t    /**\n\t     * An enumeration of possible ways to handle overlays rotation\n\t     * @member OverlayRotationMode\n\t     * @memberOf OpenSeadragon\n\t     * @static\n\t     * @readonly\n\t     * @property {Number} NO_ROTATION The overlay ignore the viewport rotation.\n\t     * @property {Number} EXACT The overlay use CSS 3 transforms to rotate with\n\t     * the viewport. If the overlay contains text, it will get rotated as well.\n\t     * @property {Number} BOUNDING_BOX The overlay adjusts for rotation by\n\t     * taking the size of the bounding box of the rotated bounds.\n\t     * Only valid for overlays with Rect location and scalable in both directions.\n\t     */\n\t    $.OverlayRotationMode = $.freezeObject({\n\t        NO_ROTATION: 1,\n\t        EXACT: 2,\n\t        BOUNDING_BOX: 3\n\t    });\n\t\n\t    /**\n\t     * @class Overlay\n\t     * @classdesc Provides a way to float an HTML element on top of the viewer element.\n\t     *\n\t     * @memberof OpenSeadragon\n\t     * @param {Object} options\n\t     * @param {Element} options.element\n\t     * @param {OpenSeadragon.Point|OpenSeadragon.Rect} options.location - The\n\t     * location of the overlay on the image. If a {@link OpenSeadragon.Point}\n\t     * is specified, the overlay will be located at this location with respect\n\t     * to the placement option. If a {@link OpenSeadragon.Rect} is specified,\n\t     * the overlay will be placed at this location with the corresponding width\n\t     * and height and placement TOP_LEFT.\n\t     * @param {OpenSeadragon.Placement} [options.placement=OpenSeadragon.Placement.TOP_LEFT]\n\t     * Defines what part of the overlay should be at the specified options.location\n\t     * @param {OpenSeadragon.Overlay.OnDrawCallback} [options.onDraw]\n\t     * @param {Boolean} [options.checkResize=true] Set to false to avoid to\n\t     * check the size of the overlay every time it is drawn in the directions\n\t     * which are not scaled. It will improve performances but will cause a\n\t     * misalignment if the overlay size changes.\n\t     * @param {Number} [options.width] The width of the overlay in viewport\n\t     * coordinates. If specified, the width of the overlay will be adjusted when\n\t     * the zoom changes.\n\t     * @param {Number} [options.height] The height of the overlay in viewport\n\t     * coordinates. If specified, the height of the overlay will be adjusted when\n\t     * the zoom changes.\n\t     * @param {Boolean} [options.rotationMode=OpenSeadragon.OverlayRotationMode.EXACT]\n\t     * How to handle the rotation of the viewport.\n\t     */\n\t    $.Overlay = function(element, location, placement) {\n\t\n\t        /**\n\t         * onDraw callback signature used by {@link OpenSeadragon.Overlay}.\n\t         *\n\t         * @callback OnDrawCallback\n\t         * @memberof OpenSeadragon.Overlay\n\t         * @param {OpenSeadragon.Point} position\n\t         * @param {OpenSeadragon.Point} size\n\t         * @param {Element} element\n\t         */\n\t\n\t        var options;\n\t        if ($.isPlainObject(element)) {\n\t            options = element;\n\t        } else {\n\t            options = {\n\t                element: element,\n\t                location: location,\n\t                placement: placement\n\t            };\n\t        }\n\t\n\t        this.element = options.element;\n\t        this.style = options.element.style;\n\t        this._init(options);\n\t    };\n\t\n\t    /** @lends OpenSeadragon.Overlay.prototype */\n\t    $.Overlay.prototype = {\n\t\n\t        // private\n\t        _init: function(options) {\n\t            this.location = options.location;\n\t            this.placement = options.placement === undefined ?\n\t                $.Placement.TOP_LEFT : options.placement;\n\t            this.onDraw = options.onDraw;\n\t            this.checkResize = options.checkResize === undefined ?\n\t                true : options.checkResize;\n\t\n\t            // When this.width is not null, the overlay get scaled horizontally\n\t            this.width = options.width === undefined ? null : options.width;\n\t\n\t            // When this.height is not null, the overlay get scaled vertically\n\t            this.height = options.height === undefined ? null : options.height;\n\t\n\t            this.rotationMode = options.rotationMode || $.OverlayRotationMode.EXACT;\n\t\n\t            // Having a rect as location is a syntactic sugar\n\t            if (this.location instanceof $.Rect) {\n\t                this.width = this.location.width;\n\t                this.height = this.location.height;\n\t                this.location = this.location.getTopLeft();\n\t                this.placement = $.Placement.TOP_LEFT;\n\t            }\n\t\n\t            // Deprecated properties kept for backward compatibility.\n\t            this.scales = this.width !== null && this.height !== null;\n\t            this.bounds = new $.Rect(\n\t                this.location.x, this.location.y, this.width, this.height);\n\t            this.position = this.location;\n\t        },\n\t\n\t        /**\n\t         * Internal function to adjust the position of an overlay\n\t         * depending on it size and placement.\n\t         * @function\n\t         * @param {OpenSeadragon.Point} position\n\t         * @param {OpenSeadragon.Point} size\n\t         */\n\t        adjust: function(position, size) {\n\t            var properties = $.Placement.properties[this.placement];\n\t            if (!properties) {\n\t                return;\n\t            }\n\t            if (properties.isHorizontallyCentered) {\n\t                position.x -= size.x / 2;\n\t            } else if (properties.isRight) {\n\t                position.x -= size.x;\n\t            }\n\t            if (properties.isVerticallyCentered) {\n\t                position.y -= size.y / 2;\n\t            } else if (properties.isBottom) {\n\t                position.y -= size.y;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @function\n\t         */\n\t        destroy: function() {\n\t            var element = this.element;\n\t            var style = this.style;\n\t\n\t            if (element.parentNode) {\n\t                element.parentNode.removeChild(element);\n\t                //this should allow us to preserve overlays when required between\n\t                //pages\n\t                if (element.prevElementParent) {\n\t                    style.display = 'none';\n\t                    //element.prevElementParent.insertBefore(\n\t                    //    element,\n\t                    //    element.prevNextSibling\n\t                    //);\n\t                    document.body.appendChild(element);\n\t                }\n\t            }\n\t\n\t            // clear the onDraw callback\n\t            this.onDraw = null;\n\t\n\t            style.top = \"\";\n\t            style.left = \"\";\n\t            style.position = \"\";\n\t\n\t            if (this.width !== null) {\n\t                style.width = \"\";\n\t            }\n\t            if (this.height !== null) {\n\t                style.height = \"\";\n\t            }\n\t            var transformOriginProp = $.getCssPropertyWithVendorPrefix(\n\t                'transformOrigin');\n\t            var transformProp = $.getCssPropertyWithVendorPrefix(\n\t                'transform');\n\t            if (transformOriginProp && transformProp) {\n\t                style[transformOriginProp] = \"\";\n\t                style[transformProp] = \"\";\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @function\n\t         * @param {Element} container\n\t         */\n\t        drawHTML: function(container, viewport) {\n\t            var element = this.element;\n\t            if (element.parentNode !== container) {\n\t                //save the source parent for later if we need it\n\t                element.prevElementParent = element.parentNode;\n\t                element.prevNextSibling = element.nextSibling;\n\t                container.appendChild(element);\n\t\n\t                // have to set position before calculating size, fix #1116\n\t                this.style.position = \"absolute\";\n\t                // this.size is used by overlays which don't get scaled in at\n\t                // least one direction when this.checkResize is set to false.\n\t                this.size = $.getElementSize(element);\n\t            }\n\t\n\t            var positionAndSize = this._getOverlayPositionAndSize(viewport);\n\t\n\t            var position = positionAndSize.position;\n\t            var size = this.size = positionAndSize.size;\n\t            var rotate = positionAndSize.rotate;\n\t\n\t            // call the onDraw callback if it exists to allow one to overwrite\n\t            // the drawing/positioning/sizing of the overlay\n\t            if (this.onDraw) {\n\t                this.onDraw(position, size, this.element);\n\t            } else {\n\t                var style = this.style;\n\t                style.left = position.x + \"px\";\n\t                style.top = position.y + \"px\";\n\t                if (this.width !== null) {\n\t                    style.width = size.x + \"px\";\n\t                }\n\t                if (this.height !== null) {\n\t                    style.height = size.y + \"px\";\n\t                }\n\t                var transformOriginProp = $.getCssPropertyWithVendorPrefix(\n\t                    'transformOrigin');\n\t                var transformProp = $.getCssPropertyWithVendorPrefix(\n\t                    'transform');\n\t                if (transformOriginProp && transformProp) {\n\t                    if (rotate) {\n\t                        style[transformOriginProp] = this._getTransformOrigin();\n\t                        style[transformProp] = \"rotate(\" + rotate + \"deg)\";\n\t                    } else {\n\t                        style[transformOriginProp] = \"\";\n\t                        style[transformProp] = \"\";\n\t                    }\n\t                }\n\t\n\t                if (style.display !== 'none') {\n\t                    style.display = 'block';\n\t                }\n\t            }\n\t        },\n\t\n\t        // private\n\t        _getOverlayPositionAndSize: function(viewport) {\n\t            var position = viewport.pixelFromPoint(this.location, true);\n\t            var size = this._getSizeInPixels(viewport);\n\t            this.adjust(position, size);\n\t\n\t            var rotate = 0;\n\t            if (viewport.degrees &&\n\t                this.rotationMode !== $.OverlayRotationMode.NO_ROTATION) {\n\t                // BOUNDING_BOX is only valid if both directions get scaled.\n\t                // Get replaced by EXACT otherwise.\n\t                if (this.rotationMode === $.OverlayRotationMode.BOUNDING_BOX &&\n\t                    this.width !== null && this.height !== null) {\n\t                    var rect = new $.Rect(position.x, position.y, size.x, size.y);\n\t                    var boundingBox = this._getBoundingBox(rect, viewport.degrees);\n\t                    position = boundingBox.getTopLeft();\n\t                    size = boundingBox.getSize();\n\t                } else {\n\t                    rotate = viewport.degrees;\n\t                }\n\t            }\n\t\n\t            return {\n\t                position: position,\n\t                size: size,\n\t                rotate: rotate\n\t            };\n\t        },\n\t\n\t        // private\n\t        _getSizeInPixels: function(viewport) {\n\t            var width = this.size.x;\n\t            var height = this.size.y;\n\t            if (this.width !== null || this.height !== null) {\n\t                var scaledSize = viewport.deltaPixelsFromPointsNoRotate(\n\t                    new $.Point(this.width || 0, this.height || 0), true);\n\t                if (this.width !== null) {\n\t                    width = scaledSize.x;\n\t                }\n\t                if (this.height !== null) {\n\t                    height = scaledSize.y;\n\t                }\n\t            }\n\t            if (this.checkResize &&\n\t                (this.width === null || this.height === null)) {\n\t                var eltSize = this.size = $.getElementSize(this.element);\n\t                if (this.width === null) {\n\t                    width = eltSize.x;\n\t                }\n\t                if (this.height === null) {\n\t                    height = eltSize.y;\n\t                }\n\t            }\n\t            return new $.Point(width, height);\n\t        },\n\t\n\t        // private\n\t        _getBoundingBox: function(rect, degrees) {\n\t            var refPoint = this._getPlacementPoint(rect);\n\t            return rect.rotate(degrees, refPoint).getBoundingBox();\n\t        },\n\t\n\t        // private\n\t        _getPlacementPoint: function(rect) {\n\t            var result = new $.Point(rect.x, rect.y);\n\t            var properties = $.Placement.properties[this.placement];\n\t            if (properties) {\n\t                if (properties.isHorizontallyCentered) {\n\t                    result.x += rect.width / 2;\n\t                } else if (properties.isRight) {\n\t                    result.x += rect.width;\n\t                }\n\t                if (properties.isVerticallyCentered) {\n\t                    result.y += rect.height / 2;\n\t                } else if (properties.isBottom) {\n\t                    result.y += rect.height;\n\t                }\n\t            }\n\t            return result;\n\t        },\n\t\n\t        // private\n\t        _getTransformOrigin: function() {\n\t            var result = \"\";\n\t            var properties = $.Placement.properties[this.placement];\n\t            if (!properties) {\n\t                return result;\n\t            }\n\t            if (properties.isLeft) {\n\t                result = \"left\";\n\t            } else if (properties.isRight) {\n\t                result = \"right\";\n\t            }\n\t            if (properties.isTop) {\n\t                result += \" top\";\n\t            } else if (properties.isBottom) {\n\t                result += \" bottom\";\n\t            }\n\t            return result;\n\t        },\n\t\n\t        /**\n\t         * Changes the overlay settings.\n\t         * @function\n\t         * @param {OpenSeadragon.Point|OpenSeadragon.Rect|Object} location\n\t         * If an object is specified, the options are the same than the constructor\n\t         * except for the element which can not be changed.\n\t         * @param {OpenSeadragon.Placement} placement\n\t         */\n\t        update: function(location, placement) {\n\t            var options = $.isPlainObject(location) ? location : {\n\t                location: location,\n\t                placement: placement\n\t            };\n\t            this._init({\n\t                location: options.location || this.location,\n\t                placement: options.placement !== undefined ?\n\t                    options.placement : this.placement,\n\t                onDraw: options.onDraw || this.onDraw,\n\t                checkResize: options.checkResize || this.checkResize,\n\t                width: options.width !== undefined ? options.width : this.width,\n\t                height: options.height !== undefined ? options.height : this.height,\n\t                rotationMode: options.rotationMode || this.rotationMode\n\t            });\n\t        },\n\t\n\t        /**\n\t         * Returns the current bounds of the overlay in viewport coordinates\n\t         * @function\n\t         * @param {OpenSeadragon.Viewport} viewport the viewport\n\t         * @returns {OpenSeadragon.Rect} overlay bounds\n\t         */\n\t        getBounds: function(viewport) {\n\t            $.console.assert(viewport,\n\t                'A viewport must now be passed to Overlay.getBounds.');\n\t            var width = this.width;\n\t            var height = this.height;\n\t            if (width === null || height === null) {\n\t                var size = viewport.deltaPointsFromPixelsNoRotate(this.size, true);\n\t                if (width === null) {\n\t                    width = size.x;\n\t                }\n\t                if (height === null) {\n\t                    height = size.y;\n\t                }\n\t            }\n\t            var location = this.location.clone();\n\t            this.adjust(location, new $.Point(width, height));\n\t            return this._adjustBoundsForRotation(\n\t                viewport, new $.Rect(location.x, location.y, width, height));\n\t        },\n\t\n\t        // private\n\t        _adjustBoundsForRotation: function(viewport, bounds) {\n\t            if (!viewport ||\n\t                viewport.degrees === 0 ||\n\t                this.rotationMode === $.OverlayRotationMode.EXACT) {\n\t                return bounds;\n\t            }\n\t            if (this.rotationMode === $.OverlayRotationMode.BOUNDING_BOX) {\n\t                // If overlay not fully scalable, BOUNDING_BOX falls back to EXACT\n\t                if (this.width === null || this.height === null) {\n\t                    return bounds;\n\t                }\n\t                // It is easier to just compute the position and size and\n\t                // convert to viewport coordinates.\n\t                var positionAndSize = this._getOverlayPositionAndSize(viewport);\n\t                return viewport.viewerElementToViewportRectangle(new $.Rect(\n\t                    positionAndSize.position.x,\n\t                    positionAndSize.position.y,\n\t                    positionAndSize.size.x,\n\t                    positionAndSize.size.y));\n\t            }\n\t\n\t            // NO_ROTATION case\n\t            return bounds.rotate(-viewport.degrees,\n\t                this._getPlacementPoint(bounds));\n\t        }\n\t    };\n\t\n\t}(OpenSeadragon));\n\t\n\t/*\n\t * OpenSeadragon - Drawer\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class Drawer\n\t * @memberof OpenSeadragon\n\t * @classdesc Handles rendering of tiles for an {@link OpenSeadragon.Viewer}.\n\t * @param {Object} options - Options for this Drawer.\n\t * @param {OpenSeadragon.Viewer} options.viewer - The Viewer that owns this Drawer.\n\t * @param {OpenSeadragon.Viewport} options.viewport - Reference to Viewer viewport.\n\t * @param {Element} options.element - Parent element.\n\t * @param {Number} [options.debugGridColor] - See debugGridColor in {@link OpenSeadragon.Options} for details.\n\t */\n\t$.Drawer = function( options ) {\n\t\n\t    $.console.assert( options.viewer, \"[Drawer] options.viewer is required\" );\n\t\n\t    //backward compatibility for positional args while preferring more\n\t    //idiomatic javascript options object as the only argument\n\t    var args  = arguments;\n\t\n\t    if( !$.isPlainObject( options ) ){\n\t        options = {\n\t            source:     args[ 0 ], // Reference to Viewer tile source.\n\t            viewport:   args[ 1 ], // Reference to Viewer viewport.\n\t            element:    args[ 2 ]  // Parent element.\n\t        };\n\t    }\n\t\n\t    $.console.assert( options.viewport, \"[Drawer] options.viewport is required\" );\n\t    $.console.assert( options.element, \"[Drawer] options.element is required\" );\n\t\n\t    if ( options.source ) {\n\t        $.console.error( \"[Drawer] options.source is no longer accepted; use TiledImage instead\" );\n\t    }\n\t\n\t    this.viewer = options.viewer;\n\t    this.viewport = options.viewport;\n\t    this.debugGridColor = typeof options.debugGridColor === 'string' ? [options.debugGridColor] : options.debugGridColor || $.DEFAULT_SETTINGS.debugGridColor;\n\t    if (options.opacity) {\n\t        $.console.error( \"[Drawer] options.opacity is no longer accepted; set the opacity on the TiledImage instead\" );\n\t    }\n\t\n\t    this.useCanvas  = $.supportsCanvas && ( this.viewer ? this.viewer.useCanvas : true );\n\t    /**\n\t     * The parent element of this Drawer instance, passed in when the Drawer was created.\n\t     * The parent of {@link OpenSeadragon.Drawer#canvas}.\n\t     * @member {Element} container\n\t     * @memberof OpenSeadragon.Drawer#\n\t     */\n\t    this.container  = $.getElement( options.element );\n\t    /**\n\t     * A &lt;canvas&gt; element if the browser supports them, otherwise a &lt;div&gt; element.\n\t     * Child element of {@link OpenSeadragon.Drawer#container}.\n\t     * @member {Element} canvas\n\t     * @memberof OpenSeadragon.Drawer#\n\t     */\n\t    this.canvas     = $.makeNeutralElement( this.useCanvas ? \"canvas\" : \"div\" );\n\t    /**\n\t     * 2d drawing context for {@link OpenSeadragon.Drawer#canvas} if it's a &lt;canvas&gt; element, otherwise null.\n\t     * @member {Object} context\n\t     * @memberof OpenSeadragon.Drawer#\n\t     */\n\t    this.context    = this.useCanvas ? this.canvas.getContext( \"2d\" ) : null;\n\t\n\t    /**\n\t     * Sketch canvas used to temporarily draw tiles which cannot be drawn directly\n\t     * to the main canvas due to opacity. Lazily initialized.\n\t     */\n\t    this.sketchCanvas = null;\n\t    this.sketchContext = null;\n\t\n\t    /**\n\t     * @member {Element} element\n\t     * @memberof OpenSeadragon.Drawer#\n\t     * @deprecated Alias for {@link OpenSeadragon.Drawer#container}.\n\t     */\n\t    this.element    = this.container;\n\t\n\t    // We force our container to ltr because our drawing math doesn't work in rtl.\n\t    // This issue only affects our canvas renderer, but we do it always for consistency.\n\t    // Note that this means overlays you want to be rtl need to be explicitly set to rtl.\n\t    this.container.dir = 'ltr';\n\t\n\t    // check canvas available width and height, set canvas width and height such that the canvas backing store is set to the proper pixel density\n\t    if (this.useCanvas) {\n\t        var viewportSize = this._calculateCanvasSize();\n\t        this.canvas.width = viewportSize.x;\n\t        this.canvas.height = viewportSize.y;\n\t    }\n\t\n\t    this.canvas.style.width     = \"100%\";\n\t    this.canvas.style.height    = \"100%\";\n\t    this.canvas.style.position  = \"absolute\";\n\t    $.setElementOpacity( this.canvas, this.opacity, true );\n\t\n\t    // explicit left-align\n\t    this.container.style.textAlign = \"left\";\n\t    this.container.appendChild( this.canvas );\n\t\n\t    // Image smoothing for canvas rendering (only if canvas is used).\n\t    // Canvas default is \"true\", so this will only be changed if user specified \"false\".\n\t    this._imageSmoothingEnabled = true;\n\t};\n\t\n\t/** @lends OpenSeadragon.Drawer.prototype */\n\t$.Drawer.prototype = {\n\t    // deprecated\n\t    addOverlay: function( element, location, placement, onDraw ) {\n\t        $.console.error(\"drawer.addOverlay is deprecated. Use viewer.addOverlay instead.\");\n\t        this.viewer.addOverlay( element, location, placement, onDraw );\n\t        return this;\n\t    },\n\t\n\t    // deprecated\n\t    updateOverlay: function( element, location, placement ) {\n\t        $.console.error(\"drawer.updateOverlay is deprecated. Use viewer.updateOverlay instead.\");\n\t        this.viewer.updateOverlay( element, location, placement );\n\t        return this;\n\t    },\n\t\n\t    // deprecated\n\t    removeOverlay: function( element ) {\n\t        $.console.error(\"drawer.removeOverlay is deprecated. Use viewer.removeOverlay instead.\");\n\t        this.viewer.removeOverlay( element );\n\t        return this;\n\t    },\n\t\n\t    // deprecated\n\t    clearOverlays: function() {\n\t        $.console.error(\"drawer.clearOverlays is deprecated. Use viewer.clearOverlays instead.\");\n\t        this.viewer.clearOverlays();\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Set the opacity of the drawer.\n\t     * @param {Number} opacity\n\t     * @return {OpenSeadragon.Drawer} Chainable.\n\t     */\n\t    setOpacity: function( opacity ) {\n\t        $.console.error(\"drawer.setOpacity is deprecated. Use tiledImage.setOpacity instead.\");\n\t        var world = this.viewer.world;\n\t        for (var i = 0; i < world.getItemCount(); i++) {\n\t            world.getItemAt( i ).setOpacity( opacity );\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Get the opacity of the drawer.\n\t     * @returns {Number}\n\t     */\n\t    getOpacity: function() {\n\t        $.console.error(\"drawer.getOpacity is deprecated. Use tiledImage.getOpacity instead.\");\n\t        var world = this.viewer.world;\n\t        var maxOpacity = 0;\n\t        for (var i = 0; i < world.getItemCount(); i++) {\n\t            var opacity = world.getItemAt( i ).getOpacity();\n\t            if ( opacity > maxOpacity ) {\n\t                maxOpacity = opacity;\n\t            }\n\t        }\n\t        return maxOpacity;\n\t    },\n\t\n\t    // deprecated\n\t    needsUpdate: function() {\n\t        $.console.error( \"[Drawer.needsUpdate] this function is deprecated. Use World.needsDraw instead.\" );\n\t        return this.viewer.world.needsDraw();\n\t    },\n\t\n\t    // deprecated\n\t    numTilesLoaded: function() {\n\t        $.console.error( \"[Drawer.numTilesLoaded] this function is deprecated. Use TileCache.numTilesLoaded instead.\" );\n\t        return this.viewer.tileCache.numTilesLoaded();\n\t    },\n\t\n\t    // deprecated\n\t    reset: function() {\n\t        $.console.error( \"[Drawer.reset] this function is deprecated. Use World.resetItems instead.\" );\n\t        this.viewer.world.resetItems();\n\t        return this;\n\t    },\n\t\n\t    // deprecated\n\t    update: function() {\n\t        $.console.error( \"[Drawer.update] this function is deprecated. Use Drawer.clear and World.draw instead.\" );\n\t        this.clear();\n\t        this.viewer.world.draw();\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * @return {Boolean} True if rotation is supported.\n\t     */\n\t    canRotate: function() {\n\t        return this.useCanvas;\n\t    },\n\t\n\t    /**\n\t     * Destroy the drawer (unload current loaded tiles)\n\t     */\n\t    destroy: function() {\n\t        //force unloading of current canvas (1x1 will be gc later, trick not necessarily needed)\n\t        this.canvas.width  = 1;\n\t        this.canvas.height = 1;\n\t        this.sketchCanvas = null;\n\t        this.sketchContext = null;\n\t    },\n\t\n\t    /**\n\t     * Clears the Drawer so it's ready to draw another frame.\n\t     */\n\t    clear: function() {\n\t        this.canvas.innerHTML = \"\";\n\t        if ( this.useCanvas ) {\n\t            var viewportSize = this._calculateCanvasSize();\n\t            if( this.canvas.width != viewportSize.x ||\n\t                this.canvas.height != viewportSize.y ) {\n\t                this.canvas.width = viewportSize.x;\n\t                this.canvas.height = viewportSize.y;\n\t                this._updateImageSmoothingEnabled(this.context);\n\t                if ( this.sketchCanvas !== null ) {\n\t                    var sketchCanvasSize = this._calculateSketchCanvasSize();\n\t                    this.sketchCanvas.width = sketchCanvasSize.x;\n\t                    this.sketchCanvas.height = sketchCanvasSize.y;\n\t                    this._updateImageSmoothingEnabled(this.sketchContext);\n\t                }\n\t            }\n\t            this._clear();\n\t        }\n\t    },\n\t\n\t    _clear: function (useSketch, bounds) {\n\t        if (!this.useCanvas) {\n\t            return;\n\t        }\n\t        var context = this._getContext(useSketch);\n\t        if (bounds) {\n\t            context.clearRect(bounds.x, bounds.y, bounds.width, bounds.height);\n\t        } else {\n\t            var canvas = context.canvas;\n\t            context.clearRect(0, 0, canvas.width, canvas.height);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Scale from OpenSeadragon viewer rectangle to drawer rectangle\n\t     * (ignoring rotation)\n\t     * @param {OpenSeadragon.Rect} rectangle - The rectangle in viewport coordinate system.\n\t     * @return {OpenSeadragon.Rect} Rectangle in drawer coordinate system.\n\t     */\n\t    viewportToDrawerRectangle: function(rectangle) {\n\t        var topLeft = this.viewport.pixelFromPointNoRotate(rectangle.getTopLeft(), true);\n\t        var size = this.viewport.deltaPixelsFromPointsNoRotate(rectangle.getSize(), true);\n\t\n\t        return new $.Rect(\n\t            topLeft.x * $.pixelDensityRatio,\n\t            topLeft.y * $.pixelDensityRatio,\n\t            size.x * $.pixelDensityRatio,\n\t            size.y * $.pixelDensityRatio\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Draws the given tile.\n\t     * @param {OpenSeadragon.Tile} tile - The tile to draw.\n\t     * @param {Function} drawingHandler - Method for firing the drawing event if using canvas.\n\t     * drawingHandler({context, tile, rendered})\n\t     * @param {Boolean} useSketch - Whether to use the sketch canvas or not.\n\t     * where <code>rendered</code> is the context with the pre-drawn image.\n\t     * @param {Float} [scale=1] - Apply a scale to tile position and size. Defaults to 1.\n\t     * @param {OpenSeadragon.Point} [translate] A translation vector to offset tile position\n\t     */\n\t    drawTile: function(tile, drawingHandler, useSketch, scale, translate) {\n\t        $.console.assert(tile, '[Drawer.drawTile] tile is required');\n\t        $.console.assert(drawingHandler, '[Drawer.drawTile] drawingHandler is required');\n\t\n\t        if (this.useCanvas) {\n\t            var context = this._getContext(useSketch);\n\t            scale = scale || 1;\n\t            tile.drawCanvas(context, drawingHandler, scale, translate);\n\t        } else {\n\t            tile.drawHTML( this.canvas );\n\t        }\n\t    },\n\t\n\t    _getContext: function( useSketch ) {\n\t        var context = this.context;\n\t        if ( useSketch ) {\n\t            if (this.sketchCanvas === null) {\n\t                this.sketchCanvas = document.createElement( \"canvas\" );\n\t                var sketchCanvasSize = this._calculateSketchCanvasSize();\n\t                this.sketchCanvas.width = sketchCanvasSize.x;\n\t                this.sketchCanvas.height = sketchCanvasSize.y;\n\t                this.sketchContext = this.sketchCanvas.getContext( \"2d\" );\n\t\n\t                // If the viewport is not currently rotated, the sketchCanvas\n\t                // will have the same size as the main canvas. However, if\n\t                // the viewport get rotated later on, we will need to resize it.\n\t                if (this.viewport.getRotation() === 0) {\n\t                    var self = this;\n\t                    this.viewer.addHandler('rotate', function resizeSketchCanvas() {\n\t                        if (self.viewport.getRotation() === 0) {\n\t                            return;\n\t                        }\n\t                        self.viewer.removeHandler('rotate', resizeSketchCanvas);\n\t                        var sketchCanvasSize = self._calculateSketchCanvasSize();\n\t                        self.sketchCanvas.width = sketchCanvasSize.x;\n\t                        self.sketchCanvas.height = sketchCanvasSize.y;\n\t                    });\n\t                }\n\t                this._updateImageSmoothingEnabled(this.sketchContext);\n\t            }\n\t            context = this.sketchContext;\n\t        }\n\t        return context;\n\t    },\n\t\n\t    // private\n\t    saveContext: function( useSketch ) {\n\t        if (!this.useCanvas) {\n\t            return;\n\t        }\n\t\n\t        this._getContext( useSketch ).save();\n\t    },\n\t\n\t    // private\n\t    restoreContext: function( useSketch ) {\n\t        if (!this.useCanvas) {\n\t            return;\n\t        }\n\t\n\t        this._getContext( useSketch ).restore();\n\t    },\n\t\n\t    // private\n\t    setClip: function(rect, useSketch) {\n\t        if (!this.useCanvas) {\n\t            return;\n\t        }\n\t\n\t        var context = this._getContext( useSketch );\n\t        context.beginPath();\n\t        context.rect(rect.x, rect.y, rect.width, rect.height);\n\t        context.clip();\n\t    },\n\t\n\t    // private\n\t    drawRectangle: function(rect, fillStyle, useSketch) {\n\t        if (!this.useCanvas) {\n\t            return;\n\t        }\n\t\n\t        var context = this._getContext( useSketch );\n\t        context.save();\n\t        context.fillStyle = fillStyle;\n\t        context.fillRect(rect.x, rect.y, rect.width, rect.height);\n\t        context.restore();\n\t    },\n\t\n\t    /**\n\t     * Blends the sketch canvas in the main canvas.\n\t     * @param {Object} options The options\n\t     * @param {Float} options.opacity The opacity of the blending.\n\t     * @param {Float} [options.scale=1] The scale at which tiles were drawn on\n\t     * the sketch. Default is 1.\n\t     * Use scale to draw at a lower scale and then enlarge onto the main canvas.\n\t     * @param {OpenSeadragon.Point} [options.translate] A translation vector\n\t     * that was used to draw the tiles\n\t     * @param {String} [options.compositeOperation] - How the image is\n\t     * composited onto other images; see compositeOperation in\n\t     * {@link OpenSeadragon.Options} for possible values.\n\t     * @param {OpenSeadragon.Rect} [options.bounds] The part of the sketch\n\t     * canvas to blend in the main canvas. If specified, options.scale and\n\t     * options.translate get ignored.\n\t     */\n\t    blendSketch: function(opacity, scale, translate, compositeOperation) {\n\t        var options = opacity;\n\t        if (!$.isPlainObject(options)) {\n\t            options = {\n\t                opacity: opacity,\n\t                scale: scale,\n\t                translate: translate,\n\t                compositeOperation: compositeOperation\n\t            };\n\t        }\n\t        if (!this.useCanvas || !this.sketchCanvas) {\n\t            return;\n\t        }\n\t        opacity = options.opacity;\n\t        compositeOperation = options.compositeOperation;\n\t        var bounds = options.bounds;\n\t\n\t        this.context.save();\n\t        this.context.globalAlpha = opacity;\n\t        if (compositeOperation) {\n\t            this.context.globalCompositeOperation = compositeOperation;\n\t        }\n\t        if (bounds) {\n\t            // Internet Explorer, Microsoft Edge, and Safari have problems\n\t            // when you call context.drawImage with negative x or y\n\t            // or x + width or y + height greater than the canvas width or height respectively.\n\t            if (bounds.x < 0) {\n\t                bounds.width += bounds.x;\n\t                bounds.x = 0;\n\t            }\n\t            if (bounds.x + bounds.width > this.canvas.width) {\n\t                bounds.width = this.canvas.width - bounds.x;\n\t            }\n\t            if (bounds.y < 0) {\n\t                bounds.height += bounds.y;\n\t                bounds.y = 0;\n\t            }\n\t            if (bounds.y + bounds.height > this.canvas.height) {\n\t                bounds.height = this.canvas.height - bounds.y;\n\t            }\n\t\n\t            this.context.drawImage(\n\t                this.sketchCanvas,\n\t                bounds.x,\n\t                bounds.y,\n\t                bounds.width,\n\t                bounds.height,\n\t                bounds.x,\n\t                bounds.y,\n\t                bounds.width,\n\t                bounds.height\n\t            );\n\t        } else {\n\t            scale = options.scale || 1;\n\t            translate = options.translate;\n\t            var position = translate instanceof $.Point ?\n\t                translate : new $.Point(0, 0);\n\t\n\t            var widthExt = 0;\n\t            var heightExt = 0;\n\t            if (translate) {\n\t                var widthDiff = this.sketchCanvas.width - this.canvas.width;\n\t                var heightDiff = this.sketchCanvas.height - this.canvas.height;\n\t                widthExt = Math.round(widthDiff / 2);\n\t                heightExt = Math.round(heightDiff / 2);\n\t            }\n\t            this.context.drawImage(\n\t                this.sketchCanvas,\n\t                position.x - widthExt * scale,\n\t                position.y - heightExt * scale,\n\t                (this.canvas.width + 2 * widthExt) * scale,\n\t                (this.canvas.height + 2 * heightExt) * scale,\n\t                -widthExt,\n\t                -heightExt,\n\t                this.canvas.width + 2 * widthExt,\n\t                this.canvas.height + 2 * heightExt\n\t            );\n\t        }\n\t        this.context.restore();\n\t    },\n\t\n\t    // private\n\t    drawDebugInfo: function(tile, count, i, tiledImage) {\n\t        if ( !this.useCanvas ) {\n\t            return;\n\t        }\n\t\n\t        var colorIndex = this.viewer.world.getIndexOfItem(tiledImage) % this.debugGridColor.length;\n\t        var context = this.context;\n\t        context.save();\n\t        context.lineWidth = 2 * $.pixelDensityRatio;\n\t        context.font = 'small-caps bold ' + (13 * $.pixelDensityRatio) + 'px arial';\n\t        context.strokeStyle = this.debugGridColor[colorIndex];\n\t        context.fillStyle = this.debugGridColor[colorIndex];\n\t\n\t        if ( this.viewport.degrees !== 0 ) {\n\t            this._offsetForRotation({degrees: this.viewport.degrees});\n\t        }\n\t        if (tiledImage.getRotation(true) % 360 !== 0) {\n\t            this._offsetForRotation({\n\t                degrees: tiledImage.getRotation(true),\n\t                point: tiledImage.viewport.pixelFromPointNoRotate(\n\t                    tiledImage._getRotationPoint(true), true)\n\t            });\n\t        }\n\t        if (tiledImage.viewport.degrees === 0 && tiledImage.getRotation(true) % 360 === 0){\n\t          if(tiledImage._drawer.viewer.viewport.getFlip()) {\n\t              tiledImage._drawer._flip();\n\t          }\n\t        }\n\t\n\t        context.strokeRect(\n\t            tile.position.x * $.pixelDensityRatio,\n\t            tile.position.y * $.pixelDensityRatio,\n\t            tile.size.x * $.pixelDensityRatio,\n\t            tile.size.y * $.pixelDensityRatio\n\t        );\n\t\n\t        var tileCenterX = (tile.position.x + (tile.size.x / 2)) * $.pixelDensityRatio;\n\t        var tileCenterY = (tile.position.y + (tile.size.y / 2)) * $.pixelDensityRatio;\n\t\n\t        // Rotate the text the right way around.\n\t        context.translate( tileCenterX, tileCenterY );\n\t        context.rotate( Math.PI / 180 * -this.viewport.degrees );\n\t        context.translate( -tileCenterX, -tileCenterY );\n\t\n\t        if( tile.x === 0 && tile.y === 0 ){\n\t            context.fillText(\n\t                \"Zoom: \" + this.viewport.getZoom(),\n\t                tile.position.x * $.pixelDensityRatio,\n\t                (tile.position.y - 30) * $.pixelDensityRatio\n\t            );\n\t            context.fillText(\n\t                \"Pan: \" + this.viewport.getBounds().toString(),\n\t                tile.position.x * $.pixelDensityRatio,\n\t                (tile.position.y - 20) * $.pixelDensityRatio\n\t            );\n\t        }\n\t        context.fillText(\n\t            \"Level: \" + tile.level,\n\t            (tile.position.x + 10) * $.pixelDensityRatio,\n\t            (tile.position.y + 20) * $.pixelDensityRatio\n\t        );\n\t        context.fillText(\n\t            \"Column: \" + tile.x,\n\t            (tile.position.x + 10) * $.pixelDensityRatio,\n\t            (tile.position.y + 30) * $.pixelDensityRatio\n\t        );\n\t        context.fillText(\n\t            \"Row: \" + tile.y,\n\t            (tile.position.x + 10) * $.pixelDensityRatio,\n\t            (tile.position.y + 40) * $.pixelDensityRatio\n\t        );\n\t        context.fillText(\n\t            \"Order: \" + i + \" of \" + count,\n\t            (tile.position.x + 10) * $.pixelDensityRatio,\n\t            (tile.position.y + 50) * $.pixelDensityRatio\n\t        );\n\t        context.fillText(\n\t            \"Size: \" + tile.size.toString(),\n\t            (tile.position.x + 10) * $.pixelDensityRatio,\n\t            (tile.position.y + 60) * $.pixelDensityRatio\n\t        );\n\t        context.fillText(\n\t            \"Position: \" + tile.position.toString(),\n\t            (tile.position.x + 10) * $.pixelDensityRatio,\n\t            (tile.position.y + 70) * $.pixelDensityRatio\n\t        );\n\t\n\t        if ( this.viewport.degrees !== 0 ) {\n\t            this._restoreRotationChanges();\n\t        }\n\t        if (tiledImage.getRotation(true) % 360 !== 0) {\n\t            this._restoreRotationChanges();\n\t        }\n\t\n\t        if (tiledImage.viewport.degrees === 0 && tiledImage.getRotation(true) % 360 === 0){\n\t          if(tiledImage._drawer.viewer.viewport.getFlip()) {\n\t              tiledImage._drawer._flip();\n\t          }\n\t        }\n\t\n\t        context.restore();\n\t    },\n\t\n\t    // private\n\t    debugRect: function(rect) {\n\t        if ( this.useCanvas ) {\n\t            var context = this.context;\n\t            context.save();\n\t            context.lineWidth = 2 * $.pixelDensityRatio;\n\t            context.strokeStyle = this.debugGridColor[0];\n\t            context.fillStyle = this.debugGridColor[0];\n\t\n\t            context.strokeRect(\n\t                rect.x * $.pixelDensityRatio,\n\t                rect.y * $.pixelDensityRatio,\n\t                rect.width * $.pixelDensityRatio,\n\t                rect.height * $.pixelDensityRatio\n\t            );\n\t\n\t            context.restore();\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Turns image smoothing on or off for this viewer. Note: Ignored in some (especially older) browsers that do not support this property.\n\t     *\n\t     * @function\n\t     * @param {Boolean} [imageSmoothingEnabled] - Whether or not the image is\n\t     * drawn smoothly on the canvas; see imageSmoothingEnabled in\n\t     * {@link OpenSeadragon.Options} for more explanation.\n\t     */\n\t    setImageSmoothingEnabled: function(imageSmoothingEnabled){\n\t        if ( this.useCanvas ) {\n\t            this._imageSmoothingEnabled = imageSmoothingEnabled;\n\t            this._updateImageSmoothingEnabled(this.context);\n\t            this.viewer.forceRedraw();\n\t        }\n\t    },\n\t\n\t    // private\n\t    _updateImageSmoothingEnabled: function(context){\n\t        context.mozImageSmoothingEnabled = this._imageSmoothingEnabled;\n\t        context.webkitImageSmoothingEnabled = this._imageSmoothingEnabled;\n\t        context.msImageSmoothingEnabled = this._imageSmoothingEnabled;\n\t        context.imageSmoothingEnabled = this._imageSmoothingEnabled;\n\t    },\n\t\n\t    /**\n\t     * Get the canvas size\n\t     * @param {Boolean} sketch If set to true return the size of the sketch canvas\n\t     * @returns {OpenSeadragon.Point} The size of the canvas\n\t     */\n\t    getCanvasSize: function(sketch) {\n\t        var canvas = this._getContext(sketch).canvas;\n\t        return new $.Point(canvas.width, canvas.height);\n\t    },\n\t\n\t    getCanvasCenter: function() {\n\t        return new $.Point(this.canvas.width / 2, this.canvas.height / 2);\n\t    },\n\t\n\t    // private\n\t    _offsetForRotation: function(options) {\n\t        var point = options.point ?\n\t            options.point.times($.pixelDensityRatio) :\n\t            this.getCanvasCenter();\n\t\n\t        var context = this._getContext(options.useSketch);\n\t        context.save();\n\t\n\t        context.translate(point.x, point.y);\n\t        if(this.viewer.viewport.flipped){\n\t          context.rotate(Math.PI / 180 * -options.degrees);\n\t          context.scale(-1, 1);\n\t        } else{\n\t          context.rotate(Math.PI / 180 * options.degrees);\n\t        }\n\t        context.translate(-point.x, -point.y);\n\t    },\n\t\n\t    // private\n\t    _flip: function(options) {\n\t      options = options || {};\n\t      var point = options.point ?\n\t        options.point.times($.pixelDensityRatio) :\n\t        this.getCanvasCenter();\n\t      var context = this._getContext(options.useSketch);\n\t\n\t      context.translate(point.x, 0);\n\t      context.scale(-1, 1);\n\t      context.translate(-point.x, 0);\n\t    },\n\t\n\t    // private\n\t    _restoreRotationChanges: function(useSketch) {\n\t        var context = this._getContext(useSketch);\n\t        context.restore();\n\t    },\n\t\n\t    // private\n\t    _calculateCanvasSize: function() {\n\t        var pixelDensityRatio = $.pixelDensityRatio;\n\t        var viewportSize = this.viewport.getContainerSize();\n\t        return {\n\t            // canvas width and height are integers\n\t            x: Math.round(viewportSize.x * pixelDensityRatio),\n\t            y: Math.round(viewportSize.y * pixelDensityRatio)\n\t        };\n\t    },\n\t\n\t    // private\n\t    _calculateSketchCanvasSize: function() {\n\t        var canvasSize = this._calculateCanvasSize();\n\t        if (this.viewport.getRotation() === 0) {\n\t            return canvasSize;\n\t        }\n\t        // If the viewport is rotated, we need a larger sketch canvas in order\n\t        // to support edge smoothing.\n\t        var sketchCanvasSize = Math.ceil(Math.sqrt(\n\t            canvasSize.x * canvasSize.x +\n\t            canvasSize.y * canvasSize.y));\n\t        return {\n\t            x: sketchCanvasSize,\n\t            y: sketchCanvasSize\n\t        };\n\t    }\n\t};\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - Viewport\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t\n\t/**\n\t * @class Viewport\n\t * @memberof OpenSeadragon\n\t * @classdesc Handles coordinate-related functionality (zoom, pan, rotation, etc.)\n\t * for an {@link OpenSeadragon.Viewer}.\n\t * @param {Object} options - Options for this Viewport.\n\t * @param {Object} [options.margins] - See viewportMargins in {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.springStiffness] - See springStiffness in {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.animationTime] - See animationTime in {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.minZoomImageRatio] - See minZoomImageRatio in {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.maxZoomPixelRatio] - See maxZoomPixelRatio in {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.visibilityRatio] - See visibilityRatio in {@link OpenSeadragon.Options}.\n\t * @param {Boolean} [options.wrapHorizontal] - See wrapHorizontal in {@link OpenSeadragon.Options}.\n\t * @param {Boolean} [options.wrapVertical] - See wrapVertical in {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.defaultZoomLevel] - See defaultZoomLevel in {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.minZoomLevel] - See minZoomLevel in {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.maxZoomLevel] - See maxZoomLevel in {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.degrees] - See degrees in {@link OpenSeadragon.Options}.\n\t * @param {Boolean} [options.homeFillsViewer] - See homeFillsViewer in {@link OpenSeadragon.Options}.\n\t */\n\t$.Viewport = function( options ) {\n\t\n\t    //backward compatibility for positional args while preferring more\n\t    //idiomatic javascript options object as the only argument\n\t    var args = arguments;\n\t    if (args.length && args[0] instanceof $.Point) {\n\t        options = {\n\t            containerSize:  args[0],\n\t            contentSize:    args[1],\n\t            config:         args[2]\n\t        };\n\t    }\n\t\n\t    //options.config and the general config argument are deprecated\n\t    //in favor of the more direct specification of optional settings\n\t    //being passed directly on the options object\n\t    if ( options.config ){\n\t        $.extend( true, options, options.config );\n\t        delete options.config;\n\t    }\n\t\n\t    this._margins = $.extend({\n\t        left: 0,\n\t        top: 0,\n\t        right: 0,\n\t        bottom: 0\n\t    }, options.margins || {});\n\t\n\t    delete options.margins;\n\t\n\t    $.extend( true, this, {\n\t\n\t        //required settings\n\t        containerSize:      null,\n\t        contentSize:        null,\n\t\n\t        //internal state properties\n\t        zoomPoint:          null,\n\t        viewer:           null,\n\t\n\t        //configurable options\n\t        springStiffness:    $.DEFAULT_SETTINGS.springStiffness,\n\t        animationTime:      $.DEFAULT_SETTINGS.animationTime,\n\t        minZoomImageRatio:  $.DEFAULT_SETTINGS.minZoomImageRatio,\n\t        maxZoomPixelRatio:  $.DEFAULT_SETTINGS.maxZoomPixelRatio,\n\t        visibilityRatio:    $.DEFAULT_SETTINGS.visibilityRatio,\n\t        wrapHorizontal:     $.DEFAULT_SETTINGS.wrapHorizontal,\n\t        wrapVertical:       $.DEFAULT_SETTINGS.wrapVertical,\n\t        defaultZoomLevel:   $.DEFAULT_SETTINGS.defaultZoomLevel,\n\t        minZoomLevel:       $.DEFAULT_SETTINGS.minZoomLevel,\n\t        maxZoomLevel:       $.DEFAULT_SETTINGS.maxZoomLevel,\n\t        degrees:            $.DEFAULT_SETTINGS.degrees,\n\t        flipped:            $.DEFAULT_SETTINGS.flipped,\n\t        homeFillsViewer:    $.DEFAULT_SETTINGS.homeFillsViewer\n\t\n\t    }, options );\n\t\n\t    this._updateContainerInnerSize();\n\t\n\t    this.centerSpringX = new $.Spring({\n\t        initial: 0,\n\t        springStiffness: this.springStiffness,\n\t        animationTime:   this.animationTime\n\t    });\n\t    this.centerSpringY = new $.Spring({\n\t        initial: 0,\n\t        springStiffness: this.springStiffness,\n\t        animationTime:   this.animationTime\n\t    });\n\t    this.zoomSpring    = new $.Spring({\n\t        exponential: true,\n\t        initial: 1,\n\t        springStiffness: this.springStiffness,\n\t        animationTime:   this.animationTime\n\t    });\n\t\n\t    this._oldCenterX = this.centerSpringX.current.value;\n\t    this._oldCenterY = this.centerSpringY.current.value;\n\t    this._oldZoom    = this.zoomSpring.current.value;\n\t\n\t    this._setContentBounds(new $.Rect(0, 0, 1, 1), 1);\n\t\n\t    this.goHome(true);\n\t    this.update();\n\t};\n\t\n\t/** @lends OpenSeadragon.Viewport.prototype */\n\t$.Viewport.prototype = {\n\t    /**\n\t     * Updates the viewport's home bounds and constraints for the given content size.\n\t     * @function\n\t     * @param {OpenSeadragon.Point} contentSize - size of the content in content units\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:reset-size\n\t     */\n\t    resetContentSize: function(contentSize) {\n\t        $.console.assert(contentSize, \"[Viewport.resetContentSize] contentSize is required\");\n\t        $.console.assert(contentSize instanceof $.Point, \"[Viewport.resetContentSize] contentSize must be an OpenSeadragon.Point\");\n\t        $.console.assert(contentSize.x > 0, \"[Viewport.resetContentSize] contentSize.x must be greater than 0\");\n\t        $.console.assert(contentSize.y > 0, \"[Viewport.resetContentSize] contentSize.y must be greater than 0\");\n\t\n\t        this._setContentBounds(new $.Rect(0, 0, 1, contentSize.y / contentSize.x), contentSize.x);\n\t        return this;\n\t    },\n\t\n\t    // deprecated\n\t    setHomeBounds: function(bounds, contentFactor) {\n\t        $.console.error(\"[Viewport.setHomeBounds] this function is deprecated; The content bounds should not be set manually.\");\n\t        this._setContentBounds(bounds, contentFactor);\n\t    },\n\t\n\t    // Set the viewport's content bounds\n\t    // @param {OpenSeadragon.Rect} bounds - the new bounds in viewport coordinates\n\t    // without rotation\n\t    // @param {Number} contentFactor - how many content units per viewport unit\n\t    // @fires OpenSeadragon.Viewer.event:reset-size\n\t    // @private\n\t    _setContentBounds: function(bounds, contentFactor) {\n\t        $.console.assert(bounds, \"[Viewport._setContentBounds] bounds is required\");\n\t        $.console.assert(bounds instanceof $.Rect, \"[Viewport._setContentBounds] bounds must be an OpenSeadragon.Rect\");\n\t        $.console.assert(bounds.width > 0, \"[Viewport._setContentBounds] bounds.width must be greater than 0\");\n\t        $.console.assert(bounds.height > 0, \"[Viewport._setContentBounds] bounds.height must be greater than 0\");\n\t\n\t        this._contentBoundsNoRotate = bounds.clone();\n\t        this._contentSizeNoRotate = this._contentBoundsNoRotate.getSize().times(\n\t            contentFactor);\n\t\n\t        this._contentBounds = bounds.rotate(this.degrees).getBoundingBox();\n\t        this._contentSize = this._contentBounds.getSize().times(contentFactor);\n\t        this._contentAspectRatio = this._contentSize.x / this._contentSize.y;\n\t\n\t        if (this.viewer) {\n\t            /**\n\t             * Raised when the viewer's content size or home bounds are reset\n\t             * (see {@link OpenSeadragon.Viewport#resetContentSize}).\n\t             *\n\t             * @event reset-size\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t             * @property {OpenSeadragon.Point} contentSize\n\t             * @property {OpenSeadragon.Rect} contentBounds - Content bounds.\n\t             * @property {OpenSeadragon.Rect} homeBounds - Content bounds.\n\t             * Deprecated use contentBounds instead.\n\t             * @property {Number} contentFactor\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            this.viewer.raiseEvent('reset-size', {\n\t                contentSize: this._contentSizeNoRotate.clone(),\n\t                contentFactor: contentFactor,\n\t                homeBounds: this._contentBoundsNoRotate.clone(),\n\t                contentBounds: this._contentBounds.clone()\n\t            });\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Returns the home zoom in \"viewport zoom\" value.\n\t     * @function\n\t     * @returns {Number} The home zoom in \"viewport zoom\".\n\t     */\n\t    getHomeZoom: function() {\n\t        if (this.defaultZoomLevel) {\n\t            return this.defaultZoomLevel;\n\t        }\n\t\n\t        var aspectFactor = this._contentAspectRatio / this.getAspectRatio();\n\t        var output;\n\t        if (this.homeFillsViewer) { // fill the viewer and clip the image\n\t            output = aspectFactor >= 1 ? aspectFactor : 1;\n\t        } else {\n\t            output = aspectFactor >= 1 ? 1 : aspectFactor;\n\t        }\n\t\n\t        return output / this._contentBounds.width;\n\t    },\n\t\n\t    /**\n\t     * Returns the home bounds in viewport coordinates.\n\t     * @function\n\t     * @returns {OpenSeadragon.Rect} The home bounds in vewport coordinates.\n\t     */\n\t    getHomeBounds: function() {\n\t        return this.getHomeBoundsNoRotate().rotate(-this.getRotation());\n\t    },\n\t\n\t    /**\n\t     * Returns the home bounds in viewport coordinates.\n\t     * This method ignores the viewport rotation. Use\n\t     * {@link OpenSeadragon.Viewport#getHomeBounds} to take it into account.\n\t     * @function\n\t     * @returns {OpenSeadragon.Rect} The home bounds in vewport coordinates.\n\t     */\n\t    getHomeBoundsNoRotate: function() {\n\t        var center = this._contentBounds.getCenter();\n\t        var width  = 1.0 / this.getHomeZoom();\n\t        var height = width / this.getAspectRatio();\n\t\n\t        return new $.Rect(\n\t            center.x - (width / 2.0),\n\t            center.y - (height / 2.0),\n\t            width,\n\t            height\n\t        );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Boolean} immediately\n\t     * @fires OpenSeadragon.Viewer.event:home\n\t     */\n\t    goHome: function(immediately) {\n\t        if (this.viewer) {\n\t            /**\n\t             * Raised when the \"home\" operation occurs (see {@link OpenSeadragon.Viewport#goHome}).\n\t             *\n\t             * @event home\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t             * @property {Boolean} immediately\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            this.viewer.raiseEvent('home', {\n\t                immediately: immediately\n\t            });\n\t        }\n\t        return this.fitBounds(this.getHomeBounds(), immediately);\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     */\n\t    getMinZoom: function() {\n\t        var homeZoom = this.getHomeZoom(),\n\t            zoom = this.minZoomLevel ?\n\t            this.minZoomLevel :\n\t                this.minZoomImageRatio * homeZoom;\n\t\n\t        return zoom;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     */\n\t    getMaxZoom: function() {\n\t        var zoom = this.maxZoomLevel;\n\t        if (!zoom) {\n\t            zoom = this._contentSize.x * this.maxZoomPixelRatio / this._containerInnerSize.x;\n\t            zoom /= this._contentBounds.width;\n\t        }\n\t\n\t        return Math.max( zoom, this.getHomeZoom() );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     */\n\t    getAspectRatio: function() {\n\t        return this._containerInnerSize.x / this._containerInnerSize.y;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @returns {OpenSeadragon.Point} The size of the container, in screen coordinates.\n\t     */\n\t    getContainerSize: function() {\n\t        return new $.Point(\n\t            this.containerSize.x,\n\t            this.containerSize.y\n\t        );\n\t    },\n\t\n\t    /**\n\t     * The margins push the \"home\" region in from the sides by the specified amounts.\n\t     * @function\n\t     * @returns {Object} Properties (Numbers, in screen coordinates): left, top, right, bottom.\n\t     */\n\t    getMargins: function() {\n\t        return $.extend({}, this._margins); // Make a copy so we are not returning our original\n\t    },\n\t\n\t    /**\n\t     * The margins push the \"home\" region in from the sides by the specified amounts.\n\t     * @function\n\t     * @param {Object} margins - Properties (Numbers, in screen coordinates): left, top, right, bottom.\n\t     */\n\t    setMargins: function(margins) {\n\t        $.console.assert($.type(margins) === 'object', '[Viewport.setMargins] margins must be an object');\n\t\n\t        this._margins = $.extend({\n\t            left: 0,\n\t            top: 0,\n\t            right: 0,\n\t            bottom: 0\n\t        }, margins);\n\t\n\t        this._updateContainerInnerSize();\n\t        if (this.viewer) {\n\t            this.viewer.forceRedraw();\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Returns the bounds of the visible area in viewport coordinates.\n\t     * @function\n\t     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n\t     * @returns {OpenSeadragon.Rect} The location you are zoomed/panned to, in viewport coordinates.\n\t     */\n\t    getBounds: function(current) {\n\t        return this.getBoundsNoRotate(current).rotate(-this.getRotation());\n\t    },\n\t\n\t    /**\n\t     * Returns the bounds of the visible area in viewport coordinates.\n\t     * This method ignores the viewport rotation. Use\n\t     * {@link OpenSeadragon.Viewport#getBounds} to take it into account.\n\t     * @function\n\t     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n\t     * @returns {OpenSeadragon.Rect} The location you are zoomed/panned to, in viewport coordinates.\n\t     */\n\t    getBoundsNoRotate: function(current) {\n\t        var center = this.getCenter(current);\n\t        var width  = 1.0 / this.getZoom(current);\n\t        var height = width / this.getAspectRatio();\n\t\n\t        return new $.Rect(\n\t            center.x - (width / 2.0),\n\t            center.y - (height / 2.0),\n\t            width,\n\t            height\n\t        );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n\t     * @returns {OpenSeadragon.Rect} The location you are zoomed/panned to,\n\t     * including the space taken by margins, in viewport coordinates.\n\t     */\n\t    getBoundsWithMargins: function(current) {\n\t        return this.getBoundsNoRotateWithMargins(current).rotate(\n\t            -this.getRotation(), this.getCenter(current));\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n\t     * @returns {OpenSeadragon.Rect} The location you are zoomed/panned to,\n\t     * including the space taken by margins, in viewport coordinates.\n\t     */\n\t    getBoundsNoRotateWithMargins: function(current) {\n\t        var bounds = this.getBoundsNoRotate(current);\n\t        var factor = this._containerInnerSize.x * this.getZoom(current);\n\t        bounds.x -= this._margins.left / factor;\n\t        bounds.y -= this._margins.top / factor;\n\t        bounds.width += (this._margins.left + this._margins.right) / factor;\n\t        bounds.height += (this._margins.top + this._margins.bottom) / factor;\n\t        return bounds;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n\t     */\n\t    getCenter: function( current ) {\n\t        var centerCurrent = new $.Point(\n\t                this.centerSpringX.current.value,\n\t                this.centerSpringY.current.value\n\t            ),\n\t            centerTarget = new $.Point(\n\t                this.centerSpringX.target.value,\n\t                this.centerSpringY.target.value\n\t            ),\n\t            oldZoomPixel,\n\t            zoom,\n\t            width,\n\t            height,\n\t            bounds,\n\t            newZoomPixel,\n\t            deltaZoomPixels,\n\t            deltaZoomPoints;\n\t\n\t        if ( current ) {\n\t            return centerCurrent;\n\t        } else if ( !this.zoomPoint ) {\n\t            return centerTarget;\n\t        }\n\t\n\t        oldZoomPixel = this.pixelFromPoint(this.zoomPoint, true);\n\t\n\t        zoom    = this.getZoom();\n\t        width   = 1.0 / zoom;\n\t        height  = width / this.getAspectRatio();\n\t        bounds  = new $.Rect(\n\t            centerCurrent.x - width / 2.0,\n\t            centerCurrent.y - height / 2.0,\n\t            width,\n\t            height\n\t        );\n\t\n\t        newZoomPixel = this._pixelFromPoint(this.zoomPoint, bounds);\n\t        deltaZoomPixels = newZoomPixel.minus( oldZoomPixel );\n\t        deltaZoomPoints = deltaZoomPixels.divide( this._containerInnerSize.x * zoom );\n\t\n\t        return centerTarget.plus( deltaZoomPoints );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n\t     */\n\t    getZoom: function( current ) {\n\t        if ( current ) {\n\t            return this.zoomSpring.current.value;\n\t        } else {\n\t            return this.zoomSpring.target.value;\n\t        }\n\t    },\n\t\n\t    // private\n\t    _applyZoomConstraints: function(zoom) {\n\t        return Math.max(\n\t            Math.min(zoom, this.getMaxZoom()),\n\t            this.getMinZoom());\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @private\n\t     * @param {OpenSeadragon.Rect} bounds\n\t     * @return {OpenSeadragon.Rect} constrained bounds.\n\t     */\n\t    _applyBoundaryConstraints: function(bounds) {\n\t        var newBounds = new $.Rect(\n\t                bounds.x,\n\t                bounds.y,\n\t                bounds.width,\n\t                bounds.height);\n\t\n\t        if (this.wrapHorizontal) {\n\t            //do nothing\n\t        } else {\n\t            var horizontalThreshold = this.visibilityRatio * newBounds.width;\n\t            var boundsRight = newBounds.x + newBounds.width;\n\t            var contentRight = this._contentBoundsNoRotate.x + this._contentBoundsNoRotate.width;\n\t            var leftDx = this._contentBoundsNoRotate.x - boundsRight + horizontalThreshold;\n\t            var rightDx = contentRight - newBounds.x - horizontalThreshold;\n\t\n\t            if (horizontalThreshold > this._contentBoundsNoRotate.width) {\n\t                newBounds.x += (leftDx + rightDx) / 2;\n\t            } else if (rightDx < 0) {\n\t                newBounds.x += rightDx;\n\t            } else if (leftDx > 0) {\n\t                newBounds.x += leftDx;\n\t            }\n\t        }\n\t\n\t        if (this.wrapVertical) {\n\t            //do nothing\n\t        } else {\n\t            var verticalThreshold   = this.visibilityRatio * newBounds.height;\n\t            var boundsBottom = newBounds.y + newBounds.height;\n\t            var contentBottom = this._contentBoundsNoRotate.y + this._contentBoundsNoRotate.height;\n\t            var topDy = this._contentBoundsNoRotate.y - boundsBottom + verticalThreshold;\n\t            var bottomDy = contentBottom - newBounds.y - verticalThreshold;\n\t\n\t            if (verticalThreshold > this._contentBoundsNoRotate.height) {\n\t                newBounds.y += (topDy + bottomDy) / 2;\n\t            } else if (bottomDy < 0) {\n\t                newBounds.y += bottomDy;\n\t            } else if (topDy > 0) {\n\t                newBounds.y += topDy;\n\t            }\n\t        }\n\t\n\t        return newBounds;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @private\n\t     * @param {Boolean} [immediately=false] - whether the function that triggered this event was\n\t     * called with the \"immediately\" flag\n\t     */\n\t    _raiseConstraintsEvent: function(immediately) {\n\t        if (this.viewer) {\n\t            /**\n\t             * Raised when the viewport constraints are applied (see {@link OpenSeadragon.Viewport#applyConstraints}).\n\t             *\n\t             * @event constrain\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t             * @property {Boolean} immediately - whether the function that triggered this event was\n\t             * called with the \"immediately\" flag\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            this.viewer.raiseEvent( 'constrain', {\n\t                immediately: immediately\n\t            });\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Enforces the minZoom, maxZoom and visibilityRatio constraints by\n\t     * zooming and panning to the closest acceptable zoom and location.\n\t     * @function\n\t     * @param {Boolean} [immediately=false]\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:constrain\n\t     */\n\t    applyConstraints: function(immediately) {\n\t        var actualZoom = this.getZoom();\n\t        var constrainedZoom = this._applyZoomConstraints(actualZoom);\n\t\n\t        if (actualZoom !== constrainedZoom) {\n\t            this.zoomTo(constrainedZoom, this.zoomPoint, immediately);\n\t        }\n\t\n\t        var bounds = this.getBoundsNoRotate();\n\t        var constrainedBounds = this._applyBoundaryConstraints(bounds);\n\t        this._raiseConstraintsEvent(immediately);\n\t\n\t        if (bounds.x !== constrainedBounds.x ||\n\t            bounds.y !== constrainedBounds.y ||\n\t            immediately) {\n\t            this.fitBounds(\n\t                constrainedBounds.rotate(-this.getRotation()),\n\t                immediately);\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Equivalent to {@link OpenSeadragon.Viewport#applyConstraints}\n\t     * @function\n\t     * @param {Boolean} [immediately=false]\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:constrain\n\t     */\n\t    ensureVisible: function(immediately) {\n\t        return this.applyConstraints(immediately);\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @private\n\t     * @param {OpenSeadragon.Rect} bounds\n\t     * @param {Object} options (immediately=false, constraints=false)\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     */\n\t    _fitBounds: function(bounds, options) {\n\t        options = options || {};\n\t        var immediately = options.immediately || false;\n\t        var constraints = options.constraints || false;\n\t\n\t        var aspect = this.getAspectRatio();\n\t        var center = bounds.getCenter();\n\t\n\t        // Compute width and height of bounding box.\n\t        var newBounds = new $.Rect(\n\t            bounds.x,\n\t            bounds.y,\n\t            bounds.width,\n\t            bounds.height,\n\t            bounds.degrees + this.getRotation())\n\t            .getBoundingBox();\n\t\n\t        if (newBounds.getAspectRatio() >= aspect) {\n\t            newBounds.height = newBounds.width / aspect;\n\t        } else {\n\t            newBounds.width = newBounds.height * aspect;\n\t        }\n\t\n\t        // Compute x and y from width, height and center position\n\t        newBounds.x = center.x - newBounds.width / 2;\n\t        newBounds.y = center.y - newBounds.height / 2;\n\t        var newZoom = 1.0 / newBounds.width;\n\t\n\t        if (constraints) {\n\t            var newBoundsAspectRatio = newBounds.getAspectRatio();\n\t            var newConstrainedZoom = this._applyZoomConstraints(newZoom);\n\t\n\t            if (newZoom !== newConstrainedZoom) {\n\t                newZoom = newConstrainedZoom;\n\t                newBounds.width = 1.0 / newZoom;\n\t                newBounds.x = center.x - newBounds.width / 2;\n\t                newBounds.height = newBounds.width / newBoundsAspectRatio;\n\t                newBounds.y = center.y - newBounds.height / 2;\n\t            }\n\t\n\t            newBounds = this._applyBoundaryConstraints(newBounds);\n\t            center = newBounds.getCenter();\n\t            this._raiseConstraintsEvent(immediately);\n\t        }\n\t\n\t        if (immediately) {\n\t            this.panTo(center, true);\n\t            return this.zoomTo(newZoom, null, true);\n\t        }\n\t\n\t        this.panTo(this.getCenter(true), true);\n\t        this.zoomTo(this.getZoom(true), null, true);\n\t\n\t        var oldBounds = this.getBounds();\n\t        var oldZoom   = this.getZoom();\n\t\n\t        if (oldZoom === 0 || Math.abs(newZoom / oldZoom - 1) < 0.00000001) {\n\t            this.zoomTo(newZoom, true);\n\t            return this.panTo(center, immediately);\n\t        }\n\t\n\t        newBounds = newBounds.rotate(-this.getRotation());\n\t        var referencePoint = newBounds.getTopLeft().times(newZoom)\n\t            .minus(oldBounds.getTopLeft().times(oldZoom))\n\t            .divide(newZoom - oldZoom);\n\t\n\t        return this.zoomTo(newZoom, referencePoint, immediately);\n\t    },\n\t\n\t    /**\n\t     * Makes the viewport zoom and pan so that the specified bounds take\n\t     * as much space as possible in the viewport.\n\t     * Note: this method ignores the constraints (minZoom, maxZoom and\n\t     * visibilityRatio).\n\t     * Use {@link OpenSeadragon.Viewport#fitBoundsWithConstraints} to enforce\n\t     * them.\n\t     * @function\n\t     * @param {OpenSeadragon.Rect} bounds\n\t     * @param {Boolean} [immediately=false]\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     */\n\t    fitBounds: function(bounds, immediately) {\n\t        return this._fitBounds(bounds, {\n\t            immediately: immediately,\n\t            constraints: false\n\t        });\n\t    },\n\t\n\t    /**\n\t     * Makes the viewport zoom and pan so that the specified bounds take\n\t     * as much space as possible in the viewport while enforcing the constraints\n\t     * (minZoom, maxZoom and visibilityRatio).\n\t     * Note: because this method enforces the constraints, part of the\n\t     * provided bounds may end up outside of the viewport.\n\t     * Use {@link OpenSeadragon.Viewport#fitBounds} to ignore them.\n\t     * @function\n\t     * @param {OpenSeadragon.Rect} bounds\n\t     * @param {Boolean} [immediately=false]\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     */\n\t    fitBoundsWithConstraints: function(bounds, immediately) {\n\t        return this._fitBounds(bounds, {\n\t            immediately: immediately,\n\t            constraints: true\n\t        });\n\t    },\n\t\n\t    /**\n\t     * Zooms so the image just fills the viewer vertically.\n\t     * @param {Boolean} immediately\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     */\n\t    fitVertically: function(immediately) {\n\t        var box = new $.Rect(\n\t            this._contentBounds.x + (this._contentBounds.width / 2),\n\t            this._contentBounds.y,\n\t            0,\n\t            this._contentBounds.height);\n\t        return this.fitBounds(box, immediately);\n\t    },\n\t\n\t    /**\n\t     * Zooms so the image just fills the viewer horizontally.\n\t     * @param {Boolean} immediately\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     */\n\t    fitHorizontally: function(immediately) {\n\t        var box = new $.Rect(\n\t            this._contentBounds.x,\n\t            this._contentBounds.y + (this._contentBounds.height / 2),\n\t            this._contentBounds.width,\n\t            0);\n\t        return this.fitBounds(box, immediately);\n\t    },\n\t\n\t\n\t    /**\n\t     * Returns bounds taking constraints into account\n\t     * Added to improve constrained panning\n\t     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     */\n\t    getConstrainedBounds: function(current) {\n\t        var bounds,\n\t            constrainedBounds;\n\t\n\t        bounds = this.getBounds(current);\n\t\n\t        constrainedBounds = this._applyBoundaryConstraints(bounds);\n\t\n\t        return constrainedBounds;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {OpenSeadragon.Point} delta\n\t     * @param {Boolean} immediately\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:pan\n\t     */\n\t    panBy: function( delta, immediately ) {\n\t        var center = new $.Point(\n\t            this.centerSpringX.target.value,\n\t            this.centerSpringY.target.value\n\t        );\n\t        return this.panTo( center.plus( delta ), immediately );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {OpenSeadragon.Point} center\n\t     * @param {Boolean} immediately\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:pan\n\t     */\n\t    panTo: function( center, immediately ) {\n\t        if ( immediately ) {\n\t            this.centerSpringX.resetTo( center.x );\n\t            this.centerSpringY.resetTo( center.y );\n\t        } else {\n\t            this.centerSpringX.springTo( center.x );\n\t            this.centerSpringY.springTo( center.y );\n\t        }\n\t\n\t        if( this.viewer ){\n\t            /**\n\t             * Raised when the viewport is panned (see {@link OpenSeadragon.Viewport#panBy} and {@link OpenSeadragon.Viewport#panTo}).\n\t             *\n\t             * @event pan\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t             * @property {OpenSeadragon.Point} center\n\t             * @property {Boolean} immediately\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            this.viewer.raiseEvent( 'pan', {\n\t                center: center,\n\t                immediately: immediately\n\t            });\n\t        }\n\t\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:zoom\n\t     */\n\t    zoomBy: function(factor, refPoint, immediately) {\n\t        return this.zoomTo(\n\t            this.zoomSpring.target.value * factor, refPoint, immediately);\n\t    },\n\t\n\t    /**\n\t     * Zooms to the specified zoom level\n\t     * @function\n\t     * @param {Number} zoom The zoom level to zoom to.\n\t     * @param {OpenSeadragon.Point} [refPoint] The point which will stay at\n\t     * the same screen location. Defaults to the viewport center.\n\t     * @param {Boolean} [immediately=false]\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:zoom\n\t     */\n\t    zoomTo: function(zoom, refPoint, immediately) {\n\t        var _this = this;\n\t\n\t        this.zoomPoint = refPoint instanceof $.Point &&\n\t            !isNaN(refPoint.x) &&\n\t            !isNaN(refPoint.y) ?\n\t            refPoint :\n\t            null;\n\t\n\t        if (immediately) {\n\t            this._adjustCenterSpringsForZoomPoint(function() {\n\t                _this.zoomSpring.resetTo(zoom);\n\t            });\n\t        } else {\n\t            this.zoomSpring.springTo(zoom);\n\t        }\n\t\n\t        if (this.viewer) {\n\t            /**\n\t             * Raised when the viewport zoom level changes (see {@link OpenSeadragon.Viewport#zoomBy} and {@link OpenSeadragon.Viewport#zoomTo}).\n\t             *\n\t             * @event zoom\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t             * @property {Number} zoom\n\t             * @property {OpenSeadragon.Point} refPoint\n\t             * @property {Boolean} immediately\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            this.viewer.raiseEvent('zoom', {\n\t                zoom: zoom,\n\t                refPoint: refPoint,\n\t                immediately: immediately\n\t            });\n\t        }\n\t\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Rotates this viewport to the angle specified.\n\t     * @function\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     */\n\t    setRotation: function(degrees) {\n\t        if (!this.viewer || !this.viewer.drawer.canRotate()) {\n\t            return this;\n\t        }\n\t        this.degrees = $.positiveModulo(degrees, 360);\n\t        this._setContentBounds(\n\t            this.viewer.world.getHomeBounds(),\n\t            this.viewer.world.getContentFactor());\n\t        this.viewer.forceRedraw();\n\t\n\t        /**\n\t         * Raised when rotation has been changed.\n\t         *\n\t         * @event rotate\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {Number} degrees - The number of degrees the rotation was set to.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.viewer.raiseEvent('rotate', {\"degrees\": degrees});\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Gets the current rotation in degrees.\n\t     * @function\n\t     * @return {Number} The current rotation in degrees.\n\t     */\n\t    getRotation: function() {\n\t        return this.degrees;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:resize\n\t     */\n\t    resize: function( newContainerSize, maintain ) {\n\t        var oldBounds = this.getBoundsNoRotate(),\n\t            newBounds = oldBounds,\n\t            widthDeltaFactor;\n\t\n\t        this.containerSize.x = newContainerSize.x;\n\t        this.containerSize.y = newContainerSize.y;\n\t\n\t        this._updateContainerInnerSize();\n\t\n\t        if ( maintain ) {\n\t            // TODO: widthDeltaFactor will always be 1; probably not what's intended\n\t            widthDeltaFactor = newContainerSize.x / this.containerSize.x;\n\t            newBounds.width  = oldBounds.width * widthDeltaFactor;\n\t            newBounds.height = newBounds.width / this.getAspectRatio();\n\t        }\n\t\n\t        if( this.viewer ){\n\t            /**\n\t             * Raised when the viewer is resized (see {@link OpenSeadragon.Viewport#resize}).\n\t             *\n\t             * @event resize\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t             * @property {OpenSeadragon.Point} newContainerSize\n\t             * @property {Boolean} maintain\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            this.viewer.raiseEvent( 'resize', {\n\t                newContainerSize: newContainerSize,\n\t                maintain: maintain\n\t            });\n\t        }\n\t\n\t        return this.fitBounds( newBounds, true );\n\t    },\n\t\n\t    // private\n\t    _updateContainerInnerSize: function() {\n\t        this._containerInnerSize = new $.Point(\n\t            Math.max(1, this.containerSize.x - (this._margins.left + this._margins.right)),\n\t            Math.max(1, this.containerSize.y - (this._margins.top + this._margins.bottom))\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Update the zoom and center (X and Y) springs.\n\t     * @function\n\t     * @returns {Boolean} True if any change has been made, false otherwise.\n\t     */\n\t    update: function() {\n\t        var _this = this;\n\t        this._adjustCenterSpringsForZoomPoint(function() {\n\t            _this.zoomSpring.update();\n\t        });\n\t\n\t        this.centerSpringX.update();\n\t        this.centerSpringY.update();\n\t\n\t        var changed = this.centerSpringX.current.value !== this._oldCenterX ||\n\t            this.centerSpringY.current.value !== this._oldCenterY ||\n\t            this.zoomSpring.current.value !== this._oldZoom;\n\t\n\t        this._oldCenterX = this.centerSpringX.current.value;\n\t        this._oldCenterY = this.centerSpringY.current.value;\n\t        this._oldZoom    = this.zoomSpring.current.value;\n\t\n\t        return changed;\n\t    },\n\t\n\t    _adjustCenterSpringsForZoomPoint: function(zoomSpringHandler) {\n\t        if (this.zoomPoint) {\n\t            var oldZoomPixel = this.pixelFromPoint(this.zoomPoint, true);\n\t            zoomSpringHandler();\n\t            var newZoomPixel = this.pixelFromPoint(this.zoomPoint, true);\n\t\n\t            var deltaZoomPixels = newZoomPixel.minus(oldZoomPixel);\n\t            var deltaZoomPoints = this.deltaPointsFromPixels(\n\t                deltaZoomPixels, true);\n\t\n\t            this.centerSpringX.shiftBy(deltaZoomPoints.x);\n\t            this.centerSpringY.shiftBy(deltaZoomPoints.y);\n\t\n\t            if (this.zoomSpring.isAtTargetValue()) {\n\t                this.zoomPoint = null;\n\t            }\n\t        } else {\n\t            zoomSpringHandler();\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Convert a delta (translation vector) from viewport coordinates to pixels\n\t     * coordinates. This method does not take rotation into account.\n\t     * Consider using deltaPixelsFromPoints if you need to account for rotation.\n\t     * @param {OpenSeadragon.Point} deltaPoints - The translation vector to convert.\n\t     * @param {Boolean} [current=false] - Pass true for the current location;\n\t     * defaults to false (target location).\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    deltaPixelsFromPointsNoRotate: function(deltaPoints, current) {\n\t        return deltaPoints.times(\n\t            this._containerInnerSize.x * this.getZoom(current)\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Convert a delta (translation vector) from viewport coordinates to pixels\n\t     * coordinates.\n\t     * @param {OpenSeadragon.Point} deltaPoints - The translation vector to convert.\n\t     * @param {Boolean} [current=false] - Pass true for the current location;\n\t     * defaults to false (target location).\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    deltaPixelsFromPoints: function(deltaPoints, current) {\n\t        return this.deltaPixelsFromPointsNoRotate(\n\t            deltaPoints.rotate(this.getRotation()),\n\t            current);\n\t    },\n\t\n\t    /**\n\t     * Convert a delta (translation vector) from pixels coordinates to viewport\n\t     * coordinates. This method does not take rotation into account.\n\t     * Consider using deltaPointsFromPixels if you need to account for rotation.\n\t     * @param {OpenSeadragon.Point} deltaPixels - The translation vector to convert.\n\t     * @param {Boolean} [current=false] - Pass true for the current location;\n\t     * defaults to false (target location).\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    deltaPointsFromPixelsNoRotate: function(deltaPixels, current) {\n\t        return deltaPixels.divide(\n\t            this._containerInnerSize.x * this.getZoom(current)\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Convert a delta (translation vector) from pixels coordinates to viewport\n\t     * coordinates.\n\t     * @param {OpenSeadragon.Point} deltaPixels - The translation vector to convert.\n\t     * @param {Boolean} [current=false] - Pass true for the current location;\n\t     * defaults to false (target location).\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    deltaPointsFromPixels: function(deltaPixels, current) {\n\t        return this.deltaPointsFromPixelsNoRotate(deltaPixels, current)\n\t            .rotate(-this.getRotation());\n\t    },\n\t\n\t    /**\n\t     * Convert viewport coordinates to pixels coordinates.\n\t     * This method does not take rotation into account.\n\t     * Consider using pixelFromPoint if you need to account for rotation.\n\t     * @param {OpenSeadragon.Point} point the viewport coordinates\n\t     * @param {Boolean} [current=false] - Pass true for the current location;\n\t     * defaults to false (target location).\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    pixelFromPointNoRotate: function(point, current) {\n\t        return this._pixelFromPointNoRotate(\n\t            point, this.getBoundsNoRotate(current));\n\t    },\n\t\n\t    /**\n\t     * Convert viewport coordinates to pixel coordinates.\n\t     * @param {OpenSeadragon.Point} point the viewport coordinates\n\t     * @param {Boolean} [current=false] - Pass true for the current location;\n\t     * defaults to false (target location).\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    pixelFromPoint: function(point, current) {\n\t        return this._pixelFromPoint(point, this.getBoundsNoRotate(current));\n\t    },\n\t\n\t    // private\n\t    _pixelFromPointNoRotate: function(point, bounds) {\n\t        return point.minus(\n\t            bounds.getTopLeft()\n\t        ).times(\n\t            this._containerInnerSize.x / bounds.width\n\t        ).plus(\n\t            new $.Point(this._margins.left, this._margins.top)\n\t        );\n\t    },\n\t\n\t    // private\n\t    _pixelFromPoint: function(point, bounds) {\n\t        return this._pixelFromPointNoRotate(\n\t            point.rotate(this.getRotation(), this.getCenter(true)),\n\t            bounds);\n\t    },\n\t\n\t    /**\n\t     * Convert pixel coordinates to viewport coordinates.\n\t     * This method does not take rotation into account.\n\t     * Consider using pointFromPixel if you need to account for rotation.\n\t     * @param {OpenSeadragon.Point} pixel Pixel coordinates\n\t     * @param {Boolean} [current=false] - Pass true for the current location;\n\t     * defaults to false (target location).\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    pointFromPixelNoRotate: function(pixel, current) {\n\t        var bounds = this.getBoundsNoRotate(current);\n\t        return pixel.minus(\n\t            new $.Point(this._margins.left, this._margins.top)\n\t        ).divide(\n\t            this._containerInnerSize.x / bounds.width\n\t        ).plus(\n\t            bounds.getTopLeft()\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Convert pixel coordinates to viewport coordinates.\n\t     * @param {OpenSeadragon.Point} pixel Pixel coordinates\n\t     * @param {Boolean} [current=false] - Pass true for the current location;\n\t     * defaults to false (target location).\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    pointFromPixel: function(pixel, current) {\n\t        return this.pointFromPixelNoRotate(pixel, current).rotate(\n\t            -this.getRotation(),\n\t            this.getCenter(true)\n\t        );\n\t    },\n\t\n\t    // private\n\t    _viewportToImageDelta: function( viewerX, viewerY ) {\n\t        var scale = this._contentBoundsNoRotate.width;\n\t        return new $.Point(\n\t            viewerX * this._contentSizeNoRotate.x / scale,\n\t            viewerY * this._contentSizeNoRotate.x / scale);\n\t    },\n\t\n\t    /**\n\t     * Translates from OpenSeadragon viewer coordinate system to image coordinate system.\n\t     * This method can be called either by passing X,Y coordinates or an\n\t     * OpenSeadragon.Point\n\t     * Note: not accurate with multi-image; use TiledImage.viewportToImageCoordinates instead.\n\t     * @function\n\t     * @param {(OpenSeadragon.Point|Number)} viewerX either a point or the X\n\t     * coordinate in viewport coordinate system.\n\t     * @param {Number} [viewerY] Y coordinate in viewport coordinate system.\n\t     * @return {OpenSeadragon.Point} a point representing the coordinates in the image.\n\t     */\n\t    viewportToImageCoordinates: function(viewerX, viewerY) {\n\t        if (viewerX instanceof $.Point) {\n\t            //they passed a point instead of individual components\n\t            return this.viewportToImageCoordinates(viewerX.x, viewerX.y);\n\t        }\n\t\n\t        if (this.viewer) {\n\t            var count = this.viewer.world.getItemCount();\n\t            if (count > 1) {\n\t                $.console.error('[Viewport.viewportToImageCoordinates] is not accurate ' +\n\t                    'with multi-image; use TiledImage.viewportToImageCoordinates instead.');\n\t            } else if (count === 1) {\n\t                // It is better to use TiledImage.viewportToImageCoordinates\n\t                // because this._contentBoundsNoRotate can not be relied on\n\t                // with clipping.\n\t                var item = this.viewer.world.getItemAt(0);\n\t                return item.viewportToImageCoordinates(viewerX, viewerY, true);\n\t            }\n\t        }\n\t\n\t        return this._viewportToImageDelta(\n\t            viewerX - this._contentBoundsNoRotate.x,\n\t            viewerY - this._contentBoundsNoRotate.y);\n\t    },\n\t\n\t    // private\n\t    _imageToViewportDelta: function( imageX, imageY ) {\n\t        var scale = this._contentBoundsNoRotate.width;\n\t        return new $.Point(\n\t            imageX / this._contentSizeNoRotate.x * scale,\n\t            imageY / this._contentSizeNoRotate.x * scale);\n\t    },\n\t\n\t    /**\n\t     * Translates from image coordinate system to OpenSeadragon viewer coordinate system\n\t     * This method can be called either by passing X,Y coordinates or an\n\t     * OpenSeadragon.Point\n\t     * Note: not accurate with multi-image; use TiledImage.imageToViewportCoordinates instead.\n\t     * @function\n\t     * @param {(OpenSeadragon.Point | Number)} imageX the point or the\n\t     * X coordinate in image coordinate system.\n\t     * @param {Number} [imageY] Y coordinate in image coordinate system.\n\t     * @return {OpenSeadragon.Point} a point representing the coordinates in the viewport.\n\t     */\n\t    imageToViewportCoordinates: function(imageX, imageY) {\n\t        if (imageX instanceof $.Point) {\n\t            //they passed a point instead of individual components\n\t            return this.imageToViewportCoordinates(imageX.x, imageX.y);\n\t        }\n\t\n\t        if (this.viewer) {\n\t            var count = this.viewer.world.getItemCount();\n\t            if (count > 1) {\n\t                $.console.error('[Viewport.imageToViewportCoordinates] is not accurate ' +\n\t                    'with multi-image; use TiledImage.imageToViewportCoordinates instead.');\n\t            } else if (count === 1) {\n\t                // It is better to use TiledImage.viewportToImageCoordinates\n\t                // because this._contentBoundsNoRotate can not be relied on\n\t                // with clipping.\n\t                var item = this.viewer.world.getItemAt(0);\n\t                return item.imageToViewportCoordinates(imageX, imageY, true);\n\t            }\n\t        }\n\t\n\t        var point = this._imageToViewportDelta(imageX, imageY);\n\t        point.x += this._contentBoundsNoRotate.x;\n\t        point.y += this._contentBoundsNoRotate.y;\n\t        return point;\n\t    },\n\t\n\t    /**\n\t     * Translates from a rectangle which describes a portion of the image in\n\t     * pixel coordinates to OpenSeadragon viewport rectangle coordinates.\n\t     * This method can be called either by passing X,Y,width,height or an\n\t     * OpenSeadragon.Rect\n\t     * Note: not accurate with multi-image; use TiledImage.imageToViewportRectangle instead.\n\t     * @function\n\t     * @param {(OpenSeadragon.Rect | Number)} imageX the rectangle or the X\n\t     * coordinate of the top left corner of the rectangle in image coordinate system.\n\t     * @param {Number} [imageY] the Y coordinate of the top left corner of the rectangle\n\t     * in image coordinate system.\n\t     * @param {Number} [pixelWidth] the width in pixel of the rectangle.\n\t     * @param {Number} [pixelHeight] the height in pixel of the rectangle.\n\t     * @returns {OpenSeadragon.Rect} This image's bounds in viewport coordinates\n\t     */\n\t    imageToViewportRectangle: function(imageX, imageY, pixelWidth, pixelHeight) {\n\t        var rect = imageX;\n\t        if (!(rect instanceof $.Rect)) {\n\t            //they passed individual components instead of a rectangle\n\t            rect = new $.Rect(imageX, imageY, pixelWidth, pixelHeight);\n\t        }\n\t\n\t        if (this.viewer) {\n\t            var count = this.viewer.world.getItemCount();\n\t            if (count > 1) {\n\t                $.console.error('[Viewport.imageToViewportRectangle] is not accurate ' +\n\t                    'with multi-image; use TiledImage.imageToViewportRectangle instead.');\n\t            } else if (count === 1) {\n\t                // It is better to use TiledImage.imageToViewportRectangle\n\t                // because this._contentBoundsNoRotate can not be relied on\n\t                // with clipping.\n\t                var item = this.viewer.world.getItemAt(0);\n\t                return item.imageToViewportRectangle(\n\t                    imageX, imageY, pixelWidth, pixelHeight, true);\n\t            }\n\t        }\n\t\n\t        var coordA = this.imageToViewportCoordinates(rect.x, rect.y);\n\t        var coordB = this._imageToViewportDelta(rect.width, rect.height);\n\t        return new $.Rect(\n\t            coordA.x,\n\t            coordA.y,\n\t            coordB.x,\n\t            coordB.y,\n\t            rect.degrees\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Translates from a rectangle which describes a portion of\n\t     * the viewport in point coordinates to image rectangle coordinates.\n\t     * This method can be called either by passing X,Y,width,height or an\n\t     * OpenSeadragon.Rect\n\t     * Note: not accurate with multi-image; use TiledImage.viewportToImageRectangle instead.\n\t     * @function\n\t     * @param {(OpenSeadragon.Rect | Number)} viewerX either a rectangle or\n\t     * the X coordinate of the top left corner of the rectangle in viewport\n\t     * coordinate system.\n\t     * @param {Number} [viewerY] the Y coordinate of the top left corner of the rectangle\n\t     * in viewport coordinate system.\n\t     * @param {Number} [pointWidth] the width of the rectangle in viewport coordinate system.\n\t     * @param {Number} [pointHeight] the height of the rectangle in viewport coordinate system.\n\t     */\n\t    viewportToImageRectangle: function(viewerX, viewerY, pointWidth, pointHeight) {\n\t        var rect = viewerX;\n\t        if (!(rect instanceof $.Rect)) {\n\t            //they passed individual components instead of a rectangle\n\t            rect = new $.Rect(viewerX, viewerY, pointWidth, pointHeight);\n\t        }\n\t\n\t        if (this.viewer) {\n\t            var count = this.viewer.world.getItemCount();\n\t            if (count > 1) {\n\t                $.console.error('[Viewport.viewportToImageRectangle] is not accurate ' +\n\t                    'with multi-image; use TiledImage.viewportToImageRectangle instead.');\n\t            } else if (count === 1) {\n\t                // It is better to use TiledImage.viewportToImageCoordinates\n\t                // because this._contentBoundsNoRotate can not be relied on\n\t                // with clipping.\n\t                var item = this.viewer.world.getItemAt(0);\n\t                return item.viewportToImageRectangle(\n\t                    viewerX, viewerY, pointWidth, pointHeight, true);\n\t            }\n\t        }\n\t\n\t        var coordA = this.viewportToImageCoordinates(rect.x, rect.y);\n\t        var coordB = this._viewportToImageDelta(rect.width, rect.height);\n\t        return new $.Rect(\n\t            coordA.x,\n\t            coordA.y,\n\t            coordB.x,\n\t            coordB.y,\n\t            rect.degrees\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Convert pixel coordinates relative to the viewer element to image\n\t     * coordinates.\n\t     * Note: not accurate with multi-image.\n\t     * @param {OpenSeadragon.Point} pixel\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    viewerElementToImageCoordinates: function( pixel ) {\n\t        var point = this.pointFromPixel( pixel, true );\n\t        return this.viewportToImageCoordinates( point );\n\t    },\n\t\n\t    /**\n\t     * Convert pixel coordinates relative to the image to\n\t     * viewer element coordinates.\n\t     * Note: not accurate with multi-image.\n\t     * @param {OpenSeadragon.Point} pixel\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    imageToViewerElementCoordinates: function( pixel ) {\n\t        var point = this.imageToViewportCoordinates( pixel );\n\t        return this.pixelFromPoint( point, true );\n\t    },\n\t\n\t    /**\n\t     * Convert pixel coordinates relative to the window to image coordinates.\n\t     * Note: not accurate with multi-image.\n\t     * @param {OpenSeadragon.Point} pixel\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    windowToImageCoordinates: function(pixel) {\n\t        $.console.assert(this.viewer,\n\t            \"[Viewport.windowToImageCoordinates] the viewport must have a viewer.\");\n\t        var viewerCoordinates = pixel.minus(\n\t                $.getElementPosition(this.viewer.element));\n\t        return this.viewerElementToImageCoordinates(viewerCoordinates);\n\t    },\n\t\n\t    /**\n\t     * Convert image coordinates to pixel coordinates relative to the window.\n\t     * Note: not accurate with multi-image.\n\t     * @param {OpenSeadragon.Point} pixel\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    imageToWindowCoordinates: function(pixel) {\n\t        $.console.assert(this.viewer,\n\t            \"[Viewport.imageToWindowCoordinates] the viewport must have a viewer.\");\n\t        var viewerCoordinates = this.imageToViewerElementCoordinates(pixel);\n\t        return viewerCoordinates.plus(\n\t                $.getElementPosition(this.viewer.element));\n\t    },\n\t\n\t    /**\n\t     * Convert pixel coordinates relative to the viewer element to viewport\n\t     * coordinates.\n\t     * @param {OpenSeadragon.Point} pixel\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    viewerElementToViewportCoordinates: function( pixel ) {\n\t        return this.pointFromPixel( pixel, true );\n\t    },\n\t\n\t    /**\n\t     * Convert viewport coordinates to pixel coordinates relative to the\n\t     * viewer element.\n\t     * @param {OpenSeadragon.Point} point\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    viewportToViewerElementCoordinates: function( point ) {\n\t        return this.pixelFromPoint( point, true );\n\t    },\n\t\n\t    /**\n\t     * Convert a rectangle in pixel coordinates relative to the viewer element\n\t     * to viewport coordinates.\n\t     * @param {OpenSeadragon.Rect} rectangle the rectangle to convert\n\t     * @returns {OpenSeadragon.Rect} the converted rectangle\n\t     */\n\t    viewerElementToViewportRectangle: function(rectangle) {\n\t        return $.Rect.fromSummits(\n\t            this.pointFromPixel(rectangle.getTopLeft(), true),\n\t            this.pointFromPixel(rectangle.getTopRight(), true),\n\t            this.pointFromPixel(rectangle.getBottomLeft(), true)\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Convert a rectangle in viewport coordinates to pixel coordinates relative\n\t     * to the viewer element.\n\t     * @param {OpenSeadragon.Rect} rectangle the rectangle to convert\n\t     * @returns {OpenSeadragon.Rect} the converted rectangle\n\t     */\n\t    viewportToViewerElementRectangle: function(rectangle) {\n\t        return $.Rect.fromSummits(\n\t            this.pixelFromPoint(rectangle.getTopLeft(), true),\n\t            this.pixelFromPoint(rectangle.getTopRight(), true),\n\t            this.pixelFromPoint(rectangle.getBottomLeft(), true)\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Convert pixel coordinates relative to the window to viewport coordinates.\n\t     * @param {OpenSeadragon.Point} pixel\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    windowToViewportCoordinates: function(pixel) {\n\t        $.console.assert(this.viewer,\n\t            \"[Viewport.windowToViewportCoordinates] the viewport must have a viewer.\");\n\t        var viewerCoordinates = pixel.minus(\n\t                $.getElementPosition(this.viewer.element));\n\t        return this.viewerElementToViewportCoordinates(viewerCoordinates);\n\t    },\n\t\n\t    /**\n\t     * Convert viewport coordinates to pixel coordinates relative to the window.\n\t     * @param {OpenSeadragon.Point} point\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    viewportToWindowCoordinates: function(point) {\n\t        $.console.assert(this.viewer,\n\t            \"[Viewport.viewportToWindowCoordinates] the viewport must have a viewer.\");\n\t        var viewerCoordinates = this.viewportToViewerElementCoordinates(point);\n\t        return viewerCoordinates.plus(\n\t                $.getElementPosition(this.viewer.element));\n\t    },\n\t\n\t    /**\n\t     * Convert a viewport zoom to an image zoom.\n\t     * Image zoom: ratio of the original image size to displayed image size.\n\t     * 1 means original image size, 0.5 half size...\n\t     * Viewport zoom: ratio of the displayed image's width to viewport's width.\n\t     * 1 means identical width, 2 means image's width is twice the viewport's width...\n\t     * Note: not accurate with multi-image.\n\t     * @function\n\t     * @param {Number} viewportZoom The viewport zoom\n\t     * target zoom.\n\t     * @returns {Number} imageZoom The image zoom\n\t     */\n\t    viewportToImageZoom: function(viewportZoom) {\n\t        if (this.viewer) {\n\t            var count = this.viewer.world.getItemCount();\n\t            if (count > 1) {\n\t                $.console.error('[Viewport.viewportToImageZoom] is not ' +\n\t                    'accurate with multi-image.');\n\t            } else if (count === 1) {\n\t                // It is better to use TiledImage.viewportToImageZoom\n\t                // because this._contentBoundsNoRotate can not be relied on\n\t                // with clipping.\n\t                var item = this.viewer.world.getItemAt(0);\n\t                return item.viewportToImageZoom(viewportZoom);\n\t            }\n\t        }\n\t\n\t        var imageWidth = this._contentSizeNoRotate.x;\n\t        var containerWidth = this._containerInnerSize.x;\n\t        var scale = this._contentBoundsNoRotate.width;\n\t        var viewportToImageZoomRatio = (containerWidth / imageWidth) * scale;\n\t        return viewportZoom * viewportToImageZoomRatio;\n\t    },\n\t\n\t    /**\n\t     * Convert an image zoom to a viewport zoom.\n\t     * Image zoom: ratio of the original image size to displayed image size.\n\t     * 1 means original image size, 0.5 half size...\n\t     * Viewport zoom: ratio of the displayed image's width to viewport's width.\n\t     * 1 means identical width, 2 means image's width is twice the viewport's width...\n\t     * Note: not accurate with multi-image.\n\t     * @function\n\t     * @param {Number} imageZoom The image zoom\n\t     * target zoom.\n\t     * @returns {Number} viewportZoom The viewport zoom\n\t     */\n\t    imageToViewportZoom: function(imageZoom) {\n\t        if (this.viewer) {\n\t            var count = this.viewer.world.getItemCount();\n\t            if (count > 1) {\n\t                $.console.error('[Viewport.imageToViewportZoom] is not accurate ' +\n\t                    'with multi-image.');\n\t            } else if (count === 1) {\n\t                // It is better to use TiledImage.imageToViewportZoom\n\t                // because this._contentBoundsNoRotate can not be relied on\n\t                // with clipping.\n\t                var item = this.viewer.world.getItemAt(0);\n\t                return item.imageToViewportZoom(imageZoom);\n\t            }\n\t        }\n\t\n\t        var imageWidth = this._contentSizeNoRotate.x;\n\t        var containerWidth = this._containerInnerSize.x;\n\t        var scale = this._contentBoundsNoRotate.width;\n\t        var viewportToImageZoomRatio = (imageWidth / containerWidth) / scale;\n\t        return imageZoom * viewportToImageZoomRatio;\n\t    },\n\t\n\t    /**\n\t     * Toggles flip state and demands a new drawing on navigator and viewer objects.\n\t     * @function\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     */\n\t    toggleFlip: function() {\n\t      this.setFlip(!this.getFlip());\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Get flip state stored on viewport.\n\t     * @function\n\t     * @return {Boolean} Flip state.\n\t     */\n\t    getFlip: function() {\n\t      return this.flipped;\n\t    },\n\t\n\t    /**\n\t     * Sets flip state according to the state input argument.\n\t     * @function\n\t     * @param {Boolean} state - Flip state to set.\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     */\n\t    setFlip: function( state ) {\n\t      if ( this.flipped === state ) {\n\t        return this;\n\t      }\n\t\n\t      this.flipped = state;\n\t      if(this.viewer.navigator){\n\t        this.viewer.navigator.setFlip(this.getFlip());\n\t      }\n\t      this.viewer.forceRedraw();\n\t\n\t      /**\n\t       * Raised when flip state has been changed.\n\t       *\n\t       * @event flip\n\t       * @memberof OpenSeadragon.Viewer\n\t       * @type {object}\n\t       * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t       * @property {Number} flipped - The flip state after this change.\n\t       * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t       */\n\t      this.viewer.raiseEvent('flip', {\"flipped\": state});\n\t      return this;\n\t    }\n\t\n\t};\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - TiledImage\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * You shouldn't have to create a TiledImage instance directly; get it asynchronously by\n\t * using {@link OpenSeadragon.Viewer#open} or {@link OpenSeadragon.Viewer#addTiledImage} instead.\n\t * @class TiledImage\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.EventSource\n\t * @classdesc Handles rendering of tiles for an {@link OpenSeadragon.Viewer}.\n\t * A new instance is created for each TileSource opened.\n\t * @param {Object} options - Configuration for this TiledImage.\n\t * @param {OpenSeadragon.TileSource} options.source - The TileSource that defines this TiledImage.\n\t * @param {OpenSeadragon.Viewer} options.viewer - The Viewer that owns this TiledImage.\n\t * @param {OpenSeadragon.TileCache} options.tileCache - The TileCache for this TiledImage to use.\n\t * @param {OpenSeadragon.Drawer} options.drawer - The Drawer for this TiledImage to draw onto.\n\t * @param {OpenSeadragon.ImageLoader} options.imageLoader - The ImageLoader for this TiledImage to use.\n\t * @param {Number} [options.x=0] - Left position, in viewport coordinates.\n\t * @param {Number} [options.y=0] - Top position, in viewport coordinates.\n\t * @param {Number} [options.width=1] - Width, in viewport coordinates.\n\t * @param {Number} [options.height] - Height, in viewport coordinates.\n\t * @param {OpenSeadragon.Rect} [options.fitBounds] The bounds in viewport coordinates\n\t * to fit the image into. If specified, x, y, width and height get ignored.\n\t * @param {OpenSeadragon.Placement} [options.fitBoundsPlacement=OpenSeadragon.Placement.CENTER]\n\t * How to anchor the image in the bounds if options.fitBounds is set.\n\t * @param {OpenSeadragon.Rect} [options.clip] - An area, in image pixels, to clip to\n\t * (portions of the image outside of this area will not be visible). Only works on\n\t * browsers that support the HTML5 canvas.\n\t * @param {Number} [options.springStiffness] - See {@link OpenSeadragon.Options}.\n\t * @param {Boolean} [options.animationTime] - See {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.minZoomImageRatio] - See {@link OpenSeadragon.Options}.\n\t * @param {Boolean} [options.wrapHorizontal] - See {@link OpenSeadragon.Options}.\n\t * @param {Boolean} [options.wrapVertical] - See {@link OpenSeadragon.Options}.\n\t * @param {Boolean} [options.immediateRender] - See {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.blendTime] - See {@link OpenSeadragon.Options}.\n\t * @param {Boolean} [options.alwaysBlend] - See {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.minPixelRatio] - See {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.smoothTileEdgesMinZoom] - See {@link OpenSeadragon.Options}.\n\t * @param {Boolean} [options.iOSDevice] - See {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.opacity=1] - Set to draw at proportional opacity. If zero, images will not draw.\n\t * @param {Boolean} [options.preload=false] - Set true to load even when the image is hidden by zero opacity.\n\t * @param {String} [options.compositeOperation] - How the image is composited onto other images; see compositeOperation in {@link OpenSeadragon.Options} for possible values.\n\t * @param {Boolean} [options.debugMode] - See {@link OpenSeadragon.Options}.\n\t * @param {String|CanvasGradient|CanvasPattern|Function} [options.placeholderFillStyle] - See {@link OpenSeadragon.Options}.\n\t * @param {String|Boolean} [options.crossOriginPolicy] - See {@link OpenSeadragon.Options}.\n\t * @param {Boolean} [options.ajaxWithCredentials] - See {@link OpenSeadragon.Options}.\n\t * @param {Boolean} [options.loadTilesWithAjax]\n\t *      Whether to load tile data using AJAX requests.\n\t *      Defaults to the setting in {@link OpenSeadragon.Options}.\n\t * @param {Object} [options.ajaxHeaders={}]\n\t *      A set of headers to include when making tile AJAX requests.\n\t */\n\t$.TiledImage = function( options ) {\n\t    var _this = this;\n\t    /**\n\t     * The {@link OpenSeadragon.TileSource} that defines this TiledImage.\n\t     * @member {OpenSeadragon.TileSource} source\n\t     * @memberof OpenSeadragon.TiledImage#\n\t     */\n\t    $.console.assert( options.tileCache, \"[TiledImage] options.tileCache is required\" );\n\t    $.console.assert( options.drawer, \"[TiledImage] options.drawer is required\" );\n\t    $.console.assert( options.viewer, \"[TiledImage] options.viewer is required\" );\n\t    $.console.assert( options.imageLoader, \"[TiledImage] options.imageLoader is required\" );\n\t    $.console.assert( options.source, \"[TiledImage] options.source is required\" );\n\t    $.console.assert(!options.clip || options.clip instanceof $.Rect,\n\t        \"[TiledImage] options.clip must be an OpenSeadragon.Rect if present\");\n\t\n\t    $.EventSource.call( this );\n\t\n\t    this._tileCache = options.tileCache;\n\t    delete options.tileCache;\n\t\n\t    this._drawer = options.drawer;\n\t    delete options.drawer;\n\t\n\t    this._imageLoader = options.imageLoader;\n\t    delete options.imageLoader;\n\t\n\t    if (options.clip instanceof $.Rect) {\n\t        this._clip = options.clip.clone();\n\t    }\n\t\n\t    delete options.clip;\n\t\n\t    var x = options.x || 0;\n\t    delete options.x;\n\t    var y = options.y || 0;\n\t    delete options.y;\n\t\n\t    // Ratio of zoomable image height to width.\n\t    this.normHeight = options.source.dimensions.y / options.source.dimensions.x;\n\t    this.contentAspectX = options.source.dimensions.x / options.source.dimensions.y;\n\t\n\t    var scale = 1;\n\t    if ( options.width ) {\n\t        scale = options.width;\n\t        delete options.width;\n\t\n\t        if ( options.height ) {\n\t            $.console.error( \"specifying both width and height to a tiledImage is not supported\" );\n\t            delete options.height;\n\t        }\n\t    } else if ( options.height ) {\n\t        scale = options.height / this.normHeight;\n\t        delete options.height;\n\t    }\n\t\n\t    var fitBounds = options.fitBounds;\n\t    delete options.fitBounds;\n\t    var fitBoundsPlacement = options.fitBoundsPlacement || OpenSeadragon.Placement.CENTER;\n\t    delete options.fitBoundsPlacement;\n\t\n\t    var degrees = options.degrees || 0;\n\t    delete options.degrees;\n\t\n\t    $.extend( true, this, {\n\t\n\t        //internal state properties\n\t        viewer:         null,\n\t        tilesMatrix:    {},    // A '3d' dictionary [level][x][y] --> Tile.\n\t        coverage:       {},    // A '3d' dictionary [level][x][y] --> Boolean; shows what areas have been drawn.\n\t        loadingCoverage: {},   // A '3d' dictionary [level][x][y] --> Boolean; shows what areas are loaded or are being loaded/blended.\n\t        lastDrawn:      [],    // An unordered list of Tiles drawn last frame.\n\t        lastResetTime:  0,     // Last time for which the tiledImage was reset.\n\t        _midDraw:       false, // Is the tiledImage currently updating the viewport?\n\t        _needsDraw:     true,  // Does the tiledImage need to update the viewport again?\n\t        _hasOpaqueTile: false,  // Do we have even one fully opaque tile?\n\t        _tilesLoading:  0,     // The number of pending tile requests.\n\t        //configurable settings\n\t        springStiffness:        $.DEFAULT_SETTINGS.springStiffness,\n\t        animationTime:          $.DEFAULT_SETTINGS.animationTime,\n\t        minZoomImageRatio:      $.DEFAULT_SETTINGS.minZoomImageRatio,\n\t        wrapHorizontal:         $.DEFAULT_SETTINGS.wrapHorizontal,\n\t        wrapVertical:           $.DEFAULT_SETTINGS.wrapVertical,\n\t        immediateRender:        $.DEFAULT_SETTINGS.immediateRender,\n\t        blendTime:              $.DEFAULT_SETTINGS.blendTime,\n\t        alwaysBlend:            $.DEFAULT_SETTINGS.alwaysBlend,\n\t        minPixelRatio:          $.DEFAULT_SETTINGS.minPixelRatio,\n\t        smoothTileEdgesMinZoom: $.DEFAULT_SETTINGS.smoothTileEdgesMinZoom,\n\t        iOSDevice:              $.DEFAULT_SETTINGS.iOSDevice,\n\t        debugMode:              $.DEFAULT_SETTINGS.debugMode,\n\t        crossOriginPolicy:      $.DEFAULT_SETTINGS.crossOriginPolicy,\n\t        ajaxWithCredentials:    $.DEFAULT_SETTINGS.ajaxWithCredentials,\n\t        placeholderFillStyle:   $.DEFAULT_SETTINGS.placeholderFillStyle,\n\t        opacity:                $.DEFAULT_SETTINGS.opacity,\n\t        preload:                $.DEFAULT_SETTINGS.preload,\n\t        compositeOperation:     $.DEFAULT_SETTINGS.compositeOperation\n\t    }, options );\n\t\n\t    this._preload = this.preload;\n\t    delete this.preload;\n\t\n\t    this._fullyLoaded = false;\n\t\n\t    this._xSpring = new $.Spring({\n\t        initial: x,\n\t        springStiffness: this.springStiffness,\n\t        animationTime: this.animationTime\n\t    });\n\t\n\t    this._ySpring = new $.Spring({\n\t        initial: y,\n\t        springStiffness: this.springStiffness,\n\t        animationTime: this.animationTime\n\t    });\n\t\n\t    this._scaleSpring = new $.Spring({\n\t        initial: scale,\n\t        springStiffness: this.springStiffness,\n\t        animationTime: this.animationTime\n\t    });\n\t\n\t    this._degreesSpring = new $.Spring({\n\t        initial: degrees,\n\t        springStiffness: this.springStiffness,\n\t        animationTime: this.animationTime\n\t    });\n\t\n\t    this._updateForScale();\n\t\n\t    if (fitBounds) {\n\t        this.fitBounds(fitBounds, fitBoundsPlacement, true);\n\t    }\n\t\n\t    // We need a callback to give image manipulation a chance to happen\n\t    this._drawingHandler = function(args) {\n\t      /**\n\t       * This event is fired just before the tile is drawn giving the application a chance to alter the image.\n\t       *\n\t       * NOTE: This event is only fired when the drawer is using a &lt;canvas&gt;.\n\t       *\n\t       * @event tile-drawing\n\t       * @memberof OpenSeadragon.Viewer\n\t       * @type {object}\n\t       * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t       * @property {OpenSeadragon.Tile} tile - The Tile being drawn.\n\t       * @property {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n\t       * @property {OpenSeadragon.Tile} context - The HTML canvas context being drawn into.\n\t       * @property {OpenSeadragon.Tile} rendered - The HTML canvas context containing the tile imagery.\n\t       * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t       */\n\t        _this.viewer.raiseEvent('tile-drawing', $.extend({\n\t            tiledImage: _this\n\t        }, args));\n\t    };\n\t};\n\t\n\t$.extend($.TiledImage.prototype, $.EventSource.prototype, /** @lends OpenSeadragon.TiledImage.prototype */{\n\t    /**\n\t     * @returns {Boolean} Whether the TiledImage needs to be drawn.\n\t     */\n\t    needsDraw: function() {\n\t        return this._needsDraw;\n\t    },\n\t\n\t    /**\n\t     * @returns {Boolean} Whether all tiles necessary for this TiledImage to draw at the current view have been loaded.\n\t     */\n\t    getFullyLoaded: function() {\n\t        return this._fullyLoaded;\n\t    },\n\t\n\t    // private\n\t    _setFullyLoaded: function(flag) {\n\t        if (flag === this._fullyLoaded) {\n\t            return;\n\t        }\n\t\n\t        this._fullyLoaded = flag;\n\t\n\t        /**\n\t         * Fired when the TiledImage's \"fully loaded\" flag (whether all tiles necessary for this TiledImage\n\t         * to draw at the current view have been loaded) changes.\n\t         *\n\t         * @event fully-loaded-change\n\t         * @memberof OpenSeadragon.TiledImage\n\t         * @type {object}\n\t         * @property {Boolean} fullyLoaded - The new \"fully loaded\" value.\n\t         * @property {OpenSeadragon.TiledImage} eventSource - A reference to the TiledImage which raised the event.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent('fully-loaded-change', {\n\t            fullyLoaded: this._fullyLoaded\n\t        });\n\t    },\n\t\n\t    /**\n\t     * Clears all tiles and triggers an update on the next call to\n\t     * {@link OpenSeadragon.TiledImage#update}.\n\t     */\n\t    reset: function() {\n\t        this._tileCache.clearTilesFor(this);\n\t        this.lastResetTime = $.now();\n\t        this._needsDraw = true;\n\t    },\n\t\n\t    /**\n\t     * Updates the TiledImage's bounds, animating if needed.\n\t     * @returns {Boolean} Whether the TiledImage animated.\n\t     */\n\t    update: function() {\n\t        var xUpdated = this._xSpring.update();\n\t        var yUpdated = this._ySpring.update();\n\t        var scaleUpdated = this._scaleSpring.update();\n\t        var degreesUpdated = this._degreesSpring.update();\n\t\n\t        if (xUpdated || yUpdated || scaleUpdated || degreesUpdated) {\n\t            this._updateForScale();\n\t            this._needsDraw = true;\n\t            return true;\n\t        }\n\t\n\t        return false;\n\t    },\n\t\n\t    /**\n\t     * Draws the TiledImage to its Drawer.\n\t     */\n\t    draw: function() {\n\t        if (this.opacity !== 0 || this._preload) {\n\t            this._midDraw = true;\n\t            this._updateViewport();\n\t            this._midDraw = false;\n\t        }\n\t        // Images with opacity 0 should not need to be drawn in future. this._needsDraw = false is set in this._updateViewport() for other images.\n\t        else {\n\t            this._needsDraw = false;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Destroy the TiledImage (unload current loaded tiles).\n\t     */\n\t    destroy: function() {\n\t        this.reset();\n\t    },\n\t\n\t    /**\n\t     * Get this TiledImage's bounds in viewport coordinates.\n\t     * @param {Boolean} [current=false] - Pass true for the current location;\n\t     * false for target location.\n\t     * @returns {OpenSeadragon.Rect} This TiledImage's bounds in viewport coordinates.\n\t     */\n\t    getBounds: function(current) {\n\t        return this.getBoundsNoRotate(current)\n\t            .rotate(this.getRotation(current), this._getRotationPoint(current));\n\t    },\n\t\n\t    /**\n\t     * Get this TiledImage's bounds in viewport coordinates without taking\n\t     * rotation into account.\n\t     * @param {Boolean} [current=false] - Pass true for the current location;\n\t     * false for target location.\n\t     * @returns {OpenSeadragon.Rect} This TiledImage's bounds in viewport coordinates.\n\t     */\n\t    getBoundsNoRotate: function(current) {\n\t        return current ?\n\t            new $.Rect(\n\t                this._xSpring.current.value,\n\t                this._ySpring.current.value,\n\t                this._worldWidthCurrent,\n\t                this._worldHeightCurrent) :\n\t            new $.Rect(\n\t                this._xSpring.target.value,\n\t                this._ySpring.target.value,\n\t                this._worldWidthTarget,\n\t                this._worldHeightTarget);\n\t    },\n\t\n\t    // deprecated\n\t    getWorldBounds: function() {\n\t        $.console.error('[TiledImage.getWorldBounds] is deprecated; use TiledImage.getBounds instead');\n\t        return this.getBounds();\n\t    },\n\t\n\t    /**\n\t     * Get the bounds of the displayed part of the tiled image.\n\t     * @param {Boolean} [current=false] Pass true for the current location,\n\t     * false for the target location.\n\t     * @returns {$.Rect} The clipped bounds in viewport coordinates.\n\t     */\n\t    getClippedBounds: function(current) {\n\t        var bounds = this.getBoundsNoRotate(current);\n\t        if (this._clip) {\n\t            var worldWidth = current ?\n\t                this._worldWidthCurrent : this._worldWidthTarget;\n\t            var ratio = worldWidth / this.source.dimensions.x;\n\t            var clip = this._clip.times(ratio);\n\t            bounds = new $.Rect(\n\t                bounds.x + clip.x,\n\t                bounds.y + clip.y,\n\t                clip.width,\n\t                clip.height);\n\t        }\n\t        return bounds.rotate(this.getRotation(current), this._getRotationPoint(current));\n\t    },\n\t\n\t    /**\n\t     * @returns {OpenSeadragon.Point} This TiledImage's content size, in original pixels.\n\t     */\n\t    getContentSize: function() {\n\t        return new $.Point(this.source.dimensions.x, this.source.dimensions.y);\n\t    },\n\t\n\t    // private\n\t    _viewportToImageDelta: function( viewerX, viewerY, current ) {\n\t        var scale = (current ? this._scaleSpring.current.value : this._scaleSpring.target.value);\n\t        return new $.Point(viewerX * (this.source.dimensions.x / scale),\n\t            viewerY * ((this.source.dimensions.y * this.contentAspectX) / scale));\n\t    },\n\t\n\t    /**\n\t     * Translates from OpenSeadragon viewer coordinate system to image coordinate system.\n\t     * This method can be called either by passing X,Y coordinates or an {@link OpenSeadragon.Point}.\n\t     * @param {Number|OpenSeadragon.Point} viewerX - The X coordinate or point in viewport coordinate system.\n\t     * @param {Number} [viewerY] - The Y coordinate in viewport coordinate system.\n\t     * @param {Boolean} [current=false] - Pass true to use the current location; false for target location.\n\t     * @return {OpenSeadragon.Point} A point representing the coordinates in the image.\n\t     */\n\t    viewportToImageCoordinates: function(viewerX, viewerY, current) {\n\t        var point;\n\t        if (viewerX instanceof $.Point) {\n\t            //they passed a point instead of individual components\n\t            current = viewerY;\n\t            point = viewerX;\n\t        } else {\n\t            point = new $.Point(viewerX, viewerY);\n\t        }\n\t\n\t        point = point.rotate(-this.getRotation(current), this._getRotationPoint(current));\n\t        return current ?\n\t            this._viewportToImageDelta(\n\t                point.x - this._xSpring.current.value,\n\t                point.y - this._ySpring.current.value) :\n\t            this._viewportToImageDelta(\n\t                point.x - this._xSpring.target.value,\n\t                point.y - this._ySpring.target.value);\n\t    },\n\t\n\t    // private\n\t    _imageToViewportDelta: function( imageX, imageY, current ) {\n\t        var scale = (current ? this._scaleSpring.current.value : this._scaleSpring.target.value);\n\t        return new $.Point((imageX / this.source.dimensions.x) * scale,\n\t            (imageY / this.source.dimensions.y / this.contentAspectX) * scale);\n\t    },\n\t\n\t    /**\n\t     * Translates from image coordinate system to OpenSeadragon viewer coordinate system\n\t     * This method can be called either by passing X,Y coordinates or an {@link OpenSeadragon.Point}.\n\t     * @param {Number|OpenSeadragon.Point} imageX - The X coordinate or point in image coordinate system.\n\t     * @param {Number} [imageY] - The Y coordinate in image coordinate system.\n\t     * @param {Boolean} [current=false] - Pass true to use the current location; false for target location.\n\t     * @return {OpenSeadragon.Point} A point representing the coordinates in the viewport.\n\t     */\n\t    imageToViewportCoordinates: function(imageX, imageY, current) {\n\t        if (imageX instanceof $.Point) {\n\t            //they passed a point instead of individual components\n\t            current = imageY;\n\t            imageY = imageX.y;\n\t            imageX = imageX.x;\n\t        }\n\t\n\t        var point = this._imageToViewportDelta(imageX, imageY);\n\t        if (current) {\n\t            point.x += this._xSpring.current.value;\n\t            point.y += this._ySpring.current.value;\n\t        } else {\n\t            point.x += this._xSpring.target.value;\n\t            point.y += this._ySpring.target.value;\n\t        }\n\t\n\t        return point.rotate(this.getRotation(current), this._getRotationPoint(current));\n\t    },\n\t\n\t    /**\n\t     * Translates from a rectangle which describes a portion of the image in\n\t     * pixel coordinates to OpenSeadragon viewport rectangle coordinates.\n\t     * This method can be called either by passing X,Y,width,height or an {@link OpenSeadragon.Rect}.\n\t     * @param {Number|OpenSeadragon.Rect} imageX - The left coordinate or rectangle in image coordinate system.\n\t     * @param {Number} [imageY] - The top coordinate in image coordinate system.\n\t     * @param {Number} [pixelWidth] - The width in pixel of the rectangle.\n\t     * @param {Number} [pixelHeight] - The height in pixel of the rectangle.\n\t     * @param {Boolean} [current=false] - Pass true to use the current location; false for target location.\n\t     * @return {OpenSeadragon.Rect} A rect representing the coordinates in the viewport.\n\t     */\n\t    imageToViewportRectangle: function(imageX, imageY, pixelWidth, pixelHeight, current) {\n\t        var rect = imageX;\n\t        if (rect instanceof $.Rect) {\n\t            //they passed a rect instead of individual components\n\t            current = imageY;\n\t        } else {\n\t            rect = new $.Rect(imageX, imageY, pixelWidth, pixelHeight);\n\t        }\n\t\n\t        var coordA = this.imageToViewportCoordinates(rect.getTopLeft(), current);\n\t        var coordB = this._imageToViewportDelta(rect.width, rect.height, current);\n\t\n\t        return new $.Rect(\n\t            coordA.x,\n\t            coordA.y,\n\t            coordB.x,\n\t            coordB.y,\n\t            rect.degrees + this.getRotation(current)\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Translates from a rectangle which describes a portion of\n\t     * the viewport in point coordinates to image rectangle coordinates.\n\t     * This method can be called either by passing X,Y,width,height or an {@link OpenSeadragon.Rect}.\n\t     * @param {Number|OpenSeadragon.Rect} viewerX - The left coordinate or rectangle in viewport coordinate system.\n\t     * @param {Number} [viewerY] - The top coordinate in viewport coordinate system.\n\t     * @param {Number} [pointWidth] - The width in viewport coordinate system.\n\t     * @param {Number} [pointHeight] - The height in viewport coordinate system.\n\t     * @param {Boolean} [current=false] - Pass true to use the current location; false for target location.\n\t     * @return {OpenSeadragon.Rect} A rect representing the coordinates in the image.\n\t     */\n\t    viewportToImageRectangle: function( viewerX, viewerY, pointWidth, pointHeight, current ) {\n\t        var rect = viewerX;\n\t        if (viewerX instanceof $.Rect) {\n\t            //they passed a rect instead of individual components\n\t            current = viewerY;\n\t        } else {\n\t            rect = new $.Rect(viewerX, viewerY, pointWidth, pointHeight);\n\t        }\n\t\n\t        var coordA = this.viewportToImageCoordinates(rect.getTopLeft(), current);\n\t        var coordB = this._viewportToImageDelta(rect.width, rect.height, current);\n\t\n\t        return new $.Rect(\n\t            coordA.x,\n\t            coordA.y,\n\t            coordB.x,\n\t            coordB.y,\n\t            rect.degrees - this.getRotation(current)\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Convert pixel coordinates relative to the viewer element to image\n\t     * coordinates.\n\t     * @param {OpenSeadragon.Point} pixel\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    viewerElementToImageCoordinates: function( pixel ) {\n\t        var point = this.viewport.pointFromPixel( pixel, true );\n\t        return this.viewportToImageCoordinates( point );\n\t    },\n\t\n\t    /**\n\t     * Convert pixel coordinates relative to the image to\n\t     * viewer element coordinates.\n\t     * @param {OpenSeadragon.Point} pixel\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    imageToViewerElementCoordinates: function( pixel ) {\n\t        var point = this.imageToViewportCoordinates( pixel );\n\t        return this.viewport.pixelFromPoint( point, true );\n\t    },\n\t\n\t    /**\n\t     * Convert pixel coordinates relative to the window to image coordinates.\n\t     * @param {OpenSeadragon.Point} pixel\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    windowToImageCoordinates: function( pixel ) {\n\t        var viewerCoordinates = pixel.minus(\n\t                OpenSeadragon.getElementPosition( this.viewer.element ));\n\t        return this.viewerElementToImageCoordinates( viewerCoordinates );\n\t    },\n\t\n\t    /**\n\t     * Convert image coordinates to pixel coordinates relative to the window.\n\t     * @param {OpenSeadragon.Point} pixel\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    imageToWindowCoordinates: function( pixel ) {\n\t        var viewerCoordinates = this.imageToViewerElementCoordinates( pixel );\n\t        return viewerCoordinates.plus(\n\t                OpenSeadragon.getElementPosition( this.viewer.element ));\n\t    },\n\t\n\t    // private\n\t    // Convert rectangle in viewport coordinates to this tiled image point\n\t    // coordinates (x in [0, 1] and y in [0, aspectRatio])\n\t    _viewportToTiledImageRectangle: function(rect) {\n\t        var scale = this._scaleSpring.current.value;\n\t        rect = rect.rotate(-this.getRotation(true), this._getRotationPoint(true));\n\t        return new $.Rect(\n\t            (rect.x - this._xSpring.current.value) / scale,\n\t            (rect.y - this._ySpring.current.value) / scale,\n\t            rect.width / scale,\n\t            rect.height / scale,\n\t            rect.degrees);\n\t    },\n\t\n\t    /**\n\t     * Convert a viewport zoom to an image zoom.\n\t     * Image zoom: ratio of the original image size to displayed image size.\n\t     * 1 means original image size, 0.5 half size...\n\t     * Viewport zoom: ratio of the displayed image's width to viewport's width.\n\t     * 1 means identical width, 2 means image's width is twice the viewport's width...\n\t     * @function\n\t     * @param {Number} viewportZoom The viewport zoom\n\t     * @returns {Number} imageZoom The image zoom\n\t     */\n\t    viewportToImageZoom: function( viewportZoom ) {\n\t        var ratio = this._scaleSpring.current.value *\n\t                this.viewport._containerInnerSize.x / this.source.dimensions.x;\n\t        return ratio * viewportZoom;\n\t    },\n\t\n\t    /**\n\t     * Convert an image zoom to a viewport zoom.\n\t     * Image zoom: ratio of the original image size to displayed image size.\n\t     * 1 means original image size, 0.5 half size...\n\t     * Viewport zoom: ratio of the displayed image's width to viewport's width.\n\t     * 1 means identical width, 2 means image's width is twice the viewport's width...\n\t     * Note: not accurate with multi-image.\n\t     * @function\n\t     * @param {Number} imageZoom The image zoom\n\t     * @returns {Number} viewportZoom The viewport zoom\n\t     */\n\t    imageToViewportZoom: function( imageZoom ) {\n\t        var ratio = this._scaleSpring.current.value *\n\t                this.viewport._containerInnerSize.x / this.source.dimensions.x;\n\t        return imageZoom / ratio;\n\t    },\n\t\n\t    /**\n\t     * Sets the TiledImage's position in the world.\n\t     * @param {OpenSeadragon.Point} position - The new position, in viewport coordinates.\n\t     * @param {Boolean} [immediately=false] - Whether to animate to the new position or snap immediately.\n\t     * @fires OpenSeadragon.TiledImage.event:bounds-change\n\t     */\n\t    setPosition: function(position, immediately) {\n\t        var sameTarget = (this._xSpring.target.value === position.x &&\n\t            this._ySpring.target.value === position.y);\n\t\n\t        if (immediately) {\n\t            if (sameTarget && this._xSpring.current.value === position.x &&\n\t                    this._ySpring.current.value === position.y) {\n\t                return;\n\t            }\n\t\n\t            this._xSpring.resetTo(position.x);\n\t            this._ySpring.resetTo(position.y);\n\t            this._needsDraw = true;\n\t        } else {\n\t            if (sameTarget) {\n\t                return;\n\t            }\n\t\n\t            this._xSpring.springTo(position.x);\n\t            this._ySpring.springTo(position.y);\n\t            this._needsDraw = true;\n\t        }\n\t\n\t        if (!sameTarget) {\n\t            this._raiseBoundsChange();\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Sets the TiledImage's width in the world, adjusting the height to match based on aspect ratio.\n\t     * @param {Number} width - The new width, in viewport coordinates.\n\t     * @param {Boolean} [immediately=false] - Whether to animate to the new size or snap immediately.\n\t     * @fires OpenSeadragon.TiledImage.event:bounds-change\n\t     */\n\t    setWidth: function(width, immediately) {\n\t        this._setScale(width, immediately);\n\t    },\n\t\n\t    /**\n\t     * Sets the TiledImage's height in the world, adjusting the width to match based on aspect ratio.\n\t     * @param {Number} height - The new height, in viewport coordinates.\n\t     * @param {Boolean} [immediately=false] - Whether to animate to the new size or snap immediately.\n\t     * @fires OpenSeadragon.TiledImage.event:bounds-change\n\t     */\n\t    setHeight: function(height, immediately) {\n\t        this._setScale(height / this.normHeight, immediately);\n\t    },\n\t\n\t    /**\n\t     * Positions and scales the TiledImage to fit in the specified bounds.\n\t     * Note: this method fires OpenSeadragon.TiledImage.event:bounds-change\n\t     * twice\n\t     * @param {OpenSeadragon.Rect} bounds The bounds to fit the image into.\n\t     * @param {OpenSeadragon.Placement} [anchor=OpenSeadragon.Placement.CENTER]\n\t     * How to anchor the image in the bounds.\n\t     * @param {Boolean} [immediately=false] Whether to animate to the new size\n\t     * or snap immediately.\n\t     * @fires OpenSeadragon.TiledImage.event:bounds-change\n\t     */\n\t    fitBounds: function(bounds, anchor, immediately) {\n\t        anchor = anchor || $.Placement.CENTER;\n\t        var anchorProperties = $.Placement.properties[anchor];\n\t        var aspectRatio = this.contentAspectX;\n\t        var xOffset = 0;\n\t        var yOffset = 0;\n\t        var displayedWidthRatio = 1;\n\t        var displayedHeightRatio = 1;\n\t        if (this._clip) {\n\t            aspectRatio = this._clip.getAspectRatio();\n\t            displayedWidthRatio = this._clip.width / this.source.dimensions.x;\n\t            displayedHeightRatio = this._clip.height / this.source.dimensions.y;\n\t            if (bounds.getAspectRatio() > aspectRatio) {\n\t                xOffset = this._clip.x / this._clip.height * bounds.height;\n\t                yOffset = this._clip.y / this._clip.height * bounds.height;\n\t            } else {\n\t                xOffset = this._clip.x / this._clip.width * bounds.width;\n\t                yOffset = this._clip.y / this._clip.width * bounds.width;\n\t            }\n\t        }\n\t\n\t        if (bounds.getAspectRatio() > aspectRatio) {\n\t            // We will have margins on the X axis\n\t            var height = bounds.height / displayedHeightRatio;\n\t            var marginLeft = 0;\n\t            if (anchorProperties.isHorizontallyCentered) {\n\t                marginLeft = (bounds.width - bounds.height * aspectRatio) / 2;\n\t            } else if (anchorProperties.isRight) {\n\t                marginLeft = bounds.width - bounds.height * aspectRatio;\n\t            }\n\t            this.setPosition(\n\t                new $.Point(bounds.x - xOffset + marginLeft, bounds.y - yOffset),\n\t                immediately);\n\t            this.setHeight(height, immediately);\n\t        } else {\n\t            // We will have margins on the Y axis\n\t            var width = bounds.width / displayedWidthRatio;\n\t            var marginTop = 0;\n\t            if (anchorProperties.isVerticallyCentered) {\n\t                marginTop = (bounds.height - bounds.width / aspectRatio) / 2;\n\t            } else if (anchorProperties.isBottom) {\n\t                marginTop = bounds.height - bounds.width / aspectRatio;\n\t            }\n\t            this.setPosition(\n\t                new $.Point(bounds.x - xOffset, bounds.y - yOffset + marginTop),\n\t                immediately);\n\t            this.setWidth(width, immediately);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * @returns {OpenSeadragon.Rect|null} The TiledImage's current clip rectangle,\n\t     * in image pixels, or null if none.\n\t     */\n\t    getClip: function() {\n\t        if (this._clip) {\n\t            return this._clip.clone();\n\t        }\n\t\n\t        return null;\n\t    },\n\t\n\t    /**\n\t     * @param {OpenSeadragon.Rect|null} newClip - An area, in image pixels, to clip to\n\t     * (portions of the image outside of this area will not be visible). Only works on\n\t     * browsers that support the HTML5 canvas.\n\t     * @fires OpenSeadragon.TiledImage.event:clip-change\n\t     */\n\t    setClip: function(newClip) {\n\t        $.console.assert(!newClip || newClip instanceof $.Rect,\n\t            \"[TiledImage.setClip] newClip must be an OpenSeadragon.Rect or null\");\n\t\n\t        if (newClip instanceof $.Rect) {\n\t            this._clip = newClip.clone();\n\t        } else {\n\t            this._clip = null;\n\t        }\n\t\n\t        this._needsDraw = true;\n\t        /**\n\t         * Raised when the TiledImage's clip is changed.\n\t         * @event clip-change\n\t         * @memberOf OpenSeadragon.TiledImage\n\t         * @type {object}\n\t         * @property {OpenSeadragon.TiledImage} eventSource - A reference to the\n\t         * TiledImage which raised the event.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent('clip-change');\n\t    },\n\t\n\t    /**\n\t     * @returns {Number} The TiledImage's current opacity.\n\t     */\n\t    getOpacity: function() {\n\t        return this.opacity;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} opacity Opacity the tiled image should be drawn at.\n\t     * @fires OpenSeadragon.TiledImage.event:opacity-change\n\t     */\n\t    setOpacity: function(opacity) {\n\t        if (opacity === this.opacity) {\n\t            return;\n\t        }\n\t\n\t        this.opacity = opacity;\n\t        this._needsDraw = true;\n\t        /**\n\t         * Raised when the TiledImage's opacity is changed.\n\t         * @event opacity-change\n\t         * @memberOf OpenSeadragon.TiledImage\n\t         * @type {object}\n\t         * @property {Number} opacity - The new opacity value.\n\t         * @property {OpenSeadragon.TiledImage} eventSource - A reference to the\n\t         * TiledImage which raised the event.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent('opacity-change', {\n\t            opacity: this.opacity\n\t        });\n\t    },\n\t\n\t    /**\n\t     * @returns {Boolean} whether the tiledImage can load its tiles even when it has zero opacity.\n\t     */\n\t    getPreload: function() {\n\t        return this._preload;\n\t    },\n\t\n\t    /**\n\t     * Set true to load even when hidden. Set false to block loading when hidden.\n\t     */\n\t    setPreload: function(preload) {\n\t        this._preload = !!preload;\n\t        this._needsDraw = true;\n\t    },\n\t\n\t    /**\n\t     * Get the rotation of this tiled image in degrees.\n\t     * @param {Boolean} [current=false] True for current rotation, false for target.\n\t     * @returns {Number} the rotation of this tiled image in degrees.\n\t     */\n\t    getRotation: function(current) {\n\t        return current ?\n\t            this._degreesSpring.current.value :\n\t            this._degreesSpring.target.value;\n\t    },\n\t\n\t    /**\n\t     * Set the current rotation of this tiled image in degrees.\n\t     * @param {Number} degrees the rotation in degrees.\n\t     * @param {Boolean} [immediately=false] Whether to animate to the new angle\n\t     * or rotate immediately.\n\t     * @fires OpenSeadragon.TiledImage.event:bounds-change\n\t     */\n\t    setRotation: function(degrees, immediately) {\n\t        if (this._degreesSpring.target.value === degrees &&\n\t            this._degreesSpring.isAtTargetValue()) {\n\t            return;\n\t        }\n\t        if (immediately) {\n\t            this._degreesSpring.resetTo(degrees);\n\t        } else {\n\t            this._degreesSpring.springTo(degrees);\n\t        }\n\t        this._needsDraw = true;\n\t        this._raiseBoundsChange();\n\t    },\n\t\n\t    /**\n\t     * Get the point around which this tiled image is rotated\n\t     * @private\n\t     * @param {Boolean} current True for current rotation point, false for target.\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    _getRotationPoint: function(current) {\n\t        return this.getBoundsNoRotate(current).getCenter();\n\t    },\n\t\n\t    /**\n\t     * @returns {String} The TiledImage's current compositeOperation.\n\t     */\n\t    getCompositeOperation: function() {\n\t        return this.compositeOperation;\n\t    },\n\t\n\t    /**\n\t     * @param {String} compositeOperation the tiled image should be drawn with this globalCompositeOperation.\n\t     * @fires OpenSeadragon.TiledImage.event:composite-operation-change\n\t     */\n\t    setCompositeOperation: function(compositeOperation) {\n\t        if (compositeOperation === this.compositeOperation) {\n\t            return;\n\t        }\n\t\n\t        this.compositeOperation = compositeOperation;\n\t        this._needsDraw = true;\n\t        /**\n\t         * Raised when the TiledImage's opacity is changed.\n\t         * @event composite-operation-change\n\t         * @memberOf OpenSeadragon.TiledImage\n\t         * @type {object}\n\t         * @property {String} compositeOperation - The new compositeOperation value.\n\t         * @property {OpenSeadragon.TiledImage} eventSource - A reference to the\n\t         * TiledImage which raised the event.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent('composite-operation-change', {\n\t            compositeOperation: this.compositeOperation\n\t        });\n\t    },\n\t\n\t    // private\n\t    _setScale: function(scale, immediately) {\n\t        var sameTarget = (this._scaleSpring.target.value === scale);\n\t        if (immediately) {\n\t            if (sameTarget && this._scaleSpring.current.value === scale) {\n\t                return;\n\t            }\n\t\n\t            this._scaleSpring.resetTo(scale);\n\t            this._updateForScale();\n\t            this._needsDraw = true;\n\t        } else {\n\t            if (sameTarget) {\n\t                return;\n\t            }\n\t\n\t            this._scaleSpring.springTo(scale);\n\t            this._updateForScale();\n\t            this._needsDraw = true;\n\t        }\n\t\n\t        if (!sameTarget) {\n\t            this._raiseBoundsChange();\n\t        }\n\t    },\n\t\n\t    // private\n\t    _updateForScale: function() {\n\t        this._worldWidthTarget = this._scaleSpring.target.value;\n\t        this._worldHeightTarget = this.normHeight * this._scaleSpring.target.value;\n\t        this._worldWidthCurrent = this._scaleSpring.current.value;\n\t        this._worldHeightCurrent = this.normHeight * this._scaleSpring.current.value;\n\t    },\n\t\n\t    // private\n\t    _raiseBoundsChange: function() {\n\t        /**\n\t         * Raised when the TiledImage's bounds are changed.\n\t         * Note that this event is triggered only when the animation target is changed;\n\t         * not for every frame of animation.\n\t         * @event bounds-change\n\t         * @memberOf OpenSeadragon.TiledImage\n\t         * @type {object}\n\t         * @property {OpenSeadragon.TiledImage} eventSource - A reference to the\n\t         * TiledImage which raised the event.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent('bounds-change');\n\t    },\n\t\n\t    // private\n\t    _isBottomItem: function() {\n\t        return this.viewer.world.getItemAt(0) === this;\n\t    },\n\t\n\t    // private\n\t    _getLevelsInterval: function() {\n\t        var lowestLevel = Math.max(\n\t            this.source.minLevel,\n\t            Math.floor(Math.log(this.minZoomImageRatio) / Math.log(2))\n\t        );\n\t        var currentZeroRatio = this.viewport.deltaPixelsFromPointsNoRotate(\n\t            this.source.getPixelRatio(0), true).x *\n\t            this._scaleSpring.current.value;\n\t        var highestLevel = Math.min(\n\t            Math.abs(this.source.maxLevel),\n\t            Math.abs(Math.floor(\n\t                Math.log(currentZeroRatio / this.minPixelRatio) / Math.log(2)\n\t            ))\n\t        );\n\t\n\t        // Calculations for the interval of levels to draw\n\t        // can return invalid intervals; fix that here if necessary\n\t        highestLevel = Math.max(highestLevel, this.source.minLevel || 0);\n\t        lowestLevel = Math.min(lowestLevel, highestLevel);\n\t        return {\n\t            lowestLevel: lowestLevel,\n\t            highestLevel: highestLevel\n\t        };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     * Pretty much every other line in this needs to be documented so it's clear\n\t     * how each piece of this routine contributes to the drawing process.  That's\n\t     * why there are so many TODO's inside this function.\n\t     */\n\t    _updateViewport: function() {\n\t        this._needsDraw = false;\n\t        this._tilesLoading = 0;\n\t        this.loadingCoverage = {};\n\t\n\t        // Reset tile's internal drawn state\n\t        while (this.lastDrawn.length > 0) {\n\t            var tile = this.lastDrawn.pop();\n\t            tile.beingDrawn = false;\n\t        }\n\t\n\t        var viewport = this.viewport;\n\t        var drawArea = this._viewportToTiledImageRectangle(\n\t            viewport.getBoundsWithMargins(true));\n\t\n\t        if (!this.wrapHorizontal && !this.wrapVertical) {\n\t            var tiledImageBounds = this._viewportToTiledImageRectangle(\n\t                this.getClippedBounds(true));\n\t            drawArea = drawArea.intersection(tiledImageBounds);\n\t            if (drawArea === null) {\n\t                return;\n\t            }\n\t        }\n\t\n\t        var levelsInterval = this._getLevelsInterval();\n\t        var lowestLevel = levelsInterval.lowestLevel;\n\t        var highestLevel = levelsInterval.highestLevel;\n\t        var bestTile = null;\n\t        var haveDrawn = false;\n\t        var currentTime = $.now();\n\t\n\t        // Update any level that will be drawn\n\t        for (var level = highestLevel; level >= lowestLevel; level--) {\n\t            var drawLevel = false;\n\t\n\t            //Avoid calculations for draw if we have already drawn this\n\t            var currentRenderPixelRatio = viewport.deltaPixelsFromPointsNoRotate(\n\t                this.source.getPixelRatio(level),\n\t                true\n\t            ).x * this._scaleSpring.current.value;\n\t\n\t            if (level === lowestLevel ||\n\t                (!haveDrawn && currentRenderPixelRatio >= this.minPixelRatio)) {\n\t                drawLevel = true;\n\t                haveDrawn = true;\n\t            } else if (!haveDrawn) {\n\t                continue;\n\t            }\n\t\n\t            //Perform calculations for draw if we haven't drawn this\n\t            var targetRenderPixelRatio = viewport.deltaPixelsFromPointsNoRotate(\n\t                this.source.getPixelRatio(level),\n\t                false\n\t            ).x * this._scaleSpring.current.value;\n\t\n\t            var targetZeroRatio = viewport.deltaPixelsFromPointsNoRotate(\n\t                this.source.getPixelRatio(\n\t                    Math.max(\n\t                        this.source.getClosestLevel(),\n\t                        0\n\t                    )\n\t                ),\n\t                false\n\t            ).x * this._scaleSpring.current.value;\n\t\n\t            var optimalRatio = this.immediateRender ? 1 : targetZeroRatio;\n\t            var levelOpacity = Math.min(1, (currentRenderPixelRatio - 0.5) / 0.5);\n\t            var levelVisibility = optimalRatio / Math.abs(\n\t                optimalRatio - targetRenderPixelRatio\n\t            );\n\t\n\t            // Update the level and keep track of 'best' tile to load\n\t            bestTile = updateLevel(\n\t                this,\n\t                haveDrawn,\n\t                drawLevel,\n\t                level,\n\t                levelOpacity,\n\t                levelVisibility,\n\t                drawArea,\n\t                currentTime,\n\t                bestTile\n\t            );\n\t\n\t            // Stop the loop if lower-res tiles would all be covered by\n\t            // already drawn tiles\n\t            if (providesCoverage(this.coverage, level)) {\n\t                break;\n\t            }\n\t        }\n\t\n\t        // Perform the actual drawing\n\t        drawTiles(this, this.lastDrawn);\n\t\n\t        // Load the new 'best' tile\n\t        if (bestTile && !bestTile.context2D) {\n\t            loadTile(this, bestTile, currentTime);\n\t            this._needsDraw = true;\n\t            this._setFullyLoaded(false);\n\t        } else {\n\t            this._setFullyLoaded(this._tilesLoading === 0);\n\t        }\n\t    },\n\t\n\t    // private\n\t    _getCornerTiles: function(level, topLeftBound, bottomRightBound) {\n\t        var leftX;\n\t        var rightX;\n\t        if (this.wrapHorizontal) {\n\t            leftX = $.positiveModulo(topLeftBound.x, 1);\n\t            rightX = $.positiveModulo(bottomRightBound.x, 1);\n\t        } else {\n\t            leftX = Math.max(0, topLeftBound.x);\n\t            rightX = Math.min(1, bottomRightBound.x);\n\t        }\n\t        var topY;\n\t        var bottomY;\n\t        var aspectRatio = 1 / this.source.aspectRatio;\n\t        if (this.wrapVertical) {\n\t            topY = $.positiveModulo(topLeftBound.y, aspectRatio);\n\t            bottomY = $.positiveModulo(bottomRightBound.y, aspectRatio);\n\t        } else {\n\t            topY = Math.max(0, topLeftBound.y);\n\t            bottomY = Math.min(aspectRatio, bottomRightBound.y);\n\t        }\n\t\n\t        var topLeftTile = this.source.getTileAtPoint(level, new $.Point(leftX, topY));\n\t        var bottomRightTile = this.source.getTileAtPoint(level, new $.Point(rightX, bottomY));\n\t        var numTiles  = this.source.getNumTiles(level);\n\t\n\t        if (this.wrapHorizontal) {\n\t            topLeftTile.x += numTiles.x * Math.floor(topLeftBound.x);\n\t            bottomRightTile.x += numTiles.x * Math.floor(bottomRightBound.x);\n\t        }\n\t        if (this.wrapVertical) {\n\t            topLeftTile.y += numTiles.y * Math.floor(topLeftBound.y / aspectRatio);\n\t            bottomRightTile.y += numTiles.y * Math.floor(bottomRightBound.y / aspectRatio);\n\t        }\n\t\n\t        return {\n\t            topLeft: topLeftTile,\n\t            bottomRight: bottomRightTile,\n\t        };\n\t    }\n\t});\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Updates all tiles at a given resolution level.\n\t * @param {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n\t * @param {Boolean} haveDrawn\n\t * @param {Boolean} drawLevel\n\t * @param {Number} level\n\t * @param {Number} levelOpacity\n\t * @param {Number} levelVisibility\n\t * @param {OpenSeadragon.Point} viewportTL - The index of the most top-left visible tile.\n\t * @param {OpenSeadragon.Point} viewportBR - The index of the most bottom-right visible tile.\n\t * @param {Number} currentTime\n\t * @param {OpenSeadragon.Tile} best - The current \"best\" tile to draw.\n\t */\n\tfunction updateLevel(tiledImage, haveDrawn, drawLevel, level, levelOpacity,\n\t    levelVisibility, drawArea, currentTime, best) {\n\t\n\t    var topLeftBound = drawArea.getBoundingBox().getTopLeft();\n\t    var bottomRightBound = drawArea.getBoundingBox().getBottomRight();\n\t\n\t    if (tiledImage.viewer) {\n\t        /**\n\t         * <em>- Needs documentation -</em>\n\t         *\n\t         * @event update-level\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n\t         * @property {Object} havedrawn\n\t         * @property {Object} level\n\t         * @property {Object} opacity\n\t         * @property {Object} visibility\n\t         * @property {OpenSeadragon.Rect} drawArea\n\t         * @property {Object} topleft deprecated, use drawArea instead\n\t         * @property {Object} bottomright deprecated, use drawArea instead\n\t         * @property {Object} currenttime\n\t         * @property {Object} best\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        tiledImage.viewer.raiseEvent('update-level', {\n\t            tiledImage: tiledImage,\n\t            havedrawn: haveDrawn,\n\t            level: level,\n\t            opacity: levelOpacity,\n\t            visibility: levelVisibility,\n\t            drawArea: drawArea,\n\t            topleft: topLeftBound,\n\t            bottomright: bottomRightBound,\n\t            currenttime: currentTime,\n\t            best: best\n\t        });\n\t    }\n\t\n\t    resetCoverage(tiledImage.coverage, level);\n\t    resetCoverage(tiledImage.loadingCoverage, level);\n\t\n\t    //OK, a new drawing so do your calculations\n\t    var cornerTiles = tiledImage._getCornerTiles(level, topLeftBound, bottomRightBound);\n\t    var topLeftTile = cornerTiles.topLeft;\n\t    var bottomRightTile = cornerTiles.bottomRight;\n\t    var numberOfTiles  = tiledImage.source.getNumTiles(level);\n\t\n\t    var viewportCenter = tiledImage.viewport.pixelFromPoint(\n\t        tiledImage.viewport.getCenter());\n\t    for (var x = topLeftTile.x; x <= bottomRightTile.x; x++) {\n\t        for (var y = topLeftTile.y; y <= bottomRightTile.y; y++) {\n\t\n\t            // Optimisation disabled with wrapping because getTileBounds does not\n\t            // work correctly with x and y outside of the number of tiles\n\t            if (!tiledImage.wrapHorizontal && !tiledImage.wrapVertical) {\n\t                var tileBounds = tiledImage.source.getTileBounds(level, x, y);\n\t                if (drawArea.intersection(tileBounds) === null) {\n\t                    // This tile is outside of the viewport, no need to draw it\n\t                    continue;\n\t                }\n\t            }\n\t\n\t            best = updateTile(\n\t                tiledImage,\n\t                drawLevel,\n\t                haveDrawn,\n\t                x, y,\n\t                level,\n\t                levelOpacity,\n\t                levelVisibility,\n\t                viewportCenter,\n\t                numberOfTiles,\n\t                currentTime,\n\t                best\n\t            );\n\t\n\t        }\n\t    }\n\t\n\t    return best;\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Update a single tile at a particular resolution level.\n\t * @param {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n\t * @param {Boolean} haveDrawn\n\t * @param {Boolean} drawLevel\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} level\n\t * @param {Number} levelOpacity\n\t * @param {Number} levelVisibility\n\t * @param {OpenSeadragon.Point} viewportCenter\n\t * @param {Number} numberOfTiles\n\t * @param {Number} currentTime\n\t * @param {OpenSeadragon.Tile} best - The current \"best\" tile to draw.\n\t */\n\tfunction updateTile( tiledImage, haveDrawn, drawLevel, x, y, level, levelOpacity, levelVisibility, viewportCenter, numberOfTiles, currentTime, best){\n\t\n\t    var tile = getTile(\n\t            x, y,\n\t            level,\n\t            tiledImage,\n\t            tiledImage.source,\n\t            tiledImage.tilesMatrix,\n\t            currentTime,\n\t            numberOfTiles,\n\t            tiledImage._worldWidthCurrent,\n\t            tiledImage._worldHeightCurrent\n\t        ),\n\t        drawTile = drawLevel;\n\t\n\t    if( tiledImage.viewer ){\n\t        /**\n\t         * <em>- Needs documentation -</em>\n\t         *\n\t         * @event update-tile\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n\t         * @property {OpenSeadragon.Tile} tile\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        tiledImage.viewer.raiseEvent( 'update-tile', {\n\t            tiledImage: tiledImage,\n\t            tile: tile\n\t        });\n\t    }\n\t\n\t    setCoverage( tiledImage.coverage, level, x, y, false );\n\t\n\t    var loadingCoverage = tile.loaded || tile.loading || isCovered(tiledImage.loadingCoverage, level, x, y);\n\t    setCoverage(tiledImage.loadingCoverage, level, x, y, loadingCoverage);\n\t\n\t    if ( !tile.exists ) {\n\t        return best;\n\t    }\n\t\n\t    if ( haveDrawn && !drawTile ) {\n\t        if ( isCovered( tiledImage.coverage, level, x, y ) ) {\n\t            setCoverage( tiledImage.coverage, level, x, y, true );\n\t        } else {\n\t            drawTile = true;\n\t        }\n\t    }\n\t\n\t    if ( !drawTile ) {\n\t        return best;\n\t    }\n\t\n\t    positionTile(\n\t        tile,\n\t        tiledImage.source.tileOverlap,\n\t        tiledImage.viewport,\n\t        viewportCenter,\n\t        levelVisibility,\n\t        tiledImage\n\t    );\n\t\n\t    if (!tile.loaded) {\n\t        if (tile.context2D) {\n\t            setTileLoaded(tiledImage, tile);\n\t        } else {\n\t            var imageRecord = tiledImage._tileCache.getImageRecord(tile.cacheKey);\n\t            if (imageRecord) {\n\t                var image = imageRecord.getImage();\n\t                setTileLoaded(tiledImage, tile, image);\n\t            }\n\t        }\n\t    }\n\t\n\t    if ( tile.loaded ) {\n\t        var needsDraw = blendTile(\n\t            tiledImage,\n\t            tile,\n\t            x, y,\n\t            level,\n\t            levelOpacity,\n\t            currentTime\n\t        );\n\t\n\t        if ( needsDraw ) {\n\t            tiledImage._needsDraw = true;\n\t        }\n\t    } else if ( tile.loading ) {\n\t        // the tile is already in the download queue\n\t        tiledImage._tilesLoading++;\n\t    } else if (!loadingCoverage) {\n\t        best = compareTiles( best, tile );\n\t    }\n\t\n\t    return best;\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Obtains a tile at the given location.\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} level\n\t * @param {OpenSeadragon.TiledImage} tiledImage\n\t * @param {OpenSeadragon.TileSource} tileSource\n\t * @param {Object} tilesMatrix - A '3d' dictionary [level][x][y] --> Tile.\n\t * @param {Number} time\n\t * @param {Number} numTiles\n\t * @param {Number} worldWidth\n\t * @param {Number} worldHeight\n\t * @returns {OpenSeadragon.Tile}\n\t */\n\tfunction getTile(\n\t    x, y,\n\t    level,\n\t    tiledImage,\n\t    tileSource,\n\t    tilesMatrix,\n\t    time,\n\t    numTiles,\n\t    worldWidth,\n\t    worldHeight\n\t) {\n\t    var xMod,\n\t        yMod,\n\t        bounds,\n\t        sourceBounds,\n\t        exists,\n\t        url,\n\t        ajaxHeaders,\n\t        context2D,\n\t        tile;\n\t\n\t    if ( !tilesMatrix[ level ] ) {\n\t        tilesMatrix[ level ] = {};\n\t    }\n\t    if ( !tilesMatrix[ level ][ x ] ) {\n\t        tilesMatrix[ level ][ x ] = {};\n\t    }\n\t\n\t    if ( !tilesMatrix[ level ][ x ][ y ] ) {\n\t        xMod    = ( numTiles.x + ( x % numTiles.x ) ) % numTiles.x;\n\t        yMod    = ( numTiles.y + ( y % numTiles.y ) ) % numTiles.y;\n\t        bounds  = tileSource.getTileBounds( level, xMod, yMod );\n\t        sourceBounds = tileSource.getTileBounds( level, xMod, yMod, true );\n\t        exists  = tileSource.tileExists( level, xMod, yMod );\n\t        url     = tileSource.getTileUrl( level, xMod, yMod );\n\t\n\t        // Headers are only applicable if loadTilesWithAjax is set\n\t        if (tiledImage.loadTilesWithAjax) {\n\t            ajaxHeaders = tileSource.getTileAjaxHeaders( level, xMod, yMod );\n\t            // Combine tile AJAX headers with tiled image AJAX headers (if applicable)\n\t            if ($.isPlainObject(tiledImage.ajaxHeaders)) {\n\t                ajaxHeaders = $.extend({}, tiledImage.ajaxHeaders, ajaxHeaders);\n\t            }\n\t        } else {\n\t            ajaxHeaders = null;\n\t        }\n\t\n\t        context2D = tileSource.getContext2D ?\n\t            tileSource.getContext2D(level, xMod, yMod) : undefined;\n\t\n\t        bounds.x += ( x - xMod ) / numTiles.x;\n\t        bounds.y += (worldHeight / worldWidth) * (( y - yMod ) / numTiles.y);\n\t\n\t        tile = new $.Tile(\n\t            level,\n\t            x,\n\t            y,\n\t            bounds,\n\t            exists,\n\t            url,\n\t            context2D,\n\t            tiledImage.loadTilesWithAjax,\n\t            ajaxHeaders,\n\t            sourceBounds\n\t        );\n\t\n\t        if (xMod === numTiles.x - 1) {\n\t            tile.isRightMost = true;\n\t        }\n\t\n\t        if (yMod === numTiles.y - 1) {\n\t            tile.isBottomMost = true;\n\t        }\n\t\n\t        tilesMatrix[ level ][ x ][ y ] = tile;\n\t    }\n\t\n\t    tile = tilesMatrix[ level ][ x ][ y ];\n\t    tile.lastTouchTime = time;\n\t\n\t    return tile;\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Dispatch a job to the ImageLoader to load the Image for a Tile.\n\t * @param {OpenSeadragon.TiledImage} tiledImage\n\t * @param {OpenSeadragon.Tile} tile\n\t * @param {Number} time\n\t */\n\tfunction loadTile( tiledImage, tile, time ) {\n\t    tile.loading = true;\n\t    tiledImage._imageLoader.addJob({\n\t        src: tile.url,\n\t        loadWithAjax: tile.loadWithAjax,\n\t        ajaxHeaders: tile.ajaxHeaders,\n\t        crossOriginPolicy: tiledImage.crossOriginPolicy,\n\t        ajaxWithCredentials: tiledImage.ajaxWithCredentials,\n\t        callback: function( image, errorMsg, tileRequest ){\n\t            onTileLoad( tiledImage, tile, time, image, errorMsg, tileRequest );\n\t        },\n\t        abort: function() {\n\t            tile.loading = false;\n\t        }\n\t    });\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Callback fired when a Tile's Image finished downloading.\n\t * @param {OpenSeadragon.TiledImage} tiledImage\n\t * @param {OpenSeadragon.Tile} tile\n\t * @param {Number} time\n\t * @param {Image} image\n\t * @param {String} errorMsg\n\t * @param {XMLHttpRequest} tileRequest\n\t */\n\tfunction onTileLoad( tiledImage, tile, time, image, errorMsg, tileRequest ) {\n\t    if ( !image ) {\n\t        $.console.log( \"Tile %s failed to load: %s - error: %s\", tile, tile.url, errorMsg );\n\t        /**\n\t         * Triggered when a tile fails to load.\n\t         *\n\t         * @event tile-load-failed\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Tile} tile - The tile that failed to load.\n\t         * @property {OpenSeadragon.TiledImage} tiledImage - The tiled image the tile belongs to.\n\t         * @property {number} time - The time in milliseconds when the tile load began.\n\t         * @property {string} message - The error message.\n\t         * @property {XMLHttpRequest} tileRequest - The XMLHttpRequest used to load the tile if available.\n\t         */\n\t        tiledImage.viewer.raiseEvent(\"tile-load-failed\", {\n\t            tile: tile,\n\t            tiledImage: tiledImage,\n\t            time: time,\n\t            message: errorMsg,\n\t            tileRequest: tileRequest\n\t        });\n\t        tile.loading = false;\n\t        tile.exists = false;\n\t        return;\n\t    }\n\t\n\t    if ( time < tiledImage.lastResetTime ) {\n\t        $.console.log( \"Ignoring tile %s loaded before reset: %s\", tile, tile.url );\n\t        tile.loading = false;\n\t        return;\n\t    }\n\t\n\t    var finish = function() {\n\t        var cutoff = tiledImage.source.getClosestLevel();\n\t        setTileLoaded(tiledImage, tile, image, cutoff, tileRequest);\n\t    };\n\t\n\t    // Check if we're mid-update; this can happen on IE8 because image load events for\n\t    // cached images happen immediately there\n\t    if ( !tiledImage._midDraw ) {\n\t        finish();\n\t    } else {\n\t        // Wait until after the update, in case caching unloads any tiles\n\t        window.setTimeout( finish, 1);\n\t    }\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @param {OpenSeadragon.TiledImage} tiledImage\n\t * @param {OpenSeadragon.Tile} tile\n\t * @param {Image} image\n\t * @param {Number} cutoff\n\t */\n\tfunction setTileLoaded(tiledImage, tile, image, cutoff, tileRequest) {\n\t    var increment = 0;\n\t\n\t    function getCompletionCallback() {\n\t        increment++;\n\t        return completionCallback;\n\t    }\n\t\n\t    function completionCallback() {\n\t        increment--;\n\t        if (increment === 0) {\n\t            tile.loading = false;\n\t            tile.loaded = true;\n\t            if (!tile.context2D) {\n\t                tiledImage._tileCache.cacheTile({\n\t                    image: image,\n\t                    tile: tile,\n\t                    cutoff: cutoff,\n\t                    tiledImage: tiledImage\n\t                });\n\t            }\n\t            tiledImage._needsDraw = true;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Triggered when a tile has just been loaded in memory. That means that the\n\t     * image has been downloaded and can be modified before being drawn to the canvas.\n\t     *\n\t     * @event tile-loaded\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {Image} image - The image of the tile.\n\t     * @property {OpenSeadragon.TiledImage} tiledImage - The tiled image of the loaded tile.\n\t     * @property {OpenSeadragon.Tile} tile - The tile which has been loaded.\n\t     * @property {XMLHttpRequest} tiledImage - The AJAX request that loaded this tile (if applicable).\n\t     * @property {function} getCompletionCallback - A function giving a callback to call\n\t     * when the asynchronous processing of the image is done. The image will be\n\t     * marked as entirely loaded when the callback has been called once for each\n\t     * call to getCompletionCallback.\n\t     */\n\t    tiledImage.viewer.raiseEvent(\"tile-loaded\", {\n\t        tile: tile,\n\t        tiledImage: tiledImage,\n\t        tileRequest: tileRequest,\n\t        image: image,\n\t        getCompletionCallback: getCompletionCallback\n\t    });\n\t    // In case the completion callback is never called, we at least force it once.\n\t    getCompletionCallback()();\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @param {OpenSeadragon.Tile} tile\n\t * @param {Boolean} overlap\n\t * @param {OpenSeadragon.Viewport} viewport\n\t * @param {OpenSeadragon.Point} viewportCenter\n\t * @param {Number} levelVisibility\n\t * @param {OpenSeadragon.TiledImage} tiledImage\n\t */\n\tfunction positionTile( tile, overlap, viewport, viewportCenter, levelVisibility, tiledImage ){\n\t    var boundsTL     = tile.bounds.getTopLeft();\n\t\n\t    boundsTL.x *= tiledImage._scaleSpring.current.value;\n\t    boundsTL.y *= tiledImage._scaleSpring.current.value;\n\t    boundsTL.x += tiledImage._xSpring.current.value;\n\t    boundsTL.y += tiledImage._ySpring.current.value;\n\t\n\t    var boundsSize   = tile.bounds.getSize();\n\t\n\t    boundsSize.x *= tiledImage._scaleSpring.current.value;\n\t    boundsSize.y *= tiledImage._scaleSpring.current.value;\n\t\n\t    var positionC = viewport.pixelFromPointNoRotate(boundsTL, true),\n\t        positionT = viewport.pixelFromPointNoRotate(boundsTL, false),\n\t        sizeC = viewport.deltaPixelsFromPointsNoRotate(boundsSize, true),\n\t        sizeT = viewport.deltaPixelsFromPointsNoRotate(boundsSize, false),\n\t        tileCenter = positionT.plus( sizeT.divide( 2 ) ),\n\t        tileSquaredDistance = viewportCenter.squaredDistanceTo( tileCenter );\n\t\n\t    if ( !overlap ) {\n\t        sizeC = sizeC.plus( new $.Point( 1, 1 ) );\n\t    }\n\t\n\t    if (tile.isRightMost && tiledImage.wrapHorizontal) {\n\t        sizeC.x += 0.75; // Otherwise Firefox and Safari show seams\n\t    }\n\t\n\t    if (tile.isBottomMost && tiledImage.wrapVertical) {\n\t        sizeC.y += 0.75; // Otherwise Firefox and Safari show seams\n\t    }\n\t\n\t    tile.position   = positionC;\n\t    tile.size       = sizeC;\n\t    tile.squaredDistance   = tileSquaredDistance;\n\t    tile.visibility = levelVisibility;\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Updates the opacity of a tile according to the time it has been on screen\n\t * to perform a fade-in.\n\t * Updates coverage once a tile is fully opaque.\n\t * Returns whether the fade-in has completed.\n\t *\n\t * @param {OpenSeadragon.TiledImage} tiledImage\n\t * @param {OpenSeadragon.Tile} tile\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} level\n\t * @param {Number} levelOpacity\n\t * @param {Number} currentTime\n\t * @returns {Boolean}\n\t */\n\tfunction blendTile( tiledImage, tile, x, y, level, levelOpacity, currentTime ){\n\t    var blendTimeMillis = 1000 * tiledImage.blendTime,\n\t        deltaTime,\n\t        opacity;\n\t\n\t    if ( !tile.blendStart ) {\n\t        tile.blendStart = currentTime;\n\t    }\n\t\n\t    deltaTime   = currentTime - tile.blendStart;\n\t    opacity     = blendTimeMillis ? Math.min( 1, deltaTime / ( blendTimeMillis ) ) : 1;\n\t\n\t    if ( tiledImage.alwaysBlend ) {\n\t        opacity *= levelOpacity;\n\t    }\n\t\n\t    tile.opacity = opacity;\n\t\n\t    tiledImage.lastDrawn.push( tile );\n\t\n\t    if ( opacity === 1 ) {\n\t        setCoverage( tiledImage.coverage, level, x, y, true );\n\t        tiledImage._hasOpaqueTile = true;\n\t    } else if ( deltaTime < blendTimeMillis ) {\n\t        return true;\n\t    }\n\t\n\t    return false;\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Returns true if the given tile provides coverage to lower-level tiles of\n\t * lower resolution representing the same content. If neither x nor y is\n\t * given, returns true if the entire visible level provides coverage.\n\t *\n\t * Note that out-of-bounds tiles provide coverage in this sense, since\n\t * there's no content that they would need to cover. Tiles at non-existent\n\t * levels that are within the image bounds, however, do not.\n\t *\n\t * @param {Object} coverage - A '3d' dictionary [level][x][y] --> Boolean.\n\t * @param {Number} level - The resolution level of the tile.\n\t * @param {Number} x - The X position of the tile.\n\t * @param {Number} y - The Y position of the tile.\n\t * @returns {Boolean}\n\t */\n\tfunction providesCoverage( coverage, level, x, y ) {\n\t    var rows,\n\t        cols,\n\t        i, j;\n\t\n\t    if ( !coverage[ level ] ) {\n\t        return false;\n\t    }\n\t\n\t    if ( x === undefined || y === undefined ) {\n\t        rows = coverage[ level ];\n\t        for ( i in rows ) {\n\t            if ( rows.hasOwnProperty( i ) ) {\n\t                cols = rows[ i ];\n\t                for ( j in cols ) {\n\t                    if ( cols.hasOwnProperty( j ) && !cols[ j ] ) {\n\t                        return false;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        return true;\n\t    }\n\t\n\t    return (\n\t        coverage[ level ][ x] === undefined ||\n\t        coverage[ level ][ x ][ y ] === undefined ||\n\t        coverage[ level ][ x ][ y ] === true\n\t    );\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Returns true if the given tile is completely covered by higher-level\n\t * tiles of higher resolution representing the same content. If neither x\n\t * nor y is given, returns true if the entire visible level is covered.\n\t *\n\t * @param {Object} coverage - A '3d' dictionary [level][x][y] --> Boolean.\n\t * @param {Number} level - The resolution level of the tile.\n\t * @param {Number} x - The X position of the tile.\n\t * @param {Number} y - The Y position of the tile.\n\t * @returns {Boolean}\n\t */\n\tfunction isCovered( coverage, level, x, y ) {\n\t    if ( x === undefined || y === undefined ) {\n\t        return providesCoverage( coverage, level + 1 );\n\t    } else {\n\t        return (\n\t             providesCoverage( coverage, level + 1, 2 * x, 2 * y ) &&\n\t             providesCoverage( coverage, level + 1, 2 * x, 2 * y + 1 ) &&\n\t             providesCoverage( coverage, level + 1, 2 * x + 1, 2 * y ) &&\n\t             providesCoverage( coverage, level + 1, 2 * x + 1, 2 * y + 1 )\n\t        );\n\t    }\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Sets whether the given tile provides coverage or not.\n\t *\n\t * @param {Object} coverage - A '3d' dictionary [level][x][y] --> Boolean.\n\t * @param {Number} level - The resolution level of the tile.\n\t * @param {Number} x - The X position of the tile.\n\t * @param {Number} y - The Y position of the tile.\n\t * @param {Boolean} covers - Whether the tile provides coverage.\n\t */\n\tfunction setCoverage( coverage, level, x, y, covers ) {\n\t    if ( !coverage[ level ] ) {\n\t        $.console.warn(\n\t            \"Setting coverage for a tile before its level's coverage has been reset: %s\",\n\t            level\n\t        );\n\t        return;\n\t    }\n\t\n\t    if ( !coverage[ level ][ x ] ) {\n\t        coverage[ level ][ x ] = {};\n\t    }\n\t\n\t    coverage[ level ][ x ][ y ] = covers;\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Resets coverage information for the given level. This should be called\n\t * after every draw routine. Note that at the beginning of the next draw\n\t * routine, coverage for every visible tile should be explicitly set.\n\t *\n\t * @param {Object} coverage - A '3d' dictionary [level][x][y] --> Boolean.\n\t * @param {Number} level - The resolution level of tiles to completely reset.\n\t */\n\tfunction resetCoverage( coverage, level ) {\n\t    coverage[ level ] = {};\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Determines whether the 'last best' tile for the area is better than the\n\t * tile in question.\n\t *\n\t * @param {OpenSeadragon.Tile} previousBest\n\t * @param {OpenSeadragon.Tile} tile\n\t * @returns {OpenSeadragon.Tile} The new best tile.\n\t */\n\tfunction compareTiles( previousBest, tile ) {\n\t    if ( !previousBest ) {\n\t        return tile;\n\t    }\n\t\n\t    if ( tile.visibility > previousBest.visibility ) {\n\t        return tile;\n\t    } else if ( tile.visibility == previousBest.visibility ) {\n\t        if ( tile.squaredDistance < previousBest.squaredDistance ) {\n\t            return tile;\n\t        }\n\t    }\n\t\n\t    return previousBest;\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Draws a TiledImage.\n\t * @param {OpenSeadragon.TiledImage} tiledImage\n\t * @param {OpenSeadragon.Tile[]} lastDrawn - An unordered list of Tiles drawn last frame.\n\t */\n\tfunction drawTiles( tiledImage, lastDrawn ) {\n\t    if (tiledImage.opacity === 0 || (lastDrawn.length === 0 && !tiledImage.placeholderFillStyle)) {\n\t        return;\n\t    }\n\t\n\t    var tile = lastDrawn[0];\n\t    var useSketch;\n\t\n\t    if (tile) {\n\t        useSketch = tiledImage.opacity < 1 ||\n\t            (tiledImage.compositeOperation &&\n\t                tiledImage.compositeOperation !== 'source-over') ||\n\t            (!tiledImage._isBottomItem() && tile._hasTransparencyChannel());\n\t    }\n\t\n\t    var sketchScale;\n\t    var sketchTranslate;\n\t\n\t    var zoom = tiledImage.viewport.getZoom(true);\n\t    var imageZoom = tiledImage.viewportToImageZoom(zoom);\n\t\n\t    if (lastDrawn.length > 1 &&\n\t        imageZoom > tiledImage.smoothTileEdgesMinZoom &&\n\t        !tiledImage.iOSDevice &&\n\t        tiledImage.getRotation(true) % 360 === 0 && // TODO: support tile edge smoothing with tiled image rotation.\n\t        $.supportsCanvas) {\n\t        // When zoomed in a lot (>100%) the tile edges are visible.\n\t        // So we have to composite them at ~100% and scale them up together.\n\t        // Note: Disabled on iOS devices per default as it causes a native crash\n\t        useSketch = true;\n\t        sketchScale = tile.getScaleForEdgeSmoothing();\n\t        sketchTranslate = tile.getTranslationForEdgeSmoothing(sketchScale,\n\t            tiledImage._drawer.getCanvasSize(false),\n\t            tiledImage._drawer.getCanvasSize(true));\n\t    }\n\t\n\t    var bounds;\n\t    if (useSketch) {\n\t        if (!sketchScale) {\n\t            // Except when edge smoothing, we only clean the part of the\n\t            // sketch canvas we are going to use for performance reasons.\n\t            bounds = tiledImage.viewport.viewportToViewerElementRectangle(\n\t                tiledImage.getClippedBounds(true))\n\t                .getIntegerBoundingBox()\n\t                .times($.pixelDensityRatio);\n\t\n\t            if(tiledImage._drawer.viewer.viewport.getFlip()) {\n\t              if (tiledImage.viewport.degrees !== 0 || tiledImage.getRotation(true) % 360 !== 0){\n\t                bounds.x = tiledImage._drawer.viewer.container.clientWidth - (bounds.x + bounds.width);\n\t              }\n\t            }\n\t        }\n\t        tiledImage._drawer._clear(true, bounds);\n\t    }\n\t\n\t    // When scaling, we must rotate only when blending the sketch canvas to\n\t    // avoid interpolation\n\t    if (!sketchScale) {\n\t        if (tiledImage.viewport.degrees !== 0) {\n\t            tiledImage._drawer._offsetForRotation({\n\t                degrees: tiledImage.viewport.degrees,\n\t                useSketch: useSketch\n\t            });\n\t        }\n\t        if (tiledImage.getRotation(true) % 360 !== 0) {\n\t            tiledImage._drawer._offsetForRotation({\n\t                degrees: tiledImage.getRotation(true),\n\t                point: tiledImage.viewport.pixelFromPointNoRotate(\n\t                    tiledImage._getRotationPoint(true), true),\n\t                useSketch: useSketch\n\t            });\n\t        }\n\t\n\t        if (tiledImage.viewport.degrees === 0 && tiledImage.getRotation(true) % 360 === 0){\n\t          if(tiledImage._drawer.viewer.viewport.getFlip()) {\n\t              tiledImage._drawer._flip();\n\t          }\n\t        }\n\t    }\n\t\n\t    var usedClip = false;\n\t    if ( tiledImage._clip ) {\n\t        tiledImage._drawer.saveContext(useSketch);\n\t\n\t        var box = tiledImage.imageToViewportRectangle(tiledImage._clip, true);\n\t        box = box.rotate(-tiledImage.getRotation(true), tiledImage._getRotationPoint(true));\n\t        var clipRect = tiledImage._drawer.viewportToDrawerRectangle(box);\n\t        if (sketchScale) {\n\t            clipRect = clipRect.times(sketchScale);\n\t        }\n\t        if (sketchTranslate) {\n\t            clipRect = clipRect.translate(sketchTranslate);\n\t        }\n\t        tiledImage._drawer.setClip(clipRect, useSketch);\n\t\n\t        usedClip = true;\n\t    }\n\t\n\t    if ( tiledImage.placeholderFillStyle && tiledImage._hasOpaqueTile === false ) {\n\t        var placeholderRect = tiledImage._drawer.viewportToDrawerRectangle(tiledImage.getBounds(true));\n\t        if (sketchScale) {\n\t            placeholderRect = placeholderRect.times(sketchScale);\n\t        }\n\t        if (sketchTranslate) {\n\t            placeholderRect = placeholderRect.translate(sketchTranslate);\n\t        }\n\t\n\t        var fillStyle = null;\n\t        if ( typeof tiledImage.placeholderFillStyle === \"function\" ) {\n\t            fillStyle = tiledImage.placeholderFillStyle(tiledImage, tiledImage._drawer.context);\n\t        }\n\t        else {\n\t            fillStyle = tiledImage.placeholderFillStyle;\n\t        }\n\t\n\t        tiledImage._drawer.drawRectangle(placeholderRect, fillStyle, useSketch);\n\t    }\n\t\n\t    for (var i = lastDrawn.length - 1; i >= 0; i--) {\n\t        tile = lastDrawn[ i ];\n\t        tiledImage._drawer.drawTile( tile, tiledImage._drawingHandler, useSketch, sketchScale, sketchTranslate );\n\t        tile.beingDrawn = true;\n\t\n\t        if( tiledImage.viewer ){\n\t            /**\n\t             * <em>- Needs documentation -</em>\n\t             *\n\t             * @event tile-drawn\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t             * @property {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n\t             * @property {OpenSeadragon.Tile} tile\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            tiledImage.viewer.raiseEvent( 'tile-drawn', {\n\t                tiledImage: tiledImage,\n\t                tile: tile\n\t            });\n\t        }\n\t    }\n\t\n\t    if ( usedClip ) {\n\t        tiledImage._drawer.restoreContext( useSketch );\n\t    }\n\t\n\t    if (!sketchScale) {\n\t        if (tiledImage.getRotation(true) % 360 !== 0) {\n\t            tiledImage._drawer._restoreRotationChanges(useSketch);\n\t        }\n\t        if (tiledImage.viewport.degrees !== 0) {\n\t            tiledImage._drawer._restoreRotationChanges(useSketch);\n\t        }\n\t    }\n\t\n\t    if (useSketch) {\n\t        if (sketchScale) {\n\t            if (tiledImage.viewport.degrees !== 0) {\n\t                tiledImage._drawer._offsetForRotation({\n\t                    degrees: tiledImage.viewport.degrees,\n\t                    useSketch: false\n\t                });\n\t            }\n\t            if (tiledImage.getRotation(true) % 360 !== 0) {\n\t                tiledImage._drawer._offsetForRotation({\n\t                    degrees: tiledImage.getRotation(true),\n\t                    point: tiledImage.viewport.pixelFromPointNoRotate(\n\t                        tiledImage._getRotationPoint(true), true),\n\t                    useSketch: false\n\t                });\n\t            }\n\t        }\n\t        tiledImage._drawer.blendSketch({\n\t            opacity: tiledImage.opacity,\n\t            scale: sketchScale,\n\t            translate: sketchTranslate,\n\t            compositeOperation: tiledImage.compositeOperation,\n\t            bounds: bounds\n\t        });\n\t        if (sketchScale) {\n\t            if (tiledImage.getRotation(true) % 360 !== 0) {\n\t                tiledImage._drawer._restoreRotationChanges(false);\n\t            }\n\t            if (tiledImage.viewport.degrees !== 0) {\n\t                tiledImage._drawer._restoreRotationChanges(false);\n\t            }\n\t        }\n\t    }\n\t\n\t    if (!sketchScale) {\n\t      if (tiledImage.viewport.degrees === 0 && tiledImage.getRotation(true) % 360 === 0){\n\t        if(tiledImage._drawer.viewer.viewport.getFlip()) {\n\t            tiledImage._drawer._flip();\n\t        }\n\t      }\n\t    }\n\t\n\t    drawDebugInfo( tiledImage, lastDrawn );\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Draws special debug information for a TiledImage if in debug mode.\n\t * @param {OpenSeadragon.TiledImage} tiledImage\n\t * @param {OpenSeadragon.Tile[]} lastDrawn - An unordered list of Tiles drawn last frame.\n\t */\n\tfunction drawDebugInfo( tiledImage, lastDrawn ) {\n\t    if( tiledImage.debugMode ) {\n\t        for ( var i = lastDrawn.length - 1; i >= 0; i-- ) {\n\t            var tile = lastDrawn[ i ];\n\t            try {\n\t                tiledImage._drawer.drawDebugInfo(\n\t                    tile, lastDrawn.length, i, tiledImage);\n\t            } catch(e) {\n\t                $.console.error(e);\n\t            }\n\t        }\n\t    }\n\t}\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - TileCache\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t// private class\n\tvar TileRecord = function( options ) {\n\t    $.console.assert( options, \"[TileCache.cacheTile] options is required\" );\n\t    $.console.assert( options.tile, \"[TileCache.cacheTile] options.tile is required\" );\n\t    $.console.assert( options.tiledImage, \"[TileCache.cacheTile] options.tiledImage is required\" );\n\t    this.tile = options.tile;\n\t    this.tiledImage = options.tiledImage;\n\t};\n\t\n\t// private class\n\tvar ImageRecord = function(options) {\n\t    $.console.assert( options, \"[ImageRecord] options is required\" );\n\t    $.console.assert( options.image, \"[ImageRecord] options.image is required\" );\n\t    this._image = options.image;\n\t    this._tiles = [];\n\t};\n\t\n\tImageRecord.prototype = {\n\t    destroy: function() {\n\t        this._image = null;\n\t        this._renderedContext = null;\n\t        this._tiles = null;\n\t    },\n\t\n\t    getImage: function() {\n\t        return this._image;\n\t    },\n\t\n\t    getRenderedContext: function() {\n\t        if (!this._renderedContext) {\n\t            var canvas = document.createElement( 'canvas' );\n\t            canvas.width = this._image.width;\n\t            canvas.height = this._image.height;\n\t            this._renderedContext = canvas.getContext('2d');\n\t            this._renderedContext.drawImage( this._image, 0, 0 );\n\t            //since we are caching the prerendered image on a canvas\n\t            //allow the image to not be held in memory\n\t            this._image = null;\n\t        }\n\t        return this._renderedContext;\n\t    },\n\t\n\t    setRenderedContext: function(renderedContext) {\n\t        $.console.error(\"ImageRecord.setRenderedContext is deprecated. \" +\n\t                \"The rendered context should be created by the ImageRecord \" +\n\t                \"itself when calling ImageRecord.getRenderedContext.\");\n\t        this._renderedContext = renderedContext;\n\t    },\n\t\n\t    addTile: function(tile) {\n\t        $.console.assert(tile, '[ImageRecord.addTile] tile is required');\n\t        this._tiles.push(tile);\n\t    },\n\t\n\t    removeTile: function(tile) {\n\t        for (var i = 0; i < this._tiles.length; i++) {\n\t            if (this._tiles[i] === tile) {\n\t                this._tiles.splice(i, 1);\n\t                return;\n\t            }\n\t        }\n\t\n\t        $.console.warn('[ImageRecord.removeTile] trying to remove unknown tile', tile);\n\t    },\n\t\n\t    getTileCount: function() {\n\t        return this._tiles.length;\n\t    }\n\t};\n\t\n\t/**\n\t * @class TileCache\n\t * @memberof OpenSeadragon\n\t * @classdesc Stores all the tiles displayed in a {@link OpenSeadragon.Viewer}.\n\t * You generally won't have to interact with the TileCache directly.\n\t * @param {Object} options - Configuration for this TileCache.\n\t * @param {Number} [options.maxImageCacheCount] - See maxImageCacheCount in\n\t * {@link OpenSeadragon.Options} for details.\n\t */\n\t$.TileCache = function( options ) {\n\t    options = options || {};\n\t\n\t    this._maxImageCacheCount = options.maxImageCacheCount || $.DEFAULT_SETTINGS.maxImageCacheCount;\n\t    this._tilesLoaded = [];\n\t    this._imagesLoaded = [];\n\t    this._imagesLoadedCount = 0;\n\t};\n\t\n\t/** @lends OpenSeadragon.TileCache.prototype */\n\t$.TileCache.prototype = {\n\t    /**\n\t     * @returns {Number} The total number of tiles that have been loaded by\n\t     * this TileCache.\n\t     */\n\t    numTilesLoaded: function() {\n\t        return this._tilesLoaded.length;\n\t    },\n\t\n\t    /**\n\t     * Caches the specified tile, removing an old tile if necessary to stay under the\n\t     * maxImageCacheCount specified on construction. Note that if multiple tiles reference\n\t     * the same image, there may be more tiles than maxImageCacheCount; the goal is to keep\n\t     * the number of images below that number. Note, as well, that even the number of images\n\t     * may temporarily surpass that number, but should eventually come back down to the max specified.\n\t     * @param {Object} options - Tile info.\n\t     * @param {OpenSeadragon.Tile} options.tile - The tile to cache.\n\t     * @param {String} options.tile.cacheKey - The unique key used to identify this tile in the cache.\n\t     * @param {Image} options.image - The image of the tile to cache.\n\t     * @param {OpenSeadragon.TiledImage} options.tiledImage - The TiledImage that owns that tile.\n\t     * @param {Number} [options.cutoff=0] - If adding this tile goes over the cache max count, this\n\t     * function will release an old tile. The cutoff option specifies a tile level at or below which\n\t     * tiles will not be released.\n\t     */\n\t    cacheTile: function( options ) {\n\t        $.console.assert( options, \"[TileCache.cacheTile] options is required\" );\n\t        $.console.assert( options.tile, \"[TileCache.cacheTile] options.tile is required\" );\n\t        $.console.assert( options.tile.cacheKey, \"[TileCache.cacheTile] options.tile.cacheKey is required\" );\n\t        $.console.assert( options.tiledImage, \"[TileCache.cacheTile] options.tiledImage is required\" );\n\t\n\t        var cutoff = options.cutoff || 0;\n\t        var insertionIndex = this._tilesLoaded.length;\n\t\n\t        var imageRecord = this._imagesLoaded[options.tile.cacheKey];\n\t        if (!imageRecord) {\n\t            $.console.assert( options.image, \"[TileCache.cacheTile] options.image is required to create an ImageRecord\" );\n\t            imageRecord = this._imagesLoaded[options.tile.cacheKey] = new ImageRecord({\n\t                image: options.image\n\t            });\n\t\n\t            this._imagesLoadedCount++;\n\t        }\n\t\n\t        imageRecord.addTile(options.tile);\n\t        options.tile.cacheImageRecord = imageRecord;\n\t\n\t        // Note that just because we're unloading a tile doesn't necessarily mean\n\t        // we're unloading an image. With repeated calls it should sort itself out, though.\n\t        if ( this._imagesLoadedCount > this._maxImageCacheCount ) {\n\t            var worstTile       = null;\n\t            var worstTileIndex  = -1;\n\t            var worstTileRecord = null;\n\t            var prevTile, worstTime, worstLevel, prevTime, prevLevel, prevTileRecord;\n\t\n\t            for ( var i = this._tilesLoaded.length - 1; i >= 0; i-- ) {\n\t                prevTileRecord = this._tilesLoaded[ i ];\n\t                prevTile = prevTileRecord.tile;\n\t\n\t                if ( prevTile.level <= cutoff || prevTile.beingDrawn ) {\n\t                    continue;\n\t                } else if ( !worstTile ) {\n\t                    worstTile       = prevTile;\n\t                    worstTileIndex  = i;\n\t                    worstTileRecord = prevTileRecord;\n\t                    continue;\n\t                }\n\t\n\t                prevTime    = prevTile.lastTouchTime;\n\t                worstTime   = worstTile.lastTouchTime;\n\t                prevLevel   = prevTile.level;\n\t                worstLevel  = worstTile.level;\n\t\n\t                if ( prevTime < worstTime ||\n\t                   ( prevTime == worstTime && prevLevel > worstLevel ) ) {\n\t                    worstTile       = prevTile;\n\t                    worstTileIndex  = i;\n\t                    worstTileRecord = prevTileRecord;\n\t                }\n\t            }\n\t\n\t            if ( worstTile && worstTileIndex >= 0 ) {\n\t                this._unloadTile(worstTileRecord);\n\t                insertionIndex = worstTileIndex;\n\t            }\n\t        }\n\t\n\t        this._tilesLoaded[ insertionIndex ] = new TileRecord({\n\t            tile: options.tile,\n\t            tiledImage: options.tiledImage\n\t        });\n\t    },\n\t\n\t    /**\n\t     * Clears all tiles associated with the specified tiledImage.\n\t     * @param {OpenSeadragon.TiledImage} tiledImage\n\t     */\n\t    clearTilesFor: function( tiledImage ) {\n\t        $.console.assert(tiledImage, '[TileCache.clearTilesFor] tiledImage is required');\n\t        var tileRecord;\n\t        for ( var i = 0; i < this._tilesLoaded.length; ++i ) {\n\t            tileRecord = this._tilesLoaded[ i ];\n\t            if ( tileRecord.tiledImage === tiledImage ) {\n\t                this._unloadTile(tileRecord);\n\t                this._tilesLoaded.splice( i, 1 );\n\t                i--;\n\t            }\n\t        }\n\t    },\n\t\n\t    // private\n\t    getImageRecord: function(cacheKey) {\n\t        $.console.assert(cacheKey, '[TileCache.getImageRecord] cacheKey is required');\n\t        return this._imagesLoaded[cacheKey];\n\t    },\n\t\n\t    // private\n\t    _unloadTile: function(tileRecord) {\n\t        $.console.assert(tileRecord, '[TileCache._unloadTile] tileRecord is required');\n\t        var tile = tileRecord.tile;\n\t        var tiledImage = tileRecord.tiledImage;\n\t\n\t        tile.unload();\n\t        tile.cacheImageRecord = null;\n\t\n\t        var imageRecord = this._imagesLoaded[tile.cacheKey];\n\t        imageRecord.removeTile(tile);\n\t        if (!imageRecord.getTileCount()) {\n\t            imageRecord.destroy();\n\t            delete this._imagesLoaded[tile.cacheKey];\n\t            this._imagesLoadedCount--;\n\t        }\n\t\n\t        /**\n\t         * Triggered when a tile has just been unloaded from memory.\n\t         *\n\t         * @event tile-unloaded\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.TiledImage} tiledImage - The tiled image of the unloaded tile.\n\t         * @property {OpenSeadragon.Tile} tile - The tile which has been unloaded.\n\t         */\n\t        tiledImage.viewer.raiseEvent(\"tile-unloaded\", {\n\t            tile: tile,\n\t            tiledImage: tiledImage\n\t        });\n\t    }\n\t};\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - World\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class World\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.EventSource\n\t * @classdesc Keeps track of all of the tiled images in the scene.\n\t * @param {Object} options - World options.\n\t * @param {OpenSeadragon.Viewer} options.viewer - The Viewer that owns this World.\n\t **/\n\t$.World = function( options ) {\n\t    var _this = this;\n\t\n\t    $.console.assert( options.viewer, \"[World] options.viewer is required\" );\n\t\n\t    $.EventSource.call( this );\n\t\n\t    this.viewer = options.viewer;\n\t    this._items = [];\n\t    this._needsDraw = false;\n\t    this._autoRefigureSizes = true;\n\t    this._needsSizesFigured = false;\n\t    this._delegatedFigureSizes = function(event) {\n\t        if (_this._autoRefigureSizes) {\n\t            _this._figureSizes();\n\t        } else {\n\t            _this._needsSizesFigured = true;\n\t        }\n\t    };\n\t\n\t    this._figureSizes();\n\t};\n\t\n\t$.extend( $.World.prototype, $.EventSource.prototype, /** @lends OpenSeadragon.World.prototype */{\n\t    /**\n\t     * Add the specified item.\n\t     * @param {OpenSeadragon.TiledImage} item - The item to add.\n\t     * @param {Number} [options.index] - Index for the item. If not specified, goes at the top.\n\t     * @fires OpenSeadragon.World.event:add-item\n\t     * @fires OpenSeadragon.World.event:metrics-change\n\t     */\n\t    addItem: function( item, options ) {\n\t        $.console.assert(item, \"[World.addItem] item is required\");\n\t        $.console.assert(item instanceof $.TiledImage, \"[World.addItem] only TiledImages supported at this time\");\n\t\n\t        options = options || {};\n\t        if (options.index !== undefined) {\n\t            var index = Math.max(0, Math.min(this._items.length, options.index));\n\t            this._items.splice(index, 0, item);\n\t        } else {\n\t            this._items.push( item );\n\t        }\n\t\n\t        if (this._autoRefigureSizes) {\n\t            this._figureSizes();\n\t        } else {\n\t            this._needsSizesFigured = true;\n\t        }\n\t\n\t        this._needsDraw = true;\n\t\n\t        item.addHandler('bounds-change', this._delegatedFigureSizes);\n\t        item.addHandler('clip-change', this._delegatedFigureSizes);\n\t\n\t        /**\n\t         * Raised when an item is added to the World.\n\t         * @event add-item\n\t         * @memberOf OpenSeadragon.World\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the World which raised the event.\n\t         * @property {OpenSeadragon.TiledImage} item - The item that has been added.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'add-item', {\n\t            item: item\n\t        } );\n\t    },\n\t\n\t    /**\n\t     * Get the item at the specified index.\n\t     * @param {Number} index - The item's index.\n\t     * @returns {OpenSeadragon.TiledImage} The item at the specified index.\n\t     */\n\t    getItemAt: function( index ) {\n\t        $.console.assert(index !== undefined, \"[World.getItemAt] index is required\");\n\t        return this._items[ index ];\n\t    },\n\t\n\t    /**\n\t     * Get the index of the given item or -1 if not present.\n\t     * @param {OpenSeadragon.TiledImage} item - The item.\n\t     * @returns {Number} The index of the item or -1 if not present.\n\t     */\n\t    getIndexOfItem: function( item ) {\n\t        $.console.assert(item, \"[World.getIndexOfItem] item is required\");\n\t        return $.indexOf( this._items, item );\n\t    },\n\t\n\t    /**\n\t     * @returns {Number} The number of items used.\n\t     */\n\t    getItemCount: function() {\n\t        return this._items.length;\n\t    },\n\t\n\t    /**\n\t     * Change the index of a item so that it appears over or under others.\n\t     * @param {OpenSeadragon.TiledImage} item - The item to move.\n\t     * @param {Number} index - The new index.\n\t     * @fires OpenSeadragon.World.event:item-index-change\n\t     */\n\t    setItemIndex: function( item, index ) {\n\t        $.console.assert(item, \"[World.setItemIndex] item is required\");\n\t        $.console.assert(index !== undefined, \"[World.setItemIndex] index is required\");\n\t\n\t        var oldIndex = this.getIndexOfItem( item );\n\t\n\t        if ( index >= this._items.length ) {\n\t            throw new Error( \"Index bigger than number of layers.\" );\n\t        }\n\t\n\t        if ( index === oldIndex || oldIndex === -1 ) {\n\t            return;\n\t        }\n\t\n\t        this._items.splice( oldIndex, 1 );\n\t        this._items.splice( index, 0, item );\n\t        this._needsDraw = true;\n\t\n\t        /**\n\t         * Raised when the order of the indexes has been changed.\n\t         * @event item-index-change\n\t         * @memberOf OpenSeadragon.World\n\t         * @type {object}\n\t         * @property {OpenSeadragon.World} eventSource - A reference to the World which raised the event.\n\t         * @property {OpenSeadragon.TiledImage} item - The item whose index has\n\t         * been changed\n\t         * @property {Number} previousIndex - The previous index of the item\n\t         * @property {Number} newIndex - The new index of the item\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'item-index-change', {\n\t            item: item,\n\t            previousIndex: oldIndex,\n\t            newIndex: index\n\t        } );\n\t    },\n\t\n\t    /**\n\t     * Remove an item.\n\t     * @param {OpenSeadragon.TiledImage} item - The item to remove.\n\t     * @fires OpenSeadragon.World.event:remove-item\n\t     * @fires OpenSeadragon.World.event:metrics-change\n\t     */\n\t    removeItem: function( item ) {\n\t        $.console.assert(item, \"[World.removeItem] item is required\");\n\t\n\t        var index = $.indexOf(this._items, item );\n\t        if ( index === -1 ) {\n\t            return;\n\t        }\n\t\n\t        item.removeHandler('bounds-change', this._delegatedFigureSizes);\n\t        item.removeHandler('clip-change', this._delegatedFigureSizes);\n\t        item.destroy();\n\t        this._items.splice( index, 1 );\n\t        this._figureSizes();\n\t        this._needsDraw = true;\n\t        this._raiseRemoveItem(item);\n\t    },\n\t\n\t    /**\n\t     * Remove all items.\n\t     * @fires OpenSeadragon.World.event:remove-item\n\t     * @fires OpenSeadragon.World.event:metrics-change\n\t     */\n\t    removeAll: function() {\n\t        // We need to make sure any pending images are canceled so the world items don't get messed up\n\t        this.viewer._cancelPendingImages();\n\t        var item;\n\t        var i;\n\t        for (i = 0; i < this._items.length; i++) {\n\t            item = this._items[i];\n\t            item.removeHandler('bounds-change', this._delegatedFigureSizes);\n\t            item.removeHandler('clip-change', this._delegatedFigureSizes);\n\t            item.destroy();\n\t        }\n\t\n\t        var removedItems = this._items;\n\t        this._items = [];\n\t        this._figureSizes();\n\t        this._needsDraw = true;\n\t\n\t        for (i = 0; i < removedItems.length; i++) {\n\t            item = removedItems[i];\n\t            this._raiseRemoveItem(item);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Clears all tiles and triggers updates for all items.\n\t     */\n\t    resetItems: function() {\n\t        for ( var i = 0; i < this._items.length; i++ ) {\n\t            this._items[i].reset();\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Updates (i.e. animates bounds of) all items.\n\t     */\n\t    update: function() {\n\t        var animated = false;\n\t        for ( var i = 0; i < this._items.length; i++ ) {\n\t            animated = this._items[i].update() || animated;\n\t        }\n\t\n\t        return animated;\n\t    },\n\t\n\t    /**\n\t     * Draws all items.\n\t     */\n\t    draw: function() {\n\t        for ( var i = 0; i < this._items.length; i++ ) {\n\t            this._items[i].draw();\n\t        }\n\t\n\t        this._needsDraw = false;\n\t    },\n\t\n\t    /**\n\t     * @returns {Boolean} true if any items need updating.\n\t     */\n\t    needsDraw: function() {\n\t        for ( var i = 0; i < this._items.length; i++ ) {\n\t            if ( this._items[i].needsDraw() ) {\n\t                return true;\n\t            }\n\t        }\n\t        return this._needsDraw;\n\t    },\n\t\n\t    /**\n\t     * @returns {OpenSeadragon.Rect} The smallest rectangle that encloses all items, in viewport coordinates.\n\t     */\n\t    getHomeBounds: function() {\n\t        return this._homeBounds.clone();\n\t    },\n\t\n\t    /**\n\t     * To facilitate zoom constraints, we keep track of the pixel density of the\n\t     * densest item in the World (i.e. the item whose content size to viewport size\n\t     * ratio is the highest) and save it as this \"content factor\".\n\t     * @returns {Number} the number of content units per viewport unit.\n\t     */\n\t    getContentFactor: function() {\n\t        return this._contentFactor;\n\t    },\n\t\n\t    /**\n\t     * As a performance optimization, setting this flag to false allows the bounds-change event handler\n\t     * on tiledImages to skip calculations on the world bounds. If a lot of images are going to be positioned in\n\t     * rapid succession, this is a good idea. When finished, setAutoRefigureSizes should be called with true\n\t     * or the system may behave oddly.\n\t     * @param {Boolean} [value] The value to which to set the flag.\n\t     */\n\t    setAutoRefigureSizes: function(value) {\n\t        this._autoRefigureSizes = value;\n\t        if (value & this._needsSizesFigured) {\n\t            this._figureSizes();\n\t            this._needsSizesFigured = false;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Arranges all of the TiledImages with the specified settings.\n\t     * @param {Object} options - Specifies how to arrange.\n\t     * @param {Boolean} [options.immediately=false] - Whether to animate to the new arrangement.\n\t     * @param {String} [options.layout] - See collectionLayout in {@link OpenSeadragon.Options}.\n\t     * @param {Number} [options.rows] - See collectionRows in {@link OpenSeadragon.Options}.\n\t     * @param {Number} [options.columns] - See collectionColumns in {@link OpenSeadragon.Options}.\n\t     * @param {Number} [options.tileSize] - See collectionTileSize in {@link OpenSeadragon.Options}.\n\t     * @param {Number} [options.tileMargin] - See collectionTileMargin in {@link OpenSeadragon.Options}.\n\t     * @fires OpenSeadragon.World.event:metrics-change\n\t     */\n\t    arrange: function(options) {\n\t        options = options || {};\n\t        var immediately = options.immediately || false;\n\t        var layout = options.layout || $.DEFAULT_SETTINGS.collectionLayout;\n\t        var rows = options.rows || $.DEFAULT_SETTINGS.collectionRows;\n\t        var columns = options.columns || $.DEFAULT_SETTINGS.collectionColumns;\n\t        var tileSize = options.tileSize || $.DEFAULT_SETTINGS.collectionTileSize;\n\t        var tileMargin = options.tileMargin || $.DEFAULT_SETTINGS.collectionTileMargin;\n\t        var increment = tileSize + tileMargin;\n\t        var wrap;\n\t        if (!options.rows && columns) {\n\t            wrap = columns;\n\t        } else {\n\t            wrap = Math.ceil(this._items.length / rows);\n\t        }\n\t        var x = 0;\n\t        var y = 0;\n\t        var item, box, width, height, position;\n\t\n\t        this.setAutoRefigureSizes(false);\n\t        for (var i = 0; i < this._items.length; i++) {\n\t            if (i && (i % wrap) === 0) {\n\t                if (layout === 'horizontal') {\n\t                    y += increment;\n\t                    x = 0;\n\t                } else {\n\t                    x += increment;\n\t                    y = 0;\n\t                }\n\t            }\n\t\n\t            item = this._items[i];\n\t            box = item.getBounds();\n\t            if (box.width > box.height) {\n\t                width = tileSize;\n\t            } else {\n\t                width = tileSize * (box.width / box.height);\n\t            }\n\t\n\t            height = width * (box.height / box.width);\n\t            position = new $.Point(x + ((tileSize - width) / 2),\n\t                y + ((tileSize - height) / 2));\n\t\n\t            item.setPosition(position, immediately);\n\t            item.setWidth(width, immediately);\n\t\n\t            if (layout === 'horizontal') {\n\t                x += increment;\n\t            } else {\n\t                y += increment;\n\t            }\n\t        }\n\t        this.setAutoRefigureSizes(true);\n\t    },\n\t\n\t    // private\n\t    _figureSizes: function() {\n\t        var oldHomeBounds = this._homeBounds ? this._homeBounds.clone() : null;\n\t        var oldContentSize = this._contentSize ? this._contentSize.clone() : null;\n\t        var oldContentFactor = this._contentFactor || 0;\n\t\n\t        if (!this._items.length) {\n\t            this._homeBounds = new $.Rect(0, 0, 1, 1);\n\t            this._contentSize = new $.Point(1, 1);\n\t            this._contentFactor = 1;\n\t        } else {\n\t            var item = this._items[0];\n\t            var bounds = item.getBounds();\n\t            this._contentFactor = item.getContentSize().x / bounds.width;\n\t            var clippedBounds = item.getClippedBounds().getBoundingBox();\n\t            var left = clippedBounds.x;\n\t            var top = clippedBounds.y;\n\t            var right = clippedBounds.x + clippedBounds.width;\n\t            var bottom = clippedBounds.y + clippedBounds.height;\n\t            for (var i = 1; i < this._items.length; i++) {\n\t                item = this._items[i];\n\t                bounds = item.getBounds();\n\t                this._contentFactor = Math.max(this._contentFactor,\n\t                    item.getContentSize().x / bounds.width);\n\t                clippedBounds = item.getClippedBounds().getBoundingBox();\n\t                left = Math.min(left, clippedBounds.x);\n\t                top = Math.min(top, clippedBounds.y);\n\t                right = Math.max(right, clippedBounds.x + clippedBounds.width);\n\t                bottom = Math.max(bottom, clippedBounds.y + clippedBounds.height);\n\t            }\n\t\n\t            this._homeBounds = new $.Rect(left, top, right - left, bottom - top);\n\t            this._contentSize = new $.Point(\n\t                this._homeBounds.width * this._contentFactor,\n\t                this._homeBounds.height * this._contentFactor);\n\t        }\n\t\n\t        if (this._contentFactor !== oldContentFactor ||\n\t            !this._homeBounds.equals(oldHomeBounds) ||\n\t            !this._contentSize.equals(oldContentSize)) {\n\t            /**\n\t             * Raised when the home bounds or content factor change.\n\t             * @event metrics-change\n\t             * @memberOf OpenSeadragon.World\n\t             * @type {object}\n\t             * @property {OpenSeadragon.World} eventSource - A reference to the World which raised the event.\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            this.raiseEvent('metrics-change', {});\n\t        }\n\t    },\n\t\n\t    // private\n\t    _raiseRemoveItem: function(item) {\n\t        /**\n\t         * Raised when an item is removed.\n\t         * @event remove-item\n\t         * @memberOf OpenSeadragon.World\n\t         * @type {object}\n\t         * @property {OpenSeadragon.World} eventSource - A reference to the World which raised the event.\n\t         * @property {OpenSeadragon.TiledImage} item - The item's underlying item.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'remove-item', { item: item } );\n\t    }\n\t});\n\t\n\t}( OpenSeadragon ));\n\t\n\t//# sourceMappingURL=openseadragon.js.map\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t//This file contains the ES6 extensions to the core Promises/A+ API\n\t\n\tvar Promise = __webpack_require__(3);\n\t\n\tmodule.exports = Promise;\n\t\n\t/* Static Functions */\n\t\n\tvar TRUE = valuePromise(true);\n\tvar FALSE = valuePromise(false);\n\tvar NULL = valuePromise(null);\n\tvar UNDEFINED = valuePromise(undefined);\n\tvar ZERO = valuePromise(0);\n\tvar EMPTYSTRING = valuePromise('');\n\t\n\tfunction valuePromise(value) {\n\t  var p = new Promise(Promise._61);\n\t  p._81 = 1;\n\t  p._65 = value;\n\t  return p;\n\t}\n\tPromise.resolve = function (value) {\n\t  if (value instanceof Promise) return value;\n\t\n\t  if (value === null) return NULL;\n\t  if (value === undefined) return UNDEFINED;\n\t  if (value === true) return TRUE;\n\t  if (value === false) return FALSE;\n\t  if (value === 0) return ZERO;\n\t  if (value === '') return EMPTYSTRING;\n\t\n\t  if (typeof value === 'object' || typeof value === 'function') {\n\t    try {\n\t      var then = value.then;\n\t      if (typeof then === 'function') {\n\t        return new Promise(then.bind(value));\n\t      }\n\t    } catch (ex) {\n\t      return new Promise(function (resolve, reject) {\n\t        reject(ex);\n\t      });\n\t    }\n\t  }\n\t  return valuePromise(value);\n\t};\n\t\n\tPromise.all = function (arr) {\n\t  var args = Array.prototype.slice.call(arr);\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    if (args.length === 0) return resolve([]);\n\t    var remaining = args.length;\n\t    function res(i, val) {\n\t      if (val && (typeof val === 'object' || typeof val === 'function')) {\n\t        if (val instanceof Promise && val.then === Promise.prototype.then) {\n\t          while (val._81 === 3) {\n\t            val = val._65;\n\t          }\n\t          if (val._81 === 1) return res(i, val._65);\n\t          if (val._81 === 2) reject(val._65);\n\t          val.then(function (val) {\n\t            res(i, val);\n\t          }, reject);\n\t          return;\n\t        } else {\n\t          var then = val.then;\n\t          if (typeof then === 'function') {\n\t            var p = new Promise(then.bind(val));\n\t            p.then(function (val) {\n\t              res(i, val);\n\t            }, reject);\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      args[i] = val;\n\t      if (--remaining === 0) {\n\t        resolve(args);\n\t      }\n\t    }\n\t    for (var i = 0; i < args.length; i++) {\n\t      res(i, args[i]);\n\t    }\n\t  });\n\t};\n\t\n\tPromise.reject = function (value) {\n\t  return new Promise(function (resolve, reject) {\n\t    reject(value);\n\t  });\n\t};\n\t\n\tPromise.race = function (values) {\n\t  return new Promise(function (resolve, reject) {\n\t    values.forEach(function(value){\n\t      Promise.resolve(value).then(resolve, reject);\n\t    });\n\t  });\n\t};\n\t\n\t/* Prototype Methods */\n\t\n\tPromise.prototype['catch'] = function (onRejected) {\n\t  return this.then(null, onRejected);\n\t};\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(3);\n\t\n\tvar DEFAULT_WHITELIST = [\n\t  ReferenceError,\n\t  TypeError,\n\t  RangeError\n\t];\n\t\n\tvar enabled = false;\n\texports.disable = disable;\n\tfunction disable() {\n\t  enabled = false;\n\t  Promise._10 = null;\n\t  Promise._97 = null;\n\t}\n\t\n\texports.enable = enable;\n\tfunction enable(options) {\n\t  options = options || {};\n\t  if (enabled) disable();\n\t  enabled = true;\n\t  var id = 0;\n\t  var displayId = 0;\n\t  var rejections = {};\n\t  Promise._10 = function (promise) {\n\t    if (\n\t      promise._81 === 2 && // IS REJECTED\n\t      rejections[promise._72]\n\t    ) {\n\t      if (rejections[promise._72].logged) {\n\t        onHandled(promise._72);\n\t      } else {\n\t        clearTimeout(rejections[promise._72].timeout);\n\t      }\n\t      delete rejections[promise._72];\n\t    }\n\t  };\n\t  Promise._97 = function (promise, err) {\n\t    if (promise._45 === 0) { // not yet handled\n\t      promise._72 = id++;\n\t      rejections[promise._72] = {\n\t        displayId: null,\n\t        error: err,\n\t        timeout: setTimeout(\n\t          onUnhandled.bind(null, promise._72),\n\t          // For reference errors and type errors, this almost always\n\t          // means the programmer made a mistake, so log them after just\n\t          // 100ms\n\t          // otherwise, wait 2 seconds to see if they get handled\n\t          matchWhitelist(err, DEFAULT_WHITELIST)\n\t            ? 100\n\t            : 2000\n\t        ),\n\t        logged: false\n\t      };\n\t    }\n\t  };\n\t  function onUnhandled(id) {\n\t    if (\n\t      options.allRejections ||\n\t      matchWhitelist(\n\t        rejections[id].error,\n\t        options.whitelist || DEFAULT_WHITELIST\n\t      )\n\t    ) {\n\t      rejections[id].displayId = displayId++;\n\t      if (options.onUnhandled) {\n\t        rejections[id].logged = true;\n\t        options.onUnhandled(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      } else {\n\t        rejections[id].logged = true;\n\t        logError(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      }\n\t    }\n\t  }\n\t  function onHandled(id) {\n\t    if (rejections[id].logged) {\n\t      if (options.onHandled) {\n\t        options.onHandled(rejections[id].displayId, rejections[id].error);\n\t      } else if (!rejections[id].onUnhandled) {\n\t        console.warn(\n\t          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n\t        );\n\t        console.warn(\n\t          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n\t          rejections[id].displayId + '.'\n\t        );\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction logError(id, error) {\n\t  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n\t  var errStr = (error && (error.stack || error)) + '';\n\t  errStr.split('\\n').forEach(function (line) {\n\t    console.warn('  ' + line);\n\t  });\n\t}\n\t\n\tfunction matchWhitelist(error, list) {\n\t  return list.some(function (cls) {\n\t    return error instanceof cls;\n\t  });\n\t}\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/** @license React v16.8.6\n\t * react-dom.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t/*\n\t Modernizr 3.0.0pre (Custom Build) | MIT\n\t*/\n\t'use strict';var aa=__webpack_require__(1),n=__webpack_require__(2),r=__webpack_require__(19);function ba(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[c,d,e,f,g,h],k=0;a=Error(b.replace(/%s/g,function(){return l[k++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\n\tfunction x(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ba(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:x(\"227\");function ca(a,b,c,d,e,f,g,h,l){var k=Array.prototype.slice.call(arguments,3);try{b.apply(c,k)}catch(m){this.onError(m)}}\n\tvar da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,l){da=!1;ea=null;ca.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,l){ja.apply(this,arguments);if(da){if(da){var k=ea;da=!1;ea=null}else x(\"198\"),k=void 0;fa||(fa=!0,ha=k)}}var la=null,ma={};\n\tfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:x(\"96\",a);if(!oa[c]){b.extractEvents?void 0:x(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?x(\"99\",h):void 0;pa[h]=f;var l=f.phasedRegistrationNames;if(l){for(e in l)l.hasOwnProperty(e)&&qa(l[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:x(\"98\",d,a)}}}}\n\tfunction qa(a,b,c){ra[a]?x(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={},ta=null,ua=null,va=null;function wa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=va(c);ka(d,b,void 0,a);a.currentTarget=null}function xa(a,b){null==b?x(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\n\tfunction ya(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var za=null;function Aa(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)wa(a,b[d],c[d]);else b&&wa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}\n\tvar Ba={injectEventPluginOrder:function(a){la?x(\"101\"):void 0;la=Array.prototype.slice.call(a);na()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?x(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}};\n\tfunction Ca(a,b){var c=a.stateNode;if(!c)return null;var d=ta(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?x(\"231\",b,typeof c):void 0;\n\treturn c}function Da(a){null!==a&&(za=xa(za,a));a=za;za=null;if(a&&(ya(a,Aa),za?x(\"95\"):void 0,fa))throw a=ha,fa=!1,ha=null,a;}var Ea=Math.random().toString(36).slice(2),Fa=\"__reactInternalInstance$\"+Ea,Ga=\"__reactEventHandlers$\"+Ea;function Ha(a){if(a[Fa])return a[Fa];for(;!a[Fa];)if(a.parentNode)a=a.parentNode;else return null;a=a[Fa];return 5===a.tag||6===a.tag?a:null}function Ia(a){a=a[Fa];return!a||5!==a.tag&&6!==a.tag?null:a}\n\tfunction Ja(a){if(5===a.tag||6===a.tag)return a.stateNode;x(\"33\")}function Ka(a){return a[Ga]||null}function La(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ma(a,b,c){if(b=Ca(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a)}\n\tfunction Na(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=La(b);for(b=c.length;0<b--;)Ma(c[b],\"captured\",a);for(b=0;b<c.length;b++)Ma(c[b],\"bubbled\",a)}}function Oa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ca(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a))}function Pa(a){a&&a.dispatchConfig.registrationName&&Oa(a._targetInst,null,a)}\n\tfunction Qa(a){ya(a,Na)}var Ra=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Sa(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ta={animationend:Sa(\"Animation\",\"AnimationEnd\"),animationiteration:Sa(\"Animation\",\"AnimationIteration\"),animationstart:Sa(\"Animation\",\"AnimationStart\"),transitionend:Sa(\"Transition\",\"TransitionEnd\")},Ua={},Va={};\n\tRa&&(Va=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ta.animationend.animation,delete Ta.animationiteration.animation,delete Ta.animationstart.animation),\"TransitionEvent\"in window||delete Ta.transitionend.transition);function Wa(a){if(Ua[a])return Ua[a];if(!Ta[a])return a;var b=Ta[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Va)return Ua[a]=b[c];return a}\n\tvar Xa=Wa(\"animationend\"),Ya=Wa(\"animationiteration\"),Za=Wa(\"animationstart\"),$a=Wa(\"transitionend\"),ab=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),bb=null,cb=null,db=null;\n\tfunction eb(){if(db)return db;var a,b=cb,c=b.length,d,e=\"value\"in bb?bb.value:bb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return db=e.slice(a,1<d?1-d:void 0)}function fb(){return!0}function gb(){return!1}\n\tfunction y(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?fb:gb;this.isPropagationStopped=gb;return this}\n\tn(y.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=fb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=fb)},persist:function(){this.isPersistent=fb},isPersistent:gb,destructor:function(){var a=this.constructor.Interface,\n\tb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=gb;this._dispatchInstances=this._dispatchListeners=null}});y.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\n\ty.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;hb(c);return c};hb(y);function ib(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function jb(a){a instanceof this?void 0:x(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\n\tfunction hb(a){a.eventPool=[];a.getPooled=ib;a.release=jb}var kb=y.extend({data:null}),lb=y.extend({data:null}),mb=[9,13,27,32],nb=Ra&&\"CompositionEvent\"in window,ob=null;Ra&&\"documentMode\"in document&&(ob=document.documentMode);\n\tvar pb=Ra&&\"TextEvent\"in window&&!ob,qb=Ra&&(!nb||ob&&8<ob&&11>=ob),rb=String.fromCharCode(32),sb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\n\tcaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},tb=!1;\n\tfunction ub(a,b){switch(a){case \"keyup\":return-1!==mb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function vb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var wb=!1;function xb(a,b){switch(a){case \"compositionend\":return vb(b);case \"keypress\":if(32!==b.which)return null;tb=!0;return rb;case \"textInput\":return a=b.data,a===rb&&tb?null:a;default:return null}}\n\tfunction yb(a,b){if(wb)return\"compositionend\"===a||!nb&&ub(a,b)?(a=eb(),db=cb=bb=null,wb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return qb&&\"ko\"!==b.locale?null:b.data;default:return null}}\n\tvar zb={eventTypes:sb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(nb)b:{switch(a){case \"compositionstart\":e=sb.compositionStart;break b;case \"compositionend\":e=sb.compositionEnd;break b;case \"compositionupdate\":e=sb.compositionUpdate;break b}e=void 0}else wb?ub(a,c)&&(e=sb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=sb.compositionStart);e?(qb&&\"ko\"!==c.locale&&(wb||e!==sb.compositionStart?e===sb.compositionEnd&&wb&&(f=eb()):(bb=d,cb=\"value\"in bb?bb.value:bb.textContent,wb=\n\t!0)),e=kb.getPooled(e,b,c,d),f?e.data=f:(f=vb(c),null!==f&&(e.data=f)),Qa(e),f=e):f=null;(a=pb?xb(a,c):yb(a,c))?(b=lb.getPooled(sb.beforeInput,b,c,d),b.data=a,Qa(b)):b=null;return null===f?b:null===b?f:[f,b]}},Ab=null,Bb=null,Cb=null;function Db(a){if(a=ua(a)){\"function\"!==typeof Ab?x(\"280\"):void 0;var b=ta(a.stateNode);Ab(a.stateNode,a.type,b)}}function Eb(a){Bb?Cb?Cb.push(a):Cb=[a]:Bb=a}function Fb(){if(Bb){var a=Bb,b=Cb;Cb=Bb=null;Db(a);if(b)for(a=0;a<b.length;a++)Db(b[a])}}\n\tfunction Gb(a,b){return a(b)}function Hb(a,b,c){return a(b,c)}function Ib(){}var Jb=!1;function Kb(a,b){if(Jb)return a(b);Jb=!0;try{return Gb(a,b)}finally{if(Jb=!1,null!==Bb||null!==Cb)Ib(),Fb()}}var Lb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Mb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Lb[a.type]:\"textarea\"===b?!0:!1}\n\tfunction Nb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Ob(a){if(!Ra)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Pb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\n\tfunction Qb(a){var b=Pb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\n\tnull;delete a[b]}}}}function Rb(a){a._valueTracker||(a._valueTracker=Qb(a))}function Sb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Pb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Tb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Tb.hasOwnProperty(\"ReactCurrentDispatcher\")||(Tb.ReactCurrentDispatcher={current:null});\n\tvar Ub=/^(.*)[\\\\\\/]/,z=\"function\"===typeof Symbol&&Symbol.for,Vb=z?Symbol.for(\"react.element\"):60103,Wb=z?Symbol.for(\"react.portal\"):60106,Xb=z?Symbol.for(\"react.fragment\"):60107,Yb=z?Symbol.for(\"react.strict_mode\"):60108,Zb=z?Symbol.for(\"react.profiler\"):60114,$b=z?Symbol.for(\"react.provider\"):60109,ac=z?Symbol.for(\"react.context\"):60110,bc=z?Symbol.for(\"react.concurrent_mode\"):60111,cc=z?Symbol.for(\"react.forward_ref\"):60112,dc=z?Symbol.for(\"react.suspense\"):60113,ec=z?Symbol.for(\"react.memo\"):\n\t60115,fc=z?Symbol.for(\"react.lazy\"):60116,gc=\"function\"===typeof Symbol&&Symbol.iterator;function hc(a){if(null===a||\"object\"!==typeof a)return null;a=gc&&a[gc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\n\tfunction ic(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case bc:return\"ConcurrentMode\";case Xb:return\"Fragment\";case Wb:return\"Portal\";case Zb:return\"Profiler\";case Yb:return\"StrictMode\";case dc:return\"Suspense\"}if(\"object\"===typeof a)switch(a.$$typeof){case ac:return\"Context.Consumer\";case $b:return\"Context.Provider\";case cc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\n\t\")\":\"ForwardRef\");case ec:return ic(a.type);case fc:if(a=1===a._status?a._result:null)return ic(a)}return null}function jc(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=ic(a.type);c=null;d&&(c=ic(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Ub,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\n\tvar kc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,lc=Object.prototype.hasOwnProperty,mc={},nc={};\n\tfunction oc(a){if(lc.call(nc,a))return!0;if(lc.call(mc,a))return!1;if(kc.test(a))return nc[a]=!0;mc[a]=!0;return!1}function pc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\n\tfunction qc(a,b,c,d){if(null===b||\"undefined\"===typeof b||pc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function C(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var D={};\n\t\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new C(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new C(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new C(a,2,!1,a.toLowerCase(),null)});\n\t[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new C(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new C(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new C(a,3,!0,a,null)});\n\t[\"capture\",\"download\"].forEach(function(a){D[a]=new C(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new C(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new C(a,5,!1,a.toLowerCase(),null)});var rc=/[\\-:]([a-z])/g;function sc(a){return a[1].toUpperCase()}\n\t\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(rc,\n\tsc);D[b]=new C(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new C(a,1,!1,a.toLowerCase(),null)});\n\tfunction tc(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(qc(b,c,e,d)&&(c=null),d||null===e?oc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\n\tfunction uc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function vc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\n\tfunction wc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=uc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function xc(a,b){b=b.checked;null!=b&&tc(a,\"checked\",b,!1)}\n\tfunction yc(a,b){xc(a,b);var c=uc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?zc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&zc(a,b.type,uc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\n\tfunction Ac(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\n\tfunction zc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Bc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Cc(a,b,c){a=y.getPooled(Bc.change,a,b,c);a.type=\"change\";Eb(c);Qa(a);return a}var Dc=null,Ec=null;function Fc(a){Da(a)}\n\tfunction Gc(a){var b=Ja(a);if(Sb(b))return a}function Hc(a,b){if(\"change\"===a)return b}var Ic=!1;Ra&&(Ic=Ob(\"input\")&&(!document.documentMode||9<document.documentMode));function Jc(){Dc&&(Dc.detachEvent(\"onpropertychange\",Kc),Ec=Dc=null)}function Kc(a){\"value\"===a.propertyName&&Gc(Ec)&&(a=Cc(Ec,a,Nb(a)),Kb(Fc,a))}function Lc(a,b,c){\"focus\"===a?(Jc(),Dc=b,Ec=c,Dc.attachEvent(\"onpropertychange\",Kc)):\"blur\"===a&&Jc()}function Mc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Gc(Ec)}\n\tfunction Nc(a,b){if(\"click\"===a)return Gc(b)}function Oc(a,b){if(\"input\"===a||\"change\"===a)return Gc(b)}\n\tvar Pc={eventTypes:Bc,_isInputEventSupported:Ic,extractEvents:function(a,b,c,d){var e=b?Ja(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Hc:Mb(e)?Ic?f=Oc:(f=Mc,g=Lc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Nc);if(f&&(f=f(a,b)))return Cc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&zc(e,\"number\",e.value)}},Qc=y.extend({view:null,detail:null}),Rc={Alt:\"altKey\",\n\tControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Sc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Rc[a])?!!b[a]:!1}function Tc(){return Sc}\n\tvar Uc=0,Vc=0,Wc=!1,Xc=!1,Yc=Qc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Tc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=Uc;Uc=a.screenX;return Wc?\"mousemove\"===a.type?a.screenX-b:0:(Wc=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\n\tvar b=Vc;Vc=a.screenY;return Xc?\"mousemove\"===a.type?a.screenY-b:0:(Xc=!0,0)}}),Zc=Yc.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),$c={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\n\tdependencies:[\"pointerout\",\"pointerover\"]}},ad={eventTypes:$c,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ha(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,l=void 0,k=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=Yc,h=$c.mouseLeave,l=$c.mouseEnter,k=\"mouse\";\n\telse if(\"pointerout\"===a||\"pointerover\"===a)g=Zc,h=$c.pointerLeave,l=$c.pointerEnter,k=\"pointer\";var m=null==f?e:Ja(f);e=null==b?e:Ja(b);a=g.getPooled(h,f,c,d);a.type=k+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(l,b,c,d);c.type=k+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;k=0;for(g=b;g;g=La(g))k++;g=0;for(l=e;l;l=La(l))g++;for(;0<k-g;)b=La(b),k--;for(;0<g-k;)e=La(e),g--;for(;k--;){if(b===e||b===e.alternate)break a;b=La(b);e=La(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){k=\n\tf.alternate;if(null!==k&&k===e)break;b.push(f);f=La(f)}for(f=[];d&&d!==e;){k=d.alternate;if(null!==k&&k===e)break;f.push(d);d=La(d)}for(d=0;d<b.length;d++)Oa(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Oa(f[d],\"captured\",c);return[a,c]}};function bd(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var cd=Object.prototype.hasOwnProperty;\n\tfunction dd(a,b){if(bd(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!cd.call(b,c[d])||!bd(a[c[d]],b[c[d]]))return!1;return!0}function ed(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function fd(a){2!==ed(a)?x(\"188\"):void 0}\n\tfunction gd(a){var b=a.alternate;if(!b)return b=ed(a),3===b?x(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return fd(e),a;if(g===d)return fd(e),b;g=g.sibling}x(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\n\tvoid 0:x(\"189\")}}c.alternate!==d?x(\"190\"):void 0}3!==c.tag?x(\"188\"):void 0;return c.stateNode.current===c?a:b}function hd(a){a=gd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\n\tvar id=y.extend({animationName:null,elapsedTime:null,pseudoElement:null}),jd=y.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),kd=Qc.extend({relatedTarget:null});function ld(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\n\tvar md={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n\t116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},od=Qc.extend({key:function(a){if(a.key){var b=md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=ld(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?nd[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Tc,charCode:function(a){return\"keypress\"===\n\ta.type?ld(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?ld(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),pd=Yc.extend({dataTransfer:null}),qd=Qc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Tc}),rd=y.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),sd=Yc.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\n\ta?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),td=[[\"abort\",\"abort\"],[Xa,\"animationEnd\"],[Ya,\"animationIteration\"],[Za,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n\t[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n\t[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[$a,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],ud={},vd={};function wd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};ud[a]=b;vd[c]=b}\n\t[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n\t[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){wd(a,!0)});td.forEach(function(a){wd(a,!1)});\n\tvar xd={eventTypes:ud,isInteractiveTopLevelEventType:function(a){a=vd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=vd[a];if(!e)return null;switch(a){case \"keypress\":if(0===ld(c))return null;case \"keydown\":case \"keyup\":a=od;break;case \"blur\":case \"focus\":a=kd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=Yc;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\n\tpd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=qd;break;case Xa:case Ya:case Za:a=id;break;case $a:a=rd;break;case \"scroll\":a=Qc;break;case \"wheel\":a=sd;break;case \"copy\":case \"cut\":case \"paste\":a=jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=Zc;break;default:a=y}b=a.getPooled(e,b,c,d);Qa(b);return b}},yd=xd.isInteractiveTopLevelEventType,\n\tzd=[];function Ad(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ha(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Nb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<oa.length;h++){var l=oa[h];l&&(l=l.extractEvents(d,b,f,e))&&(g=xa(g,l))}Da(g)}}var Bd=!0;\n\tfunction E(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!1)}function Ed(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!0)}function Cd(a,b){Hb(Dd,a,b)}\n\tfunction Dd(a,b){if(Bd){var c=Nb(b);c=Ha(c);null===c||\"number\"!==typeof c.tag||2===ed(c)||(c=null);if(zd.length){var d=zd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Kb(Ad,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>zd.length&&zd.push(a)}}}var Fd={},Gd=0,Hd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\n\tfunction Id(a){Object.prototype.hasOwnProperty.call(a,Hd)||(a[Hd]=Gd++,Fd[a[Hd]]={});return Fd[a[Hd]]}function Jd(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Kd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\n\tfunction Ld(a,b){var c=Kd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Kd(c)}}function Md(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Md(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\n\tfunction Nd(){for(var a=window,b=Jd();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Jd(a.document)}return b}function Od(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\n\tfunction Pd(){var a=Nd();if(Od(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{b=(b=a.ownerDocument)&&b.defaultView||window;var c=b.getSelection&&b.getSelection();if(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(A){b=null;break a}var f=0,g=-1,h=-1,l=0,k=0,m=a,p=null;b:for(;;){for(var t;;){m!==b||0!==d&&3!==m.nodeType||(g=f+d);m!==e||0!==c&&3!==m.nodeType||(h=f+c);3===m.nodeType&&(f+=m.nodeValue.length);\n\tif(null===(t=m.firstChild))break;p=m;m=t}for(;;){if(m===a)break b;p===b&&++l===d&&(g=f);p===e&&++k===c&&(h=f);if(null!==(t=m.nextSibling))break;m=p;p=m.parentNode}m=t}b=-1===g||-1===h?null:{start:g,end:h}}else b=null}b=b||{start:0,end:0}}else b=null;return{focusedElem:a,selectionRange:b}}\n\tfunction Qd(a){var b=Nd(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Md(c.ownerDocument.documentElement,c)){if(null!==d&&Od(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ld(c,f);var g=Ld(c,\n\td);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\n\tvar Rd=Ra&&\"documentMode\"in document&&11>=document.documentMode,Sd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Td=null,Ud=null,Vd=null,Wd=!1;\n\tfunction Xd(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(Wd||null==Td||Td!==Jd(c))return null;c=Td;\"selectionStart\"in c&&Od(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Vd&&dd(Vd,c)?null:(Vd=c,a=y.getPooled(Sd.select,Ud,a,b),a.type=\"select\",a.target=Td,Qa(a),a)}\n\tvar Yd={eventTypes:Sd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Id(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ja(b):window;switch(a){case \"focus\":if(Mb(e)||\"true\"===e.contentEditable)Td=e,Ud=b,Vd=null;break;case \"blur\":Vd=Ud=Td=null;break;case \"mousedown\":Wd=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return Wd=!1,Xd(c,d);case \"selectionchange\":if(Rd)break;\n\tcase \"keydown\":case \"keyup\":return Xd(c,d)}return null}};Ba.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ta=Ka;ua=Ia;va=Ja;Ba.injectEventPluginsByName({SimpleEventPlugin:xd,EnterLeaveEventPlugin:ad,ChangeEventPlugin:Pc,SelectEventPlugin:Yd,BeforeInputEventPlugin:zb});function Zd(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\n\tfunction $d(a,b){a=n({children:void 0},b);if(b=Zd(b.children))a.children=b;return a}function ae(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+uc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\n\tfunction be(a,b){null!=b.dangerouslySetInnerHTML?x(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?x(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:x(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:uc(c)}}\n\tfunction de(a,b){var c=uc(b.value),d=uc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var fe={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\n\tfunction ge(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function he(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?ge(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\n\tvar ie=void 0,je=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==fe.svg||\"innerHTML\"in a)a.innerHTML=b;else{ie=ie||document.createElement(\"div\");ie.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\n\tfunction ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\n\tvar le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\n\tfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(le).forEach(function(a){me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);le[b]=le[a]})});function ne(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||le.hasOwnProperty(a)&&le[a]?(\"\"+b).trim():b+\"px\"}\n\tfunction oe(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=ne(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var pe=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\n\tfunction qe(a,b){b&&(pe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?x(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?x(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:x(\"61\")),null!=b.style&&\"object\"!==typeof b.style?x(\"62\",\"\"):void 0)}\n\tfunction re(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\n\tfunction se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Id(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Ed(\"scroll\",a);break;case \"focus\":case \"blur\":Ed(\"focus\",a);Ed(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Ob(e)&&Ed(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===ab.indexOf(e)&&E(e,a)}c[e]=!0}}}function te(){}var ue=null,ve=null;\n\tfunction we(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function xe(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\n\tvar ye=\"function\"===typeof setTimeout?setTimeout:void 0,ze=\"function\"===typeof clearTimeout?clearTimeout:void 0,Ae=r.unstable_scheduleCallback,Be=r.unstable_cancelCallback;\n\tfunction Ce(a,b,c,d,e){a[Ga]=e;\"input\"===c&&\"radio\"===e.type&&null!=e.name&&xc(a,e);re(c,d);d=re(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?oe(a,h):\"dangerouslySetInnerHTML\"===g?je(a,h):\"children\"===g?ke(a,h):tc(a,g,h,d)}switch(c){case \"input\":yc(a,e);break;case \"textarea\":de(a,e);break;case \"select\":b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ae(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?ae(a,!!e.multiple,e.defaultValue,\n\t!0):ae(a,!!e.multiple,e.multiple?[]:\"\",!1))}}function De(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function Ee(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var Fe=[],Ge=-1;function F(a){0>Ge||(a.current=Fe[Ge],Fe[Ge]=null,Ge--)}function G(a,b){Ge++;Fe[Ge]=a.current;a.current=b}var He={},H={current:He},I={current:!1},Ie=He;\n\tfunction Je(a,b){var c=a.type.contextTypes;if(!c)return He;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function J(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ke(a){F(I,a);F(H,a)}function Le(a){F(I,a);F(H,a)}\n\tfunction Me(a,b,c){H.current!==He?x(\"168\"):void 0;G(H,b,a);G(I,c,a)}function Ne(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:x(\"108\",ic(b)||\"Unknown\",e);return n({},c,d)}function Oe(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||He;Ie=H.current;G(H,b,a);G(I,I.current,a);return!0}\n\tfunction Pe(a,b,c){var d=a.stateNode;d?void 0:x(\"169\");c?(b=Ne(a,b,Ie),d.__reactInternalMemoizedMergedChildContext=b,F(I,a),F(H,a),G(H,b,a)):F(I,a);G(I,c,a)}var Qe=null,Re=null;function Se(a){return function(b){try{return a(b)}catch(c){}}}\n\tfunction Te(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Qe=Se(function(a){return b.onCommitFiberRoot(c,a)});Re=Se(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\n\tfunction Ue(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function K(a,b,c,d){return new Ue(a,b,c,d)}\n\tfunction Ve(a){a=a.prototype;return!(!a||!a.isReactComponent)}function We(a){if(\"function\"===typeof a)return Ve(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===cc)return 11;if(a===ec)return 14}return 2}\n\tfunction Xe(a,b){var c=a.alternate;null===c?(c=K(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.contextDependencies=a.contextDependencies;c.sibling=a.sibling;\n\tc.index=a.index;c.ref=a.ref;return c}\n\tfunction Ye(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)Ve(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case Xb:return Ze(c.children,e,f,b);case bc:return $e(c,e|3,f,b);case Yb:return $e(c,e|2,f,b);case Zb:return a=K(12,c,b,e|4),a.elementType=Zb,a.type=Zb,a.expirationTime=f,a;case dc:return a=K(13,c,b,e),a.elementType=dc,a.type=dc,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case $b:g=10;break a;case ac:g=9;break a;case cc:g=11;break a;case ec:g=\n\t14;break a;case fc:g=16;d=null;break a}x(\"130\",null==a?a:typeof a,\"\")}b=K(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Ze(a,b,c,d){a=K(7,a,d,b);a.expirationTime=c;return a}function $e(a,b,c,d){a=K(8,a,d,b);b=0===(b&1)?Yb:bc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function af(a,b,c){a=K(6,a,null,b);a.expirationTime=c;return a}\n\tfunction bf(a,b,c){b=K(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function cf(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);df(b,a)}\n\tfunction ef(a,b){a.didError=!1;if(0===b)a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0;else{b<a.latestPingedTime&&(a.latestPingedTime=0);var c=a.latestPendingTime;0!==c&&(c>b?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>b&&(a.earliestPendingTime=a.latestPendingTime));c=a.earliestSuspendedTime;0===c?cf(a,b):b<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,cf(a,b)):\n\tb>c&&cf(a,b)}df(0,a)}function ff(a,b){a.didError=!1;a.latestPingedTime>=b&&(a.latestPingedTime=0);var c=a.earliestPendingTime,d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);df(b,a)}\n\tfunction gf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}function df(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}function L(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}\n\tfunction hf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:a._status=0;b=a._ctor;b=b();b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)});switch(a._status){case 1:return a._result;case 2:throw a._result;}a._result=b;throw b;}}var jf=(new aa.Component).refs;\n\tfunction kf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\n\tvar tf={isMounted:function(a){return(a=a._reactInternalFiber)?2===ed(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.tag=rf;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=lf();c=mf(c,a);var d=nf(c);d.tag=\n\tsf;void 0!==b&&null!==b&&(d.callback=b);of();pf(a,d);qf(a,c)}};function uf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!dd(c,d)||!dd(e,f):!0}\n\tfunction vf(a,b,c){var d=!1,e=He;var f=b.contextType;\"object\"===typeof f&&null!==f?f=M(f):(e=J(b)?Ie:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Je(a,e):He);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=tf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\n\tfunction wf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&tf.enqueueReplaceState(b,b.state,null)}\n\tfunction xf(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jf;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=M(f):(f=J(b)?Ie:H.current,e.context=Je(a,f));f=a.updateQueue;null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kf(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==\n\ttypeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&tf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var zf=Array.isArray;\n\tfunction Af(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?x(\"309\"):void 0,d=c.stateNode);d?void 0:x(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===jf&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?x(\"284\"):void 0;c._owner?void 0:x(\"290\",a)}return a}\n\tfunction Bf(a,b){\"textarea\"!==a.type&&x(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\n\tfunction Cf(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Xe(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n\t2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=af(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function l(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=Af(a,b,c),d.return=a,d;d=Ye(c.type,c.key,c.props,null,a.mode,d);d.ref=Af(a,b,c);d.return=a;return d}function k(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\n\tc.implementation)return b=bf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ze(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function p(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=af(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Vb:return c=Ye(b.type,b.key,b.props,null,a.mode,c),c.ref=Af(a,null,b),c.return=a,c;case Wb:return b=bf(b,a.mode,c),b.return=a,b}if(zf(b)||\n\thc(b))return b=Ze(b,a.mode,c,null),b.return=a,b;Bf(a,b)}return null}function t(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Vb:return c.key===e?c.type===Xb?m(a,b,c.props.children,d,e):l(a,b,c,d):null;case Wb:return c.key===e?k(a,b,c,d):null}if(zf(c)||hc(c))return null!==e?null:m(a,b,c,d,null);Bf(a,c)}return null}function A(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\n\ta.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Vb:return a=a.get(null===d.key?c:d.key)||null,d.type===Xb?m(b,a,d.props.children,e,d.key):l(b,a,d,e);case Wb:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e)}if(zf(d)||hc(d))return a=a.get(c)||null,m(b,a,d,e,null);Bf(b,d)}return null}function v(e,g,h,k){for(var l=null,m=null,q=g,u=g=0,B=null;null!==q&&u<h.length;u++){q.index>u?(B=q,q=null):B=q.sibling;var w=t(e,q,h[u],k);if(null===w){null===q&&(q=B);break}a&&\n\tq&&null===w.alternate&&b(e,q);g=f(w,g,u);null===m?l=w:m.sibling=w;m=w;q=B}if(u===h.length)return c(e,q),l;if(null===q){for(;u<h.length;u++)if(q=p(e,h[u],k))g=f(q,g,u),null===m?l=q:m.sibling=q,m=q;return l}for(q=d(e,q);u<h.length;u++)if(B=A(q,e,u,h[u],k))a&&null!==B.alternate&&q.delete(null===B.key?u:B.key),g=f(B,g,u),null===m?l=B:m.sibling=B,m=B;a&&q.forEach(function(a){return b(e,a)});return l}function R(e,g,h,k){var l=hc(h);\"function\"!==typeof l?x(\"150\"):void 0;h=l.call(h);null==h?x(\"151\"):void 0;\n\tfor(var m=l=null,q=g,u=g=0,B=null,w=h.next();null!==q&&!w.done;u++,w=h.next()){q.index>u?(B=q,q=null):B=q.sibling;var v=t(e,q,w.value,k);if(null===v){q||(q=B);break}a&&q&&null===v.alternate&&b(e,q);g=f(v,g,u);null===m?l=v:m.sibling=v;m=v;q=B}if(w.done)return c(e,q),l;if(null===q){for(;!w.done;u++,w=h.next())w=p(e,w.value,k),null!==w&&(g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);return l}for(q=d(e,q);!w.done;u++,w=h.next())w=A(q,e,u,w.value,k),null!==w&&(a&&null!==w.alternate&&q.delete(null===w.key?u:\n\tw.key),g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);a&&q.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===Xb&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Vb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===Xb:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===Xb?f.props.children:f.props,h);d.ref=Af(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=\n\tk.sibling}f.type===Xb?(d=Ze(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ye(f.type,f.key,f.props,null,a.mode,h),h.ref=Af(a,d,f),h.return=a,a=h)}return g(a);case Wb:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=bf(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\n\t\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=af(f,a.mode,h),d.return=a,a=d),g(a);if(zf(f))return v(a,d,f,h);if(hc(f))return R(a,d,f,h);l&&Bf(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,x(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var Df=Cf(!0),Ef=Cf(!1),Ff={},N={current:Ff},Gf={current:Ff},Hf={current:Ff};function If(a){a===Ff?x(\"174\"):void 0;return a}\n\tfunction Jf(a,b){G(Hf,b,a);G(Gf,a,a);G(N,Ff,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:he(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=he(b,c)}F(N,a);G(N,b,a)}function Kf(a){F(N,a);F(Gf,a);F(Hf,a)}function Lf(a){If(Hf.current);var b=If(N.current);var c=he(b,a.type);b!==c&&(G(Gf,a,a),G(N,c,a))}function Mf(a){Gf.current===a&&(F(N,a),F(Gf,a))}\n\tvar Nf=0,Of=2,Pf=4,Qf=8,Rf=16,Sf=32,Tf=64,Uf=128,Vf=Tb.ReactCurrentDispatcher,Wf=0,Xf=null,O=null,P=null,Yf=null,Q=null,Zf=null,$f=0,ag=null,bg=0,cg=!1,dg=null,eg=0;function fg(){x(\"321\")}function gg(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!bd(a[c],b[c]))return!1;return!0}\n\tfunction hg(a,b,c,d,e,f){Wf=f;Xf=b;P=null!==a?a.memoizedState:null;Vf.current=null===P?ig:jg;b=c(d,e);if(cg){do cg=!1,eg+=1,P=null!==a?a.memoizedState:null,Zf=Yf,ag=Q=O=null,Vf.current=jg,b=c(d,e);while(cg);dg=null;eg=0}Vf.current=kg;a=Xf;a.memoizedState=Yf;a.expirationTime=$f;a.updateQueue=ag;a.effectTag|=bg;a=null!==O&&null!==O.next;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;a?x(\"300\"):void 0;return b}function lg(){Vf.current=kg;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;cg=!1;dg=null;eg=0}\n\tfunction mg(){var a={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};null===Q?Yf=Q=a:Q=Q.next=a;return Q}function ng(){if(null!==Zf)Q=Zf,Zf=Q.next,O=P,P=null!==O?O.next:null;else{null===P?x(\"310\"):void 0;O=P;var a={memoizedState:O.memoizedState,baseState:O.baseState,queue:O.queue,baseUpdate:O.baseUpdate,next:null};Q=null===Q?Yf=a:Q.next=a;P=O.next}return Q}function og(a,b){return\"function\"===typeof b?b(a):b}\n\tfunction pg(a){var b=ng(),c=b.queue;null===c?x(\"311\"):void 0;c.lastRenderedReducer=a;if(0<eg){var d=c.dispatch;if(null!==dg){var e=dg.get(c);if(void 0!==e){dg.delete(c);var f=b.memoizedState;do f=a(f,e.action),e=e.next;while(null!==e);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate===c.last&&(b.baseState=f);c.lastRenderedState=f;return[f,d]}}return[b.memoizedState,d]}d=c.last;var g=b.baseUpdate;f=b.baseState;null!==g?(null!==d&&(d.next=null),d=g.next):d=null!==d?d.next:null;if(null!==\n\td){var h=e=null,l=d,k=!1;do{var m=l.expirationTime;m<Wf?(k||(k=!0,h=g,e=f),m>$f&&($f=m)):f=l.eagerReducer===a?l.eagerState:a(f,l.action);g=l;l=l.next}while(null!==l&&l!==d);k||(h=g,e=f);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate=h;b.baseState=e;c.lastRenderedState=f}return[b.memoizedState,c.dispatch]}\n\tfunction rg(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};null===ag?(ag={lastEffect:null},ag.lastEffect=a.next=a):(b=ag.lastEffect,null===b?ag.lastEffect=a.next=a:(c=b.next,b.next=a,a.next=c,ag.lastEffect=a));return a}function sg(a,b,c,d){var e=mg();bg|=a;e.memoizedState=rg(b,c,void 0,void 0===d?null:d)}\n\tfunction tg(a,b,c,d){var e=ng();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&gg(d,g.deps)){rg(Nf,c,f,d);return}}bg|=a;e.memoizedState=rg(b,c,f,d)}function ug(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function vg(){}\n\tfunction wg(a,b,c){25>eg?void 0:x(\"301\");var d=a.alternate;if(a===Xf||null!==d&&d===Xf)if(cg=!0,a={expirationTime:Wf,action:c,eagerReducer:null,eagerState:null,next:null},null===dg&&(dg=new Map),c=dg.get(b),void 0===c)dg.set(b,a);else{for(b=c;null!==b.next;)b=b.next;b.next=a}else{of();var e=lf();e=mf(e,a);var f={expirationTime:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.last;if(null===g)f.next=f;else{var h=g.next;null!==h&&(f.next=h);g.next=f}b.last=f;if(0===a.expirationTime&&(null===\n\td||0===d.expirationTime)&&(d=b.lastRenderedReducer,null!==d))try{var l=b.lastRenderedState,k=d(l,c);f.eagerReducer=d;f.eagerState=k;if(bd(k,l))return}catch(m){}finally{}qf(a,e)}}\n\tvar kg={readContext:M,useCallback:fg,useContext:fg,useEffect:fg,useImperativeHandle:fg,useLayoutEffect:fg,useMemo:fg,useReducer:fg,useRef:fg,useState:fg,useDebugValue:fg},ig={readContext:M,useCallback:function(a,b){mg().memoizedState=[a,void 0===b?null:b];return a},useContext:M,useEffect:function(a,b){return sg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return sg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,b){return sg(4,Pf|Sf,a,b)},\n\tuseMemo:function(a,b){var c=mg();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=mg();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={last:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=wg.bind(null,Xf,a);return[d.memoizedState,a]},useRef:function(a){var b=mg();a={current:a};return b.memoizedState=a},useState:function(a){var b=mg();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={last:null,dispatch:null,\n\tlastRenderedReducer:og,lastRenderedState:a};a=a.dispatch=wg.bind(null,Xf,a);return[b.memoizedState,a]},useDebugValue:vg},jg={readContext:M,useCallback:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];c.memoizedState=[a,b];return a},useContext:M,useEffect:function(a,b){return tg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return tg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,\n\tb){return tg(4,Pf|Sf,a,b)},useMemo:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a},useReducer:pg,useRef:function(){return ng().memoizedState},useState:function(a){return pg(og,a)},useDebugValue:vg},xg=null,yg=null,zg=!1;\n\tfunction Ag(a,b){var c=K(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function Bg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\n\tfunction Cg(a){if(zg){var b=yg;if(b){var c=b;if(!Bg(a,b)){b=De(c);if(!b||!Bg(a,b)){a.effectTag|=2;zg=!1;xg=a;return}Ag(xg,c)}xg=a;yg=Ee(b)}else a.effectTag|=2,zg=!1,xg=a}}function Dg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&18!==a.tag;)a=a.return;xg=a}function Eg(a){if(a!==xg)return!1;if(!zg)return Dg(a),zg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!xe(b,a.memoizedProps))for(b=yg;b;)Ag(a,b),b=De(b);Dg(a);yg=xg?De(a.stateNode):null;return!0}function Fg(){yg=xg=null;zg=!1}\n\tvar Gg=Tb.ReactCurrentOwner,qg=!1;function S(a,b,c,d){b.child=null===a?Ef(b,null,c,d):Df(b,a.child,c,d)}function Hg(a,b,c,d,e){c=c.render;var f=b.ref;Ig(b,e);d=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,d,e);return b.child}\n\tfunction Kg(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!Ve(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,Lg(a,b,g,d,e,f);a=Ye(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:dd,c(e,d)&&a.ref===b.ref))return Jg(a,b,f);b.effectTag|=1;a=Xe(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\n\tfunction Lg(a,b,c,d,e,f){return null!==a&&dd(a.memoizedProps,d)&&a.ref===b.ref&&(qg=!1,e<f)?Jg(a,b,f):Mg(a,b,c,d,f)}function Ng(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Mg(a,b,c,d,e){var f=J(c)?Ie:H.current;f=Je(b,f);Ig(b,e);c=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,c,e);return b.child}\n\tfunction Og(a,b,c,d,e){if(J(c)){var f=!0;Oe(b)}else f=!1;Ig(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),vf(b,c,d,e),xf(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var l=g.context,k=c.contextType;\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k));var m=c.getDerivedStateFromProps,p=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;p||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\t\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k);Pg=!1;var t=b.memoizedState;l=g.state=t;var A=b.updateQueue;null!==A&&(yf(b,A,d,g,e),l=b.memoizedState);h!==d||t!==l||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),l=b.memoizedState),(h=Pg||uf(b,c,h,d,t,l,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\n\tg.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=l),g.props=d,g.state=l,g.context=k,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:L(b.type,h),l=g.context,k=c.contextType,\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k)),m=c.getDerivedStateFromProps,(p=\"function\"===\n\ttypeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k),Pg=!1,l=b.memoizedState,t=g.state=l,A=b.updateQueue,null!==A&&(yf(b,A,d,g,e),t=b.memoizedState),h!==d||l!==t||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),t=b.memoizedState),(m=Pg||uf(b,c,h,d,l,t,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===\n\ttypeof g.componentWillUpdate&&g.componentWillUpdate(d,t,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,t,k)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=\n\tt),g.props=d,g.state=t,g.context=k,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),d=!1);return Qg(a,b,c,d,f,e)}\n\tfunction Qg(a,b,c,d,e,f){Ng(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Pe(b,c,!1),Jg(a,b,f);d=b.stateNode;Gg.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Df(b,a.child,null,f),b.child=Df(b,null,h,f)):S(a,b,h,f);b.memoizedState=d.state;e&&Pe(b,c,!0);return b.child}function Rg(a){var b=a.stateNode;b.pendingContext?Me(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Me(a,b.context,!1);Jf(a,b.containerInfo)}\n\tfunction Sg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;if(null===a)if(g){var h=e.fallback;a=Ze(null,d,0,null);0===(b.mode&1)&&(a.child=null!==b.memoizedState?b.child.child:b.child);d=Ze(h,d,c,null);a.sibling=d;c=a;c.return=d.return=b}else c=d=Ef(b,null,e.children,c);else null!==a.memoizedState?(d=a.child,h=d.sibling,g?(c=e.fallback,e=Xe(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==\n\tb.memoizedState?b.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=Xe(h,c,h.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=Df(b,d.child,e.children,c)):(h=a.child,g?(g=e.fallback,e=Ze(null,d,0,null),e.child=h,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=Ze(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=Df(b,h,e.children,c)),b.stateNode=a.stateNode;b.memoizedState=f;b.child=c;return d}\n\tfunction Jg(a,b,c){null!==a&&(b.contextDependencies=a.contextDependencies);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?x(\"153\"):void 0;if(null!==b.child){a=b.child;c=Xe(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Xe(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\n\tfunction Tg(a,b,c){var d=b.expirationTime;if(null!==a)if(a.memoizedProps!==b.pendingProps||I.current)qg=!0;else{if(d<c){qg=!1;switch(b.tag){case 3:Rg(b);Fg();break;case 5:Lf(b);break;case 1:J(b.type)&&Oe(b);break;case 4:Jf(b,b.stateNode.containerInfo);break;case 10:Ug(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return Sg(a,b,c);b=Jg(a,b,c);return null!==b?b.sibling:null}}return Jg(a,b,c)}}else qg=!1;b.expirationTime=0;switch(b.tag){case 2:d=\n\tb.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Je(b,H.current);Ig(b,c);e=hg(null,b,d,a,e,c);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;lg();if(J(d)){var f=!0;Oe(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&kf(b,d,g,a);e.updater=tf;b.stateNode=e;e._reactInternalFiber=b;xf(b,d,a,c);b=Qg(null,b,d,!0,f,\n\tc)}else b.tag=0,S(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=hf(e);b.type=a;e=b.tag=We(a);f=L(a,f);g=void 0;switch(e){case 0:g=Mg(null,b,a,f,c);break;case 1:g=Og(null,b,a,f,c);break;case 11:g=Hg(null,b,a,f,c);break;case 14:g=Kg(null,b,a,L(a.type,f),d,c);break;default:x(\"306\",a,\"\")}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Mg(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,\n\te=b.elementType===d?e:L(d,e),Og(a,b,d,e,c);case 3:Rg(b);d=b.updateQueue;null===d?x(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;yf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)Fg(),b=Jg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)yg=Ee(b.stateNode.containerInfo),xg=b,e=zg=!0;e?(b.effectTag|=2,b.child=Ef(b,null,d,c)):(S(a,b,d,c),Fg());b=b.child}return b;case 5:return Lf(b),null===a&&Cg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,\n\tg=e.children,xe(d,e)?g=null:null!==f&&xe(d,f)&&(b.effectTag|=16),Ng(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(S(a,b,g,c),b=b.child),b;case 6:return null===a&&Cg(b),null;case 13:return Sg(a,b,c);case 4:return Jf(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Df(b,null,d,c):S(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Hg(a,b,d,e,c);case 7:return S(a,b,b.pendingProps,c),b.child;case 8:return S(a,b,b.pendingProps.children,\n\tc),b.child;case 12:return S(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Ug(b,f);if(null!==g){var h=g.value;f=bd(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!I.current){b=Jg(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var l=h.contextDependencies;if(null!==l){g=h.child;for(var k=l.first;null!==k;){if(k.context===d&&0!==\n\t(k.observedBits&f)){1===h.tag&&(k=nf(c),k.tag=sf,pf(h,k));h.expirationTime<c&&(h.expirationTime=c);k=h.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);k=c;for(var m=h.return;null!==m;){var p=m.alternate;if(m.childExpirationTime<k)m.childExpirationTime=k,null!==p&&p.childExpirationTime<k&&(p.childExpirationTime=k);else if(null!==p&&p.childExpirationTime<k)p.childExpirationTime=k;else break;m=m.return}l.expirationTime<c&&(l.expirationTime=c);break}k=k.next}}else g=10===h.tag?h.type===b.type?\n\tnull:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}}S(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Ig(b,c),e=M(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,S(a,b,d,c),b.child;case 14:return e=b.type,f=L(e,b.pendingProps),f=L(e.type,f),Kg(a,b,e,f,d,c);case 15:return Lg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===\n\td?e:L(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,J(d)?(a=!0,Oe(b)):a=!1,Ig(b,c),vf(b,d,e,c),xf(b,d,e,c),Qg(null,b,d,!0,a,c)}x(\"156\")}var Vg={current:null},Wg=null,Xg=null,Yg=null;function Ug(a,b){var c=a.type._context;G(Vg,c._currentValue,a);c._currentValue=b}function Zg(a){var b=Vg.current;F(Vg,a);a.type._context._currentValue=b}function Ig(a,b){Wg=a;Yg=Xg=null;var c=a.contextDependencies;null!==c&&c.expirationTime>=b&&(qg=!0);a.contextDependencies=null}\n\tfunction M(a,b){if(Yg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)Yg=a,b=1073741823;b={context:a,observedBits:b,next:null};null===Xg?(null===Wg?x(\"308\"):void 0,Xg=b,Wg.contextDependencies={first:b,expirationTime:0}):Xg=Xg.next=b}return a._currentValue}var $g=0,rf=1,sf=2,ah=3,Pg=!1;function bh(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\n\tfunction ch(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function nf(a){return{expirationTime:a,tag:$g,payload:null,callback:null,next:null,nextEffect:null}}function dh(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\n\tfunction pf(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=bh(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=bh(a.memoizedState),e=c.updateQueue=bh(c.memoizedState)):d=a.updateQueue=ch(e):null===e&&(e=c.updateQueue=ch(d));null===e||d===e?dh(d,b):null===d.lastUpdate||null===e.lastUpdate?(dh(d,b),dh(e,b)):(dh(d,b),e.lastUpdate=b)}\n\tfunction eh(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=bh(a.memoizedState):fh(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function fh(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=ch(b));return b}\n\tfunction gh(a,b,c,d,e,f){switch(c.tag){case rf:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case ah:a.effectTag=a.effectTag&-2049|64;case $g:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case sf:Pg=!0}return d}\n\tfunction yf(a,b,c,d,e){Pg=!1;b=fh(a,b);for(var f=b.baseState,g=null,h=0,l=b.firstUpdate,k=f;null!==l;){var m=l.expirationTime;m<e?(null===g&&(g=l,f=k),h<m&&(h=m)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=32,l.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=l:(b.lastEffect.nextEffect=l,b.lastEffect=l)));l=l.next}m=null;for(l=b.firstCapturedUpdate;null!==l;){var p=l.expirationTime;p<e?(null===m&&(m=l,null===g&&(f=k)),h<p&&(h=p)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=\n\t32,l.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=l:(b.lastCapturedEffect.nextEffect=l,b.lastCapturedEffect=l)));l=l.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=k);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=k}\n\tfunction hh(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);ih(b.firstEffect,c);b.firstEffect=b.lastEffect=null;ih(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function ih(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?x(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\n\tfunction jh(a,b){return{value:a,source:b,stack:jc(b)}}function kh(a){a.effectTag|=4}var lh=void 0,mh=void 0,nh=void 0,oh=void 0;lh=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};mh=function(){};\n\tnh=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;If(N.current);a=null;switch(c){case \"input\":f=vc(g,f);d=vc(g,d);a=[];break;case \"option\":f=$d(g,f);d=$d(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=be(g,f);d=be(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=te)}qe(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\n\tc){var l=f[c];for(g in l)l.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(ra.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var k=d[c];l=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&k!==l&&(null!=k||null!=l))if(\"style\"===c)if(l){for(g in l)!l.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in k)k.hasOwnProperty(g)&&l[g]!==k[g]&&(h||\n\t(h={}),h[g]=k[g])}else h||(a||(a=[]),a.push(c,h)),h=k;else\"dangerouslySetInnerHTML\"===c?(k=k?k.__html:void 0,l=l?l.__html:void 0,null!=k&&l!==k&&(a=a||[]).push(c,\"\"+k)):\"children\"===c?l===k||\"string\"!==typeof k&&\"number\"!==typeof k||(a=a||[]).push(c,\"\"+k):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(ra.hasOwnProperty(c)?(null!=k&&se(e,c),a||l===k||(a=[])):(a=a||[]).push(c,k))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&kh(b)}};oh=function(a,b,c,d){c!==d&&kh(b)};\n\tvar ph=\"function\"===typeof WeakSet?WeakSet:Set;function qh(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=jc(c));null!==c&&ic(c.type);b=b.value;null!==a&&1===a.tag&&ic(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function rh(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){sh(a,c)}else b.current=null}\n\tfunction th(a,b,c){c=c.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do{if((d.tag&a)!==Nf){var e=d.destroy;d.destroy=void 0;void 0!==e&&e()}(d.tag&b)!==Nf&&(e=d.create,d.destroy=e());d=d.next}while(d!==c)}}\n\tfunction uh(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d.style.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=ne(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if(13===c.tag&&null!==c.memoizedState){d=c.child.sibling;d.return=c;c=d;continue}else if(null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===c.return||\n\tc.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\n\tfunction vh(a){\"function\"===typeof Re&&Re(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(void 0!==d){var e=a;try{d()}catch(f){sh(e,f)}}c=c.next}while(c!==b)}break;case 1:rh(a);b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){sh(a,f)}break;case 5:rh(a);break;case 4:wh(a)}}\n\tfunction xh(a){return 5===a.tag||3===a.tag||4===a.tag}\n\tfunction yh(a){a:{for(var b=a.return;null!==b;){if(xh(b)){var c=b;break a}b=b.return}x(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:x(\"161\")}c.effectTag&16&&(ke(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||xh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&\n\t2)continue b;if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=te)):b.appendChild(e.stateNode);\n\telse if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\n\tfunction wh(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?x(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(vh(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n\t(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag){if(null!==b.child){d=b.stateNode.containerInfo;e=!0;b.child.return=b;b=b.child;continue}}else if(vh(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\n\tfunction zh(a,b){switch(b.tag){case 0:case 11:case 14:case 15:th(Pf,Qf,b);break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&Ce(c,f,e,a,d,b)}break;case 6:null===b.stateNode?x(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;d=void 0;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=lf()));null!==a&&uh(a,d);c=\n\tb.updateQueue;if(null!==c){b.updateQueue=null;var g=b.stateNode;null===g&&(g=b.stateNode=new ph);c.forEach(function(a){var c=Ah.bind(null,b,a);g.has(a)||(g.add(a),a.then(c,c))})}break;case 17:break;default:x(\"163\")}}var Bh=\"function\"===typeof WeakMap?WeakMap:Map;function Ch(a,b,c){c=nf(c);c.tag=ah;c.payload={element:null};var d=b.value;c.callback=function(){Dh(d);qh(a,b)};return c}\n\tfunction Eh(a,b,c){c=nf(c);c.tag=ah;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Fh?Fh=new Set([this]):Fh.add(this));var c=b.value,e=b.stack;qh(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:\"\"})});return c}\n\tfunction Gh(a){switch(a.tag){case 1:J(a.type)&&Ke(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Kf(a),Le(a),b=a.effectTag,0!==(b&64)?x(\"285\"):void 0,a.effectTag=b&-2049|64,a;case 5:return Mf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 18:return null;case 4:return Kf(a),null;case 10:return Zg(a),null;default:return null}}\n\tvar Hh=Tb.ReactCurrentDispatcher,Ih=Tb.ReactCurrentOwner,Jh=1073741822,Kh=!1,T=null,Lh=null,U=0,Mh=-1,Nh=!1,V=null,Oh=!1,Ph=null,Qh=null,Rh=null,Fh=null;function Sh(){if(null!==T)for(var a=T.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ke(b);break;case 3:Kf(b);Le(b);break;case 5:Mf(b);break;case 4:Kf(b);break;case 10:Zg(b)}a=a.return}Lh=null;U=0;Mh=-1;Nh=!1;T=null}\n\tfunction Th(){for(;null!==V;){var a=V.effectTag;a&16&&ke(V.stateNode,\"\");if(a&128){var b=V.alternate;null!==b&&(b=b.ref,null!==b&&(\"function\"===typeof b?b(null):b.current=null))}switch(a&14){case 2:yh(V);V.effectTag&=-3;break;case 6:yh(V);V.effectTag&=-3;zh(V.alternate,V);break;case 4:zh(V.alternate,V);break;case 8:a=V,wh(a),a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null,a=a.alternate,null!==a&&(a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null)}V=V.nextEffect}}\n\tfunction Uh(){for(;null!==V;){if(V.effectTag&256)a:{var a=V.alternate,b=V;switch(b.tag){case 0:case 11:case 15:th(Of,Nf,b);break a;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:L(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}break a;case 3:case 5:case 6:case 4:case 17:break a;default:x(\"163\")}}V=V.nextEffect}}\n\tfunction Vh(a,b){for(;null!==V;){var c=V.effectTag;if(c&36){var d=V.alternate,e=V,f=b;switch(e.tag){case 0:case 11:case 15:th(Rf,Sf,e);break;case 1:var g=e.stateNode;if(e.effectTag&4)if(null===d)g.componentDidMount();else{var h=e.elementType===e.type?d.memoizedProps:L(e.type,d.memoizedProps);g.componentDidUpdate(h,d.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}d=e.updateQueue;null!==d&&hh(e,d,g,f);break;case 3:d=e.updateQueue;if(null!==d){g=null;if(null!==e.child)switch(e.child.tag){case 5:g=\n\te.child.stateNode;break;case 1:g=e.child.stateNode}hh(e,d,g,f)}break;case 5:f=e.stateNode;null===d&&e.effectTag&4&&we(e.type,e.memoizedProps)&&f.focus();break;case 6:break;case 4:break;case 12:break;case 13:break;case 17:break;default:x(\"163\")}}c&128&&(e=V.ref,null!==e&&(f=V.stateNode,\"function\"===typeof e?e(f):e.current=f));c&512&&(Ph=a);V=V.nextEffect}}\n\tfunction Wh(a,b){Rh=Qh=Ph=null;var c=W;W=!0;do{if(b.effectTag&512){var d=!1,e=void 0;try{var f=b;th(Uf,Nf,f);th(Nf,Tf,f)}catch(g){d=!0,e=g}d&&sh(b,e)}b=b.nextEffect}while(null!==b);W=c;c=a.expirationTime;0!==c&&Xh(a,c);X||W||Yh(1073741823,!1)}function of(){null!==Qh&&Be(Qh);null!==Rh&&Rh()}\n\tfunction Zh(a,b){Oh=Kh=!0;a.current===b?x(\"177\"):void 0;var c=a.pendingCommitExpirationTime;0===c?x(\"261\"):void 0;a.pendingCommitExpirationTime=0;var d=b.expirationTime,e=b.childExpirationTime;ef(a,e>d?e:d);Ih.current=null;d=void 0;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ue=Bd;ve=Pd();Bd=!1;for(V=d;null!==V;){e=!1;var f=void 0;try{Uh()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}for(V=d;null!==V;){e=!1;\n\tf=void 0;try{Th()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}Qd(ve);ve=null;Bd=!!ue;ue=null;a.current=b;for(V=d;null!==V;){e=!1;f=void 0;try{Vh(a,c)}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}if(null!==d&&null!==Ph){var g=Wh.bind(null,a,d);Qh=r.unstable_runWithPriority(r.unstable_NormalPriority,function(){return Ae(g)});Rh=g}Kh=Oh=!1;\"function\"===typeof Qe&&Qe(b.stateNode);c=b.expirationTime;b=b.childExpirationTime;b=\n\tb>c?b:c;0===b&&(Fh=null);$h(a,b)}\n\tfunction ai(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){T=a;a:{var e=b;b=a;var f=U;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:J(b.type)&&Ke(b);break;case 3:Kf(b);Le(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)Eg(b),b.effectTag&=-3;mh(b);break;case 5:Mf(b);var h=If(Hf.current);f=b.type;if(null!==e&&null!=b.stateNode)nh(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=\n\t128);else if(g){var l=If(N.current);if(Eg(b)){g=b;e=g.stateNode;var k=g.type,m=g.memoizedProps,p=h;e[Fa]=g;e[Ga]=m;f=void 0;h=k;switch(h){case \"iframe\":case \"object\":E(\"load\",e);break;case \"video\":case \"audio\":for(k=0;k<ab.length;k++)E(ab[k],e);break;case \"source\":E(\"error\",e);break;case \"img\":case \"image\":case \"link\":E(\"error\",e);E(\"load\",e);break;case \"form\":E(\"reset\",e);E(\"submit\",e);break;case \"details\":E(\"toggle\",e);break;case \"input\":wc(e,m);E(\"invalid\",e);se(p,\"onChange\");break;case \"select\":e._wrapperState=\n\t{wasMultiple:!!m.multiple};E(\"invalid\",e);se(p,\"onChange\");break;case \"textarea\":ce(e,m),E(\"invalid\",e),se(p,\"onChange\")}qe(h,m);k=null;for(f in m)m.hasOwnProperty(f)&&(l=m[f],\"children\"===f?\"string\"===typeof l?e.textContent!==l&&(k=[\"children\",l]):\"number\"===typeof l&&e.textContent!==\"\"+l&&(k=[\"children\",\"\"+l]):ra.hasOwnProperty(f)&&null!=l&&se(p,f));switch(h){case \"input\":Rb(e);Ac(e,m,!0);break;case \"textarea\":Rb(e);ee(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n\t(e.onclick=te)}f=k;g.updateQueue=f;g=null!==f?!0:!1;g&&kh(b)}else{m=b;p=f;e=g;k=9===h.nodeType?h:h.ownerDocument;l===fe.html&&(l=ge(p));l===fe.html?\"script\"===p?(e=k.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",k=e.removeChild(e.firstChild)):\"string\"===typeof e.is?k=k.createElement(p,{is:e.is}):(k=k.createElement(p),\"select\"===p&&(p=k,e.multiple?p.multiple=!0:e.size&&(p.size=e.size))):k=k.createElementNS(l,p);e=k;e[Fa]=m;e[Ga]=g;lh(e,b,!1,!1);p=e;k=f;m=g;var t=h,A=re(k,m);switch(k){case \"iframe\":case \"object\":E(\"load\",\n\tp);h=m;break;case \"video\":case \"audio\":for(h=0;h<ab.length;h++)E(ab[h],p);h=m;break;case \"source\":E(\"error\",p);h=m;break;case \"img\":case \"image\":case \"link\":E(\"error\",p);E(\"load\",p);h=m;break;case \"form\":E(\"reset\",p);E(\"submit\",p);h=m;break;case \"details\":E(\"toggle\",p);h=m;break;case \"input\":wc(p,m);h=vc(p,m);E(\"invalid\",p);se(t,\"onChange\");break;case \"option\":h=$d(p,m);break;case \"select\":p._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});E(\"invalid\",p);se(t,\"onChange\");break;case \"textarea\":ce(p,\n\tm);h=be(p,m);E(\"invalid\",p);se(t,\"onChange\");break;default:h=m}qe(k,h);l=void 0;var v=k,R=p,u=h;for(l in u)if(u.hasOwnProperty(l)){var q=u[l];\"style\"===l?oe(R,q):\"dangerouslySetInnerHTML\"===l?(q=q?q.__html:void 0,null!=q&&je(R,q)):\"children\"===l?\"string\"===typeof q?(\"textarea\"!==v||\"\"!==q)&&ke(R,q):\"number\"===typeof q&&ke(R,\"\"+q):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ra.hasOwnProperty(l)?null!=q&&se(t,l):null!=q&&tc(R,l,q,A))}switch(k){case \"input\":Rb(p);\n\tAc(p,m,!1);break;case \"textarea\":Rb(p);ee(p,m);break;case \"option\":null!=m.value&&p.setAttribute(\"value\",\"\"+uc(m.value));break;case \"select\":h=p;h.multiple=!!m.multiple;p=m.value;null!=p?ae(h,!!m.multiple,p,!1):null!=m.defaultValue&&ae(h,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(p.onclick=te)}(g=we(f,g))&&kh(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?x(\"166\"):void 0;break;case 6:e&&null!=b.stateNode?oh(e,b,e.memoizedProps,g):(\"string\"!==\n\ttypeof g&&(null===b.stateNode?x(\"166\"):void 0),e=If(Hf.current),If(N.current),Eg(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Fa]=g,(g=f.nodeValue!==e)&&kh(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Fa]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;T=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=\n\tb.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g||f)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Kf(b);mh(b);break;case 10:Zg(b);break;case 9:break;case 14:break;case 17:J(b.type)&&Ke(b);break;case 18:break;default:x(\"156\")}T=null}b=a;if(1===U||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==T)return T;null!==c&&0===(c.effectTag&1024)&&(null===c.firstEffect&&\n\t(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Gh(a,U);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}\n\tfunction bi(a){var b=Tg(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=ai(a));Ih.current=null;return b}\n\tfunction ci(a,b){Kh?x(\"243\"):void 0;of();Kh=!0;var c=Hh.current;Hh.current=kg;var d=a.nextExpirationTimeToWorkOn;if(d!==U||a!==Lh||null===T)Sh(),Lh=a,U=d,T=Xe(Lh.current,null,U),a.pendingCommitExpirationTime=0;var e=!1;do{try{if(b)for(;null!==T&&!di();)T=bi(T);else for(;null!==T;)T=bi(T)}catch(u){if(Yg=Xg=Wg=null,lg(),null===T)e=!0,Dh(u);else{null===T?x(\"271\"):void 0;var f=T,g=f.return;if(null===g)e=!0,Dh(u);else{a:{var h=a,l=g,k=f,m=u;g=U;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==\n\tm&&\"object\"===typeof m&&\"function\"===typeof m.then){var p=m;m=l;var t=-1,A=-1;do{if(13===m.tag){var v=m.alternate;if(null!==v&&(v=v.memoizedState,null!==v)){A=10*(1073741822-v.timedOutAt);break}v=m.pendingProps.maxDuration;if(\"number\"===typeof v)if(0>=v)t=0;else if(-1===t||v<t)t=v}m=m.return}while(null!==m);m=l;do{if(v=13===m.tag)v=void 0===m.memoizedProps.fallback?!1:null===m.memoizedState;if(v){l=m.updateQueue;null===l?(l=new Set,l.add(p),m.updateQueue=l):l.add(p);if(0===(m.mode&1)){m.effectTag|=\n\t64;k.effectTag&=-1957;1===k.tag&&(null===k.alternate?k.tag=17:(g=nf(1073741823),g.tag=sf,pf(k,g)));k.expirationTime=1073741823;break a}k=h;l=g;var R=k.pingCache;null===R?(R=k.pingCache=new Bh,v=new Set,R.set(p,v)):(v=R.get(p),void 0===v&&(v=new Set,R.set(p,v)));v.has(l)||(v.add(l),k=ei.bind(null,k,p,l),p.then(k,k));-1===t?h=1073741823:(-1===A&&(A=10*(1073741822-gf(h,g))-5E3),h=A+t);0<=h&&Mh<h&&(Mh=h);m.effectTag|=2048;m.expirationTime=g;break a}m=m.return}while(null!==m);m=Error((ic(k.type)||\"A React component\")+\n\t\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+jc(k))}Nh=!0;m=jh(m,k);h=l;do{switch(h.tag){case 3:h.effectTag|=2048;h.expirationTime=g;g=Ch(h,m,g);eh(h,g);break a;case 1:if(t=m,A=h.type,k=h.stateNode,0===(h.effectTag&64)&&(\"function\"===typeof A.getDerivedStateFromError||null!==k&&\"function\"===typeof k.componentDidCatch&&(null===Fh||!Fh.has(k)))){h.effectTag|=2048;\n\th.expirationTime=g;g=Eh(h,t,g);eh(h,g);break a}}h=h.return}while(null!==h)}T=ai(f);continue}}}break}while(1);Kh=!1;Hh.current=c;Yg=Xg=Wg=null;lg();if(e)Lh=null,a.finishedWork=null;else if(null!==T)a.finishedWork=null;else{c=a.current.alternate;null===c?x(\"281\"):void 0;Lh=null;if(Nh){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<d||0!==f&&f<d||0!==g&&g<d){ff(a,d);fi(a,c,d,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;d=a.nextExpirationTimeToWorkOn=d;\n\tb=a.expirationTime=1073741823;fi(a,c,d,b,-1);return}}b&&-1!==Mh?(ff(a,d),b=10*(1073741822-gf(a,d)),b<Mh&&(Mh=b),b=10*(1073741822-lf()),b=Mh-b,fi(a,c,d,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=d,a.finishedWork=c)}}\n\tfunction sh(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Fh||!Fh.has(d))){a=jh(b,a);a=Eh(c,a,1073741823);pf(c,a);qf(c,1073741823);return}break;case 3:a=jh(b,a);a=Ch(c,a,1073741823);pf(c,a);qf(c,1073741823);return}c=c.return}3===a.tag&&(c=jh(b,a),c=Ch(a,c,1073741823),pf(a,c),qf(a,1073741823))}\n\tfunction mf(a,b){var c=r.unstable_getCurrentPriorityLevel(),d=void 0;if(0===(b.mode&1))d=1073741823;else if(Kh&&!Oh)d=U;else{switch(c){case r.unstable_ImmediatePriority:d=1073741823;break;case r.unstable_UserBlockingPriority:d=1073741822-10*(((1073741822-a+15)/10|0)+1);break;case r.unstable_NormalPriority:d=1073741822-25*(((1073741822-a+500)/25|0)+1);break;case r.unstable_LowPriority:case r.unstable_IdlePriority:d=1;break;default:x(\"313\")}null!==Lh&&d===U&&--d}c===r.unstable_UserBlockingPriority&&\n\t(0===gi||d<gi)&&(gi=d);return d}function ei(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);if(null!==Lh&&U===c)Lh=null;else if(b=a.earliestSuspendedTime,d=a.latestSuspendedTime,0!==b&&c<=b&&c>=d){a.didError=!1;b=a.latestPingedTime;if(0===b||b>c)a.latestPingedTime=c;df(c,a);c=a.expirationTime;0!==c&&Xh(a,c)}}function Ah(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=lf();b=mf(b,a);a=hi(a,b);null!==a&&(cf(a,b),b=a.expirationTime,0!==b&&Xh(a,b))}\n\tfunction hi(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}\n\tfunction qf(a,b){a=hi(a,b);null!==a&&(!Kh&&0!==U&&b>U&&Sh(),cf(a,b),Kh&&!Oh&&Lh===a||Xh(a,a.expirationTime),ii>ji&&(ii=0,x(\"185\")))}function ki(a,b,c,d,e){return r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){return a(b,c,d,e)})}var li=null,Y=null,mi=0,ni=void 0,W=!1,oi=null,Z=0,gi=0,pi=!1,qi=null,X=!1,ri=!1,si=null,ti=r.unstable_now(),ui=1073741822-(ti/10|0),vi=ui,ji=50,ii=0,wi=null;function xi(){ui=1073741822-((r.unstable_now()-ti)/10|0)}\n\tfunction yi(a,b){if(0!==mi){if(b<mi)return;null!==ni&&r.unstable_cancelCallback(ni)}mi=b;a=r.unstable_now()-ti;ni=r.unstable_scheduleCallback(zi,{timeout:10*(1073741822-b)-a})}function fi(a,b,c,d,e){a.expirationTime=d;0!==e||di()?0<e&&(a.timeoutHandle=ye(Ai.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Ai(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;xi();vi=ui;Bi(a,c)}function $h(a,b){a.expirationTime=b;a.finishedWork=null}\n\tfunction lf(){if(W)return vi;Ci();if(0===Z||1===Z)xi(),vi=ui;return vi}function Xh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===Y?(li=Y=a,a.nextScheduledRoot=a):(Y=Y.nextScheduledRoot=a,Y.nextScheduledRoot=li)):b>a.expirationTime&&(a.expirationTime=b);W||(X?ri&&(oi=a,Z=1073741823,Di(a,1073741823,!1)):1073741823===b?Yh(1073741823,!1):yi(a,b))}\n\tfunction Ci(){var a=0,b=null;if(null!==Y)for(var c=Y,d=li;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===Y?x(\"244\"):void 0;if(d===d.nextScheduledRoot){li=Y=d.nextScheduledRoot=null;break}else if(d===li)li=e=d.nextScheduledRoot,Y.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===Y){Y=c;Y.nextScheduledRoot=li;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===Y)break;if(1073741823===\n\ta)break;c=d;d=d.nextScheduledRoot}}oi=b;Z=a}var Ei=!1;function di(){return Ei?!0:r.unstable_shouldYield()?Ei=!0:!1}function zi(){try{if(!di()&&null!==li){xi();var a=li;do{var b=a.expirationTime;0!==b&&ui<=b&&(a.nextExpirationTimeToWorkOn=ui);a=a.nextScheduledRoot}while(a!==li)}Yh(0,!0)}finally{Ei=!1}}\n\tfunction Yh(a,b){Ci();if(b)for(xi(),vi=ui;null!==oi&&0!==Z&&a<=Z&&!(Ei&&ui>Z);)Di(oi,Z,ui>Z),Ci(),xi(),vi=ui;else for(;null!==oi&&0!==Z&&a<=Z;)Di(oi,Z,!1),Ci();b&&(mi=0,ni=null);0!==Z&&yi(oi,Z);ii=0;wi=null;if(null!==si)for(a=si,si=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){pi||(pi=!0,qi=d)}}if(pi)throw a=qi,qi=null,pi=!1,a;}function Bi(a,b){W?x(\"253\"):void 0;oi=a;Z=b;Di(a,b,!1);Yh(1073741823,!1)}\n\tfunction Di(a,b,c){W?x(\"245\"):void 0;W=!0;if(c){var d=a.finishedWork;null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&(di()?a.finishedWork=d:Fi(a,d,b)))}else d=a.finishedWork,null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&Fi(a,d,b));W=!1}\n\tfunction Fi(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===si?si=[d]:si.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===wi?ii++:(wi=a,ii=0);r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){Zh(a,b)})}function Dh(a){null===oi?x(\"246\"):void 0;oi.expirationTime=0;pi||(pi=!0,qi=a)}function Gi(a,b){var c=X;X=!0;try{return a(b)}finally{(X=c)||W||Yh(1073741823,!1)}}\n\tfunction Hi(a,b){if(X&&!ri){ri=!0;try{return a(b)}finally{ri=!1}}return a(b)}function Ii(a,b,c){X||W||0===gi||(Yh(gi,!1),gi=0);var d=X;X=!0;try{return r.unstable_runWithPriority(r.unstable_UserBlockingPriority,function(){return a(b,c)})}finally{(X=d)||W||Yh(1073741823,!1)}}\n\tfunction Ji(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===ed(c)&&1===c.tag?void 0:x(\"170\");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(J(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);x(\"171\");g=void 0}if(1===c.tag){var h=c.type;if(J(h)){c=Ne(c,h,g);break a}}c=g}else c=He;null===b.context?b.context=c:b.pendingContext=c;b=e;e=nf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);\n\tof();pf(f,e);qf(f,d);return d}function Ki(a,b,c,d){var e=b.current,f=lf();e=mf(f,e);return Ji(a,b,c,e,d)}function Li(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function Mi(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Wb,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\n\tAb=function(a,b,c){switch(b){case \"input\":yc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Ka(d);e?void 0:x(\"90\");Sb(d);yc(d,e)}}}break;case \"textarea\":de(a,c);break;case \"select\":b=c.value,null!=b&&ae(a,!!c.multiple,b,!1)}};\n\tfunction Ni(a){var b=1073741822-25*(((1073741822-lf()+500)/25|0)+1);b>=Jh&&(b=Jh-1);this._expirationTime=Jh=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}Ni.prototype.render=function(a){this._defer?void 0:x(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new Oi;Ji(a,b,null,c,d._onCommit);return d};\n\tNi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\n\tNi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:x(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?x(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Bi(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\n\tnull,this._defer=!1};Ni.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function Oi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}Oi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\n\tOi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?x(\"191\",c):void 0;c()}}};\n\tfunction Pi(a,b,c){b=K(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\n\tPi.prototype.render=function(a,b){var c=this._internalRoot,d=new Oi;b=void 0===b?null:b;null!==b&&d.then(b);Ki(a,c,null,d._onCommit);return d};Pi.prototype.unmount=function(a){var b=this._internalRoot,c=new Oi;a=void 0===a?null:a;null!==a&&c.then(a);Ki(null,b,null,c._onCommit);return c};Pi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new Oi;c=void 0===c?null:c;null!==c&&e.then(c);Ki(b,d,a,e._onCommit);return e};\n\tPi.prototype.createBatch=function(){var a=new Ni(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function Qi(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Gb=Gi;Hb=Ii;Ib=function(){W||0===gi||(Yh(gi,!1),gi=0)};\n\tfunction Ri(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new Pi(a,!1,b)}\n\tfunction Si(a,b,c,d,e){var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=Li(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Ri(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=Li(f._internalRoot);h.call(a)}}Hi(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Li(f._internalRoot)}\n\tfunction Ti(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Qi(b)?void 0:x(\"200\");return Mi(a,b,null,c)}\n\tvar Vi={createPortal:Ti,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?x(\"188\"):x(\"268\",Object.keys(a)));a=hd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!0,c)},render:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){Qi(c)?void 0:x(\"200\");null==a||void 0===a._reactInternalFiber?\n\tx(\"38\"):void 0;return Si(a,b,c,!1,d)},unmountComponentAtNode:function(a){Qi(a)?void 0:x(\"40\");return a._reactRootContainer?(Hi(function(){Si(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return Ti.apply(void 0,arguments)},unstable_batchedUpdates:Gi,unstable_interactiveUpdates:Ii,flushSync:function(a,b){W?x(\"187\"):void 0;var c=X;X=!0;try{return ki(a,b)}finally{X=c,Yh(1073741823,!1)}},unstable_createRoot:Ui,unstable_flushControlled:function(a){var b=\n\tX;X=!0;try{ki(a)}finally{(X=b)||W||Yh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ia,Ja,Ka,Ba.injectEventPluginsByName,pa,Qa,function(a){ya(a,Pa)},Eb,Fb,Dd,Da]}};function Ui(a,b){Qi(a)?void 0:x(\"299\",\"unstable_createRoot\");return new Pi(a,!0,null!=b&&!0===b.hydrate)}\n\t(function(a){var b=a.findFiberByHostInstance;return Te(n({},a,{overrideProps:null,currentDispatcherRef:Tb.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ha,bundleType:0,version:\"16.8.6\",rendererPackageName:\"react-dom\"});var Wi={default:Vi},Xi=Wi&&Vi||Wi;module.exports=Xi.default||Xi;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction checkDCE() {\n\t  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n\t  if (\n\t    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n\t    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n\t  ) {\n\t    return;\n\t  }\n\t  if (false) {\n\t    // This branch is unreachable because this function is only called\n\t    // in production, but the condition is true only in development.\n\t    // Therefore if the branch is still here, dead code elimination wasn't\n\t    // properly applied.\n\t    // Don't change the message. React DevTools relies on it. Also make sure\n\t    // this message doesn't occur elsewhere in this function, or it will cause\n\t    // a false positive.\n\t    throw new Error('^_^');\n\t  }\n\t  try {\n\t    // Verify that the code above has been dead code eliminated (DCE'd).\n\t    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n\t  } catch (err) {\n\t    // DevTools shouldn't crash React, no matter what.\n\t    // We should still report in case we break this code.\n\t    console.error(err);\n\t  }\n\t}\n\t\n\tif (true) {\n\t  // DCE check should happen before ReactDOM bundle executes so that\n\t  // DevTools can report bad minification during injection.\n\t  checkDCE();\n\t  module.exports = __webpack_require__(14);\n\t} else {\n\t  module.exports = require('./cjs/react-dom.development.js');\n\t}\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// @remove-on-eject-begin\n\t/**\n\t * Copyright (c) 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t// @remove-on-eject-end\n\t'use strict';\n\t\n\tif (typeof Promise === 'undefined') {\n\t  // Rejection tracking prevents a common issue where React gets into an\n\t  // inconsistent state due to an error, but it gets swallowed by a Promise,\n\t  // and the user has no idea what causes React's erratic future behavior.\n\t  __webpack_require__(13).enable();\n\t  window.Promise = __webpack_require__(12);\n\t}\n\t\n\t// fetch() polyfill for making API calls.\n\t__webpack_require__(21);\n\t\n\t// Object.assign() is commonly used with React.\n\t// It will use the native implementation if it's present and isn't buggy.\n\tObject.assign = __webpack_require__(2);\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/** @license React v16.8.6\n\t * react.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';var k=__webpack_require__(2),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,aa=n?Symbol.for(\"react.memo\"):\n\t60115,ba=n?Symbol.for(\"react.lazy\"):60116,A=\"function\"===typeof Symbol&&Symbol.iterator;function ca(a,b,d,c,e,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[d,c,e,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\n\tfunction B(a){for(var b=arguments.length-1,d=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)d+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",d)}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};\n\tfunction E(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?B(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}var H=G.prototype=new F;\n\tH.constructor=G;k(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\n\tfunction M(a,b,d){var c=void 0,e={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=b[c]);var f=arguments.length-2;if(1===f)e.children=d;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];e.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===e[c]&&(e[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:e,_owner:J.current}}\n\tfunction da(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,d,c){if(P.length){var e=P.pop();e.result=a;e.keyPrefix=b;e.func=d;e.context=c;e.count=0;return e}return{result:a,keyPrefix:b,func:d,context:c,count:0}}\n\tfunction R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\n\tfunction S(a,b,d,c){var e=typeof a;if(\"undefined\"===e||\"boolean\"===e)a=null;var g=!1;if(null===a)g=!0;else switch(e){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return d(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){e=a[h];var f=b+T(e,h);g+=S(e,f,d,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=A&&a[A]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n\t0;!(e=a.next()).done;)e=e.value,f=b+T(e,h++),g+=S(e,f,d,c);else\"object\"===e&&(d=\"\"+a,B(\"31\",\"[object Object]\"===d?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":d,\"\"));return g}function U(a,b,d){return null==a?0:S(a,\"\",b,d)}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ea(a,b){a.func.call(a.context,b,a.count++)}\n\tfunction fa(a,b,d){var c=a.result,e=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,c,d,function(a){return a}):null!=a&&(N(a)&&(a=da(a,e+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+d)),c.push(a))}function V(a,b,d,c,e){var g=\"\";null!=d&&(g=(\"\"+d).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,e);U(a,fa,b);R(b)}function W(){var a=I.current;null===a?B(\"321\"):void 0;return a}\n\tvar X={Children:{map:function(a,b,d){if(null==a)return a;var c=[];V(a,c,null,b,d);return c},forEach:function(a,b,d){if(null==a)return a;b=Q(null,null,b,d);U(a,ea,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];V(a,b,null,function(a){return a});return b},only:function(a){N(a)?void 0:B(\"143\");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n\t_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:ba,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:aa,type:a,compare:void 0===b?null:b}},useCallback:function(a,b){return W().useCallback(a,b)},useContext:function(a,b){return W().useContext(a,b)},useEffect:function(a,b){return W().useEffect(a,b)},useImperativeHandle:function(a,\n\tb,d){return W().useImperativeHandle(a,b,d)},useDebugValue:function(){},useLayoutEffect:function(a,b){return W().useLayoutEffect(a,b)},useMemo:function(a,b){return W().useMemo(a,b)},useReducer:function(a,b,d){return W().useReducer(a,b,d)},useRef:function(a){return W().useRef(a)},useState:function(a){return W().useState(a)},Fragment:r,StrictMode:t,Suspense:z,createElement:M,cloneElement:function(a,b,d){null===a||void 0===a?B(\"267\",a):void 0;var c=void 0,e=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=\n\tb){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)e.children=d;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];e.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:e,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.8.6\",\n\tunstable_ConcurrentMode:x,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:I,ReactCurrentOwner:J,assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/** @license React v0.13.6\n\t * scheduler.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var d=null,e=!1,g=3,k=-1,l=-1,m=!1,n=!1;function p(){if(!m){var a=d.expirationTime;n?q():n=!0;r(t,a)}}\n\tfunction u(){var a=d,b=d.next;if(d===b)d=null;else{var c=d.previous;d=c.next=b;b.previous=c}a.next=a.previous=null;c=a.callback;b=a.expirationTime;a=a.priorityLevel;var f=g,Q=l;g=a;l=b;try{var h=c()}finally{g=f,l=Q}if(\"function\"===typeof h)if(h={callback:h,priorityLevel:a,expirationTime:b,next:null,previous:null},null===d)d=h.next=h.previous=h;else{c=null;a=d;do{if(a.expirationTime>=b){c=a;break}a=a.next}while(a!==d);null===c?c=d:c===d&&(d=h,p());b=c.previous;b.next=c.previous=h;h.next=c;h.previous=\n\tb}}function v(){if(-1===k&&null!==d&&1===d.priorityLevel){m=!0;try{do u();while(null!==d&&1===d.priorityLevel)}finally{m=!1,null!==d?p():n=!1}}}function t(a){m=!0;var b=e;e=a;try{if(a)for(;null!==d;){var c=exports.unstable_now();if(d.expirationTime<=c){do u();while(null!==d&&d.expirationTime<=c)}else break}else if(null!==d){do u();while(null!==d&&!w())}}finally{m=!1,e=b,null!==d?p():n=!1,v()}}\n\tvar x=Date,y=\"function\"===typeof setTimeout?setTimeout:void 0,z=\"function\"===typeof clearTimeout?clearTimeout:void 0,A=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,B=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,C,D;function E(a){C=A(function(b){z(D);a(b)});D=y(function(){B(C);a(exports.unstable_now())},100)}\n\tif(\"object\"===typeof performance&&\"function\"===typeof performance.now){var F=performance;exports.unstable_now=function(){return F.now()}}else exports.unstable_now=function(){return x.now()};var r,q,w,G=null;\"undefined\"!==typeof window?G=window:\"undefined\"!==typeof global&&(G=global);\n\tif(G&&G._schedMock){var H=G._schedMock;r=H[0];q=H[1];w=H[2];exports.unstable_now=H[3]}else if(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var I=null,J=function(a){if(null!==I)try{I(a)}finally{I=null}};r=function(a){null!==I?setTimeout(r,0,a):(I=a,setTimeout(J,0,!1))};q=function(){I=null};w=function(){return!1}}else{\"undefined\"!==typeof console&&(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\n\t\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));var K=null,L=!1,M=-1,N=!1,O=!1,P=0,R=33,S=33;w=function(){return P<=exports.unstable_now()};var T=new MessageChannel,U=T.port2;T.port1.onmessage=function(){L=!1;var a=K,b=M;K=null;M=-1;var c=exports.unstable_now(),f=!1;if(0>=P-c)if(-1!==b&&b<=c)f=!0;else{N||(N=!0,E(V));K=a;M=b;return}if(null!==a){O=!0;try{a(f)}finally{O=!1}}};\n\tvar V=function(a){if(null!==K){E(V);var b=a-P+S;b<S&&R<S?(8>b&&(b=8),S=b<R?R:b):R=b;P=a+S;L||(L=!0,U.postMessage(void 0))}else N=!1};r=function(a,b){K=a;M=b;O||0>b?U.postMessage(void 0):N||(N=!0,E(V))};q=function(){K=null;L=!1;M=-1}}exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;\n\texports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=g,f=k;g=a;k=exports.unstable_now();try{return b()}finally{g=c,k=f,v()}};exports.unstable_next=function(a){switch(g){case 1:case 2:case 3:var b=3;break;default:b=g}var c=g,f=k;g=b;k=exports.unstable_now();try{return a()}finally{g=c,k=f,v()}};\n\texports.unstable_scheduleCallback=function(a,b){var c=-1!==k?k:exports.unstable_now();if(\"object\"===typeof b&&null!==b&&\"number\"===typeof b.timeout)b=c+b.timeout;else switch(g){case 1:b=c+-1;break;case 2:b=c+250;break;case 5:b=c+1073741823;break;case 4:b=c+1E4;break;default:b=c+5E3}a={callback:a,priorityLevel:g,expirationTime:b,next:null,previous:null};if(null===d)d=a.next=a.previous=a,p();else{c=null;var f=d;do{if(f.expirationTime>b){c=f;break}f=f.next}while(f!==d);null===c?c=d:c===d&&(d=a,p());\n\tb=c.previous;b.next=c.previous=a;a.next=c;a.previous=b}return a};exports.unstable_cancelCallback=function(a){var b=a.next;if(null!==b){if(b===a)d=null;else{a===d&&(d=b);var c=a.previous;c.next=b;b.previous=c}a.next=a.previous=null}};exports.unstable_wrapCallback=function(a){var b=g;return function(){var c=g,f=k;g=b;k=exports.unstable_now();try{return a.apply(this,arguments)}finally{g=c,k=f,v()}}};exports.unstable_getCurrentPriorityLevel=function(){return g};\n\texports.unstable_shouldYield=function(){return!e&&(null!==d&&d.expirationTime<l||w())};exports.unstable_continueExecution=function(){null!==d&&p()};exports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return d};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tif (true) {\n\t  module.exports = __webpack_require__(18);\n\t} else {\n\t  module.exports = require('./cjs/scheduler.development.js');\n\t}\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"static/media/0_0.0e6f3be5.jpg\";\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = [\n\t      '[object Int8Array]',\n\t      '[object Uint8Array]',\n\t      '[object Uint8ClampedArray]',\n\t      '[object Int16Array]',\n\t      '[object Uint16Array]',\n\t      '[object Int32Array]',\n\t      '[object Uint32Array]',\n\t      '[object Float32Array]',\n\t      '[object Float64Array]'\n\t    ]\n\t\n\t    var isDataView = function(obj) {\n\t      return obj && DataView.prototype.isPrototypeOf(obj)\n\t    }\n\t\n\t    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n\t      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n\t    }\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var oldValue = this.map[name]\n\t    this.map[name] = oldValue ? oldValue+','+value : value\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    name = normalizeName(name)\n\t    return this.has(name) ? this.map[name] : null\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value)\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this)\n\t      }\n\t    }\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsArrayBuffer(blob)\n\t    return promise\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsText(blob)\n\t    return promise\n\t  }\n\t\n\t  function readArrayBufferAsText(buf) {\n\t    var view = new Uint8Array(buf)\n\t    var chars = new Array(view.length)\n\t\n\t    for (var i = 0; i < view.length; i++) {\n\t      chars[i] = String.fromCharCode(view[i])\n\t    }\n\t    return chars.join('')\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0)\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength)\n\t      view.set(new Uint8Array(buf))\n\t      return view.buffer\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (!body) {\n\t        this._bodyText = ''\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer)\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer])\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body)\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer)\n\t        }\n\t      }\n\t    }\n\t\n\t    this.text = function() {\n\t      var rejected = consumed(this)\n\t      if (rejected) {\n\t        return rejected\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob)\n\t      } else if (this._bodyArrayBuffer) {\n\t        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text')\n\t      } else {\n\t        return Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t\n\t    if (input instanceof Request) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = String(input)\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this, { body: this._bodyInit })\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers()\n\t    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n\t      var parts = line.split(':')\n\t      var key = parts.shift().trim()\n\t      if (key) {\n\t        var value = parts.join(':').trim()\n\t        headers.append(key, value)\n\t      }\n\t    })\n\t    return headers\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = 'status' in options ? options.status : 200\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n\t    this.headers = new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request = new Request(input, init)\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n\t        }\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }\n/******/ ])));\n\n\n// WEBPACK FOOTER //\n// static/js/main.4a69e9c8.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c19d9a7559f1fe36fed1","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/index.js\n// module id = 1\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/core.js\n// module id = 3\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/asap/browser-raw.js\n// module id = 4\n// module chunks = 0","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Image from './Image';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        \n        <Image/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.js","import React, { Component } from 'react';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport logo from './dzi_files/10/0_0.jpg';\r\n//import logo1 from './dzi_files';\r\n\r\nexport default class Image extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        var imagePath = ''  \r\n    }\r\n\r\ncomponentDidMount() {\r\n    \r\n    var dimage = {\r\n        Image: {\r\n        xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\r\n        Url: '//openseadragon.github.io/example-images/duomo/duomo_files/',\r\n        Format: \"jpg\",\r\n        TileSize: \"256\",\r\n        Size: {\r\n            Width:  \"13920\",\r\n            Height: \"10200\"\r\n        }\r\n        }\r\n    };\r\n\r\n    var dimage1 = {\r\n        Image: {\r\n        xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\r\n        Url: ' https://github.com/preetham1230/Images/blob/master/dzi_files/',\r\n        Format: \"jpg\",\r\n        TileSize: \"256\",\r\n        CrossOriginPolicy: '*',\r\n        Size: {\r\n            Width:  \"13920\",\r\n            Height: \"10200\"\r\n        }\r\n        }\r\n    };\r\n    \r\n    var viewer = OpenSeadragon({\r\n        id: \"image-viewer\",\r\n        prefixUrl: \"//openseadragon.github.io/openseadragon/images/\",\r\n        sequenceMode: true,\r\n        tileSources: [dimage,dimage1]\r\n    });\r\n}\r\n    \r\n\r\n    render() {\r\n        \r\n        \r\n  \r\n        return (\r\n            <div>\r\n            <div id=\"image-viewer\" style={{width: '800px', height: '800px', padding:'50px'}}  ></div>\r\n\r\n            <div>\r\n                Image\r\n                <img src={logo}></img>\r\n            </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Image.js","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/logo.svg\n// module id = 10\n// module chunks = 0","//! openseadragon 2.4.1\n//! Built on 2019-07-03\n//! Git commit: v2.4.1-0-244790e\n//! http://openseadragon.github.io\n//! License: http://openseadragon.github.io/license/\n\n/*\n * OpenSeadragon\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * Portions of this source file taken from jQuery:\n *\n * Copyright 2011 John Resig\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/*\n * Portions of this source file taken from mattsnider.com:\n *\n * Copyright (c) 2006-2013 Matt Snider\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT\n * OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR\n * THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n\n/**\n * @namespace OpenSeadragon\n * @version openseadragon 2.4.1\n * @classdesc The root namespace for OpenSeadragon.  All utility methods\n * and classes are defined on or below this namespace.\n *\n */\n\n\n// Typedefs\n\n /**\n  * All required and optional settings for instantiating a new instance of an OpenSeadragon image viewer.\n  *\n  * @typedef {Object} Options\n  * @memberof OpenSeadragon\n  *\n  * @property {String} id\n  *     Id of the element to append the viewer's container element to. If not provided, the 'element' property must be provided.\n  *     If both the element and id properties are specified, the viewer is appended to the element provided in the element property.\n  *\n  * @property {Element} element\n  *     The element to append the viewer's container element to. If not provided, the 'id' property must be provided.\n  *     If both the element and id properties are specified, the viewer is appended to the element provided in the element property.\n  *\n  * @property {Array|String|Function|Object} [tileSources=null]\n  *     Tile source(s) to open initially. This is a complex parameter; see\n  *     {@link OpenSeadragon.Viewer#open} for details.\n  *\n  * @property {Number} [tabIndex=0]\n  *     Tabbing order index to assign to the viewer element. Positive values are selected in increasing order. When tabIndex is 0\n  *     source order is used. A negative value omits the viewer from the tabbing order.\n  *\n  * @property {Array} overlays Array of objects defining permanent overlays of\n  *     the viewer. The overlays added via this option and later removed with\n  *     {@link OpenSeadragon.Viewer#removeOverlay} will be added back when a new\n  *     image is opened.\n  *     To add overlays which can be definitively removed, one must use\n  *     {@link OpenSeadragon.Viewer#addOverlay}\n  *     If displaying a sequence of images, the overlays can be associated\n  *     with a specific page by passing the overlays array to the page's\n  *     tile source configuration.\n  *     Expected properties:\n  *     * x, y, (or px, py for pixel coordinates) to define the location.\n  *     * width, height in point if using x,y or in pixels if using px,py. If width\n  *       and height are specified, the overlay size is adjusted when zooming,\n  *       otherwise the size stays the size of the content (or the size defined by CSS).\n  *     * className to associate a class to the overlay\n  *     * id to set the overlay element. If an element with this id already exists,\n  *       it is reused, otherwise it is created. If not specified, a new element is\n  *       created.\n  *     * placement a string to define the relative position to the viewport.\n  *       Only used if no width and height are specified. Default: 'TOP_LEFT'.\n  *       See {@link OpenSeadragon.Placement} for possible values.\n  *\n  * @property {String} [xmlPath=null]\n  *     <strong>DEPRECATED</strong>. A relative path to load a DZI file from the server.\n  *     Prefer the newer Options.tileSources.\n  *\n  * @property {String} [prefixUrl='/images/']\n  *     Prepends the prefixUrl to navImages paths, which is very useful\n  *     since the default paths are rarely useful for production\n  *     environments.\n  *\n  * @property {OpenSeadragon.NavImages} [navImages]\n  *     An object with a property for each button or other built-in navigation\n  *     control, eg the current 'zoomIn', 'zoomOut', 'home', and 'fullpage'.\n  *     Each of those in turn provides an image path for each state of the button\n  *     or navigation control, eg 'REST', 'GROUP', 'HOVER', 'PRESS'. Finally the\n  *     image paths, by default assume there is a folder on the servers root path\n  *     called '/images', eg '/images/zoomin_rest.png'.  If you need to adjust\n  *     these paths, prefer setting the option.prefixUrl rather than overriding\n  *     every image path directly through this setting.\n  *\n  * @property {Boolean} [debugMode=false]\n  *     TODO: provide an in-screen panel providing event detail feedback.\n  *\n  * @property {String} [debugGridColor=['#437AB2', '#1B9E77', '#D95F02', '#7570B3', '#E7298A', '#66A61E', '#E6AB02', '#A6761D', '#666666']]\n  *     The colors of grids in debug mode. Each tiled image's grid uses a consecutive color.\n  *     If there are more tiled images than provided colors, the color vector is recycled.\n  *\n  * @property {Number} [blendTime=0]\n  *     Specifies the duration of animation as higher or lower level tiles are\n  *     replacing the existing tile.\n  *\n  * @property {Boolean} [alwaysBlend=false]\n  *     Forces the tile to always blend.  By default the tiles skip blending\n  *     when the blendTime is surpassed and the current animation frame would\n  *     not complete the blend.\n  *\n  * @property {Boolean} [autoHideControls=true]\n  *     If the user stops interacting with the viewport, fade the navigation\n  *     controls.  Useful for presentation since the controls are by default\n  *     floated on top of the image the user is viewing.\n  *\n  * @property {Boolean} [immediateRender=false]\n  *     Render the best closest level first, ignoring the lowering levels which\n  *     provide the effect of very blurry to sharp. It is recommended to change\n  *     setting to true for mobile devices.\n  *\n  * @property {Number} [defaultZoomLevel=0]\n  *     Zoom level to use when image is first opened or the home button is clicked.\n  *     If 0, adjusts to fit viewer.\n  *\n  * @property {Number} [opacity=1]\n  *     Default proportional opacity of the tiled images (1=opaque, 0=hidden)\n  *     Hidden images do not draw and only load when preloading is allowed.\n  *\n  * @property {Boolean} [preload=false]\n  *     Default switch for loading hidden images (true loads, false blocks)\n  *\n  * @property {String} [compositeOperation=null]\n  *     Valid values are 'source-over', 'source-atop', 'source-in', 'source-out',\n  *     'destination-over', 'destination-atop', 'destination-in',\n  *     'destination-out', 'lighter', 'copy' or 'xor'\n  *\n  * @property {Boolean} [imageSmoothingEnabled=true]\n  *     Image smoothing for canvas rendering (only if canvas is used). Note: Ignored\n  *     by some (especially older) browsers which do not support this canvas property.\n  *     This property can be changed in {@link Viewer.Drawer.setImageSmoothingEnabled}.\n  *\n  * @property {String|CanvasGradient|CanvasPattern|Function} [placeholderFillStyle=null]\n  *     Draws a colored rectangle behind the tile if it is not loaded yet.\n  *     You can pass a CSS color value like \"#FF8800\".\n  *     When passing a function the tiledImage and canvas context are available as argument which is useful when you draw a gradient or pattern.\n  *\n  * @property {Number} [degrees=0]\n  *     Initial rotation.\n  *\n  * @property {Boolean} [flipped=false]\n  *     Initial flip state.\n  *\n  * @property {Number} [minZoomLevel=null]\n  *\n  * @property {Number} [maxZoomLevel=null]\n  *\n  * @property {Boolean} [homeFillsViewer=false]\n  *     Make the 'home' button fill the viewer and clip the image, instead\n  *     of fitting the image to the viewer and letterboxing.\n  *\n  * @property {Boolean} [panHorizontal=true]\n  *     Allow horizontal pan.\n  *\n  * @property {Boolean} [panVertical=true]\n  *     Allow vertical pan.\n  *\n  * @property {Boolean} [constrainDuringPan=false]\n  *\n  * @property {Boolean} [wrapHorizontal=false]\n  *     Set to true to force the image to wrap horizontally within the viewport.\n  *     Useful for maps or images representing the surface of a sphere or cylinder.\n  *\n  * @property {Boolean} [wrapVertical=false]\n  *     Set to true to force the image to wrap vertically within the viewport.\n  *     Useful for maps or images representing the surface of a sphere or cylinder.\n  *\n  * @property {Number} [minZoomImageRatio=0.9]\n  *     The minimum percentage ( expressed as a number between 0 and 1 ) of\n  *     the viewport height or width at which the zoom out will be constrained.\n  *     Setting it to 0, for example will allow you to zoom out infinity.\n  *\n  * @property {Number} [maxZoomPixelRatio=1.1]\n  *     The maximum ratio to allow a zoom-in to affect the highest level pixel\n  *     ratio. This can be set to Infinity to allow 'infinite' zooming into the\n  *     image though it is less effective visually if the HTML5 Canvas is not\n  *     available on the viewing device.\n  *\n  * @property {Number} [smoothTileEdgesMinZoom=1.1]\n  *     A zoom percentage ( where 1 is 100% ) of the highest resolution level.\n  *     When zoomed in beyond this value alternative compositing will be used to\n  *     smooth out the edges between tiles. This will have a performance impact.\n  *     Can be set to Infinity to turn it off.\n  *     Note: This setting is ignored on iOS devices due to a known bug (See {@link https://github.com/openseadragon/openseadragon/issues/952})\n  *\n  * @property {Boolean} [iOSDevice=?]\n  *     True if running on an iOS device, false otherwise.\n  *     Used to disable certain features that behave differently on iOS devices.\n  *\n  * @property {Boolean} [autoResize=true]\n  *     Set to false to prevent polling for viewer size changes. Useful for providing custom resize behavior.\n  *\n  * @property {Boolean} [preserveImageSizeOnResize=false]\n  *     Set to true to have the image size preserved when the viewer is resized. This requires autoResize=true (default).\n  *\n  * @property {Number} [minScrollDeltaTime=50]\n  *     Number of milliseconds between canvas-scroll events. This value helps normalize the rate of canvas-scroll\n  *     events between different devices, causing the faster devices to slow down enough to make the zoom control\n  *     more manageable.\n  *\n  * @property {Number} [rotationIncrement=90]\n  *     The number of degrees to rotate right or left when the rotate buttons or keyboard shortcuts are activated.\n  *\n  * @property {Number} [pixelsPerWheelLine=40]\n  *     For pixel-resolution scrolling devices, the number of pixels equal to one scroll line.\n  *\n  * @property {Number} [pixelsPerArrowPress=40]\n  *     The number of pixels viewport moves when an arrow key is pressed.\n  *\n  * @property {Number} [visibilityRatio=0.5]\n  *     The percentage ( as a number from 0 to 1 ) of the source image which\n  *     must be kept within the viewport.  If the image is dragged beyond that\n  *     limit, it will 'bounce' back until the minimum visibility ratio is\n  *     achieved.  Setting this to 0 and wrapHorizontal ( or wrapVertical ) to\n  *     true will provide the effect of an infinitely scrolling viewport.\n  *\n  * @property {Object} [viewportMargins={}]\n  *     Pushes the \"home\" region in from the sides by the specified amounts.\n  *     Possible subproperties (Numbers, in screen coordinates): left, top, right, bottom.\n  *\n  * @property {Number} [imageLoaderLimit=0]\n  *     The maximum number of image requests to make concurrently. By default\n  *     it is set to 0 allowing the browser to make the maximum number of\n  *     image requests in parallel as allowed by the browsers policy.\n  *\n  * @property {Number} [clickTimeThreshold=300]\n  *      The number of milliseconds within which a pointer down-up event combination\n  *      will be treated as a click gesture.\n  *\n  * @property {Number} [clickDistThreshold=5]\n  *      The maximum distance allowed between a pointer down event and a pointer up event\n  *      to be treated as a click gesture.\n  *\n  * @property {Number} [dblClickTimeThreshold=300]\n  *      The number of milliseconds within which two pointer down-up event combinations\n  *      will be treated as a double-click gesture.\n  *\n  * @property {Number} [dblClickDistThreshold=20]\n  *      The maximum distance allowed between two pointer click events\n  *      to be treated as a double-click gesture.\n  *\n  * @property {Number} [springStiffness=6.5]\n  *\n  * @property {Number} [animationTime=1.2]\n  *     Specifies the animation duration per each {@link OpenSeadragon.Spring}\n  *     which occur when the image is dragged or zoomed.\n  *\n  * @property {OpenSeadragon.GestureSettings} [gestureSettingsMouse]\n  *     Settings for gestures generated by a mouse pointer device. (See {@link OpenSeadragon.GestureSettings})\n  * @property {Boolean} [gestureSettingsMouse.scrollToZoom=true] - Zoom on scroll gesture\n  * @property {Boolean} [gestureSettingsMouse.clickToZoom=true] - Zoom on click gesture\n  * @property {Boolean} [gestureSettingsMouse.dblClickToZoom=false] - Zoom on double-click gesture. Note: If set to true\n  *     then clickToZoom should be set to false to prevent multiple zooms.\n  * @property {Boolean} [gestureSettingsMouse.pinchToZoom=false] - Zoom on pinch gesture\n  * @property {Boolean} [gestureSettingsMouse.zoomToRefPoint=true] - If zoomToRefPoint is true, the zoom is centered at the pointer position. Otherwise,\n  *     the zoom is centered at the canvas center.\n  * @property {Boolean} [gestureSettingsMouse.flickEnabled=false] - Enable flick gesture\n  * @property {Number} [gestureSettingsMouse.flickMinSpeed=120] - If flickEnabled is true, the minimum speed to initiate a flick gesture (pixels-per-second)\n  * @property {Number} [gestureSettingsMouse.flickMomentum=0.25] - If flickEnabled is true, the momentum factor for the flick gesture\n  * @property {Boolean} [gestureSettingsMouse.pinchRotate=false] - If pinchRotate is true, the user will have the ability to rotate the image using their fingers.\n  *\n  * @property {OpenSeadragon.GestureSettings} [gestureSettingsTouch]\n  *     Settings for gestures generated by a touch pointer device. (See {@link OpenSeadragon.GestureSettings})\n  * @property {Boolean} [gestureSettingsTouch.scrollToZoom=false] - Zoom on scroll gesture\n  * @property {Boolean} [gestureSettingsTouch.clickToZoom=false] - Zoom on click gesture\n  * @property {Boolean} [gestureSettingsTouch.dblClickToZoom=true] - Zoom on double-click gesture. Note: If set to true\n  *     then clickToZoom should be set to false to prevent multiple zooms.\n  * @property {Boolean} [gestureSettingsTouch.pinchToZoom=true] - Zoom on pinch gesture\n  * @property {Boolean} [gestureSettingsTouch.zoomToRefPoint=true] - If zoomToRefPoint is true, the zoom is centered at the pointer position. Otherwise,\n  *     the zoom is centered at the canvas center.\n  * @property {Boolean} [gestureSettingsTouch.flickEnabled=true] - Enable flick gesture\n  * @property {Number} [gestureSettingsTouch.flickMinSpeed=120] - If flickEnabled is true, the minimum speed to initiate a flick gesture (pixels-per-second)\n  * @property {Number} [gestureSettingsTouch.flickMomentum=0.25] - If flickEnabled is true, the momentum factor for the flick gesture\n  * @property {Boolean} [gestureSettingsTouch.pinchRotate=false] - If pinchRotate is true, the user will have the ability to rotate the image using their fingers.\n  *\n  * @property {OpenSeadragon.GestureSettings} [gestureSettingsPen]\n  *     Settings for gestures generated by a pen pointer device. (See {@link OpenSeadragon.GestureSettings})\n  * @property {Boolean} [gestureSettingsPen.scrollToZoom=false] - Zoom on scroll gesture\n  * @property {Boolean} [gestureSettingsPen.clickToZoom=true] - Zoom on click gesture\n  * @property {Boolean} [gestureSettingsPen.dblClickToZoom=false] - Zoom on double-click gesture. Note: If set to true\n  *     then clickToZoom should be set to false to prevent multiple zooms.\n  * @property {Boolean} [gestureSettingsPen.pinchToZoom=false] - Zoom on pinch gesture\n  * @property {Boolean} [gestureSettingsPan.zoomToRefPoint=true] - If zoomToRefPoint is true, the zoom is centered at the pointer position. Otherwise,\n  *     the zoom is centered at the canvas center.\n  * @property {Boolean} [gestureSettingsPen.flickEnabled=false] - Enable flick gesture\n  * @property {Number} [gestureSettingsPen.flickMinSpeed=120] - If flickEnabled is true, the minimum speed to initiate a flick gesture (pixels-per-second)\n  * @property {Number} [gestureSettingsPen.flickMomentum=0.25] - If flickEnabled is true, the momentum factor for the flick gesture\n  * @property {Boolean} [gestureSettingsPen.pinchRotate=false] - If pinchRotate is true, the user will have the ability to rotate the image using their fingers.\n  *\n  * @property {OpenSeadragon.GestureSettings} [gestureSettingsUnknown]\n  *     Settings for gestures generated by unknown pointer devices. (See {@link OpenSeadragon.GestureSettings})\n  * @property {Boolean} [gestureSettingsUnknown.scrollToZoom=true] - Zoom on scroll gesture\n  * @property {Boolean} [gestureSettingsUnknown.clickToZoom=false] - Zoom on click gesture\n  * @property {Boolean} [gestureSettingsUnknown.dblClickToZoom=true] - Zoom on double-click gesture. Note: If set to true\n  *     then clickToZoom should be set to false to prevent multiple zooms.\n  * @property {Boolean} [gestureSettingsUnknown.pinchToZoom=true] - Zoom on pinch gesture\n  * @property {Boolean} [gestureSettingsUnknown.zoomToRefPoint=true] - If zoomToRefPoint is true, the zoom is centered at the pointer position. Otherwise,\n  *     the zoom is centered at the canvas center.\n  * @property {Boolean} [gestureSettingsUnknown.flickEnabled=true] - Enable flick gesture\n  * @property {Number} [gestureSettingsUnknown.flickMinSpeed=120] - If flickEnabled is true, the minimum speed to initiate a flick gesture (pixels-per-second)\n  * @property {Number} [gestureSettingsUnknown.flickMomentum=0.25] - If flickEnabled is true, the momentum factor for the flick gesture\n  * @property {Boolean} [gestureSettingsUnknown.pinchRotate=false] - If pinchRotate is true, the user will have the ability to rotate the image using their fingers.\n  *\n  * @property {Number} [zoomPerClick=2.0]\n  *     The \"zoom distance\" per mouse click or touch tap. <em><strong>Note:</strong> Setting this to 1.0 effectively disables the click-to-zoom feature (also see gestureSettings[Mouse|Touch|Pen].clickToZoom/dblClickToZoom).</em>\n  *\n  * @property {Number} [zoomPerScroll=1.2]\n  *     The \"zoom distance\" per mouse scroll or touch pinch. <em><strong>Note:</strong> Setting this to 1.0 effectively disables the mouse-wheel zoom feature (also see gestureSettings[Mouse|Touch|Pen].scrollToZoom}).</em>\n  *\n  * @property {Number} [zoomPerSecond=1.0]\n  *     The number of seconds to animate a single zoom event over.\n  *\n  * @property {Boolean} [showNavigator=false]\n  *     Set to true to make the navigator minimap appear.\n  *\n  * @property {String} [navigatorId=navigator-GENERATED DATE]\n  *     The ID of a div to hold the navigator minimap.\n  *     If an ID is specified, the navigatorPosition, navigatorSizeRatio, navigatorMaintainSizeRatio, navigator[Top|Left|Height|Width] and navigatorAutoFade options will be ignored.\n  *     If an ID is not specified, a div element will be generated and placed on top of the main image.\n  *\n  * @property {String} [navigatorPosition='TOP_RIGHT']\n  *     Valid values are 'TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT', or 'ABSOLUTE'.<br>\n  *     If 'ABSOLUTE' is specified, then navigator[Top|Left|Height|Width] determines the size and position of the navigator minimap in the viewer, and navigatorSizeRatio and navigatorMaintainSizeRatio are ignored.<br>\n  *     For 'TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', and 'BOTTOM_RIGHT', the navigatorSizeRatio or navigator[Height|Width] values determine the size of the navigator minimap.\n  *\n  * @property {Number} [navigatorSizeRatio=0.2]\n  *     Ratio of navigator size to viewer size. Ignored if navigator[Height|Width] are specified.\n  *\n  * @property {Boolean} [navigatorMaintainSizeRatio=false]\n  *     If true, the navigator minimap is resized (using navigatorSizeRatio) when the viewer size changes.\n  *\n  * @property {Number|String} [navigatorTop=null]\n  *     Specifies the location of the navigator minimap (see navigatorPosition).\n  *\n  * @property {Number|String} [navigatorLeft=null]\n  *     Specifies the location of the navigator minimap (see navigatorPosition).\n  *\n  * @property {Number|String} [navigatorHeight=null]\n  *     Specifies the size of the navigator minimap (see navigatorPosition).\n  *     If specified, navigatorSizeRatio and navigatorMaintainSizeRatio are ignored.\n  *\n  * @property {Number|String} [navigatorWidth=null]\n  *     Specifies the size of the navigator minimap (see navigatorPosition).\n  *     If specified, navigatorSizeRatio and navigatorMaintainSizeRatio are ignored.\n  *\n  * @property {Boolean} [navigatorAutoResize=true]\n  *     Set to false to prevent polling for navigator size changes. Useful for providing custom resize behavior.\n  *     Setting to false can also improve performance when the navigator is configured to a fixed size.\n  *\n  * @property {Boolean} [navigatorAutoFade=true]\n  *     If the user stops interacting with the viewport, fade the navigator minimap.\n  *     Setting to false will make the navigator minimap always visible.\n  *\n  * @property {Boolean} [navigatorRotate=true]\n  *     If true, the navigator will be rotated together with the viewer.\n  *\n  * @property {String} [navigatorBackground='#000']\n  *     Specifies the background color of the navigator minimap\n  *\n  * @property {Number} [navigatorOpacity=0.8]\n  *     Specifies the opacity of the navigator minimap.\n  *\n  * @property {String} [navigatorBorderColor='#555']\n  *     Specifies the border color of the navigator minimap\n  *\n  * @property {String} [navigatorDisplayRegionColor='#900']\n  *     Specifies the border color of the display region rectangle of the navigator minimap\n  *\n  * @property {Number} [controlsFadeDelay=2000]\n  *     The number of milliseconds to wait once the user has stopped interacting\n  *     with the interface before beginning to fade the controls. Assumes\n  *     showNavigationControl and autoHideControls are both true.\n  *\n  * @property {Number} [controlsFadeLength=1500]\n  *     The number of milliseconds to animate the controls fading out.\n  *\n  * @property {Number} [maxImageCacheCount=200]\n  *     The max number of images we should keep in memory (per drawer).\n  *\n  * @property {Number} [timeout=30000]\n  *     The max number of milliseconds that an image job may take to complete.\n  *\n  * @property {Boolean} [useCanvas=true]\n  *     Set to false to not use an HTML canvas element for image rendering even if canvas is supported.\n  *\n  * @property {Number} [minPixelRatio=0.5]\n  *     The higher the minPixelRatio, the lower the quality of the image that\n  *     is considered sufficient to stop rendering a given zoom level.  For\n  *     example, if you are targeting mobile devices with less bandwidth you may\n  *     try setting this to 1.5 or higher.\n  *\n  * @property {Boolean} [mouseNavEnabled=true]\n  *     Is the user able to interact with the image via mouse or touch. Default\n  *     interactions include draging the image in a plane, and zooming in toward\n  *     and away from the image.\n  *\n  * @property {Boolean} [showNavigationControl=true]\n  *     Set to false to prevent the appearance of the default navigation controls.<br>\n  *     Note that if set to false, the customs buttons set by the options\n  *     zoomInButton, zoomOutButton etc, are rendered inactive.\n  *\n  * @property {OpenSeadragon.ControlAnchor} [navigationControlAnchor=TOP_LEFT]\n  *     Placement of the default navigation controls.\n  *     To set the placement of the sequence controls, see the\n  *     sequenceControlAnchor option.\n  *\n  * @property {Boolean} [showZoomControl=true]\n  *     If true then + and - buttons to zoom in and out are displayed.<br>\n  *     Note: {@link OpenSeadragon.Options.showNavigationControl} is overriding\n  *     this setting when set to false.\n  *\n  * @property {Boolean} [showHomeControl=true]\n  *     If true then the 'Go home' button is displayed to go back to the original\n  *     zoom and pan.<br>\n  *     Note: {@link OpenSeadragon.Options.showNavigationControl} is overriding\n  *     this setting when set to false.\n  *\n  * @property {Boolean} [showFullPageControl=true]\n  *     If true then the 'Toggle full page' button is displayed to switch\n  *     between full page and normal mode.<br>\n  *     Note: {@link OpenSeadragon.Options.showNavigationControl} is overriding\n  *     this setting when set to false.\n  *\n  * @property {Boolean} [showRotationControl=false]\n  *     If true then the rotate left/right controls will be displayed as part of the\n  *     standard controls. This is also subject to the browser support for rotate\n  *     (e.g. viewer.drawer.canRotate()).<br>\n  *     Note: {@link OpenSeadragon.Options.showNavigationControl} is overriding\n  *     this setting when set to false.\n  *\n  * @property {Boolean} [showFlipControl=false]\n  *     If true then the flip controls will be displayed as part of the\n  *     standard controls.\n  *\n  * @property {Boolean} [showSequenceControl=true]\n  *     If sequenceMode is true, then provide buttons for navigating forward and\n  *     backward through the images.\n  *\n  * @property {OpenSeadragon.ControlAnchor} [sequenceControlAnchor=TOP_LEFT]\n  *     Placement of the default sequence controls.\n  *\n  * @property {Boolean} [navPrevNextWrap=false]\n  *     If true then the 'previous' button will wrap to the last image when\n  *     viewing the first image and the 'next' button will wrap to the first\n  *     image when viewing the last image.\n  *\n  * @property {String} zoomInButton\n  *     Set the id of the custom 'Zoom in' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} zoomOutButton\n  *     Set the id of the custom 'Zoom out' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} homeButton\n  *     Set the id of the custom 'Go home' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} fullPageButton\n  *     Set the id of the custom 'Toggle full page' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} rotateLeftButton\n  *     Set the id of the custom 'Rotate left' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} rotateRightButton\n  *     Set the id of the custom 'Rotate right' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} previousButton\n  *     Set the id of the custom 'Previous page' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} nextButton\n  *     Set the id of the custom 'Next page' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {Boolean} [sequenceMode=false]\n  *     Set to true to have the viewer treat your tilesources as a sequence of images to\n  *     be opened one at a time rather than all at once.\n  *\n  * @property {Number} [initialPage=0]\n  *     If sequenceMode is true, display this page initially.\n  *\n  * @property {Boolean} [preserveViewport=false]\n  *     If sequenceMode is true, then normally navigating through each image resets the\n  *     viewport to 'home' position.  If preserveViewport is set to true, then the viewport\n  *     position is preserved when navigating between images in the sequence.\n  *\n  * @property {Boolean} [preserveOverlays=false]\n  *     If sequenceMode is true, then normally navigating through each image\n  *     resets the overlays.\n  *     If preserveOverlays is set to true, then the overlays added with {@link OpenSeadragon.Viewer#addOverlay}\n  *     are preserved when navigating between images in the sequence.\n  *     Note: setting preserveOverlays overrides any overlays specified in the global\n  *     \"overlays\" option for the Viewer. It's also not compatible with specifying\n  *     per-tileSource overlays via the options, as those overlays will persist\n  *     even after the tileSource is closed.\n  *\n  * @property {Boolean} [showReferenceStrip=false]\n  *     If sequenceMode is true, then display a scrolling strip of image thumbnails for\n  *     navigating through the images.\n  *\n  * @property {String} [referenceStripScroll='horizontal']\n  *\n  * @property {Element} [referenceStripElement=null]\n  *\n  * @property {Number} [referenceStripHeight=null]\n  *\n  * @property {Number} [referenceStripWidth=null]\n  *\n  * @property {String} [referenceStripPosition='BOTTOM_LEFT']\n  *\n  * @property {Number} [referenceStripSizeRatio=0.2]\n  *\n  * @property {Boolean} [collectionMode=false]\n  *     Set to true to have the viewer arrange your TiledImages in a grid or line.\n  *\n  * @property {Number} [collectionRows=3]\n  *     If collectionMode is true, specifies how many rows the grid should have. Use 1 to make a line.\n  *     If collectionLayout is 'vertical', specifies how many columns instead.\n  *\n  * @property {Number} [collectionColumns=0]\n  *     If collectionMode is true, specifies how many columns the grid should have. Use 1 to make a line.\n  *     If collectionLayout is 'vertical', specifies how many rows instead. Ignored if collectionRows is not set to a falsy value.\n  *\n  * @property {String} [collectionLayout='horizontal']\n  *     If collectionMode is true, specifies whether to arrange vertically or horizontally.\n  *\n  * @property {Number} [collectionTileSize=800]\n  *     If collectionMode is true, specifies the size, in viewport coordinates, for each TiledImage to fit into.\n  *     The TiledImage will be centered within a square of the specified size.\n  *\n  * @property {Number} [collectionTileMargin=80]\n  *     If collectionMode is true, specifies the margin, in viewport coordinates, between each TiledImage.\n  *\n  * @property {String|Boolean} [crossOriginPolicy=false]\n  *     Valid values are 'Anonymous', 'use-credentials', and false. If false, canvas requests will\n  *     not use CORS, and the canvas will be tainted.\n  *\n  * @property {Boolean} [ajaxWithCredentials=false]\n  *     Whether to set the withCredentials XHR flag for AJAX requests.\n  *     Note that this can be overridden at the {@link OpenSeadragon.TileSource} level.\n  *\n  * @property {Boolean} [loadTilesWithAjax=false]\n  *     Whether to load tile data using AJAX requests.\n  *     Note that this can be overridden at the {@link OpenSeadragon.TileSource} level.\n  *\n  * @property {Object} [ajaxHeaders={}]\n  *     A set of headers to include when making AJAX requests for tile sources or tiles.\n  *\n  */\n\n /**\n  * Settings for gestures generated by a pointer device.\n  *\n  * @typedef {Object} GestureSettings\n  * @memberof OpenSeadragon\n  *\n  * @property {Boolean} scrollToZoom\n  *     Set to false to disable zooming on scroll gestures.\n  *\n  * @property {Boolean} clickToZoom\n  *     Set to false to disable zooming on click gestures.\n  *\n  * @property {Boolean} dblClickToZoom\n  *     Set to false to disable zooming on double-click gestures. Note: If set to true\n  *     then clickToZoom should be set to false to prevent multiple zooms.\n  *\n  * @property {Boolean} pinchToZoom\n  *     Set to false to disable zooming on pinch gestures.\n  *\n  * @property {Boolean} flickEnabled\n  *     Set to false to disable the kinetic panning effect (flick) at the end of a drag gesture.\n  *\n  * @property {Number} flickMinSpeed\n  *     If flickEnabled is true, the minimum speed (in pixels-per-second) required to cause the kinetic panning effect (flick) at the end of a drag gesture.\n  *\n  * @property {Number} flickMomentum\n  *     If flickEnabled is true, a constant multiplied by the velocity to determine the distance of the kinetic panning effect (flick) at the end of a drag gesture.\n  *     A larger value will make the flick feel \"lighter\", while a smaller value will make the flick feel \"heavier\".\n  *     Note: springStiffness and animationTime also affect the \"spring\" used to stop the flick animation.\n  *\n  */\n\n/**\n  * The names for the image resources used for the image navigation buttons.\n  *\n  * @typedef {Object} NavImages\n  * @memberof OpenSeadragon\n  *\n  * @property {Object} zoomIn - Images for the zoom-in button.\n  * @property {String} zoomIn.REST\n  * @property {String} zoomIn.GROUP\n  * @property {String} zoomIn.HOVER\n  * @property {String} zoomIn.DOWN\n  *\n  * @property {Object} zoomOut - Images for the zoom-out button.\n  * @property {String} zoomOut.REST\n  * @property {String} zoomOut.GROUP\n  * @property {String} zoomOut.HOVER\n  * @property {String} zoomOut.DOWN\n  *\n  * @property {Object} home - Images for the home button.\n  * @property {String} home.REST\n  * @property {String} home.GROUP\n  * @property {String} home.HOVER\n  * @property {String} home.DOWN\n  *\n  * @property {Object} fullpage - Images for the full-page button.\n  * @property {String} fullpage.REST\n  * @property {String} fullpage.GROUP\n  * @property {String} fullpage.HOVER\n  * @property {String} fullpage.DOWN\n  *\n  * @property {Object} rotateleft - Images for the rotate left button.\n  * @property {String} rotateleft.REST\n  * @property {String} rotateleft.GROUP\n  * @property {String} rotateleft.HOVER\n  * @property {String} rotateleft.DOWN\n  *\n  * @property {Object} rotateright - Images for the rotate right button.\n  * @property {String} rotateright.REST\n  * @property {String} rotateright.GROUP\n  * @property {String} rotateright.HOVER\n  * @property {String} rotateright.DOWN\n  *\n  * @property {Object} flip - Images for the flip button.\n  * @property {String} flip.REST\n  * @property {String} flip.GROUP\n  * @property {String} flip.HOVER\n  * @property {String} flip.DOWN\n  *\n  * @property {Object} previous - Images for the previous button.\n  * @property {String} previous.REST\n  * @property {String} previous.GROUP\n  * @property {String} previous.HOVER\n  * @property {String} previous.DOWN\n  *\n  * @property {Object} next - Images for the next button.\n  * @property {String} next.REST\n  * @property {String} next.GROUP\n  * @property {String} next.HOVER\n  * @property {String} next.DOWN\n  *\n  */\n\n\nfunction OpenSeadragon( options ){\n    return new OpenSeadragon.Viewer( options );\n}\n\n(function( $ ){\n\n\n    /**\n     * The OpenSeadragon version.\n     *\n     * @member {Object} OpenSeadragon.version\n     * @property {String} versionStr - The version number as a string ('major.minor.revision').\n     * @property {Number} major - The major version number.\n     * @property {Number} minor - The minor version number.\n     * @property {Number} revision - The revision number.\n     * @since 1.0.0\n     */\n    $.version = {\n        versionStr: '2.4.1',\n        major: parseInt('2', 10),\n        minor: parseInt('4', 10),\n        revision: parseInt('1', 10)\n    };\n\n\n    /**\n     * Taken from jquery 1.6.1\n     * [[Class]] -> type pairs\n     * @private\n     */\n    var class2type = {\n            '[object Boolean]':     'boolean',\n            '[object Number]':      'number',\n            '[object String]':      'string',\n            '[object Function]':    'function',\n            '[object Array]':       'array',\n            '[object Date]':        'date',\n            '[object RegExp]':      'regexp',\n            '[object Object]':      'object'\n        },\n        // Save a reference to some core methods\n        toString    = Object.prototype.toString,\n        hasOwn      = Object.prototype.hasOwnProperty;\n\n    /**\n     * Taken from jQuery 1.6.1\n     * @function isFunction\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.isFunction = function( obj ) {\n        return $.type(obj) === \"function\";\n    };\n\n\n    /**\n     * Taken from jQuery 1.6.1\n     * @function isArray\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.isArray = Array.isArray || function( obj ) {\n        return $.type(obj) === \"array\";\n    };\n\n\n    /**\n     * A crude way of determining if an object is a window.\n     * Taken from jQuery 1.6.1\n     * @function isWindow\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.isWindow = function( obj ) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n\n\n    /**\n     * Taken from jQuery 1.6.1\n     * @function type\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.type = function( obj ) {\n        return ( obj === null ) || ( obj === undefined ) ?\n            String( obj ) :\n            class2type[ toString.call(obj) ] || \"object\";\n    };\n\n\n    /**\n     * Taken from jQuery 1.6.1\n     * @function isPlainObject\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.isPlainObject = function( obj ) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if ( !obj || OpenSeadragon.type(obj) !== \"object\" || obj.nodeType || $.isWindow( obj ) ) {\n            return false;\n        }\n\n        // Not own constructor property must be Object\n        if ( obj.constructor &&\n            !hasOwn.call(obj, \"constructor\") &&\n            !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\") ) {\n            return false;\n        }\n\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n\n        var lastKey;\n        for (var key in obj ) {\n            lastKey = key;\n        }\n\n        return lastKey === undefined || hasOwn.call( obj, lastKey );\n    };\n\n\n    /**\n     * Taken from jQuery 1.6.1\n     * @function isEmptyObject\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.isEmptyObject = function( obj ) {\n        for ( var name in obj ) {\n            return false;\n        }\n        return true;\n    };\n\n    /**\n     * Shim around Object.freeze. Does nothing if Object.freeze is not supported.\n     * @param {Object} obj The object to freeze.\n     * @return {Object} obj The frozen object.\n     */\n    $.freezeObject = function(obj) {\n        if (Object.freeze) {\n            $.freezeObject = Object.freeze;\n        } else {\n            $.freezeObject = function(obj) {\n                return obj;\n            };\n        }\n        return $.freezeObject(obj);\n    };\n\n    /**\n     * True if the browser supports the HTML5 canvas element\n     * @member {Boolean} supportsCanvas\n     * @memberof OpenSeadragon\n     */\n    $.supportsCanvas = (function () {\n        var canvasElement = document.createElement( 'canvas' );\n        return !!( $.isFunction( canvasElement.getContext ) &&\n                    canvasElement.getContext( '2d' ) );\n    }());\n\n    /**\n     * Test whether the submitted canvas is tainted or not.\n     * @argument {Canvas} canvas The canvas to test.\n     * @returns {Boolean} True if the canvas is tainted.\n     */\n    $.isCanvasTainted = function(canvas) {\n        var isTainted = false;\n        try {\n            // We test if the canvas is tainted by retrieving data from it.\n            // An exception will be raised if the canvas is tainted.\n            canvas.getContext('2d').getImageData(0, 0, 1, 1);\n        } catch (e) {\n            isTainted = true;\n        }\n        return isTainted;\n    };\n\n    /**\n     * A ratio comparing the device screen's pixel density to the canvas's backing store pixel density,\n     * clamped to a minimum of 1. Defaults to 1 if canvas isn't supported by the browser.\n     * @member {Number} pixelDensityRatio\n     * @memberof OpenSeadragon\n     */\n    $.pixelDensityRatio = (function () {\n        if ( $.supportsCanvas ) {\n            var context = document.createElement('canvas').getContext('2d');\n            var devicePixelRatio = window.devicePixelRatio || 1;\n            var backingStoreRatio = context.webkitBackingStorePixelRatio ||\n                                    context.mozBackingStorePixelRatio ||\n                                    context.msBackingStorePixelRatio ||\n                                    context.oBackingStorePixelRatio ||\n                                    context.backingStorePixelRatio || 1;\n            return Math.max(devicePixelRatio, 1) / backingStoreRatio;\n        } else {\n            return 1;\n        }\n    }());\n\n}( OpenSeadragon ));\n\n/**\n *  This closure defines all static methods available to the OpenSeadragon\n *  namespace.  Many, if not most, are taked directly from jQuery for use\n *  to simplify and reduce common programming patterns.  More static methods\n *  from jQuery may eventually make their way into this though we are\n *  attempting to avoid an explicit dependency on jQuery only because\n *  OpenSeadragon is a broadly useful code base and would be made less broad\n *  by requiring jQuery fully.\n *\n *  Some static methods have also been refactored from the original OpenSeadragon\n *  project.\n */\n(function( $ ){\n\n    /**\n     * Taken from jQuery 1.6.1\n     * @function extend\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.extend = function() {\n        var options,\n            name,\n            src,\n            copy,\n            copyIsArray,\n            clone,\n            target  = arguments[ 0 ] || {},\n            length  = arguments.length,\n            deep    = false,\n            i       = 1;\n\n        // Handle a deep copy situation\n        if ( typeof target === \"boolean\" ) {\n            deep    = target;\n            target  = arguments[ 1 ] || {};\n            // skip the boolean and the target\n            i = 2;\n        }\n\n        // Handle case when target is a string or something (possible in deep copy)\n        if ( typeof target !== \"object\" && !OpenSeadragon.isFunction( target ) ) {\n            target = {};\n        }\n\n        // extend jQuery itself if only one argument is passed\n        if ( length === i ) {\n            target = this;\n            --i;\n        }\n\n        for ( ; i < length; i++ ) {\n            // Only deal with non-null/undefined values\n            options = arguments[ i ];\n            if ( options !== null || options !== undefined ) {\n                // Extend the base object\n                for ( name in options ) {\n                    src = target[ name ];\n                    copy = options[ name ];\n\n                    // Prevent never-ending loop\n                    if ( target === copy ) {\n                        continue;\n                    }\n\n                    // Recurse if we're merging plain objects or arrays\n                    if ( deep && copy && ( OpenSeadragon.isPlainObject( copy ) || ( copyIsArray = OpenSeadragon.isArray( copy ) ) ) ) {\n                        if ( copyIsArray ) {\n                            copyIsArray = false;\n                            clone = src && OpenSeadragon.isArray( src ) ? src : [];\n\n                        } else {\n                            clone = src && OpenSeadragon.isPlainObject( src ) ? src : {};\n                        }\n\n                        // Never move original objects, clone them\n                        target[ name ] = OpenSeadragon.extend( deep, clone, copy );\n\n                    // Don't bring in undefined values\n                    } else if ( copy !== undefined ) {\n                        target[ name ] = copy;\n                    }\n                }\n            }\n        }\n\n        // Return the modified object\n        return target;\n    };\n\n    var isIOSDevice = function () {\n        if (typeof navigator !== 'object') {\n            return false;\n        }\n        var userAgent = navigator.userAgent;\n        if (typeof userAgent !== 'string') {\n            return false;\n        }\n        return userAgent.indexOf('iPhone') !== -1 ||\n               userAgent.indexOf('iPad') !== -1 ||\n               userAgent.indexOf('iPod') !== -1;\n    };\n\n    $.extend( $, /** @lends OpenSeadragon */{\n        /**\n         * The default values for the optional settings documented at {@link OpenSeadragon.Options}.\n         * @static\n         * @type {Object}\n         */\n        DEFAULT_SETTINGS: {\n            //DATA SOURCE DETAILS\n            xmlPath:                null,\n            tileSources:            null,\n            tileHost:               null,\n            initialPage:            0,\n            crossOriginPolicy:      false,\n            ajaxWithCredentials:    false,\n            loadTilesWithAjax:      false,\n            ajaxHeaders:            {},\n\n            //PAN AND ZOOM SETTINGS AND CONSTRAINTS\n            panHorizontal:          true,\n            panVertical:            true,\n            constrainDuringPan:     false,\n            wrapHorizontal:         false,\n            wrapVertical:           false,\n            visibilityRatio:        0.5, //-> how much of the viewer can be negative space\n            minPixelRatio:          0.5, //->closer to 0 draws tiles meant for a higher zoom at this zoom\n            defaultZoomLevel:       0,\n            minZoomLevel:           null,\n            maxZoomLevel:           null,\n            homeFillsViewer:        false,\n\n            //UI RESPONSIVENESS AND FEEL\n            clickTimeThreshold:     300,\n            clickDistThreshold:     5,\n            dblClickTimeThreshold:  300,\n            dblClickDistThreshold:  20,\n            springStiffness:        6.5,\n            animationTime:          1.2,\n            gestureSettingsMouse:   {\n                scrollToZoom: true,\n                clickToZoom: true,\n                dblClickToZoom: false,\n                pinchToZoom: false,\n                zoomToRefPoint: true,\n                flickEnabled: false,\n                flickMinSpeed: 120,\n                flickMomentum: 0.25,\n                pinchRotate: false\n            },\n            gestureSettingsTouch:   {\n                scrollToZoom: false,\n                clickToZoom: false,\n                dblClickToZoom: true,\n                pinchToZoom: true,\n                zoomToRefPoint: true,\n                flickEnabled: true,\n                flickMinSpeed: 120,\n                flickMomentum: 0.25,\n                pinchRotate: false\n            },\n            gestureSettingsPen:     {\n                scrollToZoom: false,\n                clickToZoom: true,\n                dblClickToZoom: false,\n                pinchToZoom: false,\n                zoomToRefPoint: true,\n                flickEnabled: false,\n                flickMinSpeed: 120,\n                flickMomentum: 0.25,\n                pinchRotate: false\n            },\n            gestureSettingsUnknown: {\n                scrollToZoom: false,\n                clickToZoom: false,\n                dblClickToZoom: true,\n                pinchToZoom: true,\n                zoomToRefPoint: true,\n                flickEnabled: true,\n                flickMinSpeed: 120,\n                flickMomentum: 0.25,\n                pinchRotate: false\n            },\n            zoomPerClick:           2,\n            zoomPerScroll:          1.2,\n            zoomPerSecond:          1.0,\n            blendTime:              0,\n            alwaysBlend:            false,\n            autoHideControls:       true,\n            immediateRender:        false,\n            minZoomImageRatio:      0.9, //-> closer to 0 allows zoom out to infinity\n            maxZoomPixelRatio:      1.1, //-> higher allows 'over zoom' into pixels\n            smoothTileEdgesMinZoom: 1.1, //-> higher than maxZoomPixelRatio disables it\n            iOSDevice:              isIOSDevice(),\n            pixelsPerWheelLine:     40,\n            pixelsPerArrowPress:    40,\n            autoResize:             true,\n            preserveImageSizeOnResize: false, // requires autoResize=true\n            minScrollDeltaTime:     50,\n            rotationIncrement:      90,\n\n            //DEFAULT CONTROL SETTINGS\n            showSequenceControl:     true,  //SEQUENCE\n            sequenceControlAnchor:   null,  //SEQUENCE\n            preserveViewport:        false, //SEQUENCE\n            preserveOverlays:        false, //SEQUENCE\n            navPrevNextWrap:         false, //SEQUENCE\n            showNavigationControl:   true,  //ZOOM/HOME/FULL/ROTATION\n            navigationControlAnchor: null,  //ZOOM/HOME/FULL/ROTATION\n            showZoomControl:         true,  //ZOOM\n            showHomeControl:         true,  //HOME\n            showFullPageControl:     true,  //FULL\n            showRotationControl:     false, //ROTATION\n            showFlipControl:         false,  //FLIP\n            controlsFadeDelay:       2000,  //ZOOM/HOME/FULL/SEQUENCE\n            controlsFadeLength:      1500,  //ZOOM/HOME/FULL/SEQUENCE\n            mouseNavEnabled:         true,  //GENERAL MOUSE INTERACTIVITY\n\n            //VIEWPORT NAVIGATOR SETTINGS\n            showNavigator:              false,\n            navigatorId:                null,\n            navigatorPosition:          null,\n            navigatorSizeRatio:         0.2,\n            navigatorMaintainSizeRatio: false,\n            navigatorTop:               null,\n            navigatorLeft:              null,\n            navigatorHeight:            null,\n            navigatorWidth:             null,\n            navigatorAutoResize:        true,\n            navigatorAutoFade:          true,\n            navigatorRotate:            true,\n            navigatorBackground:        '#000',\n            navigatorOpacity:           0.8,\n            navigatorBorderColor:       '#555',\n            navigatorDisplayRegionColor: '#900',\n\n            // INITIAL ROTATION\n            degrees:                    0,\n\n            // INITIAL FLIP STATE\n            flipped:                    false,\n\n            // APPEARANCE\n            opacity:                    1,\n            preload:                    false,\n            compositeOperation:         null,\n            imageSmoothingEnabled:      true,\n            placeholderFillStyle:       null,\n\n            //REFERENCE STRIP SETTINGS\n            showReferenceStrip:          false,\n            referenceStripScroll:       'horizontal',\n            referenceStripElement:       null,\n            referenceStripHeight:        null,\n            referenceStripWidth:         null,\n            referenceStripPosition:      'BOTTOM_LEFT',\n            referenceStripSizeRatio:     0.2,\n\n            //COLLECTION VISUALIZATION SETTINGS\n            collectionRows:         3, //or columns depending on layout\n            collectionColumns:      0, //columns in horizontal layout, rows in vertical layout\n            collectionLayout:       'horizontal', //vertical\n            collectionMode:         false,\n            collectionTileSize:     800,\n            collectionTileMargin:   80,\n\n            //PERFORMANCE SETTINGS\n            imageLoaderLimit:       0,\n            maxImageCacheCount:     200,\n            timeout:                30000,\n            useCanvas:              true,  // Use canvas element for drawing if available\n\n            //INTERFACE RESOURCE SETTINGS\n            prefixUrl:              \"/images/\",\n            navImages: {\n                zoomIn: {\n                    REST:   'zoomin_rest.png',\n                    GROUP:  'zoomin_grouphover.png',\n                    HOVER:  'zoomin_hover.png',\n                    DOWN:   'zoomin_pressed.png'\n                },\n                zoomOut: {\n                    REST:   'zoomout_rest.png',\n                    GROUP:  'zoomout_grouphover.png',\n                    HOVER:  'zoomout_hover.png',\n                    DOWN:   'zoomout_pressed.png'\n                },\n                home: {\n                    REST:   'home_rest.png',\n                    GROUP:  'home_grouphover.png',\n                    HOVER:  'home_hover.png',\n                    DOWN:   'home_pressed.png'\n                },\n                fullpage: {\n                    REST:   'fullpage_rest.png',\n                    GROUP:  'fullpage_grouphover.png',\n                    HOVER:  'fullpage_hover.png',\n                    DOWN:   'fullpage_pressed.png'\n                },\n                rotateleft: {\n                    REST:   'rotateleft_rest.png',\n                    GROUP:  'rotateleft_grouphover.png',\n                    HOVER:  'rotateleft_hover.png',\n                    DOWN:   'rotateleft_pressed.png'\n                },\n                rotateright: {\n                    REST:   'rotateright_rest.png',\n                    GROUP:  'rotateright_grouphover.png',\n                    HOVER:  'rotateright_hover.png',\n                    DOWN:   'rotateright_pressed.png'\n                },\n                flip: { // Flip icon designed by Yaroslav Samoylov from the Noun Project and modified by Nelson Campos ncampos@criteriamarathon.com, https://thenounproject.com/term/flip/136289/\n                    REST:   'flip_rest.png',\n                    GROUP:  'flip_grouphover.png',\n                    HOVER:  'flip_hover.png',\n                    DOWN:   'flip_pressed.png'\n                },\n                previous: {\n                    REST:   'previous_rest.png',\n                    GROUP:  'previous_grouphover.png',\n                    HOVER:  'previous_hover.png',\n                    DOWN:   'previous_pressed.png'\n                },\n                next: {\n                    REST:   'next_rest.png',\n                    GROUP:  'next_grouphover.png',\n                    HOVER:  'next_hover.png',\n                    DOWN:   'next_pressed.png'\n                }\n            },\n\n            //DEVELOPER SETTINGS\n            debugMode:              false,\n            debugGridColor:         ['#437AB2', '#1B9E77', '#D95F02', '#7570B3', '#E7298A', '#66A61E', '#E6AB02', '#A6761D', '#666666']\n        },\n\n\n        /**\n         * TODO: get rid of this.  I can't see how it's required at all.  Looks\n         *       like an early legacy code artifact.\n         * @static\n         * @ignore\n         */\n        SIGNAL: \"----seadragon----\",\n\n\n        /**\n         * Returns a function which invokes the method as if it were a method belonging to the object.\n         * @function\n         * @param {Object} object\n         * @param {Function} method\n         * @returns {Function}\n         */\n        delegate: function( object, method ) {\n            return function(){\n                var args = arguments;\n                if ( args === undefined ){\n                    args = [];\n                }\n                return method.apply( object, args );\n            };\n        },\n\n\n        /**\n         * An enumeration of Browser vendors.\n         * @static\n         * @type {Object}\n         * @property {Number} UNKNOWN\n         * @property {Number} IE\n         * @property {Number} FIREFOX\n         * @property {Number} SAFARI\n         * @property {Number} CHROME\n         * @property {Number} OPERA\n         */\n        BROWSERS: {\n            UNKNOWN:    0,\n            IE:         1,\n            FIREFOX:    2,\n            SAFARI:     3,\n            CHROME:     4,\n            OPERA:      5\n        },\n\n\n        /**\n         * Returns a DOM Element for the given id or element.\n         * @function\n         * @param {String|Element} element Accepts an id or element.\n         * @returns {Element} The element with the given id, null, or the element itself.\n         */\n        getElement: function( element ) {\n            if ( typeof ( element ) == \"string\" ) {\n                element = document.getElementById( element );\n            }\n            return element;\n        },\n\n\n        /**\n         * Determines the position of the upper-left corner of the element.\n         * @function\n         * @param {Element|String} element - the element we want the position for.\n         * @returns {OpenSeadragon.Point} - the position of the upper left corner of the element.\n         */\n        getElementPosition: function( element ) {\n            var result = new $.Point(),\n                isFixed,\n                offsetParent;\n\n            element      = $.getElement( element );\n            isFixed      = $.getElementStyle( element ).position == \"fixed\";\n            offsetParent = getOffsetParent( element, isFixed );\n\n            while ( offsetParent ) {\n\n                result.x += element.offsetLeft;\n                result.y += element.offsetTop;\n\n                if ( isFixed ) {\n                    result = result.plus( $.getPageScroll() );\n                }\n\n                element = offsetParent;\n                isFixed = $.getElementStyle( element ).position == \"fixed\";\n                offsetParent = getOffsetParent( element, isFixed );\n            }\n\n            return result;\n        },\n\n\n        /**\n         * Determines the position of the upper-left corner of the element adjusted for current page and/or element scroll.\n         * @function\n         * @param {Element|String} element - the element we want the position for.\n         * @returns {OpenSeadragon.Point} - the position of the upper left corner of the element adjusted for current page and/or element scroll.\n         */\n        getElementOffset: function( element ) {\n            element = $.getElement( element );\n\n            var doc = element && element.ownerDocument,\n                docElement,\n                win,\n                boundingRect = { top: 0, left: 0 };\n\n            if ( !doc ) {\n                return new $.Point();\n            }\n\n            docElement = doc.documentElement;\n\n            if ( typeof element.getBoundingClientRect !== typeof undefined ) {\n                boundingRect = element.getBoundingClientRect();\n            }\n\n            win = ( doc == doc.window ) ?\n                doc :\n                ( doc.nodeType === 9 ) ?\n                    doc.defaultView || doc.parentWindow :\n                    false;\n\n            return new $.Point(\n                boundingRect.left + ( win.pageXOffset || docElement.scrollLeft ) - ( docElement.clientLeft || 0 ),\n                boundingRect.top + ( win.pageYOffset || docElement.scrollTop ) - ( docElement.clientTop || 0 )\n            );\n        },\n\n\n        /**\n         * Determines the height and width of the given element.\n         * @function\n         * @param {Element|String} element\n         * @returns {OpenSeadragon.Point}\n         */\n        getElementSize: function( element ) {\n            element = $.getElement( element );\n\n            return new $.Point(\n                element.clientWidth,\n                element.clientHeight\n            );\n        },\n\n\n        /**\n         * Returns the CSSStyle object for the given element.\n         * @function\n         * @param {Element|String} element\n         * @returns {CSSStyle}\n         */\n        getElementStyle:\n            document.documentElement.currentStyle ?\n            function( element ) {\n                element = $.getElement( element );\n                return element.currentStyle;\n            } :\n            function( element ) {\n                element = $.getElement( element );\n                return window.getComputedStyle( element, \"\" );\n            },\n\n        /**\n         * Returns the property with the correct vendor prefix appended.\n         * @param {String} property the property name\n         * @returns {String} the property with the correct prefix or null if not\n         * supported.\n         */\n        getCssPropertyWithVendorPrefix: function(property) {\n            var memo = {};\n\n            $.getCssPropertyWithVendorPrefix = function(property) {\n                if (memo[property] !== undefined) {\n                    return memo[property];\n                }\n                var style = document.createElement('div').style;\n                var result = null;\n                if (style[property] !== undefined) {\n                    result = property;\n                } else {\n                    var prefixes = ['Webkit', 'Moz', 'MS', 'O',\n                        'webkit', 'moz', 'ms', 'o'];\n                    var suffix = $.capitalizeFirstLetter(property);\n                    for (var i = 0; i < prefixes.length; i++) {\n                        var prop = prefixes[i] + suffix;\n                        if (style[prop] !== undefined) {\n                            result = prop;\n                            break;\n                        }\n                    }\n                }\n                memo[property] = result;\n                return result;\n            };\n            return $.getCssPropertyWithVendorPrefix(property);\n        },\n\n        /**\n         * Capitalizes the first letter of a string\n         * @param {String} string\n         * @returns {String} The string with the first letter capitalized\n         */\n        capitalizeFirstLetter: function(string) {\n            return string.charAt(0).toUpperCase() + string.slice(1);\n        },\n\n        /**\n         * Compute the modulo of a number but makes sure to always return\n         * a positive value.\n         * @param {Number} number the number to computes the modulo of\n         * @param {Number} modulo the modulo\n         * @returns {Number} the result of the modulo of number\n         */\n        positiveModulo: function(number, modulo) {\n            var result = number % modulo;\n            if (result < 0) {\n                result += modulo;\n            }\n            return result;\n        },\n\n        /**\n         * Determines if a point is within the bounding rectangle of the given element (hit-test).\n         * @function\n         * @param {Element|String} element\n         * @param {OpenSeadragon.Point} point\n         * @returns {Boolean}\n         */\n        pointInElement: function( element, point ) {\n            element = $.getElement( element );\n            var offset = $.getElementOffset( element ),\n                size = $.getElementSize( element );\n            return point.x >= offset.x && point.x < offset.x + size.x && point.y < offset.y + size.y && point.y >= offset.y;\n        },\n\n\n        /**\n         * Gets the latest event, really only useful internally since its\n         * specific to IE behavior.\n         * @function\n         * @param {Event} [event]\n         * @returns {Event}\n         * @deprecated For internal use only\n         * @private\n         */\n        getEvent: function( event ) {\n            if( event ){\n                $.getEvent = function( event ) {\n                    return event;\n                };\n            } else {\n                $.getEvent = function() {\n                    return window.event;\n                };\n            }\n            return $.getEvent( event );\n        },\n\n\n        /**\n         * Gets the position of the mouse on the screen for a given event.\n         * @function\n         * @param {Event} [event]\n         * @returns {OpenSeadragon.Point}\n         */\n        getMousePosition: function( event ) {\n\n            if ( typeof ( event.pageX ) == \"number\" ) {\n                $.getMousePosition = function( event ){\n                    var result = new $.Point();\n\n                    event = $.getEvent( event );\n                    result.x = event.pageX;\n                    result.y = event.pageY;\n\n                    return result;\n                };\n            } else if ( typeof ( event.clientX ) == \"number\" ) {\n                $.getMousePosition = function( event ){\n                    var result = new $.Point();\n\n                    event = $.getEvent( event );\n                    result.x =\n                        event.clientX +\n                        document.body.scrollLeft +\n                        document.documentElement.scrollLeft;\n                    result.y =\n                        event.clientY +\n                        document.body.scrollTop +\n                        document.documentElement.scrollTop;\n\n                    return result;\n                };\n            } else {\n                throw new Error(\n                    \"Unknown event mouse position, no known technique.\"\n                );\n            }\n\n            return $.getMousePosition( event );\n        },\n\n\n        /**\n         * Determines the page's current scroll position.\n         * @function\n         * @returns {OpenSeadragon.Point}\n         */\n        getPageScroll: function() {\n            var docElement  = document.documentElement || {},\n                body        = document.body || {};\n\n            if ( typeof ( window.pageXOffset ) == \"number\" ) {\n                $.getPageScroll = function(){\n                    return new $.Point(\n                        window.pageXOffset,\n                        window.pageYOffset\n                    );\n                };\n            } else if ( body.scrollLeft || body.scrollTop ) {\n                $.getPageScroll = function(){\n                    return new $.Point(\n                        document.body.scrollLeft,\n                        document.body.scrollTop\n                    );\n                };\n            } else if ( docElement.scrollLeft || docElement.scrollTop ) {\n                $.getPageScroll = function(){\n                    return new $.Point(\n                        document.documentElement.scrollLeft,\n                        document.documentElement.scrollTop\n                    );\n                };\n            } else {\n                // We can't reassign the function yet, as there was no scroll.\n                return new $.Point(0, 0);\n            }\n\n            return $.getPageScroll();\n        },\n\n        /**\n         * Set the page scroll position.\n         * @function\n         * @returns {OpenSeadragon.Point}\n         */\n        setPageScroll: function( scroll ) {\n            if ( typeof ( window.scrollTo ) !== \"undefined\" ) {\n                $.setPageScroll = function( scroll ) {\n                    window.scrollTo( scroll.x, scroll.y );\n                };\n            } else {\n                var originalScroll = $.getPageScroll();\n                if ( originalScroll.x === scroll.x &&\n                    originalScroll.y === scroll.y ) {\n                    // We are already correctly positioned and there\n                    // is no way to detect the correct method.\n                    return;\n                }\n\n                document.body.scrollLeft = scroll.x;\n                document.body.scrollTop = scroll.y;\n                var currentScroll = $.getPageScroll();\n                if ( currentScroll.x !== originalScroll.x &&\n                    currentScroll.y !== originalScroll.y ) {\n                    $.setPageScroll = function( scroll ) {\n                        document.body.scrollLeft = scroll.x;\n                        document.body.scrollTop = scroll.y;\n                    };\n                    return;\n                }\n\n                document.documentElement.scrollLeft = scroll.x;\n                document.documentElement.scrollTop = scroll.y;\n                currentScroll = $.getPageScroll();\n                if ( currentScroll.x !== originalScroll.x &&\n                    currentScroll.y !== originalScroll.y ) {\n                    $.setPageScroll = function( scroll ) {\n                        document.documentElement.scrollLeft = scroll.x;\n                        document.documentElement.scrollTop = scroll.y;\n                    };\n                    return;\n                }\n\n                // We can't find anything working, so we do nothing.\n                $.setPageScroll = function( scroll ) {\n                };\n            }\n\n            return $.setPageScroll( scroll );\n        },\n\n        /**\n         * Determines the size of the browsers window.\n         * @function\n         * @returns {OpenSeadragon.Point}\n         */\n        getWindowSize: function() {\n            var docElement = document.documentElement || {},\n                body    = document.body || {};\n\n            if ( typeof ( window.innerWidth ) == 'number' ) {\n                $.getWindowSize = function(){\n                    return new $.Point(\n                        window.innerWidth,\n                        window.innerHeight\n                    );\n                };\n            } else if ( docElement.clientWidth || docElement.clientHeight ) {\n                $.getWindowSize = function(){\n                    return new $.Point(\n                        document.documentElement.clientWidth,\n                        document.documentElement.clientHeight\n                    );\n                };\n            } else if ( body.clientWidth || body.clientHeight ) {\n                $.getWindowSize = function(){\n                    return new $.Point(\n                        document.body.clientWidth,\n                        document.body.clientHeight\n                    );\n                };\n            } else {\n                throw new Error(\"Unknown window size, no known technique.\");\n            }\n\n            return $.getWindowSize();\n        },\n\n\n        /**\n         * Wraps the given element in a nest of divs so that the element can\n         * be easily centered using CSS tables\n         * @function\n         * @param {Element|String} element\n         * @returns {Element} outermost wrapper element\n         */\n        makeCenteredNode: function( element ) {\n            // Convert a possible ID to an actual HTMLElement\n            element = $.getElement( element );\n\n            /*\n                CSS tables require you to have a display:table/row/cell hierarchy so we need to create\n                three nested wrapper divs:\n             */\n\n            var wrappers = [\n                $.makeNeutralElement( 'div' ),\n                $.makeNeutralElement( 'div' ),\n                $.makeNeutralElement( 'div' )\n            ];\n\n            // It feels like we should be able to pass style dicts to makeNeutralElement:\n            $.extend(wrappers[0].style, {\n                display: \"table\",\n                height: \"100%\",\n                width: \"100%\"\n            });\n\n            $.extend(wrappers[1].style, {\n                display: \"table-row\"\n            });\n\n            $.extend(wrappers[2].style, {\n                display: \"table-cell\",\n                verticalAlign: \"middle\",\n                textAlign: \"center\"\n            });\n\n            wrappers[0].appendChild(wrappers[1]);\n            wrappers[1].appendChild(wrappers[2]);\n            wrappers[2].appendChild(element);\n\n            return wrappers[0];\n        },\n\n\n        /**\n         * Creates an easily positionable element of the given type that therefor\n         * serves as an excellent container element.\n         * @function\n         * @param {String} tagName\n         * @returns {Element}\n         */\n        makeNeutralElement: function( tagName ) {\n            var element = document.createElement( tagName ),\n                style   = element.style;\n\n            style.background = \"transparent none\";\n            style.border     = \"none\";\n            style.margin     = \"0px\";\n            style.padding    = \"0px\";\n            style.position   = \"static\";\n\n            return element;\n        },\n\n\n        /**\n         * Returns the current milliseconds, using Date.now() if available\n         * @function\n         */\n        now: function( ) {\n            if (Date.now) {\n                $.now = Date.now;\n            } else {\n                $.now = function() {\n                    return new Date().getTime();\n                };\n            }\n\n            return $.now();\n        },\n\n\n        /**\n         * Ensures an image is loaded correctly to support alpha transparency.\n         * Generally only IE has issues doing this correctly for formats like\n         * png.\n         * @function\n         * @param {String} src\n         * @returns {Element}\n         */\n        makeTransparentImage: function( src ) {\n\n            $.makeTransparentImage = function( src ){\n                var img = $.makeNeutralElement( \"img\" );\n\n                img.src = src;\n\n                return img;\n            };\n\n            if ( $.Browser.vendor == $.BROWSERS.IE && $.Browser.version < 7 ) {\n\n                $.makeTransparentImage = function( src ){\n                    var img     = $.makeNeutralElement( \"img\" ),\n                        element = null;\n\n                    element = $.makeNeutralElement(\"span\");\n                    element.style.display = \"inline-block\";\n\n                    img.onload = function() {\n                        element.style.width  = element.style.width || img.width + \"px\";\n                        element.style.height = element.style.height || img.height + \"px\";\n\n                        img.onload = null;\n                        img = null;     // to prevent memory leaks in IE\n                    };\n\n                    img.src = src;\n                    element.style.filter =\n                        \"progid:DXImageTransform.Microsoft.AlphaImageLoader(src='\" +\n                        src +\n                        \"', sizingMethod='scale')\";\n\n                    return element;\n                };\n\n            }\n\n            return $.makeTransparentImage( src );\n        },\n\n\n        /**\n         * Sets the opacity of the specified element.\n         * @function\n         * @param {Element|String} element\n         * @param {Number} opacity\n         * @param {Boolean} [usesAlpha]\n         */\n        setElementOpacity: function( element, opacity, usesAlpha ) {\n\n            var ieOpacity,\n                ieFilter;\n\n            element = $.getElement( element );\n\n            if ( usesAlpha && !$.Browser.alpha ) {\n                opacity = Math.round( opacity );\n            }\n\n            if ( $.Browser.opacity ) {\n                element.style.opacity = opacity < 1 ? opacity : \"\";\n            } else {\n                if ( opacity < 1 ) {\n                    ieOpacity = Math.round( 100 * opacity );\n                    ieFilter  = \"alpha(opacity=\" + ieOpacity + \")\";\n                    element.style.filter = ieFilter;\n                } else {\n                    element.style.filter = \"\";\n                }\n            }\n        },\n\n\n        /**\n         * Sets the specified element's touch-action style attribute to 'none'.\n         * @function\n         * @param {Element|String} element\n         */\n        setElementTouchActionNone: function( element ) {\n            element = $.getElement( element );\n            if ( typeof element.style.touchAction !== 'undefined' ) {\n                element.style.touchAction = 'none';\n            } else if ( typeof element.style.msTouchAction !== 'undefined' ) {\n                element.style.msTouchAction = 'none';\n            }\n        },\n\n\n        /**\n         * Add the specified CSS class to the element if not present.\n         * @function\n         * @param {Element|String} element\n         * @param {String} className\n         */\n        addClass: function( element, className ) {\n            element = $.getElement( element );\n\n            if (!element.className) {\n                element.className = className;\n            } else if ( ( ' ' + element.className + ' ' ).\n                indexOf( ' ' + className + ' ' ) === -1 ) {\n                element.className += ' ' + className;\n            }\n        },\n\n        /**\n         * Find the first index at which an element is found in an array or -1\n         * if not present.\n         *\n         * Code taken and adapted from\n         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf#Compatibility\n         *\n         * @function\n         * @param {Array} array The array from which to find the element\n         * @param {Object} searchElement The element to find\n         * @param {Number} [fromIndex=0] Index to start research.\n         * @returns {Number} The index of the element in the array.\n         */\n        indexOf: function( array, searchElement, fromIndex ) {\n            if ( Array.prototype.indexOf ) {\n                this.indexOf = function( array, searchElement, fromIndex ) {\n                    return array.indexOf( searchElement, fromIndex );\n                };\n            } else {\n                this.indexOf = function( array, searchElement, fromIndex ) {\n                    var i,\n                        pivot = ( fromIndex ) ? fromIndex : 0,\n                        length;\n                    if ( !array ) {\n                        throw new TypeError( );\n                    }\n\n                    length = array.length;\n                    if ( length === 0 || pivot >= length ) {\n                        return -1;\n                    }\n\n                    if ( pivot < 0 ) {\n                        pivot = length - Math.abs( pivot );\n                    }\n\n                    for ( i = pivot; i < length; i++ ) {\n                        if ( array[i] === searchElement ) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n            }\n            return this.indexOf( array, searchElement, fromIndex );\n        },\n\n        /**\n         * Remove the specified CSS class from the element.\n         * @function\n         * @param {Element|String} element\n         * @param {String} className\n         */\n        removeClass: function( element, className ) {\n            var oldClasses,\n                newClasses = [],\n                i;\n\n            element = $.getElement( element );\n            oldClasses = element.className.split( /\\s+/ );\n            for ( i = 0; i < oldClasses.length; i++ ) {\n                if ( oldClasses[ i ] && oldClasses[ i ] !== className ) {\n                    newClasses.push( oldClasses[ i ] );\n                }\n            }\n            element.className = newClasses.join(' ');\n        },\n\n\n        /**\n         * Adds an event listener for the given element, eventName and handler.\n         * @function\n         * @param {Element|String} element\n         * @param {String} eventName\n         * @param {Function} handler\n         * @param {Boolean} [useCapture]\n         */\n        addEvent: (function () {\n            if ( window.addEventListener ) {\n                return function ( element, eventName, handler, useCapture ) {\n                    element = $.getElement( element );\n                    element.addEventListener( eventName, handler, useCapture );\n                };\n            } else if ( window.attachEvent ) {\n                return function ( element, eventName, handler, useCapture ) {\n                    element = $.getElement( element );\n                    element.attachEvent( 'on' + eventName, handler );\n                };\n            } else {\n                throw new Error( \"No known event model.\" );\n            }\n        }()),\n\n\n        /**\n         * Remove a given event listener for the given element, event type and\n         * handler.\n         * @function\n         * @param {Element|String} element\n         * @param {String} eventName\n         * @param {Function} handler\n         * @param {Boolean} [useCapture]\n         */\n        removeEvent: (function () {\n            if ( window.removeEventListener ) {\n                return function ( element, eventName, handler, useCapture ) {\n                    element = $.getElement( element );\n                    element.removeEventListener( eventName, handler, useCapture );\n                };\n            } else if ( window.detachEvent ) {\n                return function( element, eventName, handler, useCapture ) {\n                    element = $.getElement( element );\n                    element.detachEvent( 'on' + eventName, handler );\n                };\n            } else {\n                throw new Error( \"No known event model.\" );\n            }\n        }()),\n\n\n        /**\n         * Cancels the default browser behavior had the event propagated all\n         * the way up the DOM to the window object.\n         * @function\n         * @param {Event} [event]\n         */\n        cancelEvent: function( event ) {\n            event = $.getEvent( event );\n\n            if ( event.preventDefault ) {\n                $.cancelEvent = function( event ){\n                    // W3C for preventing default\n                    event.preventDefault();\n                };\n            } else {\n                $.cancelEvent = function( event ){\n                    event = $.getEvent( event );\n                    // legacy for preventing default\n                    event.cancel = true;\n                    // IE for preventing default\n                    event.returnValue = false;\n                };\n            }\n            $.cancelEvent( event );\n        },\n\n\n        /**\n         * Stops the propagation of the event up the DOM.\n         * @function\n         * @param {Event} [event]\n         */\n        stopEvent: function( event ) {\n            event = $.getEvent( event );\n\n            if ( event.stopPropagation ) {\n                // W3C for stopping propagation\n                $.stopEvent = function( event ){\n                    event.stopPropagation();\n                };\n            } else {\n                // IE for stopping propagation\n                $.stopEvent = function( event ){\n                    event = $.getEvent( event );\n                    event.cancelBubble = true;\n                };\n\n            }\n\n            $.stopEvent( event );\n        },\n\n\n        /**\n         * Similar to OpenSeadragon.delegate, but it does not immediately call\n         * the method on the object, returning a function which can be called\n         * repeatedly to delegate the method. It also allows additional arguments\n         * to be passed during construction which will be added during each\n         * invocation, and each invocation can add additional arguments as well.\n         *\n         * @function\n         * @param {Object} object\n         * @param {Function} method\n         * @param [args] any additional arguments are passed as arguments to the\n         *  created callback\n         * @returns {Function}\n         */\n        createCallback: function( object, method ) {\n            //TODO: This pattern is painful to use and debug.  It's much cleaner\n            //      to use pinning plus anonymous functions.  Get rid of this\n            //      pattern!\n            var initialArgs = [],\n                i;\n            for ( i = 2; i < arguments.length; i++ ) {\n                initialArgs.push( arguments[ i ] );\n            }\n\n            return function() {\n                var args = initialArgs.concat( [] ),\n                    i;\n                for ( i = 0; i < arguments.length; i++ ) {\n                    args.push( arguments[ i ] );\n                }\n\n                return method.apply( object, args );\n            };\n        },\n\n\n        /**\n         * Retrieves the value of a url parameter from the window.location string.\n         * @function\n         * @param {String} key\n         * @returns {String} The value of the url parameter or null if no param matches.\n         */\n        getUrlParameter: function( key ) {\n            // eslint-disable-next-line no-use-before-define\n            var value = URLPARAMS[ key ];\n            return value ? value : null;\n        },\n\n        /**\n         * Retrieves the protocol used by the url. The url can either be absolute\n         * or relative.\n         * @function\n         * @private\n         * @param {String} url The url to retrieve the protocol from.\n         * @return {String} The protocol (http:, https:, file:, ftp: ...)\n         */\n        getUrlProtocol: function( url ) {\n            var match = url.match(/^([a-z]+:)\\/\\//i);\n            if ( match === null ) {\n                // Relative URL, retrive the protocol from window.location\n                return window.location.protocol;\n            }\n            return match[1].toLowerCase();\n        },\n\n        /**\n         * Create an XHR object\n         * @private\n         * @param {type} [local] If set to true, the XHR will be file: protocol\n         * compatible if possible (but may raise a warning in the browser).\n         * @returns {XMLHttpRequest}\n         */\n        createAjaxRequest: function( local ) {\n            // IE11 does not support window.ActiveXObject so we just try to\n            // create one to see if it is supported.\n            // See: http://msdn.microsoft.com/en-us/library/ie/dn423948%28v=vs.85%29.aspx\n            var supportActiveX;\n            try {\n                /* global ActiveXObject:true */\n                supportActiveX = !!new ActiveXObject( \"Microsoft.XMLHTTP\" );\n            } catch( e ) {\n                supportActiveX = false;\n            }\n\n            if ( supportActiveX ) {\n                if ( window.XMLHttpRequest ) {\n                    $.createAjaxRequest = function( local ) {\n                        if ( local ) {\n                            return new ActiveXObject( \"Microsoft.XMLHTTP\" );\n                        }\n                        return new XMLHttpRequest();\n                    };\n                } else {\n                    $.createAjaxRequest = function() {\n                        return new ActiveXObject( \"Microsoft.XMLHTTP\" );\n                    };\n                }\n            } else if ( window.XMLHttpRequest ) {\n                $.createAjaxRequest = function() {\n                    return new XMLHttpRequest();\n                };\n            } else {\n                throw new Error( \"Browser doesn't support XMLHttpRequest.\" );\n            }\n            return $.createAjaxRequest( local );\n        },\n\n        /**\n         * Makes an AJAX request.\n         * @param {Object} options\n         * @param {String} options.url - the url to request\n         * @param {Function} options.success - a function to call on a successful response\n         * @param {Function} options.error - a function to call on when an error occurs\n         * @param {Object} options.headers - headers to add to the AJAX request\n         * @param {String} options.responseType - the response type of the the AJAX request\n         * @param {Boolean} [options.withCredentials=false] - whether to set the XHR's withCredentials\n         * @throws {Error}\n         * @returns {XMLHttpRequest}\n         */\n        makeAjaxRequest: function( url, onSuccess, onError ) {\n            var withCredentials;\n            var headers;\n            var responseType;\n\n            // Note that our preferred API is that you pass in a single object; the named\n            // arguments are for legacy support.\n            if( $.isPlainObject( url ) ){\n                onSuccess = url.success;\n                onError = url.error;\n                withCredentials = url.withCredentials;\n                headers = url.headers;\n                responseType = url.responseType || null;\n                url = url.url;\n            }\n\n            var protocol = $.getUrlProtocol( url );\n            var request = $.createAjaxRequest( protocol === \"file:\" );\n\n            if ( !$.isFunction( onSuccess ) ) {\n                throw new Error( \"makeAjaxRequest requires a success callback\" );\n            }\n\n            request.onreadystatechange = function() {\n                // 4 = DONE (https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#Properties)\n                if ( request.readyState == 4 ) {\n                    request.onreadystatechange = function(){};\n\n                    // With protocols other than http/https, a successful request status is in\n                    // the 200's on Firefox and 0 on other browsers\n                    if ( (request.status >= 200 && request.status < 300) ||\n                        ( request.status === 0 &&\n                          protocol !== \"http:\" &&\n                          protocol !== \"https:\" )) {\n                        onSuccess( request );\n                    } else {\n                        $.console.log( \"AJAX request returned %d: %s\", request.status, url );\n\n                        if ( $.isFunction( onError ) ) {\n                            onError( request );\n                        }\n                    }\n                }\n            };\n\n            try {\n                request.open( \"GET\", url, true );\n\n                if (responseType) {\n                    request.responseType = responseType;\n                }\n\n                if (headers) {\n                    for (var headerName in headers) {\n                        if (headers.hasOwnProperty(headerName) && headers[headerName]) {\n                            request.setRequestHeader(headerName, headers[headerName]);\n                        }\n                    }\n                }\n\n                if (withCredentials) {\n                    request.withCredentials = true;\n                }\n\n                request.send(null);\n            } catch (e) {\n                var msg = e.message;\n\n                /*\n                    IE < 10 does not support CORS and an XHR request to a different origin will fail as soon\n                    as send() is called. This is particularly easy to miss during development and appear in\n                    production if you use a CDN or domain sharding and the security policy is likely to break\n                    exception handlers since any attempt to access a property of the request object will\n                    raise an access denied TypeError inside the catch block.\n\n                    To be friendlier, we'll check for this specific error and add a documentation pointer\n                    to point developers in the right direction. We test the exception number because IE's\n                    error messages are localized.\n                */\n                var oldIE = $.Browser.vendor == $.BROWSERS.IE && $.Browser.version < 10;\n                if ( oldIE && typeof ( e.number ) != \"undefined\" && e.number == -2147024891 ) {\n                    msg += \"\\nSee http://msdn.microsoft.com/en-us/library/ms537505(v=vs.85).aspx#xdomain\";\n                }\n\n                $.console.log( \"%s while making AJAX request: %s\", e.name, msg );\n\n                request.onreadystatechange = function(){};\n\n                if (window.XDomainRequest) { // IE9 or IE8 might as well try to use XDomainRequest\n                    var xdr = new XDomainRequest();\n                    if (xdr) {\n                        xdr.onload = function (e) {\n                            if ( $.isFunction( onSuccess ) ) {\n                                onSuccess({ // Faking an xhr object\n                                    responseText: xdr.responseText,\n                                    status: 200, // XDomainRequest doesn't support status codes, so we just fake one! :/\n                                    statusText: 'OK'\n                                });\n                            }\n                        };\n                        xdr.onerror = function (e) {\n                            if ($.isFunction(onError)) {\n                                onError({ // Faking an xhr object\n                                    responseText: xdr.responseText,\n                                    status: 444, // 444 No Response\n                                    statusText: 'An error happened. Due to an XDomainRequest deficiency we can not extract any information about this error. Upgrade your browser.'\n                                });\n                            }\n                        };\n                        try {\n                            xdr.open('GET', url);\n                            xdr.send();\n                        } catch (e2) {\n                            if ( $.isFunction( onError ) ) {\n                                onError( request, e );\n                            }\n                        }\n                    }\n                } else {\n                    if ( $.isFunction( onError ) ) {\n                        onError( request, e );\n                    }\n                }\n            }\n\n            return request;\n        },\n\n        /**\n         * Taken from jQuery 1.6.1\n         * @function\n         * @param {Object} options\n         * @param {String} options.url\n         * @param {Function} options.callback\n         * @param {String} [options.param='callback'] The name of the url parameter\n         *      to request the jsonp provider with.\n         * @param {String} [options.callbackName=] The name of the callback to\n         *      request the jsonp provider with.\n         */\n        jsonp: function( options ){\n            var script,\n                url     = options.url,\n                head    = document.head ||\n                    document.getElementsByTagName( \"head\" )[ 0 ] ||\n                    document.documentElement,\n                jsonpCallback = options.callbackName || 'openseadragon' + $.now(),\n                previous      = window[ jsonpCallback ],\n                replace       = \"$1\" + jsonpCallback + \"$2\",\n                callbackParam = options.param || 'callback',\n                callback      = options.callback;\n\n            url = url.replace( /(\\=)\\?(&|$)|\\?\\?/i, replace );\n            // Add callback manually\n            url += (/\\?/.test( url ) ? \"&\" : \"?\") + callbackParam + \"=\" + jsonpCallback;\n\n            // Install callback\n            window[ jsonpCallback ] = function( response ) {\n                if ( !previous ){\n                    try{\n                        delete window[ jsonpCallback ];\n                    }catch(e){\n                        //swallow\n                    }\n                } else {\n                    window[ jsonpCallback ] = previous;\n                }\n                if( callback && $.isFunction( callback ) ){\n                    callback( response );\n                }\n            };\n\n            script = document.createElement( \"script\" );\n\n            //TODO: having an issue with async info requests\n            if( undefined !== options.async || false !== options.async ){\n                script.async = \"async\";\n            }\n\n            if ( options.scriptCharset ) {\n                script.charset = options.scriptCharset;\n            }\n\n            script.src = url;\n\n            // Attach handlers for all browsers\n            script.onload = script.onreadystatechange = function( _, isAbort ) {\n\n                if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {\n\n                    // Handle memory leak in IE\n                    script.onload = script.onreadystatechange = null;\n\n                    // Remove the script\n                    if ( head && script.parentNode ) {\n                        head.removeChild( script );\n                    }\n\n                    // Dereference the script\n                    script = undefined;\n                }\n            };\n            // Use insertBefore instead of appendChild  to circumvent an IE6 bug.\n            // This arises when a base node is used (#2709 and #4378).\n            head.insertBefore( script, head.firstChild );\n\n        },\n\n\n        /**\n         * Fully deprecated. Will throw an error.\n         * @function\n         * @deprecated use {@link OpenSeadragon.Viewer#open}\n         */\n        createFromDZI: function() {\n            throw \"OpenSeadragon.createFromDZI is deprecated, use Viewer.open.\";\n        },\n\n        /**\n         * Parses an XML string into a DOM Document.\n         * @function\n         * @param {String} string\n         * @returns {Document}\n         */\n        parseXml: function( string ) {\n            if ( window.DOMParser ) {\n\n                $.parseXml = function( string ) {\n                    var xmlDoc = null,\n                        parser;\n\n                    parser = new DOMParser();\n                    xmlDoc = parser.parseFromString( string, \"text/xml\" );\n                    return xmlDoc;\n                };\n\n            } else if ( window.ActiveXObject ) {\n\n                $.parseXml = function( string ) {\n                    var xmlDoc = null;\n\n                    xmlDoc = new ActiveXObject( \"Microsoft.XMLDOM\" );\n                    xmlDoc.async = false;\n                    xmlDoc.loadXML( string );\n                    return xmlDoc;\n                };\n\n            } else {\n                throw new Error( \"Browser doesn't support XML DOM.\" );\n            }\n\n            return $.parseXml( string );\n        },\n\n        /**\n         * Parses a JSON string into a Javascript object.\n         * @function\n         * @param {String} string\n         * @returns {Object}\n         */\n        parseJSON: function(string) {\n            if (window.JSON && window.JSON.parse) {\n                $.parseJSON = window.JSON.parse;\n            } else {\n                // Should only be used by IE8 in non standards mode\n                $.parseJSON = function(string) {\n                    /*jshint evil:true*/\n                    //eslint-disable-next-line no-eval\n                    return eval('(' + string + ')');\n                };\n            }\n            return $.parseJSON(string);\n        },\n\n        /**\n         * Reports whether the image format is supported for tiling in this\n         * version.\n         * @function\n         * @param {String} [extension]\n         * @returns {Boolean}\n         */\n        imageFormatSupported: function( extension ) {\n            extension = extension ? extension : \"\";\n            // eslint-disable-next-line no-use-before-define\n            return !!FILEFORMATS[ extension.toLowerCase() ];\n        }\n\n    });\n\n\n    /**\n     * The current browser vendor, version, and related information regarding detected features.\n     * @member {Object} Browser\n     * @memberof OpenSeadragon\n     * @static\n     * @type {Object}\n     * @property {OpenSeadragon.BROWSERS} vendor - One of the {@link OpenSeadragon.BROWSERS} enumeration values.\n     * @property {Number} version\n     * @property {Boolean} alpha - Does the browser support image alpha transparency.\n     */\n    $.Browser = {\n        vendor:     $.BROWSERS.UNKNOWN,\n        version:    0,\n        alpha:      true\n    };\n\n\n    var FILEFORMATS = {\n            \"bmp\":  false,\n            \"jpeg\": true,\n            \"jpg\":  true,\n            \"png\":  true,\n            \"tif\":  false,\n            \"wdp\":  false\n        },\n        URLPARAMS = {};\n\n    (function() {\n        //A small auto-executing routine to determine the browser vendor,\n        //version and supporting feature sets.\n        var ver = navigator.appVersion,\n            ua  = navigator.userAgent,\n            regex;\n\n        //console.error( 'appName: ' + navigator.appName );\n        //console.error( 'appVersion: ' + navigator.appVersion );\n        //console.error( 'userAgent: ' + navigator.userAgent );\n\n        switch( navigator.appName ){\n            case \"Microsoft Internet Explorer\":\n                if( !!window.attachEvent &&\n                    !!window.ActiveXObject ) {\n\n                    $.Browser.vendor = $.BROWSERS.IE;\n                    $.Browser.version = parseFloat(\n                        ua.substring(\n                            ua.indexOf( \"MSIE\" ) + 5,\n                            ua.indexOf( \";\", ua.indexOf( \"MSIE\" ) ) )\n                        );\n                }\n                break;\n            case \"Netscape\":\n                if (window.addEventListener) {\n                    if ( ua.indexOf( \"Firefox\" ) >= 0 ) {\n                        $.Browser.vendor = $.BROWSERS.FIREFOX;\n                        $.Browser.version = parseFloat(\n                            ua.substring( ua.indexOf( \"Firefox\" ) + 8 )\n                        );\n                    } else if ( ua.indexOf( \"Safari\" ) >= 0 ) {\n                        $.Browser.vendor = ua.indexOf( \"Chrome\" ) >= 0 ?\n                            $.BROWSERS.CHROME :\n                            $.BROWSERS.SAFARI;\n                        $.Browser.version = parseFloat(\n                            ua.substring(\n                                ua.substring( 0, ua.indexOf( \"Safari\" ) ).lastIndexOf( \"/\" ) + 1,\n                                ua.indexOf( \"Safari\" )\n                            )\n                        );\n                    } else {\n                        regex = new RegExp( \"Trident/.*rv:([0-9]{1,}[.0-9]{0,})\");\n                        if ( regex.exec( ua ) !== null ) {\n                            $.Browser.vendor = $.BROWSERS.IE;\n                            $.Browser.version = parseFloat( RegExp.$1 );\n                        }\n                    }\n                }\n                break;\n            case \"Opera\":\n                $.Browser.vendor = $.BROWSERS.OPERA;\n                $.Browser.version = parseFloat( ver );\n                break;\n        }\n\n            // ignore '?' portion of query string\n        var query = window.location.search.substring( 1 ),\n            parts = query.split('&'),\n            part,\n            sep,\n            i;\n\n        for ( i = 0; i < parts.length; i++ ) {\n            part = parts[ i ];\n            sep  = part.indexOf( '=' );\n\n            if ( sep > 0 ) {\n                URLPARAMS[ part.substring( 0, sep ) ] =\n                    decodeURIComponent( part.substring( sep + 1 ) );\n            }\n        }\n\n        //determine if this browser supports image alpha transparency\n        $.Browser.alpha = !(\n            (\n                $.Browser.vendor == $.BROWSERS.IE &&\n                $.Browser.version < 9\n            ) || (\n                $.Browser.vendor == $.BROWSERS.CHROME &&\n                $.Browser.version < 2\n            )\n        );\n\n        //determine if this browser supports element.style.opacity\n        $.Browser.opacity = !(\n            $.Browser.vendor == $.BROWSERS.IE &&\n            $.Browser.version < 9\n        );\n\n    })();\n\n\n    //TODO: $.console is often used inside a try/catch block which generally\n    //      prevents allowings errors to occur with detection until a debugger\n    //      is attached.  Although I've been guilty of the same anti-pattern\n    //      I eventually was convinced that errors should naturally propagate in\n    //      all but the most special cases.\n    /**\n     * A convenient alias for console when available, and a simple null\n     * function when console is unavailable.\n     * @static\n     * @private\n     */\n    var nullfunction = function( msg ){\n            //document.location.hash = msg;\n        };\n\n    $.console = window.console || {\n        log:    nullfunction,\n        debug:  nullfunction,\n        info:   nullfunction,\n        warn:   nullfunction,\n        error:  nullfunction,\n        assert: nullfunction\n    };\n\n\n    // Adding support for HTML5's requestAnimationFrame as suggested by acdha.\n    // Implementation taken from matt synder's post here:\n    // http://mattsnider.com/cross-browser-and-legacy-supported-requestframeanimation/\n    (function( w ) {\n\n        // most browsers have an implementation\n        var requestAnimationFrame = w.requestAnimationFrame ||\n            w.mozRequestAnimationFrame ||\n            w.webkitRequestAnimationFrame ||\n            w.msRequestAnimationFrame;\n\n        var cancelAnimationFrame = w.cancelAnimationFrame ||\n            w.mozCancelAnimationFrame ||\n            w.webkitCancelAnimationFrame ||\n            w.msCancelAnimationFrame;\n\n        // polyfill, when necessary\n        if ( requestAnimationFrame && cancelAnimationFrame ) {\n            // We can't assign these window methods directly to $ because they\n            // expect their \"this\" to be \"window\", so we call them in wrappers.\n            $.requestAnimationFrame = function(){\n                return requestAnimationFrame.apply( w, arguments );\n            };\n            $.cancelAnimationFrame = function(){\n                return cancelAnimationFrame.apply( w, arguments );\n            };\n        } else {\n            var aAnimQueue = [],\n                processing = [],\n                iRequestId = 0,\n                iIntervalId;\n\n            // create a mock requestAnimationFrame function\n            $.requestAnimationFrame = function( callback ) {\n                aAnimQueue.push( [ ++iRequestId, callback ] );\n\n                if ( !iIntervalId ) {\n                    iIntervalId = setInterval( function() {\n                        if ( aAnimQueue.length ) {\n                            var time = $.now();\n                            // Process all of the currently outstanding frame\n                            // requests, but none that get added during the\n                            // processing.\n                            // Swap the arrays so we don't have to create a new\n                            // array every frame.\n                            var temp = processing;\n                            processing = aAnimQueue;\n                            aAnimQueue = temp;\n                            while ( processing.length ) {\n                                processing.shift()[ 1 ]( time );\n                            }\n                        } else {\n                            // don't continue the interval, if unnecessary\n                            clearInterval( iIntervalId );\n                            iIntervalId = undefined;\n                        }\n                    }, 1000 / 50);  // estimating support for 50 frames per second\n                }\n\n                return iRequestId;\n            };\n\n            // create a mock cancelAnimationFrame function\n            $.cancelAnimationFrame = function( requestId ) {\n                // find the request ID and remove it\n                var i, j;\n                for ( i = 0, j = aAnimQueue.length; i < j; i += 1 ) {\n                    if ( aAnimQueue[ i ][ 0 ] === requestId ) {\n                        aAnimQueue.splice( i, 1 );\n                        return;\n                    }\n                }\n\n                // If it's not in the queue, it may be in the set we're currently\n                // processing (if cancelAnimationFrame is called from within a\n                // requestAnimationFrame callback).\n                for ( i = 0, j = processing.length; i < j; i += 1 ) {\n                    if ( processing[ i ][ 0 ] === requestId ) {\n                        processing.splice( i, 1 );\n                        return;\n                    }\n                }\n            };\n        }\n    })( window );\n\n    /**\n     * @private\n     * @inner\n     * @function\n     * @param {Element} element\n     * @param {Boolean} [isFixed]\n     * @returns {Element}\n     */\n    function getOffsetParent( element, isFixed ) {\n        if ( isFixed && element != document.body ) {\n            return document.body;\n        } else {\n            return element.offsetParent;\n        }\n    }\n\n}(OpenSeadragon));\n\n\n// Universal Module Definition, supports CommonJS, AMD and simple script tag\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // expose as amd module\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // expose as commonjs module\n        module.exports = factory();\n    } else {\n        // expose as window.OpenSeadragon\n        root.OpenSeadragon = factory();\n    }\n}(this, function () {\n    return OpenSeadragon;\n}));\n\n/*\n * OpenSeadragon - full-screen support functions\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ) {\n    /**\n     * Determine native full screen support we can get from the browser.\n     * @member fullScreenApi\n     * @memberof OpenSeadragon\n     * @type {object}\n     * @property {Boolean} supportsFullScreen Return true if full screen API is supported.\n     * @property {Function} isFullScreen Return true if currently in full screen mode.\n     * @property {Function} getFullScreenElement Return the element currently in full screen mode.\n     * @property {Function} requestFullScreen Make a request to go in full screen mode.\n     * @property {Function} exitFullScreen Make a request to exit full screen mode.\n     * @property {Function} cancelFullScreen Deprecated, use exitFullScreen instead.\n     * @property {String} fullScreenEventName Event fired when the full screen mode change.\n     * @property {String} fullScreenErrorEventName Event fired when a request to go\n     * in full screen mode failed.\n     */\n    var fullScreenApi = {\n        supportsFullScreen: false,\n        isFullScreen: function() { return false; },\n        getFullScreenElement: function() { return null; },\n        requestFullScreen: function() {},\n        exitFullScreen: function() {},\n        cancelFullScreen: function() {},\n        fullScreenEventName: '',\n        fullScreenErrorEventName: ''\n    };\n\n    // check for native support\n    if ( document.exitFullscreen ) {\n        // W3C standard\n        fullScreenApi.supportsFullScreen = true;\n        fullScreenApi.getFullScreenElement = function() {\n            return document.fullscreenElement;\n        };\n        fullScreenApi.requestFullScreen = function( element ) {\n            return element.requestFullscreen();\n        };\n        fullScreenApi.exitFullScreen = function() {\n            document.exitFullscreen();\n        };\n        fullScreenApi.fullScreenEventName = \"fullscreenchange\";\n        fullScreenApi.fullScreenErrorEventName = \"fullscreenerror\";\n    } else if ( document.msExitFullscreen ) {\n        // IE 11\n        fullScreenApi.supportsFullScreen = true;\n        fullScreenApi.getFullScreenElement = function() {\n            return document.msFullscreenElement;\n        };\n        fullScreenApi.requestFullScreen = function( element ) {\n            return element.msRequestFullscreen();\n        };\n        fullScreenApi.exitFullScreen = function() {\n            document.msExitFullscreen();\n        };\n        fullScreenApi.fullScreenEventName = \"MSFullscreenChange\";\n        fullScreenApi.fullScreenErrorEventName = \"MSFullscreenError\";\n    } else if ( document.webkitExitFullscreen ) {\n        // Recent webkit\n        fullScreenApi.supportsFullScreen = true;\n        fullScreenApi.getFullScreenElement = function() {\n            return document.webkitFullscreenElement;\n        };\n        fullScreenApi.requestFullScreen = function( element ) {\n            return element.webkitRequestFullscreen();\n        };\n        fullScreenApi.exitFullScreen = function() {\n            document.webkitExitFullscreen();\n        };\n        fullScreenApi.fullScreenEventName = \"webkitfullscreenchange\";\n        fullScreenApi.fullScreenErrorEventName = \"webkitfullscreenerror\";\n    } else if ( document.webkitCancelFullScreen ) {\n        // Old webkit\n        fullScreenApi.supportsFullScreen = true;\n        fullScreenApi.getFullScreenElement = function() {\n            return document.webkitCurrentFullScreenElement;\n        };\n        fullScreenApi.requestFullScreen = function( element ) {\n            return element.webkitRequestFullScreen();\n        };\n        fullScreenApi.exitFullScreen = function() {\n            document.webkitCancelFullScreen();\n        };\n        fullScreenApi.fullScreenEventName = \"webkitfullscreenchange\";\n        fullScreenApi.fullScreenErrorEventName = \"webkitfullscreenerror\";\n    } else if ( document.mozCancelFullScreen ) {\n        // Firefox\n        fullScreenApi.supportsFullScreen = true;\n        fullScreenApi.getFullScreenElement = function() {\n            return document.mozFullScreenElement;\n        };\n        fullScreenApi.requestFullScreen = function( element ) {\n            return element.mozRequestFullScreen();\n        };\n        fullScreenApi.exitFullScreen = function() {\n            document.mozCancelFullScreen();\n        };\n        fullScreenApi.fullScreenEventName = \"mozfullscreenchange\";\n        fullScreenApi.fullScreenErrorEventName = \"mozfullscreenerror\";\n    }\n    fullScreenApi.isFullScreen = function() {\n        return fullScreenApi.getFullScreenElement() !== null;\n    };\n    fullScreenApi.cancelFullScreen = function() {\n        $.console.error(\"cancelFullScreen is deprecated. Use exitFullScreen instead.\");\n        fullScreenApi.exitFullScreen();\n    };\n\n    // export api\n    $.extend( $, fullScreenApi );\n\n})( OpenSeadragon );\n\n/*\n * OpenSeadragon - EventSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function($){\n\n/**\n * Event handler method signature used by all OpenSeadragon events.\n *\n * @callback EventHandler\n * @memberof OpenSeadragon\n * @param {Object} event - See individual events for event-specific properties.\n */\n\n\n/**\n * @class EventSource\n * @classdesc For use by classes which want to support custom, non-browser events.\n *\n * @memberof OpenSeadragon\n */\n$.EventSource = function() {\n    this.events = {};\n};\n\n/** @lends OpenSeadragon.EventSource.prototype */\n$.EventSource.prototype = {\n\n    /**\n     * Add an event handler to be triggered only once (or a given number of times)\n     * for a given event.\n     * @function\n     * @param {String} eventName - Name of event to register.\n     * @param {OpenSeadragon.EventHandler} handler - Function to call when event\n     * is triggered.\n     * @param {Object} [userData=null] - Arbitrary object to be passed unchanged\n     * to the handler.\n     * @param {Number} [times=1] - The number of times to handle the event\n     * before removing it.\n     */\n    addOnceHandler: function(eventName, handler, userData, times) {\n        var self = this;\n        times = times || 1;\n        var count = 0;\n        var onceHandler = function(event) {\n            count++;\n            if (count === times) {\n                self.removeHandler(eventName, onceHandler);\n            }\n            handler(event);\n        };\n        this.addHandler(eventName, onceHandler, userData);\n    },\n\n    /**\n     * Add an event handler for a given event.\n     * @function\n     * @param {String} eventName - Name of event to register.\n     * @param {OpenSeadragon.EventHandler} handler - Function to call when event is triggered.\n     * @param {Object} [userData=null] - Arbitrary object to be passed unchanged to the handler.\n     */\n    addHandler: function ( eventName, handler, userData ) {\n        var events = this.events[ eventName ];\n        if ( !events ) {\n            this.events[ eventName ] = events = [];\n        }\n        if ( handler && $.isFunction( handler ) ) {\n            events[ events.length ] = { handler: handler, userData: userData || null };\n        }\n    },\n\n    /**\n     * Remove a specific event handler for a given event.\n     * @function\n     * @param {String} eventName - Name of event for which the handler is to be removed.\n     * @param {OpenSeadragon.EventHandler} handler - Function to be removed.\n     */\n    removeHandler: function ( eventName, handler ) {\n        var events = this.events[ eventName ],\n            handlers = [],\n            i;\n        if ( !events ) {\n            return;\n        }\n        if ( $.isArray( events ) ) {\n            for ( i = 0; i < events.length; i++ ) {\n                if ( events[i].handler !== handler ) {\n                    handlers.push( events[ i ] );\n                }\n            }\n            this.events[ eventName ] = handlers;\n        }\n    },\n\n\n    /**\n     * Remove all event handlers for a given event type. If no type is given all\n     * event handlers for every event type are removed.\n     * @function\n     * @param {String} eventName - Name of event for which all handlers are to be removed.\n     */\n    removeAllHandlers: function( eventName ) {\n        if ( eventName ){\n            this.events[ eventName ] = [];\n        } else{\n            for ( var eventType in this.events ) {\n                this.events[ eventType ] = [];\n            }\n        }\n    },\n\n    /**\n     * Get a function which iterates the list of all handlers registered for a given event, calling the handler for each.\n     * @function\n     * @param {String} eventName - Name of event to get handlers for.\n     */\n    getHandler: function ( eventName ) {\n        var events = this.events[ eventName ];\n        if ( !events || !events.length ) {\n            return null;\n        }\n        events = events.length === 1 ?\n            [ events[ 0 ] ] :\n            Array.apply( null, events );\n        return function ( source, args ) {\n            var i,\n                length = events.length;\n            for ( i = 0; i < length; i++ ) {\n                if ( events[ i ] ) {\n                    args.eventSource = source;\n                    args.userData = events[ i ].userData;\n                    events[ i ].handler( args );\n                }\n            }\n        };\n    },\n\n    /**\n     * Trigger an event, optionally passing additional information.\n     * @function\n     * @param {String} eventName - Name of event to register.\n     * @param {Object} eventArgs - Event-specific data.\n     */\n    raiseEvent: function( eventName, eventArgs ) {\n        //uncomment if you want to get a log of all events\n        //$.console.log( eventName );\n        var handler = this.getHandler( eventName );\n\n        if ( handler ) {\n            if ( !eventArgs ) {\n                eventArgs = {};\n            }\n\n            handler( this, eventArgs );\n        }\n    }\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - MouseTracker\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function ( $ ) {\n\n    // All MouseTracker instances\n    var MOUSETRACKERS  = [];\n\n    // dictionary from hash to private properties\n    var THIS           = {};\n\n\n    /**\n     * @class MouseTracker\n     * @classdesc Provides simplified handling of common pointer device (mouse, touch, pen, etc.) gestures\n     *            and keyboard events on a specified element.\n     * @memberof OpenSeadragon\n     * @param {Object} options\n     *      Allows configurable properties to be entirely specified by passing\n     *      an options object to the constructor.  The constructor also supports\n     *      the original positional arguments 'element', 'clickTimeThreshold',\n     *      and 'clickDistThreshold' in that order.\n     * @param {Element|String} options.element\n     *      A reference to an element or an element id for which the pointer/key\n     *      events will be monitored.\n     * @param {Boolean} [options.startDisabled=false]\n     *      If true, event tracking on the element will not start until\n     *      {@link OpenSeadragon.MouseTracker.setTracking|setTracking} is called.\n     * @param {Number} options.clickTimeThreshold\n     *      The number of milliseconds within which a pointer down-up event combination\n     *      will be treated as a click gesture.\n     * @param {Number} options.clickDistThreshold\n     *      The maximum distance allowed between a pointer down event and a pointer up event\n     *      to be treated as a click gesture.\n     * @param {Number} options.dblClickTimeThreshold\n     *      The number of milliseconds within which two pointer down-up event combinations\n     *      will be treated as a double-click gesture.\n     * @param {Number} options.dblClickDistThreshold\n     *      The maximum distance allowed between two pointer click events\n     *      to be treated as a click gesture.\n     * @param {Number} [options.stopDelay=50]\n     *      The number of milliseconds without pointer move before the stop\n     *      event is fired.\n     * @param {OpenSeadragon.EventHandler} [options.enterHandler=null]\n     *      An optional handler for pointer enter.\n     * @param {OpenSeadragon.EventHandler} [options.exitHandler=null]\n     *      An optional handler for pointer exit.\n     * @param {OpenSeadragon.EventHandler} [options.pressHandler=null]\n     *      An optional handler for pointer press.\n     * @param {OpenSeadragon.EventHandler} [options.nonPrimaryPressHandler=null]\n     *      An optional handler for pointer non-primary button press.\n     * @param {OpenSeadragon.EventHandler} [options.releaseHandler=null]\n     *      An optional handler for pointer release.\n     * @param {OpenSeadragon.EventHandler} [options.nonPrimaryReleaseHandler=null]\n     *      An optional handler for pointer non-primary button release.\n     * @param {OpenSeadragon.EventHandler} [options.moveHandler=null]\n     *      An optional handler for pointer move.\n     * @param {OpenSeadragon.EventHandler} [options.scrollHandler=null]\n     *      An optional handler for mouse wheel scroll.\n     * @param {OpenSeadragon.EventHandler} [options.clickHandler=null]\n     *      An optional handler for pointer click.\n     * @param {OpenSeadragon.EventHandler} [options.dblClickHandler=null]\n     *      An optional handler for pointer double-click.\n     * @param {OpenSeadragon.EventHandler} [options.dragHandler=null]\n     *      An optional handler for the drag gesture.\n     * @param {OpenSeadragon.EventHandler} [options.dragEndHandler=null]\n     *      An optional handler for after a drag gesture.\n     * @param {OpenSeadragon.EventHandler} [options.pinchHandler=null]\n     *      An optional handler for the pinch gesture.\n     * @param {OpenSeadragon.EventHandler} [options.keyDownHandler=null]\n     *      An optional handler for keydown.\n     * @param {OpenSeadragon.EventHandler} [options.keyUpHandler=null]\n     *      An optional handler for keyup.\n     * @param {OpenSeadragon.EventHandler} [options.keyHandler=null]\n     *      An optional handler for keypress.\n     * @param {OpenSeadragon.EventHandler} [options.focusHandler=null]\n     *      An optional handler for focus.\n     * @param {OpenSeadragon.EventHandler} [options.blurHandler=null]\n     *      An optional handler for blur.\n     * @param {Object} [options.userData=null]\n     *      Arbitrary object to be passed unchanged to any attached handler methods.\n     */\n    $.MouseTracker = function ( options ) {\n\n        MOUSETRACKERS.push( this );\n\n        var args = arguments;\n\n        if ( !$.isPlainObject( options ) ) {\n            options = {\n                element:            args[ 0 ],\n                clickTimeThreshold: args[ 1 ],\n                clickDistThreshold: args[ 2 ]\n            };\n        }\n\n        this.hash               = Math.random(); // An unique hash for this tracker.\n        /**\n         * The element for which pointer events are being monitored.\n         * @member {Element} element\n         * @memberof OpenSeadragon.MouseTracker#\n         */\n        this.element            = $.getElement( options.element );\n        /**\n         * The number of milliseconds within which a pointer down-up event combination\n         * will be treated as a click gesture.\n         * @member {Number} clickTimeThreshold\n         * @memberof OpenSeadragon.MouseTracker#\n         */\n        this.clickTimeThreshold = options.clickTimeThreshold || $.DEFAULT_SETTINGS.clickTimeThreshold;\n        /**\n         * The maximum distance allowed between a pointer down event and a pointer up event\n         * to be treated as a click gesture.\n         * @member {Number} clickDistThreshold\n         * @memberof OpenSeadragon.MouseTracker#\n         */\n        this.clickDistThreshold = options.clickDistThreshold || $.DEFAULT_SETTINGS.clickDistThreshold;\n        /**\n         * The number of milliseconds within which two pointer down-up event combinations\n         * will be treated as a double-click gesture.\n         * @member {Number} dblClickTimeThreshold\n         * @memberof OpenSeadragon.MouseTracker#\n         */\n        this.dblClickTimeThreshold = options.dblClickTimeThreshold || $.DEFAULT_SETTINGS.dblClickTimeThreshold;\n        /**\n         * The maximum distance allowed between two pointer click events\n         * to be treated as a click gesture.\n         * @member {Number} clickDistThreshold\n         * @memberof OpenSeadragon.MouseTracker#\n         */\n        this.dblClickDistThreshold = options.dblClickDistThreshold || $.DEFAULT_SETTINGS.dblClickDistThreshold;\n        /*eslint-disable no-multi-spaces*/\n        this.userData              = options.userData          || null;\n        this.stopDelay             = options.stopDelay         || 50;\n\n        this.enterHandler             = options.enterHandler             || null;\n        this.exitHandler              = options.exitHandler              || null;\n        this.pressHandler             = options.pressHandler             || null;\n        this.nonPrimaryPressHandler   = options.nonPrimaryPressHandler   || null;\n        this.releaseHandler           = options.releaseHandler           || null;\n        this.nonPrimaryReleaseHandler = options.nonPrimaryReleaseHandler || null;\n        this.moveHandler              = options.moveHandler              || null;\n        this.scrollHandler            = options.scrollHandler            || null;\n        this.clickHandler             = options.clickHandler             || null;\n        this.dblClickHandler          = options.dblClickHandler          || null;\n        this.dragHandler              = options.dragHandler              || null;\n        this.dragEndHandler           = options.dragEndHandler           || null;\n        this.pinchHandler             = options.pinchHandler             || null;\n        this.stopHandler              = options.stopHandler              || null;\n        this.keyDownHandler           = options.keyDownHandler           || null;\n        this.keyUpHandler             = options.keyUpHandler             || null;\n        this.keyHandler               = options.keyHandler               || null;\n        this.focusHandler             = options.focusHandler             || null;\n        this.blurHandler              = options.blurHandler              || null;\n        /*eslint-enable no-multi-spaces*/\n\n        //Store private properties in a scope sealed hash map\n        var _this = this;\n\n        /**\n         * @private\n         * @property {Boolean} tracking\n         *      Are we currently tracking pointer events for this element.\n         */\n        THIS[ this.hash ] = {\n            click:                 function ( event ) { onClick( _this, event ); },\n            dblclick:              function ( event ) { onDblClick( _this, event ); },\n            keydown:               function ( event ) { onKeyDown( _this, event ); },\n            keyup:                 function ( event ) { onKeyUp( _this, event ); },\n            keypress:              function ( event ) { onKeyPress( _this, event ); },\n            focus:                 function ( event ) { onFocus( _this, event ); },\n            blur:                  function ( event ) { onBlur( _this, event ); },\n\n            wheel:                 function ( event ) { onWheel( _this, event ); },\n            mousewheel:            function ( event ) { onMouseWheel( _this, event ); },\n            DOMMouseScroll:        function ( event ) { onMouseWheel( _this, event ); },\n            MozMousePixelScroll:   function ( event ) { onMouseWheel( _this, event ); },\n\n            mouseenter:            function ( event ) { onMouseEnter( _this, event ); }, // Used on IE8 only\n            mouseleave:            function ( event ) { onMouseLeave( _this, event ); }, // Used on IE8 only\n            mouseover:             function ( event ) { onMouseOver( _this, event ); },\n            mouseout:              function ( event ) { onMouseOut( _this, event ); },\n            mousedown:             function ( event ) { onMouseDown( _this, event ); },\n            mouseup:               function ( event ) { onMouseUp( _this, event ); },\n            mouseupcaptured:       function ( event ) { onMouseUpCaptured( _this, event ); },\n            mousemove:             function ( event ) { onMouseMove( _this, event ); },\n            mousemovecaptured:     function ( event ) { onMouseMoveCaptured( _this, event ); },\n\n            touchstart:            function ( event ) { onTouchStart( _this, event ); },\n            touchend:              function ( event ) { onTouchEnd( _this, event ); },\n            touchendcaptured:      function ( event ) { onTouchEndCaptured( _this, event ); },\n            touchmove:             function ( event ) { onTouchMove( _this, event ); },\n            touchmovecaptured:     function ( event ) { onTouchMoveCaptured( _this, event ); },\n            touchcancel:           function ( event ) { onTouchCancel( _this, event ); },\n\n            gesturestart:          function ( event ) { onGestureStart( _this, event ); },\n            gesturechange:         function ( event ) { onGestureChange( _this, event ); },\n\n            pointerover:           function ( event ) { onPointerOver( _this, event ); },\n            MSPointerOver:         function ( event ) { onPointerOver( _this, event ); },\n            pointerout:            function ( event ) { onPointerOut( _this, event ); },\n            MSPointerOut:          function ( event ) { onPointerOut( _this, event ); },\n            pointerdown:           function ( event ) { onPointerDown( _this, event ); },\n            MSPointerDown:         function ( event ) { onPointerDown( _this, event ); },\n            pointerup:             function ( event ) { onPointerUp( _this, event ); },\n            MSPointerUp:           function ( event ) { onPointerUp( _this, event ); },\n            pointermove:           function ( event ) { onPointerMove( _this, event ); },\n            MSPointerMove:         function ( event ) { onPointerMove( _this, event ); },\n            pointercancel:         function ( event ) { onPointerCancel( _this, event ); },\n            MSPointerCancel:       function ( event ) { onPointerCancel( _this, event ); },\n            pointerupcaptured:     function ( event ) { onPointerUpCaptured( _this, event ); },\n            pointermovecaptured:   function ( event ) { onPointerMoveCaptured( _this, event ); },\n\n            tracking:              false,\n\n            // Active pointers lists. Array of GesturePointList objects, one for each pointer device type.\n            // GesturePointList objects are added each time a pointer is tracked by a new pointer device type (see getActivePointersListByType()).\n            // Active pointers are any pointer being tracked for this element which are in the hit-test area\n            //     of the element (for hover-capable devices) and/or have contact or a button press initiated in the element.\n            activePointersLists:   [],\n\n            // Tracking for double-click gesture\n            lastClickPos:          null,\n            dblClickTimeOut:       null,\n\n            // Tracking for pinch gesture\n            pinchGPoints:          [],\n            lastPinchDist:         0,\n            currentPinchDist:      0,\n            lastPinchCenter:       null,\n            currentPinchCenter:    null\n        };\n\n        if ( !options.startDisabled ) {\n            this.setTracking( true );\n        }\n    };\n\n    /** @lends OpenSeadragon.MouseTracker.prototype */\n    $.MouseTracker.prototype = {\n\n        /**\n         * Clean up any events or objects created by the tracker.\n         * @function\n         */\n        destroy: function () {\n            var i;\n\n            stopTracking( this );\n            this.element = null;\n\n            for ( i = 0; i < MOUSETRACKERS.length; i++ ) {\n                if ( MOUSETRACKERS[ i ] === this ) {\n                    MOUSETRACKERS.splice( i, 1 );\n                    break;\n                }\n            }\n\n            THIS[ this.hash ] = null;\n            delete THIS[ this.hash ];\n        },\n\n        /**\n         * Are we currently tracking events on this element.\n         * @deprecated Just use this.tracking\n         * @function\n         * @returns {Boolean} Are we currently tracking events on this element.\n         */\n        isTracking: function () {\n            return THIS[ this.hash ].tracking;\n        },\n\n        /**\n         * Enable or disable whether or not we are tracking events on this element.\n         * @function\n         * @param {Boolean} track True to start tracking, false to stop tracking.\n         * @returns {OpenSeadragon.MouseTracker} Chainable.\n         */\n        setTracking: function ( track ) {\n            if ( track ) {\n                startTracking( this );\n            } else {\n                stopTracking( this );\n            }\n            //chain\n            return this;\n        },\n\n        /**\n         * Returns the {@link OpenSeadragon.MouseTracker.GesturePointList|GesturePointList} for all but the given pointer device type.\n         * @function\n         * @param {String} type - The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n         * @returns {Array.<OpenSeadragon.MouseTracker.GesturePointList>}\n         */\n        getActivePointersListsExceptType: function ( type ) {\n            var delegate = THIS[ this.hash ];\n            var listArray = [];\n\n            for (var i = 0; i < delegate.activePointersLists.length; ++i) {\n                if (delegate.activePointersLists[i].type !== type) {\n                    listArray.push(delegate.activePointersLists[i]);\n                }\n            }\n\n            return listArray;\n        },\n\n        /**\n         * Returns the {@link OpenSeadragon.MouseTracker.GesturePointList|GesturePointList} for the given pointer device type,\n         * creating and caching a new {@link OpenSeadragon.MouseTracker.GesturePointList|GesturePointList} if one doesn't already exist for the type.\n         * @function\n         * @param {String} type - The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n         * @returns {OpenSeadragon.MouseTracker.GesturePointList}\n         */\n        getActivePointersListByType: function ( type ) {\n            var delegate = THIS[ this.hash ],\n                i,\n                len = delegate.activePointersLists.length,\n                list;\n\n            for ( i = 0; i < len; i++ ) {\n                if ( delegate.activePointersLists[ i ].type === type ) {\n                    return delegate.activePointersLists[ i ];\n                }\n            }\n\n            list = new $.MouseTracker.GesturePointList( type );\n            delegate.activePointersLists.push( list );\n            return list;\n        },\n\n        /**\n         * Returns the total number of pointers currently active on the tracked element.\n         * @function\n         * @returns {Number}\n         */\n        getActivePointerCount: function () {\n            var delegate = THIS[ this.hash ],\n                i,\n                len = delegate.activePointersLists.length,\n                count = 0;\n\n            for ( i = 0; i < len; i++ ) {\n                count += delegate.activePointersLists[ i ].getLength();\n            }\n\n            return count;\n        },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Number} event.pointers\n         *      Number of pointers (all types) active in the tracked element.\n         * @param {Boolean} event.insideElementPressed\n         *      True if the left mouse button is currently being pressed and was\n         *      initiated inside the tracked element, otherwise false.\n         * @param {Boolean} event.buttonDownAny\n         *      Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        enterHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Number} event.pointers\n         *      Number of pointers (all types) active in the tracked element.\n         * @param {Boolean} event.insideElementPressed\n         *      True if the left mouse button is currently being pressed and was\n         *      initiated inside the tracked element, otherwise false.\n         * @param {Boolean} event.buttonDownAny\n         *      Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        exitHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        pressHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.button\n         *      Button which caused the event.\n         *      -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        nonPrimaryPressHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Boolean} event.insideElementPressed\n         *      True if the left mouse button is currently being pressed and was\n         *      initiated inside the tracked element, otherwise false.\n         * @param {Boolean} event.insideElementReleased\n         *      True if the cursor inside the tracked element when the button was released.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        releaseHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.button\n         *      Button which caused the event.\n         *      -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        nonPrimaryReleaseHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        moveHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.scroll\n         *      The scroll delta for the event.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead. Touch devices no longer generate scroll event.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        scrollHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Boolean} event.quick\n         *      True only if the clickDistThreshold and clickTimeThreshold are both passed. Useful for ignoring drag events.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        clickHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        dblClickHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {OpenSeadragon.Point} event.delta\n         *      The x,y components of the difference between the current position and the last drag event position.  Useful for ignoring or weighting the events.\n         * @param {Number} event.speed\n         *     Current computed speed, in pixels per second.\n         * @param {Number} event.direction\n         *     Current computed direction, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        dragHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.speed\n         *     Speed at the end of a drag gesture, in pixels per second.\n         * @param {Number} event.direction\n         *     Direction at the end of a drag gesture, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        dragEndHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} event.gesturePoints\n         *      Gesture points associated with the gesture. Velocity data can be found here.\n         * @param {OpenSeadragon.Point} event.lastCenter\n         *      The previous center point of the two pinch contact points relative to the tracked element.\n         * @param {OpenSeadragon.Point} event.center\n         *      The center point of the two pinch contact points relative to the tracked element.\n         * @param {Number} event.lastDistance\n         *      The previous distance between the two pinch contact points in CSS pixels.\n         * @param {Number} event.distance\n         *      The distance between the two pinch contact points in CSS pixels.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        pinchHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        stopHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {Number} event.keyCode\n         *      The key code that was pressed.\n         * @param {Boolean} event.ctrl\n         *      True if the ctrl key was pressed during this event.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.alt\n         *      True if the alt key was pressed during this event.\n         * @param {Boolean} event.meta\n         *      True if the meta key was pressed during this event.\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        keyDownHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {Number} event.keyCode\n         *      The key code that was pressed.\n         * @param {Boolean} event.ctrl\n         *      True if the ctrl key was pressed during this event.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.alt\n         *      True if the alt key was pressed during this event.\n         * @param {Boolean} event.meta\n         *      True if the meta key was pressed during this event.\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        keyUpHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {Number} event.keyCode\n         *      The key code that was pressed.\n         * @param {Boolean} event.ctrl\n         *      True if the ctrl key was pressed during this event.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.alt\n         *      True if the alt key was pressed during this event.\n         * @param {Boolean} event.meta\n         *      True if the meta key was pressed during this event.\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        keyHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        focusHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        blurHandler: function () { }\n    };\n\n    /**\n     * Resets all active mousetrakers. (Added to patch issue #697 \"Mouse up outside map will cause \"canvas-drag\" event to stick\")\n     *\n     * @private\n     * @member resetAllMouseTrackers\n     * @memberof OpenSeadragon.MouseTracker\n     */\n    $.MouseTracker.resetAllMouseTrackers = function(){\n        for(var i = 0; i < MOUSETRACKERS.length; i++){\n            if (MOUSETRACKERS[i].isTracking()){\n                MOUSETRACKERS[i].setTracking(false);\n                MOUSETRACKERS[i].setTracking(true);\n            }\n        }\n    };\n\n    /**\n     * Provides continuous computation of velocity (speed and direction) of active pointers.\n     * This is a singleton, used by all MouseTracker instances, as it is unlikely there will ever be more than\n     * two active gesture pointers at a time.\n     *\n     * @private\n     * @member gesturePointVelocityTracker\n     * @memberof OpenSeadragon.MouseTracker\n     */\n    $.MouseTracker.gesturePointVelocityTracker = (function () {\n        var trackerPoints = [],\n            intervalId = 0,\n            lastTime = 0;\n\n        // Generates a unique identifier for a tracked gesture point\n        var _generateGuid = function ( tracker, gPoint ) {\n            return tracker.hash.toString() + gPoint.type + gPoint.id.toString();\n        };\n\n        // Interval timer callback. Computes velocity for all tracked gesture points.\n        var _doTracking = function () {\n            var i,\n                len = trackerPoints.length,\n                trackPoint,\n                gPoint,\n                now = $.now(),\n                elapsedTime,\n                distance,\n                speed;\n\n            elapsedTime = now - lastTime;\n            lastTime = now;\n\n            for ( i = 0; i < len; i++ ) {\n                trackPoint = trackerPoints[ i ];\n                gPoint = trackPoint.gPoint;\n                // Math.atan2 gives us just what we need for a velocity vector, as we can simply\n                //   use cos()/sin() to extract the x/y velocity components.\n                gPoint.direction = Math.atan2( gPoint.currentPos.y - trackPoint.lastPos.y, gPoint.currentPos.x - trackPoint.lastPos.x );\n                // speed = distance / elapsed time\n                distance = trackPoint.lastPos.distanceTo( gPoint.currentPos );\n                trackPoint.lastPos = gPoint.currentPos;\n                speed = 1000 * distance / ( elapsedTime + 1 );\n                // Simple biased average, favors the most recent speed computation. Smooths out erratic gestures a bit.\n                gPoint.speed = 0.75 * speed + 0.25 * gPoint.speed;\n            }\n        };\n\n        // Public. Add a gesture point to be tracked\n        var addPoint = function ( tracker, gPoint ) {\n            var guid = _generateGuid( tracker, gPoint );\n\n            trackerPoints.push(\n                {\n                    guid: guid,\n                    gPoint: gPoint,\n                    lastPos: gPoint.currentPos\n                } );\n\n            // Only fire up the interval timer when there's gesture pointers to track\n            if ( trackerPoints.length === 1 ) {\n                lastTime = $.now();\n                intervalId = window.setInterval( _doTracking, 50 );\n            }\n        };\n\n        // Public. Stop tracking a gesture point\n        var removePoint = function ( tracker, gPoint ) {\n            var guid = _generateGuid( tracker, gPoint ),\n                i,\n                len = trackerPoints.length;\n            for ( i = 0; i < len; i++ ) {\n                if ( trackerPoints[ i ].guid === guid ) {\n                    trackerPoints.splice( i, 1 );\n                    // Only run the interval timer if theres gesture pointers to track\n                    len--;\n                    if ( len === 0 ) {\n                        window.clearInterval( intervalId );\n                    }\n                    break;\n                }\n            }\n        };\n\n        return {\n            addPoint:    addPoint,\n            removePoint: removePoint\n        };\n    } )();\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Pointer event model and feature detection\n///////////////////////////////////////////////////////////////////////////////\n\n    $.MouseTracker.captureElement = document;\n\n    /**\n     * Detect available mouse wheel event name.\n     */\n    $.MouseTracker.wheelEventName = ( $.Browser.vendor == $.BROWSERS.IE && $.Browser.version > 8 ) ||\n                                                ( 'onwheel' in document.createElement( 'div' ) ) ? 'wheel' : // Modern browsers support 'wheel'\n                                    document.onmousewheel !== undefined ? 'mousewheel' :                     // Webkit and IE support at least 'mousewheel'\n                                    'DOMMouseScroll';                                                        // Assume old Firefox\n\n    /**\n     * Detect legacy mouse capture support.\n     */\n    $.MouseTracker.supportsMouseCapture = (function () {\n        var divElement = document.createElement( 'div' );\n        return $.isFunction( divElement.setCapture ) && $.isFunction( divElement.releaseCapture );\n    }());\n\n    /**\n     * Detect browser pointer device event model(s) and build appropriate list of events to subscribe to.\n     */\n    $.MouseTracker.subscribeEvents = [ \"click\", \"dblclick\", \"keydown\", \"keyup\", \"keypress\", \"focus\", \"blur\", $.MouseTracker.wheelEventName ];\n\n    if( $.MouseTracker.wheelEventName == \"DOMMouseScroll\" ) {\n        // Older Firefox\n        $.MouseTracker.subscribeEvents.push( \"MozMousePixelScroll\" );\n    }\n\n    // Note: window.navigator.pointerEnable is deprecated on IE 11 and not part of W3C spec.\n    if ( window.PointerEvent && ( window.navigator.pointerEnabled || $.Browser.vendor !== $.BROWSERS.IE ) ) {\n        // IE11 and other W3C Pointer Event implementations (see http://www.w3.org/TR/pointerevents)\n        $.MouseTracker.havePointerEvents = true;\n        $.MouseTracker.subscribeEvents.push( \"pointerover\", \"pointerout\", \"pointerdown\", \"pointerup\", \"pointermove\", \"pointercancel\" );\n        $.MouseTracker.unprefixedPointerEvents = true;\n        if( navigator.maxTouchPoints ) {\n            $.MouseTracker.maxTouchPoints = navigator.maxTouchPoints;\n        } else {\n            $.MouseTracker.maxTouchPoints = 0;\n        }\n        $.MouseTracker.haveMouseEnter = false;\n    } else if ( window.MSPointerEvent && window.navigator.msPointerEnabled ) {\n        // IE10\n        $.MouseTracker.havePointerEvents = true;\n        $.MouseTracker.subscribeEvents.push( \"MSPointerOver\", \"MSPointerOut\", \"MSPointerDown\", \"MSPointerUp\", \"MSPointerMove\", \"MSPointerCancel\" );\n        $.MouseTracker.unprefixedPointerEvents = false;\n        if( navigator.msMaxTouchPoints ) {\n            $.MouseTracker.maxTouchPoints = navigator.msMaxTouchPoints;\n        } else {\n            $.MouseTracker.maxTouchPoints = 0;\n        }\n        $.MouseTracker.haveMouseEnter = false;\n    } else {\n        // Legacy W3C mouse events\n        $.MouseTracker.havePointerEvents = false;\n        if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n            $.MouseTracker.subscribeEvents.push( \"mouseenter\", \"mouseleave\" );\n            $.MouseTracker.haveMouseEnter = true;\n        } else {\n            $.MouseTracker.subscribeEvents.push( \"mouseover\", \"mouseout\" );\n            $.MouseTracker.haveMouseEnter = false;\n        }\n        $.MouseTracker.subscribeEvents.push( \"mousedown\", \"mouseup\", \"mousemove\" );\n        if ( 'ontouchstart' in window ) {\n            // iOS, Android, and other W3c Touch Event implementations\n            //    (see http://www.w3.org/TR/touch-events/)\n            //    (see https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html)\n            //    (see https://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html)\n            $.MouseTracker.subscribeEvents.push( \"touchstart\", \"touchend\", \"touchmove\", \"touchcancel\" );\n        }\n        if ( 'ongesturestart' in window ) {\n            // iOS (see https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html)\n            //   Subscribe to these to prevent default gesture handling\n            $.MouseTracker.subscribeEvents.push( \"gesturestart\", \"gesturechange\" );\n        }\n        $.MouseTracker.mousePointerId = \"legacy-mouse\";\n        $.MouseTracker.maxTouchPoints = 10;\n    }\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Classes and typedefs\n///////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Represents a point of contact on the screen made by a mouse cursor, pen, touch, or other pointer device.\n     *\n     * @typedef {Object} GesturePoint\n     * @memberof OpenSeadragon.MouseTracker\n     *\n     * @property {Number} id\n     *     Identifier unique from all other active GesturePoints for a given pointer device.\n     * @property {String} type\n     *     The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n     * @property {Boolean} captured\n     *     True if events for the gesture point are captured to the tracked element.\n     * @property {Boolean} isPrimary\n     *     True if the gesture point is a master pointer amongst the set of active pointers for each pointer type. True for mouse and primary (first) touch/pen pointers.\n     * @property {Boolean} insideElementPressed\n     *     True if button pressed or contact point initiated inside the screen area of the tracked element.\n     * @property {Boolean} insideElement\n     *     True if pointer or contact point is currently inside the bounds of the tracked element.\n     * @property {Number} speed\n     *     Current computed speed, in pixels per second.\n     * @property {Number} direction\n     *     Current computed direction, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n     * @property {OpenSeadragon.Point} contactPos\n     *     The initial pointer contact position, relative to the page including any scrolling. Only valid if the pointer has contact (pressed, touch contact, pen contact).\n     * @property {Number} contactTime\n     *     The initial pointer contact time, in milliseconds. Only valid if the pointer has contact (pressed, touch contact, pen contact).\n     * @property {OpenSeadragon.Point} lastPos\n     *     The last pointer position, relative to the page including any scrolling.\n     * @property {Number} lastTime\n     *     The last pointer contact time, in milliseconds.\n     * @property {OpenSeadragon.Point} currentPos\n     *     The current pointer position, relative to the page including any scrolling.\n     * @property {Number} currentTime\n     *     The current pointer contact time, in milliseconds.\n     */\n\n\n    /**\n     * @class GesturePointList\n     * @classdesc Provides an abstraction for a set of active {@link OpenSeadragon.MouseTracker.GesturePoint|GesturePoint} objects for a given pointer device type.\n     *            Active pointers are any pointer being tracked for this element which are in the hit-test area\n     *            of the element (for hover-capable devices) and/or have contact or a button press initiated in the element.\n     * @memberof OpenSeadragon.MouseTracker\n     * @param {String} type - The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n     */\n    $.MouseTracker.GesturePointList = function ( type ) {\n        this._gPoints = [];\n        /**\n         * The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n         * @member {String} type\n         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n         */\n        this.type = type;\n        /**\n         * Current buttons pressed for the device.\n         * Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @member {Number} buttons\n         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n         */\n        this.buttons = 0;\n        /**\n         * Current number of contact points (touch points, mouse down, etc.) for the device.\n         * @member {Number} contacts\n         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n         */\n        this.contacts = 0;\n        /**\n         * Current number of clicks for the device. Used for multiple click gesture tracking.\n         * @member {Number} clicks\n         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n         */\n        this.clicks = 0;\n        /**\n         * Current number of captured pointers for the device.\n         * @member {Number} captureCount\n         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n         */\n        this.captureCount = 0;\n    };\n\n    /** @lends OpenSeadragon.MouseTracker.GesturePointList.prototype */\n    $.MouseTracker.GesturePointList.prototype = {\n        /**\n         * @function\n         * @returns {Number} Number of gesture points in the list.\n         */\n        getLength: function () {\n            return this._gPoints.length;\n        },\n        /**\n         * @function\n         * @returns {Array.<OpenSeadragon.MouseTracker.GesturePoint>} The list of gesture points in the list as an array (read-only).\n         */\n        asArray: function () {\n            return this._gPoints;\n        },\n        /**\n         * @function\n         * @param {OpenSeadragon.MouseTracker.GesturePoint} gesturePoint - A gesture point to add to the list.\n         * @returns {Number} Number of gesture points in the list.\n         */\n        add: function ( gp ) {\n            return this._gPoints.push( gp );\n        },\n        /**\n         * @function\n         * @param {Number} id - The id of the gesture point to remove from the list.\n         * @returns {Number} Number of gesture points in the list.\n         */\n        removeById: function ( id ) {\n            var i,\n                len = this._gPoints.length;\n            for ( i = 0; i < len; i++ ) {\n                if ( this._gPoints[ i ].id === id ) {\n                    this._gPoints.splice( i, 1 );\n                    break;\n                }\n            }\n            return this._gPoints.length;\n        },\n        /**\n         * @function\n         * @param {Number} index - The index of the gesture point to retrieve from the list.\n         * @returns {OpenSeadragon.MouseTracker.GesturePoint|null} The gesture point at the given index, or null if not found.\n         */\n        getByIndex: function ( index ) {\n            if ( index < this._gPoints.length) {\n                return this._gPoints[ index ];\n            }\n\n            return null;\n        },\n        /**\n         * @function\n         * @param {Number} id - The id of the gesture point to retrieve from the list.\n         * @returns {OpenSeadragon.MouseTracker.GesturePoint|null} The gesture point with the given id, or null if not found.\n         */\n        getById: function ( id ) {\n            var i,\n                len = this._gPoints.length;\n            for ( i = 0; i < len; i++ ) {\n                if ( this._gPoints[ i ].id === id ) {\n                    return this._gPoints[ i ];\n                }\n            }\n            return null;\n        },\n        /**\n         * @function\n         * @returns {OpenSeadragon.MouseTracker.GesturePoint|null} The primary gesture point in the list, or null if not found.\n         */\n        getPrimary: function ( id ) {\n            var i,\n                len = this._gPoints.length;\n            for ( i = 0; i < len; i++ ) {\n                if ( this._gPoints[ i ].isPrimary ) {\n                    return this._gPoints[ i ];\n                }\n            }\n            return null;\n        },\n\n        /**\n         * Increment this pointer's contact count.\n         * It will evaluate whether this pointer type is allowed to have multiple contacts.\n         * @function\n         */\n        addContact: function() {\n            ++this.contacts;\n\n            if (this.contacts > 1 && (this.type === \"mouse\" || this.type === \"pen\")) {\n                this.contacts = 1;\n            }\n        },\n\n        /**\n         * Decrement this pointer's contact count.\n         * It will make sure the count does not go below 0.\n         * @function\n         */\n        removeContact: function() {\n            --this.contacts;\n\n            if (this.contacts < 0) {\n                this.contacts = 0;\n            }\n        }\n    };\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Utility functions\n///////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Removes all tracked pointers.\n     * @private\n     * @inner\n     */\n    function clearTrackedPointers( tracker ) {\n        var delegate = THIS[ tracker.hash ],\n            i,\n            pointerListCount = delegate.activePointersLists.length;\n\n        for ( i = 0; i < pointerListCount; i++ ) {\n            if ( delegate.activePointersLists[ i ].captureCount > 0 ) {\n                $.removeEvent(\n                    $.MouseTracker.captureElement,\n                    'mousemove',\n                    delegate.mousemovecaptured,\n                    true\n                );\n                $.removeEvent(\n                    $.MouseTracker.captureElement,\n                    'mouseup',\n                    delegate.mouseupcaptured,\n                    true\n                );\n                $.removeEvent(\n                    $.MouseTracker.captureElement,\n                    $.MouseTracker.unprefixedPointerEvents ? 'pointermove' : 'MSPointerMove',\n                    delegate.pointermovecaptured,\n                    true\n                );\n                $.removeEvent(\n                    $.MouseTracker.captureElement,\n                    $.MouseTracker.unprefixedPointerEvents ? 'pointerup' : 'MSPointerUp',\n                    delegate.pointerupcaptured,\n                    true\n                );\n                $.removeEvent(\n                    $.MouseTracker.captureElement,\n                    'touchmove',\n                    delegate.touchmovecaptured,\n                    true\n                );\n                $.removeEvent(\n                    $.MouseTracker.captureElement,\n                    'touchend',\n                    delegate.touchendcaptured,\n                    true\n                );\n\n                delegate.activePointersLists[ i ].captureCount = 0;\n            }\n        }\n\n        for ( i = 0; i < pointerListCount; i++ ) {\n            delegate.activePointersLists.pop();\n        }\n    }\n\n    /**\n     * Starts tracking pointer events on the tracked element.\n     * @private\n     * @inner\n     */\n    function startTracking( tracker ) {\n        var delegate = THIS[ tracker.hash ],\n            event,\n            i;\n\n        if ( !delegate.tracking ) {\n            for ( i = 0; i < $.MouseTracker.subscribeEvents.length; i++ ) {\n                event = $.MouseTracker.subscribeEvents[ i ];\n                $.addEvent(\n                    tracker.element,\n                    event,\n                    delegate[ event ],\n                    false\n                );\n            }\n\n            clearTrackedPointers( tracker );\n\n            delegate.tracking = true;\n        }\n    }\n\n    /**\n     * Stops tracking pointer events on the tracked element.\n     * @private\n     * @inner\n     */\n    function stopTracking( tracker ) {\n        var delegate = THIS[ tracker.hash ],\n            event,\n            i;\n\n        if ( delegate.tracking ) {\n            for ( i = 0; i < $.MouseTracker.subscribeEvents.length; i++ ) {\n                event = $.MouseTracker.subscribeEvents[ i ];\n                $.removeEvent(\n                    tracker.element,\n                    event,\n                    delegate[ event ],\n                    false\n                );\n            }\n\n            clearTrackedPointers( tracker );\n\n            delegate.tracking = false;\n        }\n    }\n\n    /**\n     * @private\n     * @inner\n     */\n    function getCaptureEventParams( tracker, pointerType ) {\n        var delegate = THIS[ tracker.hash ];\n\n        if ( pointerType === 'pointerevent' ) {\n            return {\n                upName: $.MouseTracker.unprefixedPointerEvents ? 'pointerup' : 'MSPointerUp',\n                upHandler: delegate.pointerupcaptured,\n                moveName: $.MouseTracker.unprefixedPointerEvents ? 'pointermove' : 'MSPointerMove',\n                moveHandler: delegate.pointermovecaptured\n            };\n        } else if ( pointerType === 'mouse' ) {\n            return {\n                upName: 'mouseup',\n                upHandler: delegate.mouseupcaptured,\n                moveName: 'mousemove',\n                moveHandler: delegate.mousemovecaptured\n            };\n        } else if ( pointerType === 'touch' ) {\n            return {\n                upName: 'touchend',\n                upHandler: delegate.touchendcaptured,\n                moveName: 'touchmove',\n                moveHandler: delegate.touchmovecaptured\n            };\n        } else {\n            throw new Error( \"MouseTracker.getCaptureEventParams: Unknown pointer type.\" );\n        }\n    }\n\n    /**\n     * Begin capturing pointer events to the tracked element.\n     * @private\n     * @inner\n     */\n    function capturePointer( tracker, pointerType, pointerCount ) {\n        var pointsList = tracker.getActivePointersListByType( pointerType ),\n            eventParams;\n\n        pointsList.captureCount += (pointerCount || 1);\n\n        if ( pointsList.captureCount === 1 ) {\n            if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n                tracker.element.setCapture( true );\n            } else {\n                eventParams = getCaptureEventParams( tracker, $.MouseTracker.havePointerEvents ? 'pointerevent' : pointerType );\n                // We emulate mouse capture by hanging listeners on the document object.\n                //    (Note we listen on the capture phase so the captured handlers will get called first)\n                // eslint-disable-next-line no-use-before-define\n                if (isInIframe && canAccessEvents(window.top)) {\n                    $.addEvent(\n                        window.top,\n                        eventParams.upName,\n                        eventParams.upHandler,\n                        true\n                    );\n                }\n                $.addEvent(\n                    $.MouseTracker.captureElement,\n                    eventParams.upName,\n                    eventParams.upHandler,\n                    true\n                );\n                $.addEvent(\n                    $.MouseTracker.captureElement,\n                    eventParams.moveName,\n                    eventParams.moveHandler,\n                    true\n                );\n            }\n        }\n    }\n\n\n    /**\n     * Stop capturing pointer events to the tracked element.\n     * @private\n     * @inner\n     */\n    function releasePointer( tracker, pointerType, pointerCount ) {\n        var pointsList = tracker.getActivePointersListByType( pointerType ),\n            eventParams;\n\n        pointsList.captureCount -= (pointerCount || 1);\n\n        if ( pointsList.captureCount === 0 ) {\n            if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n                tracker.element.releaseCapture();\n            } else {\n                eventParams = getCaptureEventParams( tracker, $.MouseTracker.havePointerEvents ? 'pointerevent' : pointerType );\n                // We emulate mouse capture by hanging listeners on the document object.\n                //    (Note we listen on the capture phase so the captured handlers will get called first)\n                // eslint-disable-next-line no-use-before-define\n                if (isInIframe && canAccessEvents(window.top)) {\n                    $.removeEvent(\n                        window.top,\n                        eventParams.upName,\n                        eventParams.upHandler,\n                        true\n                    );\n                }\n                $.removeEvent(\n                    $.MouseTracker.captureElement,\n                    eventParams.moveName,\n                    eventParams.moveHandler,\n                    true\n                );\n                $.removeEvent(\n                    $.MouseTracker.captureElement,\n                    eventParams.upName,\n                    eventParams.upHandler,\n                    true\n                );\n            }\n        }\n    }\n\n\n    /**\n     * Gets a W3C Pointer Events model compatible pointer type string from a DOM pointer event.\n     * IE10 used a long integer value, but the W3C specification (and IE11+) use a string \"mouse\", \"touch\", \"pen\", etc.\n     * @private\n     * @inner\n     */\n    function getPointerType( event ) {\n        var pointerTypeStr;\n        if ( $.MouseTracker.unprefixedPointerEvents ) {\n            pointerTypeStr = event.pointerType;\n        } else {\n            // IE10\n            //  MSPOINTER_TYPE_TOUCH: 0x00000002\n            //  MSPOINTER_TYPE_PEN:   0x00000003\n            //  MSPOINTER_TYPE_MOUSE: 0x00000004\n            switch( event.pointerType )\n            {\n                case 0x00000002:\n                    pointerTypeStr = 'touch';\n                    break;\n                case 0x00000003:\n                    pointerTypeStr = 'pen';\n                    break;\n                case 0x00000004:\n                    pointerTypeStr = 'mouse';\n                    break;\n                default:\n                    pointerTypeStr = '';\n            }\n        }\n        return pointerTypeStr;\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function getMouseAbsolute( event ) {\n        return $.getMousePosition( event );\n    }\n\n    /**\n     * @private\n     * @inner\n     */\n    function getMouseRelative( event, element ) {\n        return getPointRelativeToAbsolute( getMouseAbsolute( event ), element );\n    }\n\n    /**\n     * @private\n     * @inner\n     */\n    function getPointRelativeToAbsolute( point, element ) {\n        var offset = $.getElementOffset( element );\n        return point.minus( offset );\n    }\n\n    /**\n     * @private\n     * @inner\n     */\n    function getCenterPoint( point1, point2 ) {\n        return new $.Point( ( point1.x + point2.x ) / 2, ( point1.y + point2.y ) / 2 );\n    }\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Device-specific DOM event handlers\n///////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * @private\n     * @inner\n     */\n    function onClick( tracker, event ) {\n        if ( tracker.clickHandler ) {\n            $.cancelEvent( event );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onDblClick( tracker, event ) {\n        if ( tracker.dblClickHandler ) {\n            $.cancelEvent( event );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onKeyDown( tracker, event ) {\n        //$.console.log( \"keydown %s %s %s %s %s\", event.keyCode, event.charCode, event.ctrlKey, event.shiftKey, event.altKey );\n        var propagate;\n        if ( tracker.keyDownHandler ) {\n            event = $.getEvent( event );\n            propagate = tracker.keyDownHandler(\n                {\n                    eventSource:          tracker,\n                    keyCode:              event.keyCode ? event.keyCode : event.charCode,\n                    ctrl:                 event.ctrlKey,\n                    shift:                event.shiftKey,\n                    alt:                  event.altKey,\n                    meta:                 event.metaKey,\n                    originalEvent:        event,\n                    preventDefaultAction: false,\n                    userData:             tracker.userData\n                }\n            );\n            if ( !propagate ) {\n                $.cancelEvent( event );\n            }\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onKeyUp( tracker, event ) {\n        //$.console.log( \"keyup %s %s %s %s %s\", event.keyCode, event.charCode, event.ctrlKey, event.shiftKey, event.altKey );\n        var propagate;\n        if ( tracker.keyUpHandler ) {\n            event = $.getEvent( event );\n            propagate = tracker.keyUpHandler(\n                {\n                    eventSource:          tracker,\n                    keyCode:              event.keyCode ? event.keyCode : event.charCode,\n                    ctrl:                 event.ctrlKey,\n                    shift:                event.shiftKey,\n                    alt:                  event.altKey,\n                    meta:                 event.metaKey,\n                    originalEvent:        event,\n                    preventDefaultAction: false,\n                    userData:             tracker.userData\n                }\n            );\n            if ( !propagate ) {\n                $.cancelEvent( event );\n            }\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onKeyPress( tracker, event ) {\n        //$.console.log( \"keypress %s %s %s %s %s\", event.keyCode, event.charCode, event.ctrlKey, event.shiftKey, event.altKey );\n        var propagate;\n        if ( tracker.keyHandler ) {\n            event = $.getEvent( event );\n            propagate = tracker.keyHandler(\n                {\n                    eventSource:          tracker,\n                    keyCode:              event.keyCode ? event.keyCode : event.charCode,\n                    ctrl:                 event.ctrlKey,\n                    shift:                event.shiftKey,\n                    alt:                  event.altKey,\n                    meta:                 event.metaKey,\n                    originalEvent:        event,\n                    preventDefaultAction: false,\n                    userData:             tracker.userData\n                }\n            );\n            if ( !propagate ) {\n                $.cancelEvent( event );\n            }\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onFocus( tracker, event ) {\n        //console.log( \"focus %s\", event );\n        var propagate;\n        if ( tracker.focusHandler ) {\n            event = $.getEvent( event );\n            propagate = tracker.focusHandler(\n                {\n                    eventSource:          tracker,\n                    originalEvent:        event,\n                    preventDefaultAction: false,\n                    userData:             tracker.userData\n                }\n            );\n            if ( propagate === false ) {\n                $.cancelEvent( event );\n            }\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onBlur( tracker, event ) {\n        //console.log( \"blur %s\", event );\n        var propagate;\n        if ( tracker.blurHandler ) {\n            event = $.getEvent( event );\n            propagate = tracker.blurHandler(\n                {\n                    eventSource:          tracker,\n                    originalEvent:        event,\n                    preventDefaultAction: false,\n                    userData:             tracker.userData\n                }\n            );\n            if ( propagate === false ) {\n                $.cancelEvent( event );\n            }\n        }\n    }\n\n\n    /**\n     * Handler for 'wheel' events\n     *\n     * @private\n     * @inner\n     */\n    function onWheel( tracker, event ) {\n        handleWheelEvent( tracker, event, event );\n    }\n\n\n    /**\n     * Handler for 'mousewheel', 'DOMMouseScroll', and 'MozMousePixelScroll' events\n     *\n     * @private\n     * @inner\n     */\n    function onMouseWheel( tracker, event ) {\n        event = $.getEvent( event );\n\n        // Simulate a 'wheel' event\n        var simulatedEvent = {\n            target:     event.target || event.srcElement,\n            type:       \"wheel\",\n            shiftKey:   event.shiftKey || false,\n            clientX:    event.clientX,\n            clientY:    event.clientY,\n            pageX:      event.pageX ? event.pageX : event.clientX,\n            pageY:      event.pageY ? event.pageY : event.clientY,\n            deltaMode:  event.type == \"MozMousePixelScroll\" ? 0 : 1, // 0=pixel, 1=line, 2=page\n            deltaX:     0,\n            deltaZ:     0\n        };\n\n        // Calculate deltaY\n        if ( $.MouseTracker.wheelEventName == \"mousewheel\" ) {\n            simulatedEvent.deltaY = -event.wheelDelta / $.DEFAULT_SETTINGS.pixelsPerWheelLine;\n        } else {\n            simulatedEvent.deltaY = event.detail;\n        }\n\n        handleWheelEvent( tracker, simulatedEvent, event );\n    }\n\n\n    /**\n     * Handles 'wheel' events.\n     * The event may be simulated by the legacy mouse wheel event handler (onMouseWheel()).\n     *\n     * @private\n     * @inner\n     */\n    function handleWheelEvent( tracker, event, originalEvent ) {\n        var nDelta = 0,\n            propagate;\n\n        // The nDelta variable is gated to provide smooth z-index scrolling\n        //   since the mouse wheel allows for substantial deltas meant for rapid\n        //   y-index scrolling.\n        // event.deltaMode: 0=pixel, 1=line, 2=page\n        // TODO: Deltas in pixel mode should be accumulated then a scroll value computed after $.DEFAULT_SETTINGS.pixelsPerWheelLine threshold reached\n        nDelta = event.deltaY < 0 ? 1 : -1;\n\n        if ( tracker.scrollHandler ) {\n            propagate = tracker.scrollHandler(\n                {\n                    eventSource:          tracker,\n                    pointerType:          'mouse',\n                    position:             getMouseRelative( event, tracker.element ),\n                    scroll:               nDelta,\n                    shift:                event.shiftKey,\n                    isTouchEvent:         false,\n                    originalEvent:        originalEvent,\n                    preventDefaultAction: false,\n                    userData:             tracker.userData\n                }\n            );\n            if ( propagate === false ) {\n                $.cancelEvent( originalEvent );\n            }\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function isParentChild( parent, child )\n    {\n       if ( parent === child ) {\n           return false;\n       }\n       while ( child && child !== parent ) {\n           child = child.parentNode;\n       }\n       return child === parent;\n    }\n\n\n    /**\n     * Only used on IE 8\n     *\n     * @private\n     * @inner\n     */\n    function onMouseEnter( tracker, event ) {\n        event = $.getEvent( event );\n\n        handleMouseEnter( tracker, event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onMouseOver( tracker, event ) {\n        event = $.getEvent( event );\n\n        if ( event.currentTarget === event.relatedTarget || isParentChild( event.currentTarget, event.relatedTarget ) ) {\n            return;\n        }\n\n        handleMouseEnter( tracker, event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function handleMouseEnter( tracker, event ) {\n        var gPoint = {\n            id: $.MouseTracker.mousePointerId,\n            type: 'mouse',\n            isPrimary: true,\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        updatePointersEnter( tracker, event, [ gPoint ] );\n    }\n\n\n    /**\n     * Only used on IE 8\n     *\n     * @private\n     * @inner\n     */\n    function onMouseLeave( tracker, event ) {\n        event = $.getEvent( event );\n\n        handleMouseExit( tracker, event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onMouseOut( tracker, event ) {\n        event = $.getEvent( event );\n\n        if ( event.currentTarget === event.relatedTarget || isParentChild( event.currentTarget, event.relatedTarget ) ) {\n            return;\n        }\n\n        handleMouseExit( tracker, event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function handleMouseExit( tracker, event ) {\n        var gPoint = {\n            id: $.MouseTracker.mousePointerId,\n            type: 'mouse',\n            isPrimary: true,\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        updatePointersExit( tracker, event, [ gPoint ] );\n    }\n\n\n    /**\n     * Returns a W3C DOM level 3 standard button value given an event.button property:\n     *   -1 == none, 0 == primary/left, 1 == middle, 2 == secondary/right, 3 == X1/back, 4 == X2/forward, 5 == eraser (pen)\n     * @private\n     * @inner\n     */\n    function getStandardizedButton( button ) {\n        if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n            // On IE 8, 0 == none, 1 == left, 2 == right, 3 == left and right, 4 == middle, 5 == left and middle, 6 == right and middle, 7 == all three\n            // TODO: Support chorded (multiple) button presses on IE 8?\n            if ( button === 1 ) {\n                return 0;\n            } else if ( button === 2 ) {\n                return 2;\n            } else if ( button === 4 ) {\n                return 1;\n            } else {\n                return -1;\n            }\n        } else {\n            return button;\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onMouseDown( tracker, event ) {\n        var gPoint;\n\n        event = $.getEvent( event );\n\n        gPoint = {\n            id: $.MouseTracker.mousePointerId,\n            type: 'mouse',\n            isPrimary: true,\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        if ( updatePointersDown( tracker, event, [ gPoint ], getStandardizedButton( event.button ) ) ) {\n            $.stopEvent( event );\n            capturePointer( tracker, 'mouse' );\n        }\n\n        if ( tracker.clickHandler || tracker.dblClickHandler || tracker.pressHandler || tracker.dragHandler || tracker.dragEndHandler ) {\n            $.cancelEvent( event );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onMouseUp( tracker, event ) {\n        handleMouseUp( tracker, event );\n    }\n\n    /**\n     * This handler is attached to the window object (on the capture phase) to emulate mouse capture.\n     * onMouseUp is still attached to the tracked element, so stop propagation to avoid processing twice.\n     *\n     * @private\n     * @inner\n     */\n    function onMouseUpCaptured( tracker, event ) {\n        handleMouseUp( tracker, event );\n        $.stopEvent( event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function handleMouseUp( tracker, event ) {\n        var gPoint;\n\n        event = $.getEvent( event );\n\n        gPoint = {\n            id: $.MouseTracker.mousePointerId,\n            type: 'mouse',\n            isPrimary: true,\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        if ( updatePointersUp( tracker, event, [ gPoint ], getStandardizedButton( event.button ) ) ) {\n            releasePointer( tracker, 'mouse' );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onMouseMove( tracker, event ) {\n        handleMouseMove( tracker, event );\n   }\n\n\n    /**\n     * This handler is attached to the window object (on the capture phase) to emulate mouse capture.\n     * onMouseMove is still attached to the tracked element, so stop propagation to avoid processing twice.\n     *\n     * @private\n     * @inner\n     */\n    function onMouseMoveCaptured( tracker, event ) {\n        handleMouseMove( tracker, event );\n        $.stopEvent( event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function handleMouseMove( tracker, event ) {\n        var gPoint;\n\n        event = $.getEvent( event );\n\n        gPoint = {\n            id: $.MouseTracker.mousePointerId,\n            type: 'mouse',\n            isPrimary: true,\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        updatePointersMove( tracker, event, [ gPoint ] );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function abortContacts( tracker, event, pointsList ) {\n        var i,\n            gPointCount = pointsList.getLength(),\n            abortGPoints = [];\n\n        // Check contact count for hoverable pointer types before aborting\n        if (pointsList.type === 'touch' || pointsList.contacts > 0) {\n            for ( i = 0; i < gPointCount; i++ ) {\n                abortGPoints.push( pointsList.getByIndex( i ) );\n            }\n\n            if ( abortGPoints.length > 0 ) {\n                // simulate touchend/mouseup\n                updatePointersUp( tracker, event, abortGPoints, 0 ); // 0 means primary button press/release or touch contact\n                // release pointer capture\n                pointsList.captureCount = 1;\n                releasePointer( tracker, pointsList.type );\n                // simulate touchleave/mouseout\n                updatePointersExit( tracker, event, abortGPoints );\n            }\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onTouchStart( tracker, event ) {\n        var time,\n            i,\n            j,\n            touchCount = event.changedTouches.length,\n            gPoints = [],\n            parentGPoints,\n            pointsList = tracker.getActivePointersListByType( 'touch' );\n\n        time = $.now();\n\n        if ( pointsList.getLength() > event.touches.length - touchCount ) {\n            $.console.warn('Tracked touch contact count doesn\\'t match event.touches.length. Removing all tracked touch pointers.');\n            abortContacts( tracker, event, pointsList );\n        }\n\n        for ( i = 0; i < touchCount; i++ ) {\n            gPoints.push( {\n                id: event.changedTouches[ i ].identifier,\n                type: 'touch',\n                // isPrimary not set - let the updatePointers functions determine it\n                currentPos: getMouseAbsolute( event.changedTouches[ i ] ),\n                currentTime: time\n            } );\n        }\n\n        // simulate touchenter on our tracked element\n        updatePointersEnter( tracker, event, gPoints );\n\n        // simulate touchenter on our tracked element's tracked ancestor elements\n        for ( i = 0; i < MOUSETRACKERS.length; i++ ) {\n            if ( MOUSETRACKERS[ i ] !== tracker && MOUSETRACKERS[ i ].isTracking() && isParentChild( MOUSETRACKERS[ i ].element, tracker.element ) ) {\n                parentGPoints = [];\n                for ( j = 0; j < touchCount; j++ ) {\n                    parentGPoints.push( {\n                        id: event.changedTouches[ j ].identifier,\n                        type: 'touch',\n                        // isPrimary not set - let the updatePointers functions determine it\n                        currentPos: getMouseAbsolute( event.changedTouches[ j ] ),\n                        currentTime: time\n                    } );\n                }\n                updatePointersEnter( MOUSETRACKERS[ i ], event, parentGPoints );\n            }\n        }\n\n        if ( updatePointersDown( tracker, event, gPoints, 0 ) ) { // 0 means primary button press/release or touch contact\n            $.stopEvent( event );\n            capturePointer( tracker, 'touch', touchCount );\n        }\n\n        $.cancelEvent( event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onTouchEnd( tracker, event ) {\n        handleTouchEnd( tracker, event );\n    }\n\n\n    /**\n     * This handler is attached to the window object (on the capture phase) to emulate pointer capture.\n     * onTouchEnd is still attached to the tracked element, so stop propagation to avoid processing twice.\n     *\n     * @private\n     * @inner\n     */\n    function onTouchEndCaptured( tracker, event ) {\n        handleTouchEnd( tracker, event );\n        $.stopEvent( event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function handleTouchEnd( tracker, event ) {\n        var time,\n            i,\n            j,\n            touchCount = event.changedTouches.length,\n            gPoints = [],\n            parentGPoints;\n\n        time = $.now();\n\n        for ( i = 0; i < touchCount; i++ ) {\n            gPoints.push( {\n                id: event.changedTouches[ i ].identifier,\n                type: 'touch',\n                // isPrimary not set - let the updatePointers functions determine it\n                currentPos: getMouseAbsolute( event.changedTouches[ i ] ),\n                currentTime: time\n            } );\n        }\n\n        if ( updatePointersUp( tracker, event, gPoints, 0 ) ) {\n            releasePointer( tracker, 'touch', touchCount );\n        }\n\n        // simulate touchleave on our tracked element\n        updatePointersExit( tracker, event, gPoints );\n\n        // simulate touchleave on our tracked element's tracked ancestor elements\n        for ( i = 0; i < MOUSETRACKERS.length; i++ ) {\n            if ( MOUSETRACKERS[ i ] !== tracker && MOUSETRACKERS[ i ].isTracking() && isParentChild( MOUSETRACKERS[ i ].element, tracker.element ) ) {\n                parentGPoints = [];\n                for ( j = 0; j < touchCount; j++ ) {\n                    parentGPoints.push( {\n                        id: event.changedTouches[ j ].identifier,\n                        type: 'touch',\n                        // isPrimary not set - let the updatePointers functions determine it\n                        currentPos: getMouseAbsolute( event.changedTouches[ j ] ),\n                        currentTime: time\n                    } );\n                }\n                updatePointersExit( MOUSETRACKERS[ i ], event, parentGPoints );\n            }\n        }\n\n        $.cancelEvent( event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onTouchMove( tracker, event ) {\n        handleTouchMove( tracker, event );\n    }\n\n\n    /**\n     * This handler is attached to the window object (on the capture phase) to emulate pointer capture.\n     * onTouchMove is still attached to the tracked element, so stop propagation to avoid processing twice.\n     *\n     * @private\n     * @inner\n     */\n    function onTouchMoveCaptured( tracker, event ) {\n        handleTouchMove( tracker, event );\n        $.stopEvent( event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function handleTouchMove( tracker, event ) {\n        var i,\n            touchCount = event.changedTouches.length,\n            gPoints = [];\n\n        for ( i = 0; i < touchCount; i++ ) {\n            gPoints.push( {\n                id: event.changedTouches[ i ].identifier,\n                type: 'touch',\n                // isPrimary not set - let the updatePointers functions determine it\n                currentPos: getMouseAbsolute( event.changedTouches[ i ] ),\n                currentTime: $.now()\n            } );\n        }\n\n        updatePointersMove( tracker, event, gPoints );\n\n        $.cancelEvent( event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onTouchCancel( tracker, event ) {\n        var pointsList = tracker.getActivePointersListByType('touch');\n\n        abortContacts( tracker, event, pointsList );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onGestureStart( tracker, event ) {\n        event.stopPropagation();\n        event.preventDefault();\n        return false;\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onGestureChange( tracker, event ) {\n        event.stopPropagation();\n        event.preventDefault();\n        return false;\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onPointerOver( tracker, event ) {\n        var gPoint;\n\n        if ( event.currentTarget === event.relatedTarget || isParentChild( event.currentTarget, event.relatedTarget ) ) {\n            return;\n        }\n\n        gPoint = {\n            id: event.pointerId,\n            type: getPointerType( event ),\n            isPrimary: event.isPrimary,\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        updatePointersEnter( tracker, event, [ gPoint ] );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onPointerOut( tracker, event ) {\n        var gPoint;\n\n        if ( event.currentTarget === event.relatedTarget || isParentChild( event.currentTarget, event.relatedTarget ) ) {\n            return;\n        }\n\n        gPoint = {\n            id: event.pointerId,\n            type: getPointerType( event ),\n            isPrimary: event.isPrimary,\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        updatePointersExit( tracker, event, [ gPoint ] );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onPointerDown( tracker, event ) {\n        var gPoint;\n\n        gPoint = {\n            id: event.pointerId,\n            type: getPointerType( event ),\n            isPrimary: event.isPrimary,\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        if ( updatePointersDown( tracker, event, [ gPoint ], event.button ) ) {\n            $.stopEvent( event );\n            capturePointer( tracker, gPoint.type );\n        }\n\n        if ( tracker.clickHandler || tracker.dblClickHandler || tracker.pressHandler || tracker.dragHandler || tracker.dragEndHandler || tracker.pinchHandler ) {\n            $.cancelEvent( event );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onPointerUp( tracker, event ) {\n        handlePointerUp( tracker, event );\n    }\n\n\n    /**\n     * This handler is attached to the window object (on the capture phase) to emulate mouse capture.\n     * onPointerUp is still attached to the tracked element, so stop propagation to avoid processing twice.\n     *\n     * @private\n     * @inner\n     */\n    function onPointerUpCaptured( tracker, event ) {\n        var pointsList = tracker.getActivePointersListByType( getPointerType( event ) );\n        if ( pointsList.getById( event.pointerId ) ) {\n            handlePointerUp( tracker, event );\n        }\n        $.stopEvent( event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function handlePointerUp( tracker, event ) {\n        var gPoint;\n\n        gPoint = {\n            id: event.pointerId,\n            type: getPointerType( event ),\n            isPrimary: event.isPrimary,\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        if ( updatePointersUp( tracker, event, [ gPoint ], event.button ) ) {\n            releasePointer( tracker, gPoint.type );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onPointerMove( tracker, event ) {\n        handlePointerMove( tracker, event );\n    }\n\n\n    /**\n     * This handler is attached to the window object (on the capture phase) to emulate mouse capture.\n     * onPointerMove is still attached to the tracked element, so stop propagation to avoid processing twice.\n     *\n     * @private\n     * @inner\n     */\n    function onPointerMoveCaptured( tracker, event ) {\n        var pointsList = tracker.getActivePointersListByType( getPointerType( event ) );\n        if ( pointsList.getById( event.pointerId ) ) {\n            handlePointerMove( tracker, event );\n        }\n        $.stopEvent( event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function handlePointerMove( tracker, event ) {\n        // Pointer changed coordinates, button state, pressure, tilt, or contact geometry (e.g. width and height)\n        var gPoint;\n\n        gPoint = {\n            id: event.pointerId,\n            type: getPointerType( event ),\n            isPrimary: event.isPrimary,\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        updatePointersMove( tracker, event, [ gPoint ] );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onPointerCancel( tracker, event ) {\n        var gPoint;\n\n        gPoint = {\n            id: event.pointerId,\n            type: getPointerType( event )\n        };\n\n        updatePointersCancel( tracker, event, [ gPoint ] );\n    }\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Device-agnostic DOM event handlers\n///////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker.GesturePointList} pointsList\n     *     The GesturePointList to track the pointer in.\n     * @param {OpenSeadragon.MouseTracker.GesturePoint} gPoint\n     *      Gesture point to track.\n     * @returns {Number} Number of gesture points in pointsList.\n     */\n    function startTrackingPointer( pointsList, gPoint ) {\n\n        // If isPrimary is not known for the pointer then set it according to our rules:\n        //    true if the first pointer in the gesture, otherwise false\n        if ( !gPoint.hasOwnProperty( 'isPrimary' ) ) {\n            if ( pointsList.getLength() === 0 ) {\n                gPoint.isPrimary = true;\n            } else {\n                gPoint.isPrimary = false;\n            }\n        }\n        gPoint.speed = 0;\n        gPoint.direction = 0;\n        gPoint.contactPos = gPoint.currentPos;\n        gPoint.contactTime = gPoint.currentTime;\n        gPoint.lastPos = gPoint.currentPos;\n        gPoint.lastTime = gPoint.currentTime;\n\n        return pointsList.add( gPoint );\n    }\n\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker.GesturePointList} pointsList\n     *     The GesturePointList to stop tracking the pointer on.\n     * @param {OpenSeadragon.MouseTracker.GesturePoint} gPoint\n     *      Gesture point to stop tracking.\n     * @returns {Number} Number of gesture points in pointsList.\n     */\n    function stopTrackingPointer( pointsList, gPoint ) {\n        var listLength,\n            primaryPoint;\n\n        if ( pointsList.getById( gPoint.id ) ) {\n            listLength = pointsList.removeById( gPoint.id );\n\n            // If isPrimary is not known for the pointer and we just removed the primary pointer from the list then we need to set another pointer as primary\n            if ( !gPoint.hasOwnProperty( 'isPrimary' ) ) {\n                primaryPoint = pointsList.getPrimary();\n                if ( !primaryPoint ) {\n                    primaryPoint = pointsList.getByIndex( 0 );\n                    if ( primaryPoint ) {\n                        primaryPoint.isPrimary = true;\n                    }\n                }\n            }\n        } else {\n            listLength = pointsList.getLength();\n        }\n\n        return listLength;\n    }\n\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {Object} event\n     *     A reference to the originating DOM event.\n     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n     *      Gesture points associated with the event.\n     */\n    function updatePointersEnter( tracker, event, gPoints ) {\n        var pointsList = tracker.getActivePointersListByType( gPoints[ 0 ].type ),\n            i,\n            gPointCount = gPoints.length,\n            curGPoint,\n            updateGPoint,\n            propagate;\n\n        for ( i = 0; i < gPointCount; i++ ) {\n            curGPoint = gPoints[ i ];\n            updateGPoint = pointsList.getById( curGPoint.id );\n\n            if ( updateGPoint ) {\n                // Already tracking the pointer...update it\n                updateGPoint.insideElement = true;\n                updateGPoint.lastPos = updateGPoint.currentPos;\n                updateGPoint.lastTime = updateGPoint.currentTime;\n                updateGPoint.currentPos = curGPoint.currentPos;\n                updateGPoint.currentTime = curGPoint.currentTime;\n\n                curGPoint = updateGPoint;\n            } else {\n                // Initialize for tracking and add to the tracking list\n                curGPoint.captured = false;\n                curGPoint.insideElementPressed = false;\n                curGPoint.insideElement = true;\n                startTrackingPointer( pointsList, curGPoint );\n            }\n\n            // Enter\n            if ( tracker.enterHandler ) {\n                propagate = tracker.enterHandler(\n                    {\n                        eventSource:          tracker,\n                        pointerType:          curGPoint.type,\n                        position:             getPointRelativeToAbsolute( curGPoint.currentPos, tracker.element ),\n                        buttons:              pointsList.buttons,\n                        pointers:             tracker.getActivePointerCount(),\n                        insideElementPressed: curGPoint.insideElementPressed,\n                        buttonDownAny:        pointsList.buttons !== 0,\n                        isTouchEvent:         curGPoint.type === 'touch',\n                        originalEvent:        event,\n                        preventDefaultAction: false,\n                        userData:             tracker.userData\n                    }\n                );\n                if ( propagate === false ) {\n                    $.cancelEvent( event );\n                }\n            }\n        }\n    }\n\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {Object} event\n     *     A reference to the originating DOM event.\n     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n     *      Gesture points associated with the event.\n     */\n    function updatePointersExit( tracker, event, gPoints ) {\n        var pointsList = tracker.getActivePointersListByType(gPoints[0].type),\n            i,\n            gPointCount = gPoints.length,\n            curGPoint,\n            updateGPoint,\n            propagate;\n\n        for ( i = 0; i < gPointCount; i++ ) {\n            curGPoint = gPoints[ i ];\n            updateGPoint = pointsList.getById( curGPoint.id );\n\n            if ( updateGPoint ) {\n                // Already tracking the pointer. If captured then update it, else stop tracking it\n                if ( updateGPoint.captured ) {\n                    updateGPoint.insideElement = false;\n                    updateGPoint.lastPos = updateGPoint.currentPos;\n                    updateGPoint.lastTime = updateGPoint.currentTime;\n                    updateGPoint.currentPos = curGPoint.currentPos;\n                    updateGPoint.currentTime = curGPoint.currentTime;\n                } else {\n                    stopTrackingPointer( pointsList, updateGPoint );\n                }\n\n                curGPoint = updateGPoint;\n            }\n\n            // Exit\n            if ( tracker.exitHandler ) {\n                propagate = tracker.exitHandler(\n                    {\n                        eventSource:          tracker,\n                        pointerType:          curGPoint.type,\n                        position:             getPointRelativeToAbsolute( curGPoint.currentPos, tracker.element ),\n                        buttons:              pointsList.buttons,\n                        pointers:             tracker.getActivePointerCount(),\n                        insideElementPressed: updateGPoint ? updateGPoint.insideElementPressed : false,\n                        buttonDownAny:        pointsList.buttons !== 0,\n                        isTouchEvent:         curGPoint.type === 'touch',\n                        originalEvent:        event,\n                        preventDefaultAction: false,\n                        userData:             tracker.userData\n                    }\n                );\n\n                if ( propagate === false ) {\n                    $.cancelEvent( event );\n                }\n            }\n        }\n    }\n\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {Object} event\n     *     A reference to the originating DOM event.\n     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n     *      Gesture points associated with the event.\n     * @param {Number} buttonChanged\n     *      The button involved in the event: -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n     *      Note on chorded button presses (a button pressed when another button is already pressed): In the W3C Pointer Events model,\n     *      only one pointerdown/pointerup event combo is fired. Chorded button state changes instead fire pointermove events.\n     *\n     * @returns {Boolean} True if pointers should be captured to the tracked element, otherwise false.\n     */\n    function updatePointersDown( tracker, event, gPoints, buttonChanged ) {\n        var delegate = THIS[ tracker.hash ],\n            propagate,\n            pointsList = tracker.getActivePointersListByType( gPoints[ 0 ].type ),\n            i,\n            gPointCount = gPoints.length,\n            curGPoint,\n            updateGPoint;\n\n        if ( typeof event.buttons !== 'undefined' ) {\n            pointsList.buttons = event.buttons;\n        } else {\n            if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n                if ( buttonChanged === 0 ) {\n                    // Primary\n                    pointsList.buttons += 1;\n                } else if ( buttonChanged === 1 ) {\n                    // Aux\n                    pointsList.buttons += 4;\n                } else if ( buttonChanged === 2 ) {\n                    // Secondary\n                    pointsList.buttons += 2;\n                } else if ( buttonChanged === 3 ) {\n                    // X1 (Back)\n                    pointsList.buttons += 8;\n                } else if ( buttonChanged === 4 ) {\n                    // X2 (Forward)\n                    pointsList.buttons += 16;\n                } else if ( buttonChanged === 5 ) {\n                    // Pen Eraser\n                    pointsList.buttons += 32;\n                }\n            } else {\n                if ( buttonChanged === 0 ) {\n                    // Primary\n                    pointsList.buttons |= 1;\n                } else if ( buttonChanged === 1 ) {\n                    // Aux\n                    pointsList.buttons |= 4;\n                } else if ( buttonChanged === 2 ) {\n                    // Secondary\n                    pointsList.buttons |= 2;\n                } else if ( buttonChanged === 3 ) {\n                    // X1 (Back)\n                    pointsList.buttons |= 8;\n                } else if ( buttonChanged === 4 ) {\n                    // X2 (Forward)\n                    pointsList.buttons |= 16;\n                } else if ( buttonChanged === 5 ) {\n                    // Pen Eraser\n                    pointsList.buttons |= 32;\n                }\n            }\n        }\n\n        // Some pointers may steal control from another pointer without firing the appropriate release events\n        // e.g. Touching a screen while click-dragging with certain mice.\n        var otherPointsLists = tracker.getActivePointersListsExceptType(gPoints[ 0 ].type);\n        for (i = 0; i < otherPointsLists.length; i++) {\n            //If another pointer has contact, simulate the release\n            abortContacts(tracker, event, otherPointsLists[i]); // No-op if no active pointer\n        }\n\n        // Only capture and track primary button, pen, and touch contacts\n        if ( buttonChanged !== 0 ) {\n            // Aux Press\n            if ( tracker.nonPrimaryPressHandler ) {\n                propagate = tracker.nonPrimaryPressHandler(\n                    {\n                        eventSource:          tracker,\n                        pointerType:          gPoints[ 0 ].type,\n                        position:             getPointRelativeToAbsolute( gPoints[ 0 ].currentPos, tracker.element ),\n                        button:               buttonChanged,\n                        buttons:              pointsList.buttons,\n                        isTouchEvent:         gPoints[ 0 ].type === 'touch',\n                        originalEvent:        event,\n                        preventDefaultAction: false,\n                        userData:             tracker.userData\n                    }\n                );\n                if ( propagate === false ) {\n                    $.cancelEvent( event );\n                }\n            }\n\n            return false;\n        }\n\n        for ( i = 0; i < gPointCount; i++ ) {\n            curGPoint = gPoints[ i ];\n            updateGPoint = pointsList.getById( curGPoint.id );\n\n            if ( updateGPoint ) {\n                // Already tracking the pointer...update it\n                updateGPoint.captured = true;\n                updateGPoint.insideElementPressed = true;\n                updateGPoint.insideElement = true;\n                updateGPoint.contactPos = curGPoint.currentPos;\n                updateGPoint.contactTime = curGPoint.currentTime;\n                updateGPoint.lastPos = updateGPoint.currentPos;\n                updateGPoint.lastTime = updateGPoint.currentTime;\n                updateGPoint.currentPos = curGPoint.currentPos;\n                updateGPoint.currentTime = curGPoint.currentTime;\n\n                curGPoint = updateGPoint;\n            } else {\n                // Initialize for tracking and add to the tracking list (no pointerover or pointermove event occurred before this)\n                curGPoint.captured = true;\n                curGPoint.insideElementPressed = true;\n                curGPoint.insideElement = true;\n                startTrackingPointer( pointsList, curGPoint );\n            }\n\n            pointsList.addContact();\n            //$.console.log('contacts++ ', pointsList.contacts);\n\n            if ( tracker.dragHandler || tracker.dragEndHandler || tracker.pinchHandler ) {\n                $.MouseTracker.gesturePointVelocityTracker.addPoint( tracker, curGPoint );\n            }\n\n            if ( pointsList.contacts === 1 ) {\n                // Press\n                if ( tracker.pressHandler ) {\n                    propagate = tracker.pressHandler(\n                        {\n                            eventSource:          tracker,\n                            pointerType:          curGPoint.type,\n                            position:             getPointRelativeToAbsolute( curGPoint.contactPos, tracker.element ),\n                            buttons:              pointsList.buttons,\n                            isTouchEvent:         curGPoint.type === 'touch',\n                            originalEvent:        event,\n                            preventDefaultAction: false,\n                            userData:             tracker.userData\n                        }\n                    );\n                    if ( propagate === false ) {\n                        $.cancelEvent( event );\n                    }\n                }\n            } else if ( pointsList.contacts === 2 ) {\n                if ( tracker.pinchHandler && curGPoint.type === 'touch' ) {\n                    // Initialize for pinch\n                    delegate.pinchGPoints = pointsList.asArray();\n                    delegate.lastPinchDist = delegate.currentPinchDist = delegate.pinchGPoints[ 0 ].currentPos.distanceTo( delegate.pinchGPoints[ 1 ].currentPos );\n                    delegate.lastPinchCenter = delegate.currentPinchCenter = getCenterPoint( delegate.pinchGPoints[ 0 ].currentPos, delegate.pinchGPoints[ 1 ].currentPos );\n                }\n            }\n        }\n\n        return true;\n    }\n\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {Object} event\n     *     A reference to the originating DOM event.\n     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n     *      Gesture points associated with the event.\n     * @param {Number} buttonChanged\n     *      The button involved in the event: -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n     *      Note on chorded button presses (a button pressed when another button is already pressed): In the W3C Pointer Events model,\n     *      only one pointerdown/pointerup event combo is fired. Chorded button state changes instead fire pointermove events.\n     *\n     * @returns {Boolean} True if pointer capture should be released from the tracked element, otherwise false.\n     */\n    function updatePointersUp( tracker, event, gPoints, buttonChanged ) {\n        var delegate = THIS[ tracker.hash ],\n            pointsList = tracker.getActivePointersListByType( gPoints[ 0 ].type ),\n            propagate,\n            releasePoint,\n            releaseTime,\n            i,\n            gPointCount = gPoints.length,\n            curGPoint,\n            updateGPoint,\n            releaseCapture = false,\n            wasCaptured = false,\n            quick;\n\n        if ( typeof event.buttons !== 'undefined' ) {\n            pointsList.buttons = event.buttons;\n        } else {\n            if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n                if ( buttonChanged === 0 ) {\n                    // Primary\n                    pointsList.buttons -= 1;\n                } else if ( buttonChanged === 1 ) {\n                    // Aux\n                    pointsList.buttons -= 4;\n                } else if ( buttonChanged === 2 ) {\n                    // Secondary\n                    pointsList.buttons -= 2;\n                } else if ( buttonChanged === 3 ) {\n                    // X1 (Back)\n                    pointsList.buttons -= 8;\n                } else if ( buttonChanged === 4 ) {\n                    // X2 (Forward)\n                    pointsList.buttons -= 16;\n                } else if ( buttonChanged === 5 ) {\n                    // Pen Eraser\n                    pointsList.buttons -= 32;\n                }\n            } else {\n                if ( buttonChanged === 0 ) {\n                    // Primary\n                    pointsList.buttons ^= ~1;\n                } else if ( buttonChanged === 1 ) {\n                    // Aux\n                    pointsList.buttons ^= ~4;\n                } else if ( buttonChanged === 2 ) {\n                    // Secondary\n                    pointsList.buttons ^= ~2;\n                } else if ( buttonChanged === 3 ) {\n                    // X1 (Back)\n                    pointsList.buttons ^= ~8;\n                } else if ( buttonChanged === 4 ) {\n                    // X2 (Forward)\n                    pointsList.buttons ^= ~16;\n                } else if ( buttonChanged === 5 ) {\n                    // Pen Eraser\n                    pointsList.buttons ^= ~32;\n                }\n            }\n        }\n\n        // Only capture and track primary button, pen, and touch contacts\n        if ( buttonChanged !== 0 ) {\n            // Aux Release\n            if ( tracker.nonPrimaryReleaseHandler ) {\n                propagate = tracker.nonPrimaryReleaseHandler(\n                    {\n                        eventSource:           tracker,\n                        pointerType:           gPoints[ 0 ].type,\n                        position:              getPointRelativeToAbsolute(gPoints[0].currentPos, tracker.element),\n                        button:                buttonChanged,\n                        buttons:               pointsList.buttons,\n                        isTouchEvent:          gPoints[ 0 ].type === 'touch',\n                        originalEvent:         event,\n                        preventDefaultAction:  false,\n                        userData:              tracker.userData\n                    }\n                );\n                if ( propagate === false ) {\n                    $.cancelEvent( event );\n                }\n            }\n\n            // A primary mouse button may have been released while the non-primary button was down\n            var otherPointsList = tracker.getActivePointersListByType(\"mouse\");\n            // Stop tracking the mouse; see https://github.com/openseadragon/openseadragon/pull/1223\n            abortContacts(tracker, event, otherPointsList); // No-op if no active pointer\n\n            return false;\n        }\n\n        for ( i = 0; i < gPointCount; i++ ) {\n            curGPoint = gPoints[ i ];\n            updateGPoint = pointsList.getById( curGPoint.id );\n\n            if ( updateGPoint ) {\n                // Update the pointer, stop tracking it if not still in this element\n                if ( updateGPoint.captured ) {\n                    updateGPoint.captured = false;\n                    releaseCapture = true;\n                    wasCaptured = true;\n                }\n                updateGPoint.lastPos = updateGPoint.currentPos;\n                updateGPoint.lastTime = updateGPoint.currentTime;\n                updateGPoint.currentPos = curGPoint.currentPos;\n                updateGPoint.currentTime = curGPoint.currentTime;\n                if ( !updateGPoint.insideElement ) {\n                    stopTrackingPointer( pointsList, updateGPoint );\n                }\n\n                releasePoint = updateGPoint.currentPos;\n                releaseTime = updateGPoint.currentTime;\n\n                if ( wasCaptured ) {\n                    // Pointer was activated in our element but could have been removed in any element since events are captured to our element\n\n                    pointsList.removeContact();\n                    //$.console.log('contacts-- ', pointsList.contacts);\n\n                    if ( tracker.dragHandler || tracker.dragEndHandler || tracker.pinchHandler ) {\n                        $.MouseTracker.gesturePointVelocityTracker.removePoint( tracker, updateGPoint );\n                    }\n\n                    if ( pointsList.contacts === 0 ) {\n\n                        // Release (pressed in our element)\n                        if ( tracker.releaseHandler ) {\n                            propagate = tracker.releaseHandler(\n                                {\n                                    eventSource:           tracker,\n                                    pointerType:           updateGPoint.type,\n                                    position:              getPointRelativeToAbsolute( releasePoint, tracker.element ),\n                                    buttons:               pointsList.buttons,\n                                    insideElementPressed:  updateGPoint.insideElementPressed,\n                                    insideElementReleased: updateGPoint.insideElement,\n                                    isTouchEvent:          updateGPoint.type === 'touch',\n                                    originalEvent:         event,\n                                    preventDefaultAction:  false,\n                                    userData:              tracker.userData\n                                }\n                            );\n                            if ( propagate === false ) {\n                                $.cancelEvent( event );\n                            }\n                        }\n\n                        // Drag End\n                        if ( tracker.dragEndHandler && !updateGPoint.currentPos.equals( updateGPoint.contactPos ) ) {\n                            propagate = tracker.dragEndHandler(\n                                {\n                                    eventSource:          tracker,\n                                    pointerType:          updateGPoint.type,\n                                    position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n                                    speed:                updateGPoint.speed,\n                                    direction:            updateGPoint.direction,\n                                    shift:                event.shiftKey,\n                                    isTouchEvent:         updateGPoint.type === 'touch',\n                                    originalEvent:        event,\n                                    preventDefaultAction: false,\n                                    userData:             tracker.userData\n                                }\n                            );\n                            if ( propagate === false ) {\n                                $.cancelEvent( event );\n                            }\n                        }\n\n                        // Click / Double-Click\n                        if ( ( tracker.clickHandler || tracker.dblClickHandler ) && updateGPoint.insideElement ) {\n                            quick = releaseTime - updateGPoint.contactTime <= tracker.clickTimeThreshold &&\n                                            updateGPoint.contactPos.distanceTo( releasePoint ) <= tracker.clickDistThreshold;\n\n                            // Click\n                            if ( tracker.clickHandler ) {\n                                propagate = tracker.clickHandler(\n                                    {\n                                        eventSource:          tracker,\n                                        pointerType:          updateGPoint.type,\n                                        position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n                                        quick:                quick,\n                                        shift:                event.shiftKey,\n                                        isTouchEvent:         updateGPoint.type === 'touch',\n                                        originalEvent:        event,\n                                        preventDefaultAction: false,\n                                        userData:             tracker.userData\n                                    }\n                                );\n                                if ( propagate === false ) {\n                                    $.cancelEvent( event );\n                                }\n                            }\n\n                            // Double-Click\n                            if ( tracker.dblClickHandler && quick ) {\n                                pointsList.clicks++;\n                                if ( pointsList.clicks === 1 ) {\n                                    delegate.lastClickPos = releasePoint;\n                                    /*jshint loopfunc:true*/\n                                    delegate.dblClickTimeOut = setTimeout( function() {\n                                        pointsList.clicks = 0;\n                                    }, tracker.dblClickTimeThreshold );\n                                    /*jshint loopfunc:false*/\n                                } else if ( pointsList.clicks === 2 ) {\n                                    clearTimeout( delegate.dblClickTimeOut );\n                                    pointsList.clicks = 0;\n                                    if ( delegate.lastClickPos.distanceTo( releasePoint ) <= tracker.dblClickDistThreshold ) {\n                                        propagate = tracker.dblClickHandler(\n                                            {\n                                                eventSource:          tracker,\n                                                pointerType:          updateGPoint.type,\n                                                position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n                                                shift:                event.shiftKey,\n                                                isTouchEvent:         updateGPoint.type === 'touch',\n                                                originalEvent:        event,\n                                                preventDefaultAction: false,\n                                                userData:             tracker.userData\n                                            }\n                                        );\n                                        if ( propagate === false ) {\n                                            $.cancelEvent( event );\n                                        }\n                                    }\n                                    delegate.lastClickPos = null;\n                                }\n                            }\n                        }\n                    } else if ( pointsList.contacts === 2 ) {\n                        if ( tracker.pinchHandler && updateGPoint.type === 'touch' ) {\n                            // Reset for pinch\n                            delegate.pinchGPoints = pointsList.asArray();\n                            delegate.lastPinchDist = delegate.currentPinchDist = delegate.pinchGPoints[ 0 ].currentPos.distanceTo( delegate.pinchGPoints[ 1 ].currentPos );\n                            delegate.lastPinchCenter = delegate.currentPinchCenter = getCenterPoint( delegate.pinchGPoints[ 0 ].currentPos, delegate.pinchGPoints[ 1 ].currentPos );\n                        }\n                    }\n                } else {\n                    // Pointer was activated in another element but removed in our element\n\n                    // Release (pressed in another element)\n                    if ( tracker.releaseHandler ) {\n                        propagate = tracker.releaseHandler(\n                            {\n                                eventSource:           tracker,\n                                pointerType:           updateGPoint.type,\n                                position:              getPointRelativeToAbsolute( releasePoint, tracker.element ),\n                                buttons:               pointsList.buttons,\n                                insideElementPressed:  updateGPoint.insideElementPressed,\n                                insideElementReleased: updateGPoint.insideElement,\n                                isTouchEvent:          updateGPoint.type === 'touch',\n                                originalEvent:         event,\n                                preventDefaultAction:  false,\n                                userData:              tracker.userData\n                            }\n                        );\n                        if ( propagate === false ) {\n                            $.cancelEvent( event );\n                        }\n                    }\n                }\n            }\n        }\n\n        return releaseCapture;\n    }\n\n\n    /**\n     * Call when pointer(s) change coordinates, button state, pressure, tilt, or contact geometry (e.g. width and height)\n     *\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {Object} event\n     *     A reference to the originating DOM event.\n     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n     *      Gesture points associated with the event.\n     */\n    function updatePointersMove( tracker, event, gPoints ) {\n        var delegate = THIS[ tracker.hash ],\n            pointsList = tracker.getActivePointersListByType( gPoints[ 0 ].type ),\n            i,\n            gPointCount = gPoints.length,\n            curGPoint,\n            updateGPoint,\n            gPointArray,\n            delta,\n            propagate;\n\n        if ( typeof event.buttons !== 'undefined' ) {\n            pointsList.buttons = event.buttons;\n        }\n\n        for ( i = 0; i < gPointCount; i++ ) {\n            curGPoint = gPoints[ i ];\n            updateGPoint = pointsList.getById( curGPoint.id );\n\n            if ( updateGPoint ) {\n                // Already tracking the pointer...update it\n                if ( curGPoint.hasOwnProperty( 'isPrimary' ) ) {\n                    updateGPoint.isPrimary = curGPoint.isPrimary;\n                }\n                updateGPoint.lastPos = updateGPoint.currentPos;\n                updateGPoint.lastTime = updateGPoint.currentTime;\n                updateGPoint.currentPos = curGPoint.currentPos;\n                updateGPoint.currentTime = curGPoint.currentTime;\n            } else {\n                // Initialize for tracking and add to the tracking list (no pointerover or pointerdown event occurred before this)\n                curGPoint.captured = false;\n                curGPoint.insideElementPressed = false;\n                curGPoint.insideElement = true;\n                startTrackingPointer( pointsList, curGPoint );\n            }\n        }\n\n        // Stop (mouse only)\n        if ( tracker.stopHandler && gPoints[ 0 ].type === 'mouse' ) {\n            clearTimeout( tracker.stopTimeOut );\n            tracker.stopTimeOut = setTimeout( function() {\n                handlePointerStop( tracker, event, gPoints[ 0 ].type );\n            }, tracker.stopDelay );\n        }\n\n        if ( pointsList.contacts === 0 ) {\n            // Move (no contacts: hovering mouse or other hover-capable device)\n            if ( tracker.moveHandler ) {\n                propagate = tracker.moveHandler(\n                    {\n                        eventSource:          tracker,\n                        pointerType:          gPoints[ 0 ].type,\n                        position:             getPointRelativeToAbsolute( gPoints[ 0 ].currentPos, tracker.element ),\n                        buttons:              pointsList.buttons,\n                        isTouchEvent:         gPoints[ 0 ].type === 'touch',\n                        originalEvent:        event,\n                        preventDefaultAction: false,\n                        userData:             tracker.userData\n                    }\n                );\n                if ( propagate === false ) {\n                    $.cancelEvent( event );\n                }\n            }\n        } else if ( pointsList.contacts === 1 ) {\n            // Move (1 contact)\n            if ( tracker.moveHandler ) {\n                updateGPoint = pointsList.asArray()[ 0 ];\n                propagate = tracker.moveHandler(\n                    {\n                        eventSource:          tracker,\n                        pointerType:          updateGPoint.type,\n                        position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n                        buttons:              pointsList.buttons,\n                        isTouchEvent:         updateGPoint.type === 'touch',\n                        originalEvent:        event,\n                        preventDefaultAction: false,\n                        userData:             tracker.userData\n                    }\n                );\n                if ( propagate === false ) {\n                    $.cancelEvent( event );\n                }\n            }\n\n            // Drag\n            if ( tracker.dragHandler ) {\n                updateGPoint = pointsList.asArray()[ 0 ];\n                delta = updateGPoint.currentPos.minus( updateGPoint.lastPos );\n                propagate = tracker.dragHandler(\n                    {\n                        eventSource:          tracker,\n                        pointerType:          updateGPoint.type,\n                        position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n                        buttons:              pointsList.buttons,\n                        delta:                delta,\n                        speed:                updateGPoint.speed,\n                        direction:            updateGPoint.direction,\n                        shift:                event.shiftKey,\n                        isTouchEvent:         updateGPoint.type === 'touch',\n                        originalEvent:        event,\n                        preventDefaultAction: false,\n                        userData:             tracker.userData\n                    }\n                );\n                if ( propagate === false ) {\n                    $.cancelEvent( event );\n                }\n            }\n        } else if ( pointsList.contacts === 2 ) {\n            // Move (2 contacts, use center)\n            if ( tracker.moveHandler ) {\n                gPointArray = pointsList.asArray();\n                propagate = tracker.moveHandler(\n                    {\n                        eventSource:          tracker,\n                        pointerType:          gPointArray[ 0 ].type,\n                        position:             getPointRelativeToAbsolute( getCenterPoint( gPointArray[ 0 ].currentPos, gPointArray[ 1 ].currentPos ), tracker.element ),\n                        buttons:              pointsList.buttons,\n                        isTouchEvent:         gPointArray[ 0 ].type === 'touch',\n                        originalEvent:        event,\n                        preventDefaultAction: false,\n                        userData:             tracker.userData\n                    }\n                );\n                if ( propagate === false ) {\n                    $.cancelEvent( event );\n                }\n            }\n\n            // Pinch\n            if ( tracker.pinchHandler && gPoints[ 0 ].type === 'touch' ) {\n                delta = delegate.pinchGPoints[ 0 ].currentPos.distanceTo( delegate.pinchGPoints[ 1 ].currentPos );\n                if ( delta != delegate.currentPinchDist ) {\n                    delegate.lastPinchDist = delegate.currentPinchDist;\n                    delegate.currentPinchDist = delta;\n                    delegate.lastPinchCenter = delegate.currentPinchCenter;\n                    delegate.currentPinchCenter = getCenterPoint( delegate.pinchGPoints[ 0 ].currentPos, delegate.pinchGPoints[ 1 ].currentPos );\n                    propagate = tracker.pinchHandler(\n                        {\n                            eventSource:          tracker,\n                            pointerType:          'touch',\n                            gesturePoints:        delegate.pinchGPoints,\n                            lastCenter:           getPointRelativeToAbsolute( delegate.lastPinchCenter, tracker.element ),\n                            center:               getPointRelativeToAbsolute( delegate.currentPinchCenter, tracker.element ),\n                            lastDistance:         delegate.lastPinchDist,\n                            distance:             delegate.currentPinchDist,\n                            shift:                event.shiftKey,\n                            originalEvent:        event,\n                            preventDefaultAction: false,\n                            userData:             tracker.userData\n                        }\n                    );\n                    if ( propagate === false ) {\n                        $.cancelEvent( event );\n                    }\n                }\n            }\n        }\n    }\n\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {Object} event\n     *     A reference to the originating DOM event.\n     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n     *      Gesture points associated with the event.\n     */\n    function updatePointersCancel( tracker, event, gPoints ) {\n        updatePointersUp( tracker, event, gPoints, 0 );\n        updatePointersExit( tracker, event, gPoints );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function handlePointerStop( tracker, originalMoveEvent, pointerType ) {\n        if ( tracker.stopHandler ) {\n            tracker.stopHandler( {\n                eventSource:          tracker,\n                pointerType:          pointerType,\n                position:             getMouseRelative( originalMoveEvent, tracker.element ),\n                buttons:              tracker.getActivePointersListByType( pointerType ).buttons,\n                isTouchEvent:         pointerType === 'touch',\n                originalEvent:        originalMoveEvent,\n                preventDefaultAction: false,\n                userData:             tracker.userData\n            } );\n        }\n    }\n\n    /**\n     * True if inside an iframe, otherwise false.\n     * @member {Boolean} isInIframe\n     * @private\n     * @inner\n     */\n    var isInIframe = (function() {\n        try {\n            return window.self !== window.top;\n        } catch (e) {\n            return true;\n        }\n    })();\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @returns {Boolean} True if the target has access rights to events, otherwise false.\n     */\n    function canAccessEvents (target) {\n        try {\n            return target.addEventListener && target.removeEventListener;\n        } catch (e) {\n            return false;\n        }\n    }\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - Control\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * An enumeration of supported locations where controls can be anchored.\n * The anchoring is always relative to the container.\n * @member ControlAnchor\n * @memberof OpenSeadragon\n * @static\n * @type {Object}\n * @property {Number} NONE\n * @property {Number} TOP_LEFT\n * @property {Number} TOP_RIGHT\n * @property {Number} BOTTOM_LEFT\n * @property {Number} BOTTOM_RIGHT\n * @property {Number} ABSOLUTE\n */\n$.ControlAnchor = {\n    NONE: 0,\n    TOP_LEFT: 1,\n    TOP_RIGHT: 2,\n    BOTTOM_RIGHT: 3,\n    BOTTOM_LEFT: 4,\n    ABSOLUTE: 5\n};\n\n/**\n * @class Control\n * @classdesc A Control represents any interface element which is meant to allow the user\n * to interact with the zoomable interface. Any control can be anchored to any\n * element.\n *\n * @memberof OpenSeadragon\n * @param {Element} element - the control element to be anchored in the container.\n * @param {Object } options - All required and optional settings for configuring a control element.\n * @param {OpenSeadragon.ControlAnchor} [options.anchor=OpenSeadragon.ControlAnchor.NONE] - the position of the control\n *  relative to the container.\n * @param {Boolean} [options.attachToViewer=true] - Whether the control should be added directly to the viewer, or\n *  directly to the container\n * @param {Boolean} [options.autoFade=true] - Whether the control should have the autofade behavior\n * @param {Element} container - the element to control will be anchored too.\n */\n$.Control = function ( element, options, container ) {\n    var parent = element.parentNode;\n    if (typeof options === 'number')\n    {\n        $.console.error(\"Passing an anchor directly into the OpenSeadragon.Control constructor is deprecated; \" +\n                        \"please use an options object instead.  \" +\n                        \"Support for this deprecated variant is scheduled for removal in December 2013\");\n         options = {anchor: options};\n    }\n    options.attachToViewer = (typeof options.attachToViewer === 'undefined') ? true : options.attachToViewer;\n    /**\n     * True if the control should have autofade behavior.\n     * @member {Boolean} autoFade\n     * @memberof OpenSeadragon.Control#\n     */\n    this.autoFade = (typeof options.autoFade === 'undefined') ? true : options.autoFade;\n    /**\n     * The element providing the user interface with some type of control (e.g. a zoom-in button).\n     * @member {Element} element\n     * @memberof OpenSeadragon.Control#\n     */\n    this.element    = element;\n    /**\n     * The position of the Control relative to its container.\n     * @member {OpenSeadragon.ControlAnchor} anchor\n     * @memberof OpenSeadragon.Control#\n     */\n    this.anchor     = options.anchor;\n    /**\n     * The Control's containing element.\n     * @member {Element} container\n     * @memberof OpenSeadragon.Control#\n     */\n    this.container  = container;\n    /**\n     * A neutral element surrounding the control element.\n     * @member {Element} wrapper\n     * @memberof OpenSeadragon.Control#\n     */\n    if ( this.anchor == $.ControlAnchor.ABSOLUTE ) {\n        this.wrapper    = $.makeNeutralElement( \"div\" );\n        this.wrapper.style.position = \"absolute\";\n        this.wrapper.style.top = typeof (options.top) == \"number\" ? (options.top + 'px') : options.top;\n        this.wrapper.style.left  = typeof (options.left) == \"number\" ? (options.left + 'px') : options.left;\n        this.wrapper.style.height = typeof (options.height) == \"number\" ? (options.height + 'px') : options.height;\n        this.wrapper.style.width  = typeof (options.width) == \"number\" ? (options.width + 'px') : options.width;\n        this.wrapper.style.margin = \"0px\";\n        this.wrapper.style.padding = \"0px\";\n\n        this.element.style.position = \"relative\";\n        this.element.style.top = \"0px\";\n        this.element.style.left = \"0px\";\n        this.element.style.height = \"100%\";\n        this.element.style.width = \"100%\";\n    } else {\n        this.wrapper    = $.makeNeutralElement( \"div\" );\n        this.wrapper.style.display = \"inline-block\";\n        if ( this.anchor == $.ControlAnchor.NONE ) {\n            // IE6 fix\n            this.wrapper.style.width = this.wrapper.style.height = \"100%\";\n        }\n    }\n    this.wrapper.appendChild( this.element );\n\n    if (options.attachToViewer ) {\n        if ( this.anchor == $.ControlAnchor.TOP_RIGHT ||\n             this.anchor == $.ControlAnchor.BOTTOM_RIGHT ) {\n            this.container.insertBefore(\n                this.wrapper,\n                this.container.firstChild\n            );\n        } else {\n            this.container.appendChild( this.wrapper );\n        }\n    } else {\n        parent.appendChild( this.wrapper );\n    }\n};\n\n/** @lends OpenSeadragon.Control.prototype */\n$.Control.prototype = {\n\n    /**\n     * Removes the control from the container.\n     * @function\n     */\n    destroy: function() {\n        this.wrapper.removeChild( this.element );\n        this.container.removeChild( this.wrapper );\n    },\n\n    /**\n     * Determines if the control is currently visible.\n     * @function\n     * @return {Boolean} true if currently visible, false otherwise.\n     */\n    isVisible: function() {\n        return this.wrapper.style.display != \"none\";\n    },\n\n    /**\n     * Toggles the visibility of the control.\n     * @function\n     * @param {Boolean} visible - true to make visible, false to hide.\n     */\n    setVisible: function( visible ) {\n        this.wrapper.style.display = visible ?\n            ( this.anchor == $.ControlAnchor.ABSOLUTE ? 'block' : 'inline-block' ) :\n            \"none\";\n    },\n\n    /**\n     * Sets the opacity level for the control.\n     * @function\n     * @param {Number} opactiy - a value between 1 and 0 inclusively.\n     */\n    setOpacity: function( opacity ) {\n        if ( this.element[ $.SIGNAL ] && $.Browser.vendor == $.BROWSERS.IE ) {\n            $.setElementOpacity( this.element, opacity, true );\n        } else {\n            $.setElementOpacity( this.wrapper, opacity, true );\n        }\n    }\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - ControlDock\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n    /**\n     * @class ControlDock\n     * @classdesc Provides a container element (a &lt;form&gt; element) with support for the layout of control elements.\n     *\n     * @memberof OpenSeadragon\n     */\n    $.ControlDock = function( options ){\n        var layouts = [ 'topleft', 'topright', 'bottomright', 'bottomleft'],\n            layout,\n            i;\n\n        $.extend( true, this, {\n            id: 'controldock-' + $.now() + '-' + Math.floor(Math.random() * 1000000),\n            container: $.makeNeutralElement( 'div' ),\n            controls: []\n        }, options );\n\n        // Disable the form's submit; otherwise button clicks and return keys\n        // can trigger it.\n        this.container.onsubmit = function() {\n            return false;\n        };\n\n        if( this.element ){\n            this.element = $.getElement( this.element );\n            this.element.appendChild( this.container );\n            this.element.style.position = 'relative';\n            this.container.style.width = '100%';\n            this.container.style.height = '100%';\n        }\n\n        for( i = 0; i < layouts.length; i++ ){\n            layout = layouts[ i ];\n            this.controls[ layout ] = $.makeNeutralElement( \"div\" );\n            this.controls[ layout ].style.position = 'absolute';\n            if ( layout.match( 'left' ) ){\n                this.controls[ layout ].style.left = '0px';\n            }\n            if ( layout.match( 'right' ) ){\n                this.controls[ layout ].style.right = '0px';\n            }\n            if ( layout.match( 'top' ) ){\n                this.controls[ layout ].style.top = '0px';\n            }\n            if ( layout.match( 'bottom' ) ){\n                this.controls[ layout ].style.bottom = '0px';\n            }\n        }\n\n        this.container.appendChild( this.controls.topleft );\n        this.container.appendChild( this.controls.topright );\n        this.container.appendChild( this.controls.bottomright );\n        this.container.appendChild( this.controls.bottomleft );\n    };\n\n    /** @lends OpenSeadragon.ControlDock.prototype */\n    $.ControlDock.prototype = {\n\n        /**\n         * @function\n         */\n        addControl: function ( element, controlOptions ) {\n            element = $.getElement( element );\n            var div = null;\n\n            if ( getControlIndex( this, element ) >= 0 ) {\n                return;     // they're trying to add a duplicate control\n            }\n\n            switch ( controlOptions.anchor ) {\n                case $.ControlAnchor.TOP_RIGHT:\n                    div = this.controls.topright;\n                    element.style.position = \"relative\";\n                    element.style.paddingRight = \"0px\";\n                    element.style.paddingTop = \"0px\";\n                    break;\n                case $.ControlAnchor.BOTTOM_RIGHT:\n                    div = this.controls.bottomright;\n                    element.style.position = \"relative\";\n                    element.style.paddingRight = \"0px\";\n                    element.style.paddingBottom = \"0px\";\n                    break;\n                case $.ControlAnchor.BOTTOM_LEFT:\n                    div = this.controls.bottomleft;\n                    element.style.position = \"relative\";\n                    element.style.paddingLeft = \"0px\";\n                    element.style.paddingBottom = \"0px\";\n                    break;\n                case $.ControlAnchor.TOP_LEFT:\n                    div = this.controls.topleft;\n                    element.style.position = \"relative\";\n                    element.style.paddingLeft = \"0px\";\n                    element.style.paddingTop = \"0px\";\n                    break;\n                case $.ControlAnchor.ABSOLUTE:\n                    div = this.container;\n                    element.style.margin = \"0px\";\n                    element.style.padding = \"0px\";\n                    break;\n                default:\n                case $.ControlAnchor.NONE:\n                    div = this.container;\n                    element.style.margin = \"0px\";\n                    element.style.padding = \"0px\";\n                    break;\n            }\n\n            this.controls.push(\n                new $.Control( element, controlOptions, div )\n            );\n            element.style.display = \"inline-block\";\n        },\n\n\n        /**\n         * @function\n         * @return {OpenSeadragon.ControlDock} Chainable.\n         */\n        removeControl: function ( element ) {\n            element = $.getElement( element );\n            var i = getControlIndex( this, element );\n\n            if ( i >= 0 ) {\n                this.controls[ i ].destroy();\n                this.controls.splice( i, 1 );\n            }\n\n            return this;\n        },\n\n        /**\n         * @function\n         * @return {OpenSeadragon.ControlDock} Chainable.\n         */\n        clearControls: function () {\n            while ( this.controls.length > 0 ) {\n                this.controls.pop().destroy();\n            }\n\n            return this;\n        },\n\n\n        /**\n         * @function\n         * @return {Boolean}\n         */\n        areControlsEnabled: function () {\n            var i;\n\n            for ( i = this.controls.length - 1; i >= 0; i-- ) {\n                if ( this.controls[ i ].isVisible() ) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n\n        /**\n         * @function\n         * @return {OpenSeadragon.ControlDock} Chainable.\n         */\n        setControlsEnabled: function( enabled ) {\n            var i;\n\n            for ( i = this.controls.length - 1; i >= 0; i-- ) {\n                this.controls[ i ].setVisible( enabled );\n            }\n\n            return this;\n        }\n\n    };\n\n\n    ///////////////////////////////////////////////////////////////////////////////\n    // Utility methods\n    ///////////////////////////////////////////////////////////////////////////////\n    function getControlIndex( dock, element ) {\n        var controls = dock.controls,\n            i;\n\n        for ( i = controls.length - 1; i >= 0; i-- ) {\n            if ( controls[ i ].element == element ) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Placement\n *\n * Copyright (C) 2010-2016 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function($) {\n\n    /**\n     * An enumeration of positions to anchor an element.\n     * @member Placement\n     * @memberOf OpenSeadragon\n     * @static\n     * @readonly\n     * @property {OpenSeadragon.Placement} CENTER\n     * @property {OpenSeadragon.Placement} TOP_LEFT\n     * @property {OpenSeadragon.Placement} TOP\n     * @property {OpenSeadragon.Placement} TOP_RIGHT\n     * @property {OpenSeadragon.Placement} RIGHT\n     * @property {OpenSeadragon.Placement} BOTTOM_RIGHT\n     * @property {OpenSeadragon.Placement} BOTTOM\n     * @property {OpenSeadragon.Placement} BOTTOM_LEFT\n     * @property {OpenSeadragon.Placement} LEFT\n     */\n    $.Placement = $.freezeObject({\n        CENTER:       0,\n        TOP_LEFT:     1,\n        TOP:          2,\n        TOP_RIGHT:    3,\n        RIGHT:        4,\n        BOTTOM_RIGHT: 5,\n        BOTTOM:       6,\n        BOTTOM_LEFT:  7,\n        LEFT:         8,\n        properties: {\n            0: {\n                isLeft: false,\n                isHorizontallyCentered: true,\n                isRight: false,\n                isTop: false,\n                isVerticallyCentered: true,\n                isBottom: false\n            },\n            1: {\n                isLeft: true,\n                isHorizontallyCentered: false,\n                isRight: false,\n                isTop: true,\n                isVerticallyCentered: false,\n                isBottom: false\n            },\n            2: {\n                isLeft: false,\n                isHorizontallyCentered: true,\n                isRight: false,\n                isTop: true,\n                isVerticallyCentered: false,\n                isBottom: false\n            },\n            3: {\n                isLeft: false,\n                isHorizontallyCentered: false,\n                isRight: true,\n                isTop: true,\n                isVerticallyCentered: false,\n                isBottom: false\n            },\n            4: {\n                isLeft: false,\n                isHorizontallyCentered: false,\n                isRight: true,\n                isTop: false,\n                isVerticallyCentered: true,\n                isBottom: false\n            },\n            5: {\n                isLeft: false,\n                isHorizontallyCentered: false,\n                isRight: true,\n                isTop: false,\n                isVerticallyCentered: false,\n                isBottom: true\n            },\n            6: {\n                isLeft: false,\n                isHorizontallyCentered: true,\n                isRight: false,\n                isTop: false,\n                isVerticallyCentered: false,\n                isBottom: true\n            },\n            7: {\n                isLeft: true,\n                isHorizontallyCentered: false,\n                isRight: false,\n                isTop: false,\n                isVerticallyCentered: false,\n                isBottom: true\n            },\n            8: {\n                isLeft: true,\n                isHorizontallyCentered: false,\n                isRight: false,\n                isTop: false,\n                isVerticallyCentered: true,\n                isBottom: false\n            }\n        }\n    });\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - Viewer\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n// dictionary from hash to private properties\nvar THIS = {};\nvar nextHash = 1;\n\n/**\n *\n * The main point of entry into creating a zoomable image on the page.<br>\n * <br>\n * We have provided an idiomatic javascript constructor which takes\n * a single object, but still support the legacy positional arguments.<br>\n * <br>\n * The options below are given in order that they appeared in the constructor\n * as arguments and we translate a positional call into an idiomatic call.<br>\n * <br>\n * To create a viewer, you can use either of this methods:<br>\n * <ul>\n * <li><code>var viewer = new OpenSeadragon.Viewer(options);</code></li>\n * <li><code>var viewer = OpenSeadragon(options);</code></li>\n * </ul>\n * @class Viewer\n * @classdesc The main OpenSeadragon viewer class.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.EventSource\n * @extends OpenSeadragon.ControlDock\n * @param {OpenSeadragon.Options} options - Viewer options.\n *\n **/\n$.Viewer = function( options ) {\n\n    var args  = arguments,\n        _this = this,\n        i;\n\n\n    //backward compatibility for positional args while preferring more\n    //idiomatic javascript options object as the only argument\n    if( !$.isPlainObject( options ) ){\n        options = {\n            id:                 args[ 0 ],\n            xmlPath:            args.length > 1 ? args[ 1 ] : undefined,\n            prefixUrl:          args.length > 2 ? args[ 2 ] : undefined,\n            controls:           args.length > 3 ? args[ 3 ] : undefined,\n            overlays:           args.length > 4 ? args[ 4 ] : undefined\n        };\n    }\n\n    //options.config and the general config argument are deprecated\n    //in favor of the more direct specification of optional settings\n    //being pass directly on the options object\n    if ( options.config ){\n        $.extend( true, options, options.config );\n        delete options.config;\n    }\n\n    //Public properties\n    //Allow the options object to override global defaults\n    $.extend( true, this, {\n\n        //internal state and dom identifiers\n        id:             options.id,\n        hash:           options.hash || nextHash++,\n        /**\n         * Index for page to be shown first next time open() is called (only used in sequenceMode).\n         * @member {Number} initialPage\n         * @memberof OpenSeadragon.Viewer#\n         */\n        initialPage:    0,\n\n        //dom nodes\n        /**\n         * The parent element of this Viewer instance, passed in when the Viewer was created.\n         * @member {Element} element\n         * @memberof OpenSeadragon.Viewer#\n         */\n        element:        null,\n        /**\n         * A &lt;div&gt; element (provided by {@link OpenSeadragon.ControlDock}), the base element of this Viewer instance.<br><br>\n         * Child element of {@link OpenSeadragon.Viewer#element}.\n         * @member {Element} container\n         * @memberof OpenSeadragon.Viewer#\n         */\n        container:      null,\n        /**\n         * A &lt;div&gt; element, the element where user-input events are handled for panning and zooming.<br><br>\n         * Child element of {@link OpenSeadragon.Viewer#container},\n         * positioned on top of {@link OpenSeadragon.Viewer#keyboardCommandArea}.<br><br>\n         * The parent of {@link OpenSeadragon.Drawer#canvas} instances.\n         * @member {Element} canvas\n         * @memberof OpenSeadragon.Viewer#\n         */\n        canvas:         null,\n\n        // Overlays list. An overlay allows to add html on top of the viewer.\n        overlays:           [],\n        // Container inside the canvas where overlays are drawn.\n        overlaysContainer:  null,\n\n        //private state properties\n        previousBody:   [],\n\n        //This was originally initialized in the constructor and so could never\n        //have anything in it.  now it can because we allow it to be specified\n        //in the options and is only empty by default if not specified. Also\n        //this array was returned from get_controls which I find confusing\n        //since this object has a controls property which is treated in other\n        //functions like clearControls.  I'm removing the accessors.\n        customControls: [],\n\n        //These are originally not part options but declared as members\n        //in initialize.  It's still considered idiomatic to put them here\n        //source is here for backwards compatibility. It is not an official\n        //part of the API and should not be relied upon.\n        source:         null,\n        /**\n         * Handles rendering of tiles in the viewer. Created for each TileSource opened.\n         * @member {OpenSeadragon.Drawer} drawer\n         * @memberof OpenSeadragon.Viewer#\n         */\n        drawer:             null,\n        /**\n         * Keeps track of all of the tiled images in the scene.\n         * @member {OpenSeadragon.Drawer} world\n         * @memberof OpenSeadragon.Viewer#\n         */\n        world:              null,\n        /**\n         * Handles coordinate-related functionality - zoom, pan, rotation, etc. Created for each TileSource opened.\n         * @member {OpenSeadragon.Viewport} viewport\n         * @memberof OpenSeadragon.Viewer#\n         */\n        viewport:       null,\n        /**\n         * @member {OpenSeadragon.Navigator} navigator\n         * @memberof OpenSeadragon.Viewer#\n         */\n        navigator:      null,\n\n        //A collection viewport is a separate viewport used to provide\n        //simultaneous rendering of sets of tiles\n        collectionViewport:     null,\n        collectionDrawer:       null,\n\n        //UI image resources\n        //TODO: rename navImages to uiImages\n        navImages:      null,\n\n        //interface button controls\n        buttons:        null,\n\n        //TODO: this is defunct so safely remove it\n        profiler:       null\n\n    }, $.DEFAULT_SETTINGS, options );\n\n    if ( typeof ( this.hash) === \"undefined\" ) {\n        throw new Error(\"A hash must be defined, either by specifying options.id or options.hash.\");\n    }\n    if ( typeof ( THIS[ this.hash ] ) !== \"undefined\" ) {\n        // We don't want to throw an error here, as the user might have discarded\n        // the previous viewer with the same hash and now want to recreate it.\n        $.console.warn(\"Hash \" + this.hash + \" has already been used.\");\n    }\n\n    //Private state properties\n    THIS[ this.hash ] = {\n        \"fsBoundsDelta\":     new $.Point( 1, 1 ),\n        \"prevContainerSize\": null,\n        \"animating\":         false,\n        \"forceRedraw\":       false,\n        \"mouseInside\":       false,\n        \"group\":             null,\n        // whether we should be continuously zooming\n        \"zooming\":           false,\n        // how much we should be continuously zooming by\n        \"zoomFactor\":        null,\n        \"lastZoomTime\":      null,\n        \"fullPage\":          false,\n        \"onfullscreenchange\": null\n    };\n\n    this._sequenceIndex = 0;\n    this._firstOpen = true;\n    this._updateRequestId = null;\n    this._loadQueue = [];\n    this.currentOverlays = [];\n\n    this._lastScrollTime = $.now(); // variable used to help normalize the scroll event speed of different devices\n\n    //Inherit some behaviors and properties\n    $.EventSource.call( this );\n\n    this.addHandler( 'open-failed', function ( event ) {\n        var msg = $.getString( \"Errors.OpenFailed\", event.eventSource, event.message);\n        _this._showMessage( msg );\n    });\n\n    $.ControlDock.call( this, options );\n\n    //Deal with tile sources\n    if (this.xmlPath) {\n        //Deprecated option.  Now it is preferred to use the tileSources option\n        this.tileSources = [ this.xmlPath ];\n    }\n\n    this.element              = this.element || document.getElementById( this.id );\n    this.canvas               = $.makeNeutralElement( \"div\" );\n\n    this.canvas.className = \"openseadragon-canvas\";\n    (function( style ){\n        style.width    = \"100%\";\n        style.height   = \"100%\";\n        style.overflow = \"hidden\";\n        style.position = \"absolute\";\n        style.top      = \"0px\";\n        style.left     = \"0px\";\n    }(this.canvas.style));\n    $.setElementTouchActionNone( this.canvas );\n    if (options.tabIndex !== \"\") {\n        this.canvas.tabIndex = (options.tabIndex === undefined ? 0 : options.tabIndex);\n    }\n\n    //the container is created through applying the ControlDock constructor above\n    this.container.className = \"openseadragon-container\";\n    (function( style ){\n        style.width     = \"100%\";\n        style.height    = \"100%\";\n        style.position  = \"relative\";\n        style.overflow  = \"hidden\";\n        style.left      = \"0px\";\n        style.top       = \"0px\";\n        style.textAlign = \"left\";  // needed to protect against\n    }( this.container.style ));\n\n    this.container.insertBefore( this.canvas, this.container.firstChild );\n    this.element.appendChild( this.container );\n\n    //Used for toggling between fullscreen and default container size\n    //TODO: these can be closure private and shared across Viewer\n    //      instances.\n    this.bodyWidth      = document.body.style.width;\n    this.bodyHeight     = document.body.style.height;\n    this.bodyOverflow   = document.body.style.overflow;\n    this.docOverflow    = document.documentElement.style.overflow;\n\n    this.innerTracker = new $.MouseTracker({\n        element:                  this.canvas,\n        startDisabled:            !this.mouseNavEnabled,\n        clickTimeThreshold:       this.clickTimeThreshold,\n        clickDistThreshold:       this.clickDistThreshold,\n        dblClickTimeThreshold:    this.dblClickTimeThreshold,\n        dblClickDistThreshold:    this.dblClickDistThreshold,\n        keyDownHandler:           $.delegate( this, onCanvasKeyDown ),\n        keyHandler:               $.delegate( this, onCanvasKeyPress ),\n        clickHandler:             $.delegate( this, onCanvasClick ),\n        dblClickHandler:          $.delegate( this, onCanvasDblClick ),\n        dragHandler:              $.delegate( this, onCanvasDrag ),\n        dragEndHandler:           $.delegate( this, onCanvasDragEnd ),\n        enterHandler:             $.delegate( this, onCanvasEnter ),\n        exitHandler:              $.delegate( this, onCanvasExit ),\n        pressHandler:             $.delegate( this, onCanvasPress ),\n        releaseHandler:           $.delegate( this, onCanvasRelease ),\n        nonPrimaryPressHandler:   $.delegate( this, onCanvasNonPrimaryPress ),\n        nonPrimaryReleaseHandler: $.delegate( this, onCanvasNonPrimaryRelease ),\n        scrollHandler:            $.delegate( this, onCanvasScroll ),\n        pinchHandler:             $.delegate( this, onCanvasPinch )\n    });\n\n    this.outerTracker = new $.MouseTracker({\n        element:               this.container,\n        startDisabled:         !this.mouseNavEnabled,\n        clickTimeThreshold:    this.clickTimeThreshold,\n        clickDistThreshold:    this.clickDistThreshold,\n        dblClickTimeThreshold: this.dblClickTimeThreshold,\n        dblClickDistThreshold: this.dblClickDistThreshold,\n        enterHandler:          $.delegate( this, onContainerEnter ),\n        exitHandler:           $.delegate( this, onContainerExit )\n    });\n\n    if( this.toolbar ){\n        this.toolbar = new $.ControlDock({ element: this.toolbar });\n    }\n\n    this.bindStandardControls();\n\n    THIS[ this.hash ].prevContainerSize = _getSafeElemSize( this.container );\n\n    // Create the world\n    this.world = new $.World({\n        viewer: this\n    });\n\n    this.world.addHandler('add-item', function(event) {\n        // For backwards compatibility, we maintain the source property\n        _this.source = _this.world.getItemAt(0).source;\n\n        THIS[ _this.hash ].forceRedraw = true;\n\n        if (!_this._updateRequestId) {\n            _this._updateRequestId = scheduleUpdate( _this, updateMulti );\n        }\n    });\n\n    this.world.addHandler('remove-item', function(event) {\n        // For backwards compatibility, we maintain the source property\n        if (_this.world.getItemCount()) {\n            _this.source = _this.world.getItemAt(0).source;\n        } else {\n            _this.source = null;\n        }\n\n        THIS[ _this.hash ].forceRedraw = true;\n    });\n\n    this.world.addHandler('metrics-change', function(event) {\n        if (_this.viewport) {\n            _this.viewport._setContentBounds(_this.world.getHomeBounds(), _this.world.getContentFactor());\n        }\n    });\n\n    this.world.addHandler('item-index-change', function(event) {\n        // For backwards compatibility, we maintain the source property\n        _this.source = _this.world.getItemAt(0).source;\n    });\n\n    // Create the viewport\n    this.viewport = new $.Viewport({\n        containerSize:      THIS[ this.hash ].prevContainerSize,\n        springStiffness:    this.springStiffness,\n        animationTime:      this.animationTime,\n        minZoomImageRatio:  this.minZoomImageRatio,\n        maxZoomPixelRatio:  this.maxZoomPixelRatio,\n        visibilityRatio:    this.visibilityRatio,\n        wrapHorizontal:     this.wrapHorizontal,\n        wrapVertical:       this.wrapVertical,\n        defaultZoomLevel:   this.defaultZoomLevel,\n        minZoomLevel:       this.minZoomLevel,\n        maxZoomLevel:       this.maxZoomLevel,\n        viewer:             this,\n        degrees:            this.degrees,\n        flipped:            this.flipped,\n        navigatorRotate:    this.navigatorRotate,\n        homeFillsViewer:    this.homeFillsViewer,\n        margins:            this.viewportMargins\n    });\n\n    this.viewport._setContentBounds(this.world.getHomeBounds(), this.world.getContentFactor());\n\n    // Create the image loader\n    this.imageLoader = new $.ImageLoader({\n        jobLimit: this.imageLoaderLimit,\n        timeout: options.timeout\n    });\n\n    // Create the tile cache\n    this.tileCache = new $.TileCache({\n        maxImageCacheCount: this.maxImageCacheCount\n    });\n\n    // Create the drawer\n    this.drawer = new $.Drawer({\n        viewer:             this,\n        viewport:           this.viewport,\n        element:            this.canvas,\n        debugGridColor:     this.debugGridColor\n    });\n\n    // Overlay container\n    this.overlaysContainer    = $.makeNeutralElement( \"div\" );\n    this.canvas.appendChild( this.overlaysContainer );\n\n    // Now that we have a drawer, see if it supports rotate. If not we need to remove the rotate buttons\n    if (!this.drawer.canRotate()) {\n        // Disable/remove the rotate left/right buttons since they aren't supported\n        if (this.rotateLeft) {\n            i = this.buttons.buttons.indexOf(this.rotateLeft);\n            this.buttons.buttons.splice(i, 1);\n            this.buttons.element.removeChild(this.rotateLeft.element);\n        }\n        if (this.rotateRight) {\n            i = this.buttons.buttons.indexOf(this.rotateRight);\n            this.buttons.buttons.splice(i, 1);\n            this.buttons.element.removeChild(this.rotateRight.element);\n        }\n    }\n\n    //Instantiate a navigator if configured\n    if ( this.showNavigator){\n        this.navigator = new $.Navigator({\n            id:                this.navigatorId,\n            position:          this.navigatorPosition,\n            sizeRatio:         this.navigatorSizeRatio,\n            maintainSizeRatio: this.navigatorMaintainSizeRatio,\n            top:               this.navigatorTop,\n            left:              this.navigatorLeft,\n            width:             this.navigatorWidth,\n            height:            this.navigatorHeight,\n            autoResize:        this.navigatorAutoResize,\n            autoFade:          this.navigatorAutoFade,\n            prefixUrl:         this.prefixUrl,\n            viewer:            this,\n            navigatorRotate:   this.navigatorRotate,\n            background:        this.navigatorBackground,\n            opacity:           this.navigatorOpacity,\n            borderColor:       this.navigatorBorderColor,\n            displayRegionColor: this.navigatorDisplayRegionColor,\n            crossOriginPolicy: this.crossOriginPolicy\n        });\n    }\n\n    // Sequence mode\n    if (this.sequenceMode) {\n        this.bindSequenceControls();\n    }\n\n    // Open initial tilesources\n    if (this.tileSources) {\n        this.open( this.tileSources );\n    }\n\n    // Add custom controls\n    for ( i = 0; i < this.customControls.length; i++ ) {\n        this.addControl(\n            this.customControls[ i ].id,\n            {anchor: this.customControls[ i ].anchor}\n        );\n    }\n\n    // Initial fade out\n    $.requestAnimationFrame( function(){\n        beginControlsAutoHide( _this );\n    } );\n\n    // Initial canvas options\n    if ( this.imageSmoothingEnabled !== undefined && !this.imageSmoothingEnabled){\n        this.drawer.setImageSmoothingEnabled(this.imageSmoothingEnabled);\n    }\n\n};\n\n$.extend( $.Viewer.prototype, $.EventSource.prototype, $.ControlDock.prototype, /** @lends OpenSeadragon.Viewer.prototype */{\n\n\n    /**\n     * @function\n     * @return {Boolean}\n     */\n    isOpen: function () {\n        return !!this.world.getItemCount();\n    },\n\n    // deprecated\n    openDzi: function ( dzi ) {\n        $.console.error( \"[Viewer.openDzi] this function is deprecated; use Viewer.open() instead.\" );\n        return this.open( dzi );\n    },\n\n    // deprecated\n    openTileSource: function ( tileSource ) {\n        $.console.error( \"[Viewer.openTileSource] this function is deprecated; use Viewer.open() instead.\" );\n        return this.open( tileSource );\n    },\n\n    /**\n     * Open tiled images into the viewer, closing any others.\n     * To get the TiledImage instance created by open, add an event listener for\n     * {@link OpenSeadragon.Viewer.html#.event:open}, which when fired can be used to get access\n     * to the instance, i.e., viewer.world.getItemAt(0).\n     * @function\n     * @param {Array|String|Object|Function} tileSources - This can be a TiledImage\n     * specifier, a TileSource specifier, or an array of either. A TiledImage specifier\n     * is the same as the options parameter for {@link OpenSeadragon.Viewer#addTiledImage},\n     * except for the index property; images are added in sequence.\n     * A TileSource specifier is anything you could pass as the tileSource property\n     * of the options parameter for {@link OpenSeadragon.Viewer#addTiledImage}.\n     * @param {Number} initialPage - If sequenceMode is true, display this page initially\n     * for the given tileSources. If specified, will overwrite the Viewer's existing initialPage property.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:open\n     * @fires OpenSeadragon.Viewer.event:open-failed\n     */\n    open: function (tileSources, initialPage) {\n        var _this = this;\n\n        this.close();\n\n        if (!tileSources) {\n            return;\n        }\n\n        if (this.sequenceMode && $.isArray(tileSources)) {\n            if (this.referenceStrip) {\n                this.referenceStrip.destroy();\n                this.referenceStrip = null;\n            }\n\n            if (typeof initialPage != 'undefined' && !isNaN(initialPage)) {\n              this.initialPage = initialPage;\n            }\n\n            this.tileSources = tileSources;\n            this._sequenceIndex = Math.max(0, Math.min(this.tileSources.length - 1, this.initialPage));\n            if (this.tileSources.length) {\n                this.open(this.tileSources[this._sequenceIndex]);\n\n                if ( this.showReferenceStrip ){\n                    this.addReferenceStrip();\n                }\n            }\n\n            this._updateSequenceButtons( this._sequenceIndex );\n            return;\n        }\n\n        if (!$.isArray(tileSources)) {\n            tileSources = [tileSources];\n        }\n\n        if (!tileSources.length) {\n            return;\n        }\n\n        this._opening = true;\n\n        var expected = tileSources.length;\n        var successes = 0;\n        var failures = 0;\n        var failEvent;\n\n        var checkCompletion = function() {\n            if (successes + failures === expected) {\n                if (successes) {\n                    if (_this._firstOpen || !_this.preserveViewport) {\n                        _this.viewport.goHome( true );\n                        _this.viewport.update();\n                    }\n\n                    _this._firstOpen = false;\n\n                    var source = tileSources[0];\n                    if (source.tileSource) {\n                        source = source.tileSource;\n                    }\n\n                    // Global overlays\n                    if( _this.overlays && !_this.preserveOverlays ){\n                        for ( var i = 0; i < _this.overlays.length; i++ ) {\n                            _this.currentOverlays[ i ] = getOverlayObject( _this, _this.overlays[ i ] );\n                        }\n                    }\n\n                    _this._drawOverlays();\n                    _this._opening = false;\n\n                    /**\n                     * Raised when the viewer has opened and loaded one or more TileSources.\n                     *\n                     * @event open\n                     * @memberof OpenSeadragon.Viewer\n                     * @type {object}\n                     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n                     * @property {OpenSeadragon.TileSource} source - The tile source that was opened.\n                     * @property {?Object} userData - Arbitrary subscriber-defined object.\n                     */\n                    // TODO: what if there are multiple sources?\n                    _this.raiseEvent( 'open', { source: source } );\n                } else {\n                    _this._opening = false;\n\n                    /**\n                     * Raised when an error occurs loading a TileSource.\n                     *\n                     * @event open-failed\n                     * @memberof OpenSeadragon.Viewer\n                     * @type {object}\n                     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n                     * @property {String} message - Information about what failed.\n                     * @property {String} source - The tile source that failed.\n                     * @property {?Object} userData - Arbitrary subscriber-defined object.\n                     */\n                    _this.raiseEvent( 'open-failed', failEvent );\n                }\n            }\n        };\n\n        var doOne = function(options) {\n            if (!$.isPlainObject(options) || !options.tileSource) {\n                options = {\n                    tileSource: options\n                };\n            }\n\n            if (options.index !== undefined) {\n                $.console.error('[Viewer.open] setting indexes here is not supported; use addTiledImage instead');\n                delete options.index;\n            }\n\n            if (options.collectionImmediately === undefined) {\n                options.collectionImmediately = true;\n            }\n\n            var originalSuccess = options.success;\n            options.success = function(event) {\n                successes++;\n\n                // TODO: now that options has other things besides tileSource, the overlays\n                // should probably be at the options level, not the tileSource level.\n                if (options.tileSource.overlays) {\n                    for (var i = 0; i < options.tileSource.overlays.length; i++) {\n                        _this.addOverlay(options.tileSource.overlays[i]);\n                    }\n                }\n\n                if (originalSuccess) {\n                    originalSuccess(event);\n                }\n\n                checkCompletion();\n            };\n\n            var originalError = options.error;\n            options.error = function(event) {\n                failures++;\n\n                if (!failEvent) {\n                    failEvent = event;\n                }\n\n                if (originalError) {\n                    originalError(event);\n                }\n\n                checkCompletion();\n            };\n\n            _this.addTiledImage(options);\n        };\n\n        // TileSources\n        for (var i = 0; i < tileSources.length; i++) {\n            doOne(tileSources[i]);\n        }\n\n        return this;\n    },\n\n\n    /**\n     * @function\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:close\n     */\n    close: function ( ) {\n        if ( !THIS[ this.hash ] ) {\n            //this viewer has already been destroyed: returning immediately\n            return this;\n        }\n\n        this._opening = false;\n\n        if ( this.navigator ) {\n            this.navigator.close();\n        }\n\n        if (!this.preserveOverlays) {\n            this.clearOverlays();\n            this.overlaysContainer.innerHTML = \"\";\n        }\n\n        THIS[ this.hash ].animating = false;\n        this.world.removeAll();\n        this.imageLoader.clear();\n\n        /**\n         * Raised when the viewer is closed (see {@link OpenSeadragon.Viewer#close}).\n         *\n         * @event close\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'close' );\n\n        return this;\n    },\n\n\n    /**\n     * Function to destroy the viewer and clean up everything created by OpenSeadragon.\n     *\n     * Example:\n     * var viewer = OpenSeadragon({\n     *   [...]\n     * });\n     *\n     * //when you are done with the viewer:\n     * viewer.destroy();\n     * viewer = null; //important\n     *\n     * @function\n     */\n    destroy: function( ) {\n        if ( !THIS[ this.hash ] ) {\n            //this viewer has already been destroyed: returning immediately\n            return;\n        }\n\n        this.close();\n\n        this.clearOverlays();\n        this.overlaysContainer.innerHTML = \"\";\n\n        //TODO: implement this...\n        //this.unbindSequenceControls()\n        //this.unbindStandardControls()\n\n        if (this.referenceStrip) {\n            this.referenceStrip.destroy();\n            this.referenceStrip = null;\n        }\n\n        if ( this._updateRequestId !== null ) {\n            $.cancelAnimationFrame( this._updateRequestId );\n            this._updateRequestId = null;\n        }\n\n        if ( this.drawer ) {\n            this.drawer.destroy();\n        }\n\n        this.removeAllHandlers();\n\n        // Go through top element (passed to us) and remove all children\n        // Use removeChild to make sure it handles SVG or any non-html\n        // also it performs better - http://jsperf.com/innerhtml-vs-removechild/15\n        if (this.element){\n            while (this.element.firstChild) {\n                this.element.removeChild(this.element.firstChild);\n            }\n        }\n\n        // destroy the mouse trackers\n        if (this.innerTracker){\n            this.innerTracker.destroy();\n        }\n        if (this.outerTracker){\n            this.outerTracker.destroy();\n        }\n\n        THIS[ this.hash ] = null;\n        delete THIS[ this.hash ];\n\n        // clear all our references to dom objects\n        this.canvas = null;\n        this.container = null;\n\n        // clear our reference to the main element - they will need to pass it in again, creating a new viewer\n        this.element = null;\n    },\n\n    /**\n     * @function\n     * @return {Boolean}\n     */\n    isMouseNavEnabled: function () {\n        return this.innerTracker.isTracking();\n    },\n\n    /**\n     * @function\n     * @param {Boolean} enabled - true to enable, false to disable\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:mouse-enabled\n     */\n    setMouseNavEnabled: function( enabled ){\n        this.innerTracker.setTracking( enabled );\n        this.outerTracker.setTracking( enabled );\n        /**\n         * Raised when mouse/touch navigation is enabled or disabled (see {@link OpenSeadragon.Viewer#setMouseNavEnabled}).\n         *\n         * @event mouse-enabled\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Boolean} enabled\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'mouse-enabled', { enabled: enabled } );\n        return this;\n    },\n\n\n    /**\n     * @function\n     * @return {Boolean}\n     */\n    areControlsEnabled: function () {\n        var enabled = this.controls.length,\n            i;\n        for( i = 0; i < this.controls.length; i++ ){\n            enabled = enabled && this.controls[ i ].isVisible();\n        }\n        return enabled;\n    },\n\n\n    /**\n     * Shows or hides the controls (e.g. the default navigation buttons).\n     *\n     * @function\n     * @param {Boolean} true to show, false to hide.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:controls-enabled\n     */\n    setControlsEnabled: function( enabled ) {\n        if( enabled ){\n            abortControlsAutoHide( this );\n        } else {\n            beginControlsAutoHide( this );\n        }\n        /**\n         * Raised when the navigation controls are shown or hidden (see {@link OpenSeadragon.Viewer#setControlsEnabled}).\n         *\n         * @event controls-enabled\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Boolean} enabled\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'controls-enabled', { enabled: enabled } );\n        return this;\n    },\n\n    /**\n     * Turns debugging mode on or off for this viewer.\n     *\n     * @function\n     * @param {Boolean} true to turn debug on, false to turn debug off.\n     */\n    setDebugMode: function(debugMode){\n\n        for (var i = 0; i < this.world.getItemCount(); i++) {\n            this.world.getItemAt(i).debugMode = debugMode;\n        }\n\n        this.debugMode = debugMode;\n        this.forceRedraw();\n    },\n\n    /**\n     * @function\n     * @return {Boolean}\n     */\n    isFullPage: function () {\n        return THIS[ this.hash ].fullPage;\n    },\n\n\n    /**\n     * Toggle full page mode.\n     * @function\n     * @param {Boolean} fullPage\n     *      If true, enter full page mode.  If false, exit full page mode.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:pre-full-page\n     * @fires OpenSeadragon.Viewer.event:full-page\n     */\n    setFullPage: function( fullPage ) {\n\n        var body = document.body,\n            bodyStyle = body.style,\n            docStyle = document.documentElement.style,\n            _this = this,\n            nodes,\n            i;\n\n        //don't bother modifying the DOM if we are already in full page mode.\n        if ( fullPage == this.isFullPage() ) {\n            return this;\n        }\n\n        var fullPageEventArgs = {\n            fullPage: fullPage,\n            preventDefaultAction: false\n        };\n        /**\n         * Raised when the viewer is about to change to/from full-page mode (see {@link OpenSeadragon.Viewer#setFullPage}).\n         *\n         * @event pre-full-page\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Boolean} fullPage - True if entering full-page mode, false if exiting full-page mode.\n         * @property {Boolean} preventDefaultAction - Set to true to prevent full-page mode change. Default: false.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'pre-full-page', fullPageEventArgs );\n        if ( fullPageEventArgs.preventDefaultAction ) {\n            return this;\n        }\n\n        if ( fullPage ) {\n\n            this.elementSize = $.getElementSize( this.element );\n            this.pageScroll = $.getPageScroll();\n\n            this.elementMargin = this.element.style.margin;\n            this.element.style.margin = \"0\";\n            this.elementPadding = this.element.style.padding;\n            this.element.style.padding = \"0\";\n\n            this.bodyMargin = bodyStyle.margin;\n            this.docMargin = docStyle.margin;\n            bodyStyle.margin = \"0\";\n            docStyle.margin = \"0\";\n\n            this.bodyPadding = bodyStyle.padding;\n            this.docPadding = docStyle.padding;\n            bodyStyle.padding = \"0\";\n            docStyle.padding = \"0\";\n\n            this.bodyWidth = bodyStyle.width;\n            this.docWidth = docStyle.width;\n            bodyStyle.width = \"100%\";\n            docStyle.width = \"100%\";\n\n            this.bodyHeight = bodyStyle.height;\n            this.docHeight = docStyle.height;\n            bodyStyle.height = \"100%\";\n            docStyle.height = \"100%\";\n\n            //when entering full screen on the ipad it wasn't sufficient to leave\n            //the body intact as only only the top half of the screen would\n            //respond to touch events on the canvas, while the bottom half treated\n            //them as touch events on the document body.  Thus we remove and store\n            //the bodies elements and replace them when we leave full screen.\n            this.previousBody = [];\n            THIS[ this.hash ].prevElementParent = this.element.parentNode;\n            THIS[ this.hash ].prevNextSibling = this.element.nextSibling;\n            THIS[ this.hash ].prevElementWidth = this.element.style.width;\n            THIS[ this.hash ].prevElementHeight = this.element.style.height;\n            nodes = body.childNodes.length;\n            for ( i = 0; i < nodes; i++ ) {\n                this.previousBody.push( body.childNodes[ 0 ] );\n                body.removeChild( body.childNodes[ 0 ] );\n            }\n\n            //If we've got a toolbar, we need to enable the user to use css to\n            //preserve it in fullpage mode\n            if ( this.toolbar && this.toolbar.element ) {\n                //save a reference to the parent so we can put it back\n                //in the long run we need a better strategy\n                this.toolbar.parentNode = this.toolbar.element.parentNode;\n                this.toolbar.nextSibling = this.toolbar.element.nextSibling;\n                body.appendChild( this.toolbar.element );\n\n                //Make sure the user has some ability to style the toolbar based\n                //on the mode\n                $.addClass( this.toolbar.element, 'fullpage' );\n            }\n\n            $.addClass( this.element, 'fullpage' );\n            body.appendChild( this.element );\n\n            this.element.style.height = $.getWindowSize().y + 'px';\n            this.element.style.width = $.getWindowSize().x + 'px';\n\n            if ( this.toolbar && this.toolbar.element ) {\n                this.element.style.height = (\n                    $.getElementSize( this.element ).y - $.getElementSize( this.toolbar.element ).y\n                ) + 'px';\n            }\n\n            THIS[ this.hash ].fullPage = true;\n\n            // mouse will be inside container now\n            $.delegate( this, onContainerEnter )( {} );\n\n        } else {\n\n            this.element.style.margin = this.elementMargin;\n            this.element.style.padding = this.elementPadding;\n\n            bodyStyle.margin = this.bodyMargin;\n            docStyle.margin = this.docMargin;\n\n            bodyStyle.padding = this.bodyPadding;\n            docStyle.padding = this.docPadding;\n\n            bodyStyle.width = this.bodyWidth;\n            docStyle.width = this.docWidth;\n\n            bodyStyle.height = this.bodyHeight;\n            docStyle.height = this.docHeight;\n\n            body.removeChild( this.element );\n            nodes = this.previousBody.length;\n            for ( i = 0; i < nodes; i++ ) {\n                body.appendChild( this.previousBody.shift() );\n            }\n\n            $.removeClass( this.element, 'fullpage' );\n            THIS[ this.hash ].prevElementParent.insertBefore(\n                this.element,\n                THIS[ this.hash ].prevNextSibling\n            );\n\n            //If we've got a toolbar, we need to enable the user to use css to\n            //reset it to its original state\n            if ( this.toolbar && this.toolbar.element ) {\n                body.removeChild( this.toolbar.element );\n\n                //Make sure the user has some ability to style the toolbar based\n                //on the mode\n                $.removeClass( this.toolbar.element, 'fullpage' );\n\n                this.toolbar.parentNode.insertBefore(\n                    this.toolbar.element,\n                    this.toolbar.nextSibling\n                );\n                delete this.toolbar.parentNode;\n                delete this.toolbar.nextSibling;\n            }\n\n            this.element.style.width = THIS[ this.hash ].prevElementWidth;\n            this.element.style.height = THIS[ this.hash ].prevElementHeight;\n\n            // After exiting fullPage or fullScreen, it can take some time\n            // before the browser can actually set the scroll.\n            var restoreScrollCounter = 0;\n            var restoreScroll = function() {\n                $.setPageScroll( _this.pageScroll );\n                var pageScroll = $.getPageScroll();\n                restoreScrollCounter++;\n                if (restoreScrollCounter < 10 &&\n                    (pageScroll.x !== _this.pageScroll.x ||\n                    pageScroll.y !== _this.pageScroll.y)) {\n                    $.requestAnimationFrame( restoreScroll );\n                }\n            };\n            $.requestAnimationFrame( restoreScroll );\n\n            THIS[ this.hash ].fullPage = false;\n\n            // mouse will likely be outside now\n            $.delegate( this, onContainerExit )( { } );\n\n        }\n\n        if ( this.navigator && this.viewport ) {\n            this.navigator.update( this.viewport );\n        }\n\n        /**\n         * Raised when the viewer has changed to/from full-page mode (see {@link OpenSeadragon.Viewer#setFullPage}).\n         *\n         * @event full-page\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Boolean} fullPage - True if changed to full-page mode, false if exited full-page mode.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'full-page', { fullPage: fullPage } );\n\n        return this;\n    },\n\n    /**\n     * Toggle full screen mode if supported. Toggle full page mode otherwise.\n     * @function\n     * @param {Boolean} fullScreen\n     *      If true, enter full screen mode.  If false, exit full screen mode.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:pre-full-screen\n     * @fires OpenSeadragon.Viewer.event:full-screen\n     */\n    setFullScreen: function( fullScreen ) {\n        var _this = this;\n\n        if ( !$.supportsFullScreen ) {\n            return this.setFullPage( fullScreen );\n        }\n\n        if ( $.isFullScreen() === fullScreen ) {\n            return this;\n        }\n\n        var fullScreeEventArgs = {\n            fullScreen: fullScreen,\n            preventDefaultAction: false\n        };\n        /**\n         * Raised when the viewer is about to change to/from full-screen mode (see {@link OpenSeadragon.Viewer#setFullScreen}).\n         * Note: the pre-full-screen event is not raised when the user is exiting\n         * full-screen mode by pressing the Esc key. In that case, consider using\n         * the full-screen, pre-full-page or full-page events.\n         *\n         * @event pre-full-screen\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Boolean} fullScreen - True if entering full-screen mode, false if exiting full-screen mode.\n         * @property {Boolean} preventDefaultAction - Set to true to prevent full-screen mode change. Default: false.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'pre-full-screen', fullScreeEventArgs );\n        if ( fullScreeEventArgs.preventDefaultAction ) {\n            return this;\n        }\n\n        if ( fullScreen ) {\n\n            this.setFullPage( true );\n            // If the full page mode is not actually entered, we need to prevent\n            // the full screen mode.\n            if ( !this.isFullPage() ) {\n                return this;\n            }\n\n            this.fullPageStyleWidth = this.element.style.width;\n            this.fullPageStyleHeight = this.element.style.height;\n            this.element.style.width = '100%';\n            this.element.style.height = '100%';\n\n            var onFullScreenChange = function() {\n                var isFullScreen = $.isFullScreen();\n                if ( !isFullScreen ) {\n                    $.removeEvent( document, $.fullScreenEventName, onFullScreenChange );\n                    $.removeEvent( document, $.fullScreenErrorEventName, onFullScreenChange );\n\n                    _this.setFullPage( false );\n                    if ( _this.isFullPage() ) {\n                        _this.element.style.width = _this.fullPageStyleWidth;\n                        _this.element.style.height = _this.fullPageStyleHeight;\n                    }\n                }\n                if ( _this.navigator && _this.viewport ) {\n                    //09/08/2018 - Fabroh : Fix issue #1504 : Ensure to get the navigator updated on fullscreen out with custom location with a timeout\n                    setTimeout(function(){\n                        _this.navigator.update( _this.viewport );\n                    });\n                }\n                /**\n                 * Raised when the viewer has changed to/from full-screen mode (see {@link OpenSeadragon.Viewer#setFullScreen}).\n                 *\n                 * @event full-screen\n                 * @memberof OpenSeadragon.Viewer\n                 * @type {object}\n                 * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n                 * @property {Boolean} fullScreen - True if changed to full-screen mode, false if exited full-screen mode.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( 'full-screen', { fullScreen: isFullScreen } );\n            };\n            $.addEvent( document, $.fullScreenEventName, onFullScreenChange );\n            $.addEvent( document, $.fullScreenErrorEventName, onFullScreenChange );\n\n            $.requestFullScreen( document.body );\n\n        } else {\n            $.exitFullScreen();\n        }\n        return this;\n    },\n\n    /**\n     * @function\n     * @return {Boolean}\n     */\n    isVisible: function () {\n        return this.container.style.visibility != \"hidden\";\n    },\n\n\n    /**\n     * @function\n     * @param {Boolean} visible\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:visible\n     */\n    setVisible: function( visible ){\n        this.container.style.visibility = visible ? \"\" : \"hidden\";\n        /**\n         * Raised when the viewer is shown or hidden (see {@link OpenSeadragon.Viewer#setVisible}).\n         *\n         * @event visible\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Boolean} visible\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'visible', { visible: visible } );\n        return this;\n    },\n\n    /**\n     * Add a tiled image to the viewer.\n     * options.tileSource can be anything that {@link OpenSeadragon.Viewer#open}\n     *  supports except arrays of images.\n     * Note that you can specify options.width or options.height, but not both.\n     * The other dimension will be calculated according to the item's aspect ratio.\n     * If collectionMode is on (see {@link OpenSeadragon.Options}), the new image is\n     * automatically arranged with the others.\n     * @function\n     * @param {Object} options\n     * @param {String|Object|Function} options.tileSource - The TileSource specifier.\n     * A String implies a url used to determine the tileSource implementation\n     *      based on the file extension of url. JSONP is implied by *.js,\n     *      otherwise the url is retrieved as text and the resulting text is\n     *      introspected to determine if its json, xml, or text and parsed.\n     * An Object implies an inline configuration which has a single\n     *      property sufficient for being able to determine tileSource\n     *      implementation. If the object has a property which is a function\n     *      named 'getTileUrl', it is treated as a custom TileSource.\n     * @param {Number} [options.index] The index of the item. Added on top of\n     * all other items if not specified.\n     * @param {Boolean} [options.replace=false] If true, the item at options.index will be\n     * removed and the new item is added in its place. options.tileSource will be\n     * interpreted and fetched if necessary before the old item is removed to avoid leaving\n     * a gap in the world.\n     * @param {Number} [options.x=0] The X position for the image in viewport coordinates.\n     * @param {Number} [options.y=0] The Y position for the image in viewport coordinates.\n     * @param {Number} [options.width=1] The width for the image in viewport coordinates.\n     * @param {Number} [options.height] The height for the image in viewport coordinates.\n     * @param {OpenSeadragon.Rect} [options.fitBounds] The bounds in viewport coordinates\n     * to fit the image into. If specified, x, y, width and height get ignored.\n     * @param {OpenSeadragon.Placement} [options.fitBoundsPlacement=OpenSeadragon.Placement.CENTER]\n     * How to anchor the image in the bounds if options.fitBounds is set.\n     * @param {OpenSeadragon.Rect} [options.clip] - An area, in image pixels, to clip to\n     * (portions of the image outside of this area will not be visible). Only works on\n     * browsers that support the HTML5 canvas.\n     * @param {Number} [options.opacity=1] Proportional opacity of the tiled images (1=opaque, 0=hidden)\n     * @param {Boolean} [options.preload=false]  Default switch for loading hidden images (true loads, false blocks)\n     * @param {Number} [options.degrees=0] Initial rotation of the tiled image around\n     * its top left corner in degrees.\n     * @param {String} [options.compositeOperation] How the image is composited onto other images.\n     * @param {String} [options.crossOriginPolicy] The crossOriginPolicy for this specific image,\n     * overriding viewer.crossOriginPolicy.\n     * @param {Boolean} [options.ajaxWithCredentials] Whether to set withCredentials on tile AJAX\n     * @param {Boolean} [options.loadTilesWithAjax]\n     *      Whether to load tile data using AJAX requests.\n     *      Defaults to the setting in {@link OpenSeadragon.Options}.\n     * @param {Object} [options.ajaxHeaders]\n     *      A set of headers to include when making tile AJAX requests.\n     *      Note that these headers will be merged over any headers specified in {@link OpenSeadragon.Options}.\n     *      Specifying a falsy value for a header will clear its existing value set at the Viewer level (if any).\n     * requests.\n     * @param {Function} [options.success] A function that gets called when the image is\n     * successfully added. It's passed the event object which contains a single property:\n     * \"item\", which is the resulting instance of TiledImage.\n     * @param {Function} [options.error] A function that gets called if the image is\n     * unable to be added. It's passed the error event object, which contains \"message\"\n     * and \"source\" properties.\n     * @param {Boolean} [options.collectionImmediately=false] If collectionMode is on,\n     * specifies whether to snap to the new arrangement immediately or to animate to it.\n     * @param {String|CanvasGradient|CanvasPattern|Function} [options.placeholderFillStyle] - See {@link OpenSeadragon.Options}.\n     * @fires OpenSeadragon.World.event:add-item\n     * @fires OpenSeadragon.Viewer.event:add-item-failed\n     */\n    addTiledImage: function( options ) {\n        $.console.assert(options, \"[Viewer.addTiledImage] options is required\");\n        $.console.assert(options.tileSource, \"[Viewer.addTiledImage] options.tileSource is required\");\n        $.console.assert(!options.replace || (options.index > -1 && options.index < this.world.getItemCount()),\n            \"[Viewer.addTiledImage] if options.replace is used, options.index must be a valid index in Viewer.world\");\n\n        var _this = this;\n\n        if (options.replace) {\n            options.replaceItem = _this.world.getItemAt(options.index);\n        }\n\n        this._hideMessage();\n\n        if (options.placeholderFillStyle === undefined) {\n            options.placeholderFillStyle = this.placeholderFillStyle;\n        }\n        if (options.opacity === undefined) {\n            options.opacity = this.opacity;\n        }\n        if (options.preload === undefined) {\n            options.preload = this.preload;\n        }\n        if (options.compositeOperation === undefined) {\n            options.compositeOperation = this.compositeOperation;\n        }\n        if (options.crossOriginPolicy === undefined) {\n            options.crossOriginPolicy = options.tileSource.crossOriginPolicy !== undefined ? options.tileSource.crossOriginPolicy : this.crossOriginPolicy;\n        }\n        if (options.ajaxWithCredentials === undefined) {\n            options.ajaxWithCredentials = this.ajaxWithCredentials;\n        }\n        if (options.loadTilesWithAjax === undefined) {\n            options.loadTilesWithAjax = this.loadTilesWithAjax;\n        }\n        if (options.ajaxHeaders === undefined || options.ajaxHeaders === null) {\n            options.ajaxHeaders = this.ajaxHeaders;\n        } else if ($.isPlainObject(options.ajaxHeaders) && $.isPlainObject(this.ajaxHeaders)) {\n            options.ajaxHeaders = $.extend({}, this.ajaxHeaders, options.ajaxHeaders);\n        }\n\n        var myQueueItem = {\n            options: options\n        };\n\n        function raiseAddItemFailed( event ) {\n            for (var i = 0; i < _this._loadQueue.length; i++) {\n                if (_this._loadQueue[i] === myQueueItem) {\n                    _this._loadQueue.splice(i, 1);\n                    break;\n                }\n            }\n\n            if (_this._loadQueue.length === 0) {\n                refreshWorld(myQueueItem);\n            }\n\n             /**\n             * Raised when an error occurs while adding a item.\n             * @event add-item-failed\n             * @memberOf OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n             * @property {String} message\n             * @property {String} source\n             * @property {Object} options The options passed to the addTiledImage method.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            _this.raiseEvent( 'add-item-failed', event );\n\n            if (options.error) {\n                options.error(event);\n            }\n        }\n\n        function refreshWorld(theItem) {\n            if (_this.collectionMode) {\n                _this.world.arrange({\n                    immediately: theItem.options.collectionImmediately,\n                    rows: _this.collectionRows,\n                    columns: _this.collectionColumns,\n                    layout: _this.collectionLayout,\n                    tileSize: _this.collectionTileSize,\n                    tileMargin: _this.collectionTileMargin\n                });\n                _this.world.setAutoRefigureSizes(true);\n            }\n        }\n\n        if ($.isArray(options.tileSource)) {\n            setTimeout(function() {\n                raiseAddItemFailed({\n                    message: \"[Viewer.addTiledImage] Sequences can not be added; add them one at a time instead.\",\n                    source: options.tileSource,\n                    options: options\n                });\n            });\n            return;\n        }\n\n        this._loadQueue.push(myQueueItem);\n\n        function processReadyItems() {\n            var queueItem, tiledImage, optionsClone;\n            while (_this._loadQueue.length) {\n                queueItem = _this._loadQueue[0];\n                if (!queueItem.tileSource) {\n                    break;\n                }\n\n                _this._loadQueue.splice(0, 1);\n\n                if (queueItem.options.replace) {\n                    var newIndex = _this.world.getIndexOfItem(queueItem.options.replaceItem);\n                    if (newIndex != -1) {\n                        queueItem.options.index = newIndex;\n                    }\n                    _this.world.removeItem(queueItem.options.replaceItem);\n                }\n\n                tiledImage = new $.TiledImage({\n                    viewer: _this,\n                    source: queueItem.tileSource,\n                    viewport: _this.viewport,\n                    drawer: _this.drawer,\n                    tileCache: _this.tileCache,\n                    imageLoader: _this.imageLoader,\n                    x: queueItem.options.x,\n                    y: queueItem.options.y,\n                    width: queueItem.options.width,\n                    height: queueItem.options.height,\n                    fitBounds: queueItem.options.fitBounds,\n                    fitBoundsPlacement: queueItem.options.fitBoundsPlacement,\n                    clip: queueItem.options.clip,\n                    placeholderFillStyle: queueItem.options.placeholderFillStyle,\n                    opacity: queueItem.options.opacity,\n                    preload: queueItem.options.preload,\n                    degrees: queueItem.options.degrees,\n                    compositeOperation: queueItem.options.compositeOperation,\n                    springStiffness: _this.springStiffness,\n                    animationTime: _this.animationTime,\n                    minZoomImageRatio: _this.minZoomImageRatio,\n                    wrapHorizontal: _this.wrapHorizontal,\n                    wrapVertical: _this.wrapVertical,\n                    immediateRender: _this.immediateRender,\n                    blendTime: _this.blendTime,\n                    alwaysBlend: _this.alwaysBlend,\n                    minPixelRatio: _this.minPixelRatio,\n                    smoothTileEdgesMinZoom: _this.smoothTileEdgesMinZoom,\n                    iOSDevice: _this.iOSDevice,\n                    crossOriginPolicy: queueItem.options.crossOriginPolicy,\n                    ajaxWithCredentials: queueItem.options.ajaxWithCredentials,\n                    loadTilesWithAjax: queueItem.options.loadTilesWithAjax,\n                    ajaxHeaders: queueItem.options.ajaxHeaders,\n                    debugMode: _this.debugMode\n                });\n\n                if (_this.collectionMode) {\n                    _this.world.setAutoRefigureSizes(false);\n                }\n                _this.world.addItem( tiledImage, {\n                    index: queueItem.options.index\n                });\n\n                if (_this._loadQueue.length === 0) {\n                    //this restores the autoRefigureSizes flag to true.\n                    refreshWorld(queueItem);\n                }\n\n                if (_this.world.getItemCount() === 1 && !_this.preserveViewport) {\n                    _this.viewport.goHome(true);\n                }\n\n                if (_this.navigator) {\n                    optionsClone = $.extend({}, queueItem.options, {\n                        replace: false, // navigator already removed the layer, nothing to replace\n                        originalTiledImage: tiledImage,\n                        tileSource: queueItem.tileSource\n                    });\n\n                    _this.navigator.addTiledImage(optionsClone);\n                }\n\n                if (queueItem.options.success) {\n                    queueItem.options.success({\n                        item: tiledImage\n                    });\n                }\n            }\n        }\n\n        getTileSourceImplementation( this, options.tileSource, options, function( tileSource ) {\n\n            myQueueItem.tileSource = tileSource;\n\n            // add everybody at the front of the queue that's ready to go\n            processReadyItems();\n        }, function( event ) {\n            event.options = options;\n            raiseAddItemFailed(event);\n\n            // add everybody at the front of the queue that's ready to go\n            processReadyItems();\n        } );\n    },\n\n    /**\n     * Add a simple image to the viewer.\n     * The options are the same as the ones in {@link OpenSeadragon.Viewer#addTiledImage}\n     * except for options.tileSource which is replaced by options.url.\n     * @function\n     * @param {Object} options - See {@link OpenSeadragon.Viewer#addTiledImage}\n     * for all the options\n     * @param {String} options.url - The URL of the image to add.\n     * @fires OpenSeadragon.World.event:add-item\n     * @fires OpenSeadragon.Viewer.event:add-item-failed\n     */\n    addSimpleImage: function(options) {\n        $.console.assert(options, \"[Viewer.addSimpleImage] options is required\");\n        $.console.assert(options.url, \"[Viewer.addSimpleImage] options.url is required\");\n\n        var opts = $.extend({}, options, {\n            tileSource: {\n                type: 'image',\n                url:  options.url\n            }\n        });\n        delete opts.url;\n        this.addTiledImage(opts);\n    },\n\n    // deprecated\n    addLayer: function( options ) {\n        var _this = this;\n\n        $.console.error( \"[Viewer.addLayer] this function is deprecated; use Viewer.addTiledImage() instead.\" );\n\n        var optionsClone = $.extend({}, options, {\n            success: function(event) {\n                _this.raiseEvent(\"add-layer\", {\n                    options: options,\n                    drawer: event.item\n                });\n            },\n            error: function(event) {\n                _this.raiseEvent(\"add-layer-failed\", event);\n            }\n        });\n\n        this.addTiledImage(optionsClone);\n        return this;\n    },\n\n    // deprecated\n    getLayerAtLevel: function( level ) {\n        $.console.error( \"[Viewer.getLayerAtLevel] this function is deprecated; use World.getItemAt() instead.\" );\n        return this.world.getItemAt(level);\n    },\n\n    // deprecated\n    getLevelOfLayer: function( drawer ) {\n        $.console.error( \"[Viewer.getLevelOfLayer] this function is deprecated; use World.getIndexOfItem() instead.\" );\n        return this.world.getIndexOfItem(drawer);\n    },\n\n    // deprecated\n    getLayersCount: function() {\n        $.console.error( \"[Viewer.getLayersCount] this function is deprecated; use World.getItemCount() instead.\" );\n        return this.world.getItemCount();\n    },\n\n    // deprecated\n    setLayerLevel: function( drawer, level ) {\n        $.console.error( \"[Viewer.setLayerLevel] this function is deprecated; use World.setItemIndex() instead.\" );\n        return this.world.setItemIndex(drawer, level);\n    },\n\n    // deprecated\n    removeLayer: function( drawer ) {\n        $.console.error( \"[Viewer.removeLayer] this function is deprecated; use World.removeItem() instead.\" );\n        return this.world.removeItem(drawer);\n    },\n\n    /**\n     * Force the viewer to redraw its contents.\n     * @returns {OpenSeadragon.Viewer} Chainable.\n     */\n    forceRedraw: function() {\n        THIS[ this.hash ].forceRedraw = true;\n        return this;\n    },\n\n    /**\n     * @function\n     * @return {OpenSeadragon.Viewer} Chainable.\n     */\n    bindSequenceControls: function(){\n\n        //////////////////////////////////////////////////////////////////////////\n        // Image Sequence Controls\n        //////////////////////////////////////////////////////////////////////////\n        var onFocusHandler          = $.delegate( this, onFocus ),\n            onBlurHandler           = $.delegate( this, onBlur ),\n            onNextHandler           = $.delegate( this, onNext ),\n            onPreviousHandler       = $.delegate( this, onPrevious ),\n            navImages               = this.navImages,\n            useGroup                = true;\n\n        if( this.showSequenceControl ){\n\n            if( this.previousButton || this.nextButton ){\n                //if we are binding to custom buttons then layout and\n                //grouping is the responsibility of the page author\n                useGroup = false;\n            }\n\n            this.previousButton = new $.Button({\n                element:    this.previousButton ? $.getElement( this.previousButton ) : null,\n                clickTimeThreshold: this.clickTimeThreshold,\n                clickDistThreshold: this.clickDistThreshold,\n                tooltip:    $.getString( \"Tooltips.PreviousPage\" ),\n                srcRest:    resolveUrl( this.prefixUrl, navImages.previous.REST ),\n                srcGroup:   resolveUrl( this.prefixUrl, navImages.previous.GROUP ),\n                srcHover:   resolveUrl( this.prefixUrl, navImages.previous.HOVER ),\n                srcDown:    resolveUrl( this.prefixUrl, navImages.previous.DOWN ),\n                onRelease:  onPreviousHandler,\n                onFocus:    onFocusHandler,\n                onBlur:     onBlurHandler\n            });\n\n            this.nextButton = new $.Button({\n                element:    this.nextButton ? $.getElement( this.nextButton ) : null,\n                clickTimeThreshold: this.clickTimeThreshold,\n                clickDistThreshold: this.clickDistThreshold,\n                tooltip:    $.getString( \"Tooltips.NextPage\" ),\n                srcRest:    resolveUrl( this.prefixUrl, navImages.next.REST ),\n                srcGroup:   resolveUrl( this.prefixUrl, navImages.next.GROUP ),\n                srcHover:   resolveUrl( this.prefixUrl, navImages.next.HOVER ),\n                srcDown:    resolveUrl( this.prefixUrl, navImages.next.DOWN ),\n                onRelease:  onNextHandler,\n                onFocus:    onFocusHandler,\n                onBlur:     onBlurHandler\n            });\n\n            if( !this.navPrevNextWrap ){\n                this.previousButton.disable();\n            }\n\n            if (!this.tileSources || !this.tileSources.length) {\n                this.nextButton.disable();\n            }\n\n            if( useGroup ){\n                this.paging = new $.ButtonGroup({\n                    buttons: [\n                        this.previousButton,\n                        this.nextButton\n                    ],\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold\n                });\n\n                this.pagingControl = this.paging.element;\n\n                if( this.toolbar ){\n                    this.toolbar.addControl(\n                        this.pagingControl,\n                        {anchor: $.ControlAnchor.BOTTOM_RIGHT}\n                    );\n                }else{\n                    this.addControl(\n                        this.pagingControl,\n                        {anchor: this.sequenceControlAnchor || $.ControlAnchor.TOP_LEFT}\n                    );\n                }\n            }\n        }\n        return this;\n    },\n\n\n    /**\n     * @function\n     * @return {OpenSeadragon.Viewer} Chainable.\n     */\n    bindStandardControls: function(){\n        //////////////////////////////////////////////////////////////////////////\n        // Navigation Controls\n        //////////////////////////////////////////////////////////////////////////\n        var beginZoomingInHandler   = $.delegate( this, beginZoomingIn ),\n            endZoomingHandler       = $.delegate( this, endZooming ),\n            doSingleZoomInHandler   = $.delegate( this, doSingleZoomIn ),\n            beginZoomingOutHandler  = $.delegate( this, beginZoomingOut ),\n            doSingleZoomOutHandler  = $.delegate( this, doSingleZoomOut ),\n            onHomeHandler           = $.delegate( this, onHome ),\n            onFullScreenHandler     = $.delegate( this, onFullScreen ),\n            onRotateLeftHandler     = $.delegate( this, onRotateLeft ),\n            onRotateRightHandler    = $.delegate( this, onRotateRight ),\n            onFlipHandler           = $.delegate( this, onFlip),\n            onFocusHandler          = $.delegate( this, onFocus ),\n            onBlurHandler           = $.delegate( this, onBlur ),\n            navImages               = this.navImages,\n            buttons                 = [],\n            useGroup                = true;\n\n\n        if ( this.showNavigationControl ) {\n\n            if( this.zoomInButton || this.zoomOutButton ||\n                this.homeButton || this.fullPageButton ||\n                this.rotateLeftButton || this.rotateRightButton ||\n                this.flipButton ) {\n                //if we are binding to custom buttons then layout and\n                //grouping is the responsibility of the page author\n                useGroup = false;\n            }\n\n            if ( this.showZoomControl ) {\n                buttons.push( this.zoomInButton = new $.Button({\n                    element:    this.zoomInButton ? $.getElement( this.zoomInButton ) : null,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold,\n                    tooltip:    $.getString( \"Tooltips.ZoomIn\" ),\n                    srcRest:    resolveUrl( this.prefixUrl, navImages.zoomIn.REST ),\n                    srcGroup:   resolveUrl( this.prefixUrl, navImages.zoomIn.GROUP ),\n                    srcHover:   resolveUrl( this.prefixUrl, navImages.zoomIn.HOVER ),\n                    srcDown:    resolveUrl( this.prefixUrl, navImages.zoomIn.DOWN ),\n                    onPress:    beginZoomingInHandler,\n                    onRelease:  endZoomingHandler,\n                    onClick:    doSingleZoomInHandler,\n                    onEnter:    beginZoomingInHandler,\n                    onExit:     endZoomingHandler,\n                    onFocus:    onFocusHandler,\n                    onBlur:     onBlurHandler\n                }));\n\n                buttons.push( this.zoomOutButton = new $.Button({\n                    element:    this.zoomOutButton ? $.getElement( this.zoomOutButton ) : null,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold,\n                    tooltip:    $.getString( \"Tooltips.ZoomOut\" ),\n                    srcRest:    resolveUrl( this.prefixUrl, navImages.zoomOut.REST ),\n                    srcGroup:   resolveUrl( this.prefixUrl, navImages.zoomOut.GROUP ),\n                    srcHover:   resolveUrl( this.prefixUrl, navImages.zoomOut.HOVER ),\n                    srcDown:    resolveUrl( this.prefixUrl, navImages.zoomOut.DOWN ),\n                    onPress:    beginZoomingOutHandler,\n                    onRelease:  endZoomingHandler,\n                    onClick:    doSingleZoomOutHandler,\n                    onEnter:    beginZoomingOutHandler,\n                    onExit:     endZoomingHandler,\n                    onFocus:    onFocusHandler,\n                    onBlur:     onBlurHandler\n                }));\n            }\n\n            if ( this.showHomeControl ) {\n                buttons.push( this.homeButton = new $.Button({\n                    element:    this.homeButton ? $.getElement( this.homeButton ) : null,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold,\n                    tooltip:    $.getString( \"Tooltips.Home\" ),\n                    srcRest:    resolveUrl( this.prefixUrl, navImages.home.REST ),\n                    srcGroup:   resolveUrl( this.prefixUrl, navImages.home.GROUP ),\n                    srcHover:   resolveUrl( this.prefixUrl, navImages.home.HOVER ),\n                    srcDown:    resolveUrl( this.prefixUrl, navImages.home.DOWN ),\n                    onRelease:  onHomeHandler,\n                    onFocus:    onFocusHandler,\n                    onBlur:     onBlurHandler\n                }));\n            }\n\n            if ( this.showFullPageControl ) {\n                buttons.push( this.fullPageButton = new $.Button({\n                    element:    this.fullPageButton ? $.getElement( this.fullPageButton ) : null,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold,\n                    tooltip:    $.getString( \"Tooltips.FullPage\" ),\n                    srcRest:    resolveUrl( this.prefixUrl, navImages.fullpage.REST ),\n                    srcGroup:   resolveUrl( this.prefixUrl, navImages.fullpage.GROUP ),\n                    srcHover:   resolveUrl( this.prefixUrl, navImages.fullpage.HOVER ),\n                    srcDown:    resolveUrl( this.prefixUrl, navImages.fullpage.DOWN ),\n                    onRelease:  onFullScreenHandler,\n                    onFocus:    onFocusHandler,\n                    onBlur:     onBlurHandler\n                }));\n            }\n\n            if ( this.showRotationControl ) {\n                buttons.push( this.rotateLeftButton = new $.Button({\n                    element:    this.rotateLeftButton ? $.getElement( this.rotateLeftButton ) : null,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold,\n                    tooltip:    $.getString( \"Tooltips.RotateLeft\" ),\n                    srcRest:    resolveUrl( this.prefixUrl, navImages.rotateleft.REST ),\n                    srcGroup:   resolveUrl( this.prefixUrl, navImages.rotateleft.GROUP ),\n                    srcHover:   resolveUrl( this.prefixUrl, navImages.rotateleft.HOVER ),\n                    srcDown:    resolveUrl( this.prefixUrl, navImages.rotateleft.DOWN ),\n                    onRelease:  onRotateLeftHandler,\n                    onFocus:    onFocusHandler,\n                    onBlur:     onBlurHandler\n                }));\n\n                buttons.push( this.rotateRightButton = new $.Button({\n                    element:    this.rotateRightButton ? $.getElement( this.rotateRightButton ) : null,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold,\n                    tooltip:    $.getString( \"Tooltips.RotateRight\" ),\n                    srcRest:    resolveUrl( this.prefixUrl, navImages.rotateright.REST ),\n                    srcGroup:   resolveUrl( this.prefixUrl, navImages.rotateright.GROUP ),\n                    srcHover:   resolveUrl( this.prefixUrl, navImages.rotateright.HOVER ),\n                    srcDown:    resolveUrl( this.prefixUrl, navImages.rotateright.DOWN ),\n                    onRelease:  onRotateRightHandler,\n                    onFocus:    onFocusHandler,\n                    onBlur:     onBlurHandler\n                }));\n            }\n\n            if ( this.showFlipControl ) {\n                buttons.push( this.flipButton = new $.Button({\n                    element:    this.flipButton ? $.getElement( this.flipButton ) : null,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold,\n                    tooltip:    $.getString( \"Tooltips.Flip\" ),\n                    srcRest:    resolveUrl( this.prefixUrl, navImages.flip.REST ),\n                    srcGroup:   resolveUrl( this.prefixUrl, navImages.flip.GROUP ),\n                    srcHover:   resolveUrl( this.prefixUrl, navImages.flip.HOVER ),\n                    srcDown:    resolveUrl( this.prefixUrl, navImages.flip.DOWN ),\n                    onRelease:  onFlipHandler,\n                    onFocus:    onFocusHandler,\n                    onBlur:     onBlurHandler\n                }));\n            }\n\n            if ( useGroup ) {\n                this.buttons = new $.ButtonGroup({\n                    buttons:            buttons,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold\n                });\n\n                this.navControl  = this.buttons.element;\n                this.addHandler( 'open', $.delegate( this, lightUp ) );\n\n                if( this.toolbar ){\n                    this.toolbar.addControl(\n                        this.navControl,\n                        {anchor: this.navigationControlAnchor || $.ControlAnchor.TOP_LEFT}\n                    );\n                } else {\n                    this.addControl(\n                        this.navControl,\n                        {anchor: this.navigationControlAnchor || $.ControlAnchor.TOP_LEFT}\n                    );\n                }\n            }\n\n        }\n        return this;\n    },\n\n    /**\n     * Gets the active page of a sequence\n     * @function\n     * @return {Number}\n     */\n    currentPage: function() {\n        return this._sequenceIndex;\n    },\n\n    /**\n     * @function\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:page\n     */\n    goToPage: function( page ){\n        if( this.tileSources && page >= 0 && page < this.tileSources.length ){\n            this._sequenceIndex = page;\n\n            this._updateSequenceButtons( page );\n\n            this.open( this.tileSources[ page ] );\n\n            if( this.referenceStrip ){\n                this.referenceStrip.setFocus( page );\n            }\n\n            /**\n             * Raised when the page is changed on a viewer configured with multiple image sources (see {@link OpenSeadragon.Viewer#goToPage}).\n             *\n             * @event page\n             * @memberof OpenSeadragon.Viewer\n             * @type {Object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n             * @property {Number} page - The page index.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.raiseEvent( 'page', { page: page } );\n        }\n\n        return this;\n    },\n\n   /**\n     * Adds an html element as an overlay to the current viewport.  Useful for\n     * highlighting words or areas of interest on an image or other zoomable\n     * interface. The overlays added via this method are removed when the viewport\n     * is closed which include when changing page.\n     * @method\n     * @param {Element|String|Object} element - A reference to an element or an id for\n     *      the element which will be overlaid. Or an Object specifying the configuration for the overlay.\n     *      If using an object, see {@link OpenSeadragon.Overlay} for a list of\n     *      all available options.\n     * @param {OpenSeadragon.Point|OpenSeadragon.Rect} location - The point or\n     *      rectangle which will be overlaid. This is a viewport relative location.\n     * @param {OpenSeadragon.Placement} placement - The position of the\n     *      viewport which the location coordinates will be treated as relative\n     *      to.\n     * @param {function} onDraw - If supplied the callback is called when the overlay\n     *      needs to be drawn. It it the responsibility of the callback to do any drawing/positioning.\n     *      It is passed position, size and element.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:add-overlay\n     */\n    addOverlay: function( element, location, placement, onDraw ) {\n        var options;\n        if( $.isPlainObject( element ) ){\n            options = element;\n        } else {\n            options = {\n                element: element,\n                location: location,\n                placement: placement,\n                onDraw: onDraw\n            };\n        }\n\n        element = $.getElement( options.element );\n\n        if ( getOverlayIndex( this.currentOverlays, element ) >= 0 ) {\n            // they're trying to add a duplicate overlay\n            return this;\n        }\n\n        var overlay = getOverlayObject( this, options);\n        this.currentOverlays.push(overlay);\n        overlay.drawHTML( this.overlaysContainer, this.viewport );\n\n        /**\n         * Raised when an overlay is added to the viewer (see {@link OpenSeadragon.Viewer#addOverlay}).\n         *\n         * @event add-overlay\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Element} element - The overlay element.\n         * @property {OpenSeadragon.Point|OpenSeadragon.Rect} location\n         * @property {OpenSeadragon.Placement} placement\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'add-overlay', {\n            element: element,\n            location: options.location,\n            placement: options.placement\n        });\n        return this;\n    },\n\n    /**\n     * Updates the overlay represented by the reference to the element or\n     * element id moving it to the new location, relative to the new placement.\n     * @method\n     * @param {Element|String} element - A reference to an element or an id for\n     *      the element which is overlaid.\n     * @param {OpenSeadragon.Point|OpenSeadragon.Rect} location - The point or\n     *      rectangle which will be overlaid. This is a viewport relative location.\n     * @param {OpenSeadragon.Placement} placement - The position of the\n     *      viewport which the location coordinates will be treated as relative\n     *      to.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:update-overlay\n     */\n    updateOverlay: function( element, location, placement ) {\n        var i;\n\n        element = $.getElement( element );\n        i = getOverlayIndex( this.currentOverlays, element );\n\n        if ( i >= 0 ) {\n            this.currentOverlays[ i ].update( location, placement );\n            THIS[ this.hash ].forceRedraw = true;\n            /**\n             * Raised when an overlay's location or placement changes\n             * (see {@link OpenSeadragon.Viewer#updateOverlay}).\n             *\n             * @event update-overlay\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the\n             * Viewer which raised the event.\n             * @property {Element} element\n             * @property {OpenSeadragon.Point|OpenSeadragon.Rect} location\n             * @property {OpenSeadragon.Placement} placement\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.raiseEvent( 'update-overlay', {\n                element: element,\n                location: location,\n                placement: placement\n            });\n        }\n        return this;\n    },\n\n    /**\n     * Removes an overlay identified by the reference element or element id\n     * and schedules an update.\n     * @method\n     * @param {Element|String} element - A reference to the element or an\n     *      element id which represent the ovelay content to be removed.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:remove-overlay\n     */\n    removeOverlay: function( element ) {\n        var i;\n\n        element = $.getElement( element );\n        i = getOverlayIndex( this.currentOverlays, element );\n\n        if ( i >= 0 ) {\n            this.currentOverlays[ i ].destroy();\n            this.currentOverlays.splice( i, 1 );\n            THIS[ this.hash ].forceRedraw = true;\n            /**\n             * Raised when an overlay is removed from the viewer\n             * (see {@link OpenSeadragon.Viewer#removeOverlay}).\n             *\n             * @event remove-overlay\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the\n             * Viewer which raised the event.\n             * @property {Element} element - The overlay element.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.raiseEvent( 'remove-overlay', {\n                element: element\n            });\n        }\n        return this;\n    },\n\n    /**\n     * Removes all currently configured Overlays from this Viewer and schedules\n     * an update.\n     * @method\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:clear-overlay\n     */\n    clearOverlays: function() {\n        while ( this.currentOverlays.length > 0 ) {\n            this.currentOverlays.pop().destroy();\n        }\n        THIS[ this.hash ].forceRedraw = true;\n        /**\n         * Raised when all overlays are removed from the viewer (see {@link OpenSeadragon.Drawer#clearOverlays}).\n         *\n         * @event clear-overlay\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'clear-overlay', {} );\n        return this;\n    },\n\n     /**\n     * Finds an overlay identified by the reference element or element id\n     * and returns it as an object, return null if not found.\n     * @method\n     * @param {Element|String} element - A reference to the element or an\n     *      element id which represents the overlay content.\n     * @return {OpenSeadragon.Overlay} the matching overlay or null if none found.\n     */\n    getOverlayById: function( element ) {\n        var i;\n\n        element = $.getElement( element );\n        i = getOverlayIndex( this.currentOverlays, element );\n\n        if (i >= 0) {\n            return this.currentOverlays[i];\n        } else {\n            return null;\n        }\n    },\n\n    /**\n     * Updates the sequence buttons.\n     * @function OpenSeadragon.Viewer.prototype._updateSequenceButtons\n     * @private\n     * @param {Number} Sequence Value\n     */\n    _updateSequenceButtons: function( page ) {\n\n            if ( this.nextButton ) {\n                if(!this.tileSources || this.tileSources.length - 1 === page) {\n                    //Disable next button\n                    if ( !this.navPrevNextWrap ) {\n                        this.nextButton.disable();\n                    }\n                } else {\n                    this.nextButton.enable();\n                }\n            }\n            if ( this.previousButton ) {\n                if ( page > 0 ) {\n                    //Enable previous button\n                    this.previousButton.enable();\n                } else {\n                    if ( !this.navPrevNextWrap ) {\n                        this.previousButton.disable();\n                    }\n                }\n            }\n      },\n\n    /**\n     * Display a message in the viewport\n     * @function OpenSeadragon.Viewer.prototype._showMessage\n     * @private\n     * @param {String} text message\n     */\n    _showMessage: function ( message ) {\n        this._hideMessage();\n\n        var div = $.makeNeutralElement( \"div\" );\n        div.appendChild( document.createTextNode( message ) );\n\n        this.messageDiv = $.makeCenteredNode( div );\n\n        $.addClass(this.messageDiv, \"openseadragon-message\");\n\n        this.container.appendChild( this.messageDiv );\n    },\n\n    /**\n     * Hide any currently displayed viewport message\n     * @function OpenSeadragon.Viewer.prototype._hideMessage\n     * @private\n     */\n    _hideMessage: function () {\n        var div = this.messageDiv;\n        if (div) {\n            div.parentNode.removeChild(div);\n            delete this.messageDiv;\n        }\n    },\n\n    /**\n     * Gets this viewer's gesture settings for the given pointer device type.\n     * @method\n     * @param {String} type - The pointer device type to get the gesture settings for (\"mouse\", \"touch\", \"pen\", etc.).\n     * @return {OpenSeadragon.GestureSettings}\n     */\n    gestureSettingsByDeviceType: function ( type ) {\n        switch ( type ) {\n            case 'mouse':\n                return this.gestureSettingsMouse;\n            case 'touch':\n                return this.gestureSettingsTouch;\n            case 'pen':\n                return this.gestureSettingsPen;\n            default:\n                return this.gestureSettingsUnknown;\n        }\n    },\n\n    // private\n    _drawOverlays: function() {\n        var i,\n            length = this.currentOverlays.length;\n        for ( i = 0; i < length; i++ ) {\n            this.currentOverlays[ i ].drawHTML( this.overlaysContainer, this.viewport );\n        }\n    },\n\n    /**\n     * Cancel the \"in flight\" images.\n     */\n    _cancelPendingImages: function() {\n        this._loadQueue = [];\n    },\n\n    /**\n     * Removes the reference strip and disables displaying it.\n     * @function\n     */\n    removeReferenceStrip: function() {\n        this.showReferenceStrip = false;\n\n        if (this.referenceStrip) {\n            this.referenceStrip.destroy();\n            this.referenceStrip = null;\n        }\n    },\n\n    /**\n     * Enables and displays the reference strip based on the currently set tileSources.\n     * Works only when the Viewer has sequenceMode set to true.\n     * @function\n     */\n    addReferenceStrip: function() {\n        this.showReferenceStrip = true;\n\n        if (this.sequenceMode) {\n            if (this.referenceStrip) {\n                return;\n            }\n\n            if (this.tileSources.length && this.tileSources.length > 1) {\n                this.referenceStrip = new $.ReferenceStrip({\n                    id:          this.referenceStripElement,\n                    position:    this.referenceStripPosition,\n                    sizeRatio:   this.referenceStripSizeRatio,\n                    scroll:      this.referenceStripScroll,\n                    height:      this.referenceStripHeight,\n                    width:       this.referenceStripWidth,\n                    tileSources: this.tileSources,\n                    prefixUrl:   this.prefixUrl,\n                    viewer:      this\n                });\n\n                this.referenceStrip.setFocus( this._sequenceIndex );\n            }\n        } else {\n            $.console.warn('Attempting to display a reference strip while \"sequenceMode\" is off.');\n        }\n    }\n});\n\n\n/**\n * _getSafeElemSize is like getElementSize(), but refuses to return 0 for x or y,\n * which was causing some calling operations to return NaN.\n * @returns {Point}\n * @private\n */\nfunction _getSafeElemSize (oElement) {\n    oElement = $.getElement( oElement );\n\n    return new $.Point(\n        (oElement.clientWidth === 0 ? 1 : oElement.clientWidth),\n        (oElement.clientHeight === 0 ? 1 : oElement.clientHeight)\n    );\n}\n\n\n/**\n * @function\n * @private\n */\nfunction getTileSourceImplementation( viewer, tileSource, imgOptions, successCallback,\n    failCallback ) {\n    var _this = viewer;\n\n    //allow plain xml strings or json strings to be parsed here\n    if ( $.type( tileSource ) == 'string' ) {\n        //xml should start with \"<\" and end with \">\"\n        if ( tileSource.match( /^\\s*<.*>\\s*$/ ) ) {\n            tileSource = $.parseXml( tileSource );\n        //json should start with \"{\" or \"[\" and end with \"}\" or \"]\"\n        } else if ( tileSource.match(/^\\s*[\\{\\[].*[\\}\\]]\\s*$/ ) ) {\n            try {\n              var tileSourceJ = $.parseJSON(tileSource);\n              tileSource = tileSourceJ;\n            } catch (e) {\n              //tileSource = tileSource;\n            }\n        }\n    }\n\n    function waitUntilReady(tileSource, originalTileSource) {\n        if (tileSource.ready) {\n            successCallback(tileSource);\n        } else {\n            tileSource.addHandler('ready', function () {\n                successCallback(tileSource);\n            });\n            tileSource.addHandler('open-failed', function (event) {\n                failCallback({\n                    message: event.message,\n                    source: originalTileSource\n                });\n            });\n        }\n    }\n\n    setTimeout( function() {\n        if ( $.type( tileSource ) == 'string' ) {\n            //If its still a string it means it must be a url at this point\n            tileSource = new $.TileSource({\n                url: tileSource,\n                crossOriginPolicy: imgOptions.crossOriginPolicy !== undefined ?\n                    imgOptions.crossOriginPolicy : viewer.crossOriginPolicy,\n                ajaxWithCredentials: viewer.ajaxWithCredentials,\n                ajaxHeaders: viewer.ajaxHeaders,\n                useCanvas: viewer.useCanvas,\n                success: function( event ) {\n                    successCallback( event.tileSource );\n                }\n            });\n            tileSource.addHandler( 'open-failed', function( event ) {\n                failCallback( event );\n            } );\n\n        } else if ($.isPlainObject(tileSource) || tileSource.nodeType) {\n            if (tileSource.crossOriginPolicy === undefined &&\n                (imgOptions.crossOriginPolicy !== undefined || viewer.crossOriginPolicy !== undefined)) {\n                tileSource.crossOriginPolicy = imgOptions.crossOriginPolicy !== undefined ?\n                    imgOptions.crossOriginPolicy : viewer.crossOriginPolicy;\n            }\n            if (tileSource.ajaxWithCredentials === undefined) {\n                tileSource.ajaxWithCredentials = viewer.ajaxWithCredentials;\n            }\n            if (tileSource.useCanvas === undefined) {\n                tileSource.useCanvas = viewer.useCanvas;\n            }\n\n            if ( $.isFunction( tileSource.getTileUrl ) ) {\n                //Custom tile source\n                var customTileSource = new $.TileSource( tileSource );\n                customTileSource.getTileUrl = tileSource.getTileUrl;\n                successCallback( customTileSource );\n            } else {\n                //inline configuration\n                var $TileSource = $.TileSource.determineType( _this, tileSource );\n                if ( !$TileSource ) {\n                    failCallback( {\n                        message: \"Unable to load TileSource\",\n                        source: tileSource\n                    });\n                    return;\n                }\n                var options = $TileSource.prototype.configure.apply( _this, [ tileSource ] );\n                waitUntilReady(new $TileSource(options), tileSource);\n            }\n        } else {\n            //can assume it's already a tile source implementation\n            waitUntilReady(tileSource, tileSource);\n        }\n    });\n}\n\nfunction getOverlayObject( viewer, overlay ) {\n    if ( overlay instanceof $.Overlay ) {\n        return overlay;\n    }\n\n    var element = null;\n    if ( overlay.element ) {\n        element = $.getElement( overlay.element );\n    } else {\n        var id = overlay.id ?\n            overlay.id :\n            \"openseadragon-overlay-\" + Math.floor( Math.random() * 10000000 );\n\n        element = $.getElement( overlay.id );\n        if ( !element ) {\n            element         = document.createElement( \"a\" );\n            element.href    = \"#/overlay/\" + id;\n        }\n        element.id = id;\n        $.addClass( element, overlay.className ?\n            overlay.className :\n            \"openseadragon-overlay\"\n        );\n    }\n\n    var location = overlay.location;\n    var width = overlay.width;\n    var height = overlay.height;\n    if (!location) {\n        var x = overlay.x;\n        var y = overlay.y;\n        if (overlay.px !== undefined) {\n            var rect = viewer.viewport.imageToViewportRectangle(new $.Rect(\n                overlay.px,\n                overlay.py,\n                width || 0,\n                height || 0));\n            x = rect.x;\n            y = rect.y;\n            width = width !== undefined ? rect.width : undefined;\n            height = height !== undefined ? rect.height : undefined;\n        }\n        location = new $.Point(x, y);\n    }\n\n    var placement = overlay.placement;\n    if (placement && $.type(placement) === \"string\") {\n        placement = $.Placement[overlay.placement.toUpperCase()];\n    }\n\n    return new $.Overlay({\n        element: element,\n        location: location,\n        placement: placement,\n        onDraw: overlay.onDraw,\n        checkResize: overlay.checkResize,\n        width: width,\n        height: height,\n        rotationMode: overlay.rotationMode\n    });\n}\n\n/**\n * @private\n * @inner\n * Determines the index of the given overlay in the given overlays array.\n */\nfunction getOverlayIndex( overlays, element ) {\n    var i;\n    for ( i = overlays.length - 1; i >= 0; i-- ) {\n        if ( overlays[ i ].element === element ) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// Schedulers provide the general engine for animation\n///////////////////////////////////////////////////////////////////////////////\nfunction scheduleUpdate( viewer, updateFunc ){\n    return $.requestAnimationFrame( function(){\n        updateFunc( viewer );\n    } );\n}\n\n\n//provides a sequence in the fade animation\nfunction scheduleControlsFade( viewer ) {\n    $.requestAnimationFrame( function(){\n        updateControlsFade( viewer );\n    });\n}\n\n\n//initiates an animation to hide the controls\nfunction beginControlsAutoHide( viewer ) {\n    if ( !viewer.autoHideControls ) {\n        return;\n    }\n    viewer.controlsShouldFade = true;\n    viewer.controlsFadeBeginTime =\n        $.now() +\n        viewer.controlsFadeDelay;\n\n    window.setTimeout( function(){\n        scheduleControlsFade( viewer );\n    }, viewer.controlsFadeDelay );\n}\n\n\n//determines if fade animation is done or continues the animation\nfunction updateControlsFade( viewer ) {\n    var currentTime,\n        deltaTime,\n        opacity,\n        i;\n    if ( viewer.controlsShouldFade ) {\n        currentTime = $.now();\n        deltaTime = currentTime - viewer.controlsFadeBeginTime;\n        opacity = 1.0 - deltaTime / viewer.controlsFadeLength;\n\n        opacity = Math.min( 1.0, opacity );\n        opacity = Math.max( 0.0, opacity );\n\n        for ( i = viewer.controls.length - 1; i >= 0; i--) {\n            if (viewer.controls[ i ].autoFade) {\n                viewer.controls[ i ].setOpacity( opacity );\n            }\n        }\n\n        if ( opacity > 0 ) {\n            // fade again\n            scheduleControlsFade( viewer );\n        }\n    }\n}\n\n\n//stop the fade animation on the controls and show them\nfunction abortControlsAutoHide( viewer ) {\n    var i;\n    viewer.controlsShouldFade = false;\n    for ( i = viewer.controls.length - 1; i >= 0; i-- ) {\n        viewer.controls[ i ].setOpacity( 1.0 );\n    }\n}\n\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Default view event handlers.\n///////////////////////////////////////////////////////////////////////////////\nfunction onFocus(){\n    abortControlsAutoHide( this );\n}\n\nfunction onBlur(){\n    beginControlsAutoHide( this );\n\n}\n\nfunction onCanvasKeyDown( event ) {\n    var canvasKeyDownEventArgs = {\n      originalEvent: event.originalEvent,\n      preventDefaultAction: event.preventDefaultAction,\n      preventVerticalPan: event.preventVerticalPan,\n      preventHorizontalPan: event.preventHorizontalPan\n    };\n\n    /**\n     * Raised when a keyboard key is pressed and the focus is on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-key\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {Boolean} preventDefaultAction - Set to true to prevent default keyboard behaviour. Default: false.\n     * @property {Boolean} preventVerticalPan - Set to true to prevent keyboard vertical panning. Default: false.\n     * @property {Boolean} preventHorizontalPan - Set to true to prevent keyboard horizontal panning. Default: false.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n\n    this.raiseEvent('canvas-key', canvasKeyDownEventArgs);\n\n    if ( !canvasKeyDownEventArgs.preventDefaultAction && !event.ctrl && !event.alt && !event.meta ) {\n        switch( event.keyCode ){\n            case 38://up arrow\n                if (!canvasKeyDownEventArgs.preventVerticalPan) {\n                  if ( event.shift ) {\n                    this.viewport.zoomBy(1.1);\n                  } else {\n                    this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0, -this.pixelsPerArrowPress)));\n                  }\n                  this.viewport.applyConstraints();\n                }\n                return false;\n            case 40://down arrow\n                if (!canvasKeyDownEventArgs.preventVerticalPan) {\n                  if ( event.shift ) {\n                    this.viewport.zoomBy(0.9);\n                  } else {\n                    this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0, this.pixelsPerArrowPress)));\n                  }\n                  this.viewport.applyConstraints();\n                }\n                return false;\n            case 37://left arrow\n                if (!canvasKeyDownEventArgs.preventHorizontalPan) {\n                  this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(-this.pixelsPerArrowPress, 0)));\n                  this.viewport.applyConstraints();\n                }\n                return false;\n            case 39://right arrow\n                if (!canvasKeyDownEventArgs.preventHorizontalPan) {\n                  this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(this.pixelsPerArrowPress, 0)));\n                  this.viewport.applyConstraints();\n                }\n                return false;\n            default:\n                //console.log( 'navigator keycode %s', event.keyCode );\n                return true;\n        }\n    } else {\n        return true;\n    }\n}\nfunction onCanvasKeyPress( event ) {\n    var canvasKeyPressEventArgs = {\n      originalEvent: event.originalEvent,\n      preventDefaultAction: event.preventDefaultAction,\n      preventVerticalPan: event.preventVerticalPan,\n      preventHorizontalPan: event.preventHorizontalPan\n    };\n\n    // This event is documented in onCanvasKeyDown\n    this.raiseEvent('canvas-key', canvasKeyPressEventArgs);\n\n    if ( !canvasKeyPressEventArgs.preventDefaultAction && !event.ctrl && !event.alt && !event.meta ) {\n        switch( event.keyCode ){\n            case 43://=|+\n            case 61://=|+\n                this.viewport.zoomBy(1.1);\n                this.viewport.applyConstraints();\n                return false;\n            case 45://-|_\n                this.viewport.zoomBy(0.9);\n                this.viewport.applyConstraints();\n                return false;\n            case 48://0|)\n                this.viewport.goHome();\n                this.viewport.applyConstraints();\n                return false;\n            case 119://w\n            case 87://W\n                if (!canvasKeyPressEventArgs.preventVerticalPan) {\n                    if ( event.shift ) {\n                        this.viewport.zoomBy(1.1);\n                    } else {\n                        this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0, -40)));\n                    }\n                    this.viewport.applyConstraints();\n                  }\n                  return false;\n            case 115://s\n            case 83://S\n                if (!canvasKeyPressEventArgs.preventVerticalPan) {\n                  if ( event.shift ) {\n                    this.viewport.zoomBy(0.9);\n                  } else {\n                    this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0, 40)));\n                  }\n                  this.viewport.applyConstraints();\n                }\n                return false;\n            case 97://a\n                if (!canvasKeyPressEventArgs.preventHorizontalPan) {\n                  this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(-40, 0)));\n                  this.viewport.applyConstraints();\n                }\n                return false;\n            case 100://d\n                if (!canvasKeyPressEventArgs.preventHorizontalPan) {\n                  this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(40, 0)));\n                  this.viewport.applyConstraints();\n                }\n                return false;\n            case 114: //r - clockwise rotation\n              if(this.viewport.flipped){\n                this.viewport.setRotation($.positiveModulo(this.viewport.degrees - this.rotationIncrement, 360));\n              } else{\n                this.viewport.setRotation($.positiveModulo(this.viewport.degrees + this.rotationIncrement, 360));\n              }\n              this.viewport.applyConstraints();\n              return false;\n            case 82: //R - counterclockwise  rotation\n              if(this.viewport.flipped){\n                this.viewport.setRotation($.positiveModulo(this.viewport.degrees + this.rotationIncrement, 360));\n              } else{\n                this.viewport.setRotation($.positiveModulo(this.viewport.degrees - this.rotationIncrement, 360));\n              }\n              this.viewport.applyConstraints();\n              return false;\n            case 102: //f\n              this.viewport.toggleFlip();\n              return false;\n            default:\n                // console.log( 'navigator keycode %s', event.keyCode );\n                return true;\n        }\n    } else {\n        return true;\n    }\n}\n\nfunction onCanvasClick( event ) {\n    var gestureSettings;\n\n    var haveKeyboardFocus = document.activeElement == this.canvas;\n\n    // If we don't have keyboard focus, request it.\n    if ( !haveKeyboardFocus ) {\n        this.canvas.focus();\n    }\n    if(this.viewport.flipped){\n        event.position.x = this.viewport.getContainerSize().x - event.position.x;\n    }\n\n    var canvasClickEventArgs = {\n        tracker: event.eventSource,\n        position: event.position,\n        quick: event.quick,\n        shift: event.shift,\n        originalEvent: event.originalEvent,\n        preventDefaultAction: event.preventDefaultAction\n    };\n\n    /**\n     * Raised when a mouse press/release or touch/remove occurs on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-click\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Boolean} quick - True only if the clickDistThreshold and clickTimeThreshold are both passed. Useful for differentiating between clicks and drags.\n     * @property {Boolean} shift - True if the shift key was pressed during this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {Boolean} preventDefaultAction - Set to true to prevent default click to zoom behaviour. Default: false.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-click', canvasClickEventArgs);\n\n    if ( !canvasClickEventArgs.preventDefaultAction && this.viewport && event.quick ) {\n        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n        if ( gestureSettings.clickToZoom ) {\n            this.viewport.zoomBy(\n                event.shift ? 1.0 / this.zoomPerClick : this.zoomPerClick,\n                gestureSettings.zoomToRefPoint ? this.viewport.pointFromPixel( event.position, true ) : null\n            );\n            this.viewport.applyConstraints();\n        }\n    }\n}\n\nfunction onCanvasDblClick( event ) {\n    var gestureSettings;\n\n    var canvasDblClickEventArgs = {\n        tracker: event.eventSource,\n        position: event.position,\n        shift: event.shift,\n        originalEvent: event.originalEvent,\n        preventDefaultAction: event.preventDefaultAction\n    };\n\n    /**\n     * Raised when a double mouse press/release or touch/remove occurs on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-double-click\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Boolean} shift - True if the shift key was pressed during this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {Boolean} preventDefaultAction - Set to true to prevent default double tap to zoom behaviour. Default: false.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-double-click', canvasDblClickEventArgs);\n\n    if ( !canvasDblClickEventArgs.preventDefaultAction && this.viewport ) {\n        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n        if ( gestureSettings.dblClickToZoom ) {\n            this.viewport.zoomBy(\n                event.shift ? 1.0 / this.zoomPerClick : this.zoomPerClick,\n                gestureSettings.zoomToRefPoint ? this.viewport.pointFromPixel( event.position, true ) : null\n            );\n            this.viewport.applyConstraints();\n        }\n    }\n}\n\nfunction onCanvasDrag( event ) {\n    var gestureSettings;\n\n    var canvasDragEventArgs = {\n        tracker: event.eventSource,\n        position: event.position,\n        delta: event.delta,\n        speed: event.speed,\n        direction: event.direction,\n        shift: event.shift,\n        originalEvent: event.originalEvent,\n        preventDefaultAction: event.preventDefaultAction\n    };\n\n    /**\n     * Raised when a mouse or touch drag operation occurs on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-drag\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {OpenSeadragon.Point} delta - The x,y components of the difference between start drag and end drag.\n     * @property {Number} speed - Current computed speed, in pixels per second.\n     * @property {Number} direction - Current computed direction, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n     * @property {Boolean} shift - True if the shift key was pressed during this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {Boolean} preventDefaultAction - Set to true to prevent default drag behaviour. Default: false.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-drag', canvasDragEventArgs);\n\n    if ( !canvasDragEventArgs.preventDefaultAction && this.viewport ) {\n        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n        if( !this.panHorizontal ){\n            event.delta.x = 0;\n        }\n        if( !this.panVertical ){\n            event.delta.y = 0;\n        }\n        if(this.viewport.flipped){\n            event.delta.x = -event.delta.x;\n        }\n\n        if( this.constrainDuringPan ){\n            var delta = this.viewport.deltaPointsFromPixels( event.delta.negate() );\n\n            this.viewport.centerSpringX.target.value += delta.x;\n            this.viewport.centerSpringY.target.value += delta.y;\n\n            var bounds = this.viewport.getBounds();\n            var constrainedBounds = this.viewport.getConstrainedBounds();\n\n            this.viewport.centerSpringX.target.value -= delta.x;\n            this.viewport.centerSpringY.target.value -= delta.y;\n\n            if (bounds.x != constrainedBounds.x) {\n                event.delta.x = 0;\n            }\n\n            if (bounds.y != constrainedBounds.y) {\n                event.delta.y = 0;\n            }\n        }\n\n        this.viewport.panBy( this.viewport.deltaPointsFromPixels( event.delta.negate() ), gestureSettings.flickEnabled && !this.constrainDuringPan);\n    }\n}\n\nfunction onCanvasDragEnd( event ) {\n    if (!event.preventDefaultAction && this.viewport) {\n        var gestureSettings = this.gestureSettingsByDeviceType(event.pointerType);\n        if (gestureSettings.flickEnabled &&\n            event.speed >= gestureSettings.flickMinSpeed) {\n            var amplitudeX = 0;\n            if (this.panHorizontal) {\n                amplitudeX = gestureSettings.flickMomentum * event.speed *\n                    Math.cos(event.direction);\n            }\n            var amplitudeY = 0;\n            if (this.panVertical) {\n                amplitudeY = gestureSettings.flickMomentum * event.speed *\n                    Math.sin(event.direction);\n            }\n            var center = this.viewport.pixelFromPoint(\n                this.viewport.getCenter(true));\n            var target = this.viewport.pointFromPixel(\n                new $.Point(center.x - amplitudeX, center.y - amplitudeY));\n            this.viewport.panTo(target, false);\n        }\n        this.viewport.applyConstraints();\n    }\n    /**\n     * Raised when a mouse or touch drag operation ends on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-drag-end\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Number} speed - Speed at the end of a drag gesture, in pixels per second.\n     * @property {Number} direction - Direction at the end of a drag gesture, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n     * @property {Boolean} shift - True if the shift key was pressed during this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent('canvas-drag-end', {\n        tracker: event.eventSource,\n        position: event.position,\n        speed: event.speed,\n        direction: event.direction,\n        shift: event.shift,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasEnter( event ) {\n    /**\n     * Raised when a pointer enters the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-enter\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Number} buttons - Current buttons pressed. A combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n     * @property {Number} pointers - Number of pointers (all types) active in the tracked element.\n     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n     * @property {Boolean} buttonDownAny - Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-enter', {\n        tracker: event.eventSource,\n        pointerType: event.pointerType,\n        position: event.position,\n        buttons: event.buttons,\n        pointers: event.pointers,\n        insideElementPressed: event.insideElementPressed,\n        buttonDownAny: event.buttonDownAny,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasExit( event ) {\n\n    if (window.location != window.parent.location){\n        $.MouseTracker.resetAllMouseTrackers();\n    }\n\n    /**\n     * Raised when a pointer leaves the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-exit\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Number} buttons - Current buttons pressed. A combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n     * @property {Number} pointers - Number of pointers (all types) active in the tracked element.\n     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n     * @property {Boolean} buttonDownAny - Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-exit', {\n        tracker: event.eventSource,\n        pointerType: event.pointerType,\n        position: event.position,\n        buttons: event.buttons,\n        pointers: event.pointers,\n        insideElementPressed: event.insideElementPressed,\n        buttonDownAny: event.buttonDownAny,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasPress( event ) {\n    /**\n     * Raised when the primary mouse button is pressed or touch starts on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-press\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n     * @property {Boolean} insideElementReleased - True if the cursor still inside the tracked element when the button was released.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-press', {\n        tracker: event.eventSource,\n        pointerType: event.pointerType,\n        position: event.position,\n        insideElementPressed: event.insideElementPressed,\n        insideElementReleased: event.insideElementReleased,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasRelease( event ) {\n    /**\n     * Raised when the primary mouse button is released or touch ends on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-release\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n     * @property {Boolean} insideElementReleased - True if the cursor still inside the tracked element when the button was released.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-release', {\n        tracker: event.eventSource,\n        pointerType: event.pointerType,\n        position: event.position,\n        insideElementPressed: event.insideElementPressed,\n        insideElementReleased: event.insideElementReleased,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasNonPrimaryPress( event ) {\n    /**\n     * Raised when any non-primary pointer button is pressed on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-nonprimary-press\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {Number} button - Button which caused the event.\n     *      -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n     * @property {Number} buttons - Current buttons pressed.\n     *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-nonprimary-press', {\n        tracker: event.eventSource,\n        position: event.position,\n        pointerType: event.pointerType,\n        button: event.button,\n        buttons: event.buttons,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasNonPrimaryRelease( event ) {\n    /**\n     * Raised when any non-primary pointer button is released on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-nonprimary-release\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {Number} button - Button which caused the event.\n     *      -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n     * @property {Number} buttons - Current buttons pressed.\n     *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-nonprimary-release', {\n        tracker: event.eventSource,\n        position: event.position,\n        pointerType: event.pointerType,\n        button: event.button,\n        buttons: event.buttons,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasPinch( event ) {\n    var gestureSettings,\n        centerPt,\n        lastCenterPt,\n        panByPt;\n\n    if ( !event.preventDefaultAction && this.viewport ) {\n        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n        if ( gestureSettings.pinchToZoom ) {\n            centerPt = this.viewport.pointFromPixel( event.center, true );\n            lastCenterPt = this.viewport.pointFromPixel( event.lastCenter, true );\n            panByPt = lastCenterPt.minus( centerPt );\n            if( !this.panHorizontal ) {\n                panByPt.x = 0;\n            }\n            if( !this.panVertical ) {\n                panByPt.y = 0;\n            }\n            this.viewport.zoomBy( event.distance / event.lastDistance, centerPt, true );\n            if ( gestureSettings.zoomToRefPoint ) {\n                this.viewport.panBy(panByPt, true);\n            }\n            this.viewport.applyConstraints();\n        }\n        if ( gestureSettings.pinchRotate ) {\n            // Pinch rotate\n            var angle1 = Math.atan2(event.gesturePoints[0].currentPos.y - event.gesturePoints[1].currentPos.y,\n                event.gesturePoints[0].currentPos.x - event.gesturePoints[1].currentPos.x);\n            var angle2 = Math.atan2(event.gesturePoints[0].lastPos.y - event.gesturePoints[1].lastPos.y,\n                event.gesturePoints[0].lastPos.x - event.gesturePoints[1].lastPos.x);\n            this.viewport.setRotation(this.viewport.getRotation() + ((angle1 - angle2) * (180 / Math.PI)));\n        }\n    }\n    /**\n     * Raised when a pinch event occurs on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-pinch\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gesturePoints - Gesture points associated with the gesture. Velocity data can be found here.\n     * @property {OpenSeadragon.Point} lastCenter - The previous center point of the two pinch contact points relative to the tracked element.\n     * @property {OpenSeadragon.Point} center - The center point of the two pinch contact points relative to the tracked element.\n     * @property {Number} lastDistance - The previous distance between the two pinch contact points in CSS pixels.\n     * @property {Number} distance - The distance between the two pinch contact points in CSS pixels.\n     * @property {Boolean} shift - True if the shift key was pressed during this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent('canvas-pinch', {\n        tracker: event.eventSource,\n        gesturePoints: event.gesturePoints,\n        lastCenter: event.lastCenter,\n        center: event.center,\n        lastDistance: event.lastDistance,\n        distance: event.distance,\n        shift: event.shift,\n        originalEvent: event.originalEvent\n    });\n    //cancels event\n    return false;\n}\n\nfunction onCanvasScroll( event ) {\n    var gestureSettings,\n        factor,\n        thisScrollTime,\n        deltaScrollTime;\n\n    /* Certain scroll devices fire the scroll event way too fast so we are injecting a simple adjustment to keep things\n     * partially normalized. If we have already fired an event within the last 'minScrollDelta' milliseconds we skip\n     * this one and wait for the next event. */\n    thisScrollTime = $.now();\n    deltaScrollTime = thisScrollTime - this._lastScrollTime;\n    if (deltaScrollTime > this.minScrollDeltaTime) {\n        this._lastScrollTime = thisScrollTime;\n\n        if(this.viewport.flipped){\n          event.position.x = this.viewport.getContainerSize().x - event.position.x;\n        }\n\n        if ( !event.preventDefaultAction && this.viewport ) {\n            gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n            if ( gestureSettings.scrollToZoom ) {\n                factor = Math.pow( this.zoomPerScroll, event.scroll );\n                this.viewport.zoomBy(\n                    factor,\n                    gestureSettings.zoomToRefPoint ? this.viewport.pointFromPixel( event.position, true ) : null\n                );\n                this.viewport.applyConstraints();\n            }\n        }\n        /**\n         * Raised when a scroll event occurs on the {@link OpenSeadragon.Viewer#canvas} element (mouse wheel).\n         *\n         * @event canvas-scroll\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n         * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n         * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n         * @property {Number} scroll - The scroll delta for the event.\n         * @property {Boolean} shift - True if the shift key was pressed during this event.\n         * @property {Object} originalEvent - The original DOM event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'canvas-scroll', {\n            tracker: event.eventSource,\n            position: event.position,\n            scroll: event.scroll,\n            shift: event.shift,\n            originalEvent: event.originalEvent\n        });\n        if (gestureSettings && gestureSettings.scrollToZoom) {\n            //cancels event\n            return false;\n        }\n    }\n    else {\n        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n        if (gestureSettings && gestureSettings.scrollToZoom) {\n            return false;   // We are swallowing this event\n        }\n    }\n}\n\nfunction onContainerEnter( event ) {\n    THIS[ this.hash ].mouseInside = true;\n    abortControlsAutoHide( this );\n    /**\n     * Raised when the cursor enters the {@link OpenSeadragon.Viewer#container} element.\n     *\n     * @event container-enter\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Number} buttons - Current buttons pressed. A combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n     * @property {Number} pointers - Number of pointers (all types) active in the tracked element.\n     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n     * @property {Boolean} buttonDownAny - Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'container-enter', {\n        tracker: event.eventSource,\n        position: event.position,\n        buttons: event.buttons,\n        pointers: event.pointers,\n        insideElementPressed: event.insideElementPressed,\n        buttonDownAny: event.buttonDownAny,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onContainerExit( event ) {\n    if ( event.pointers < 1 ) {\n        THIS[ this.hash ].mouseInside = false;\n        if ( !THIS[ this.hash ].animating ) {\n            beginControlsAutoHide( this );\n        }\n    }\n    /**\n     * Raised when the cursor leaves the {@link OpenSeadragon.Viewer#container} element.\n     *\n     * @event container-exit\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Number} buttons - Current buttons pressed. A combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n     * @property {Number} pointers - Number of pointers (all types) active in the tracked element.\n     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n     * @property {Boolean} buttonDownAny - Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'container-exit', {\n        tracker: event.eventSource,\n        position: event.position,\n        buttons: event.buttons,\n        pointers: event.pointers,\n        insideElementPressed: event.insideElementPressed,\n        buttonDownAny: event.buttonDownAny,\n        originalEvent: event.originalEvent\n    });\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Page update routines ( aka Views - for future reference )\n///////////////////////////////////////////////////////////////////////////////\n\nfunction updateMulti( viewer ) {\n    updateOnce( viewer );\n\n    // Request the next frame, unless we've been closed\n    if ( viewer.isOpen() ) {\n        viewer._updateRequestId = scheduleUpdate( viewer, updateMulti );\n    } else {\n        viewer._updateRequestId = false;\n    }\n}\n\nfunction updateOnce( viewer ) {\n\n    //viewer.profiler.beginUpdate();\n\n    if (viewer._opening) {\n        return;\n    }\n\n    if (viewer.autoResize) {\n        var containerSize = _getSafeElemSize(viewer.container);\n        var prevContainerSize = THIS[viewer.hash].prevContainerSize;\n        if (!containerSize.equals(prevContainerSize)) {\n            var viewport = viewer.viewport;\n            if (viewer.preserveImageSizeOnResize) {\n                var resizeRatio = prevContainerSize.x / containerSize.x;\n                var zoom = viewport.getZoom() * resizeRatio;\n                var center = viewport.getCenter();\n                viewport.resize(containerSize, false);\n                viewport.zoomTo(zoom, null, true);\n                viewport.panTo(center, true);\n            } else {\n                // maintain image position\n                var oldBounds = viewport.getBounds();\n                viewport.resize(containerSize, true);\n                viewport.fitBoundsWithConstraints(oldBounds, true);\n            }\n            THIS[viewer.hash].prevContainerSize = containerSize;\n            THIS[viewer.hash].forceRedraw = true;\n        }\n    }\n\n    var viewportChange = viewer.viewport.update();\n    var animated = viewer.world.update() || viewportChange;\n\n    if (viewportChange) {\n        /**\n         * Raised when any spring animation update occurs (zoom, pan, etc.),\n         * before the viewer has drawn the new location.\n         *\n         * @event viewport-change\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        viewer.raiseEvent('viewport-change');\n    }\n\n    if( viewer.referenceStrip ){\n        animated = viewer.referenceStrip.update( viewer.viewport ) || animated;\n    }\n\n    if ( !THIS[ viewer.hash ].animating && animated ) {\n        /**\n         * Raised when any spring animation starts (zoom, pan, etc.).\n         *\n         * @event animation-start\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        viewer.raiseEvent( \"animation-start\" );\n        abortControlsAutoHide( viewer );\n    }\n\n    if ( animated || THIS[ viewer.hash ].forceRedraw || viewer.world.needsDraw() ) {\n        drawWorld( viewer );\n        viewer._drawOverlays();\n        if( viewer.navigator ){\n          viewer.navigator.update( viewer.viewport );\n        }\n\n        THIS[ viewer.hash ].forceRedraw = false;\n\n        if (animated) {\n            /**\n             * Raised when any spring animation update occurs (zoom, pan, etc.),\n             * after the viewer has drawn the new location.\n             *\n             * @event animation\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            viewer.raiseEvent( \"animation\" );\n        }\n    }\n\n    if ( THIS[ viewer.hash ].animating && !animated ) {\n        /**\n         * Raised when any spring animation ends (zoom, pan, etc.).\n         *\n         * @event animation-finish\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        viewer.raiseEvent( \"animation-finish\" );\n\n        if ( !THIS[ viewer.hash ].mouseInside ) {\n            beginControlsAutoHide( viewer );\n        }\n    }\n\n    THIS[ viewer.hash ].animating = animated;\n\n    //viewer.profiler.endUpdate();\n}\n\nfunction drawWorld( viewer ) {\n    viewer.imageLoader.clear();\n    viewer.drawer.clear();\n    viewer.world.draw();\n\n    /**\n     * <em>- Needs documentation -</em>\n     *\n     * @event update-viewport\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    viewer.raiseEvent( 'update-viewport', {} );\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// Navigation Controls\n///////////////////////////////////////////////////////////////////////////////\nfunction resolveUrl( prefix, url ) {\n    return prefix ? prefix + url : url;\n}\n\n\n\nfunction beginZoomingIn() {\n    THIS[ this.hash ].lastZoomTime = $.now();\n    THIS[ this.hash ].zoomFactor = this.zoomPerSecond;\n    THIS[ this.hash ].zooming = true;\n    scheduleZoom( this );\n}\n\n\nfunction beginZoomingOut() {\n    THIS[ this.hash ].lastZoomTime = $.now();\n    THIS[ this.hash ].zoomFactor = 1.0 / this.zoomPerSecond;\n    THIS[ this.hash ].zooming = true;\n    scheduleZoom( this );\n}\n\n\nfunction endZooming() {\n    THIS[ this.hash ].zooming = false;\n}\n\n\nfunction scheduleZoom( viewer ) {\n    $.requestAnimationFrame( $.delegate( viewer, doZoom ) );\n}\n\n\nfunction doZoom() {\n    var currentTime,\n        deltaTime,\n        adjustedFactor;\n\n    if ( THIS[ this.hash ].zooming && this.viewport) {\n        currentTime     = $.now();\n        deltaTime       = currentTime - THIS[ this.hash ].lastZoomTime;\n        adjustedFactor  = Math.pow( THIS[ this.hash ].zoomFactor, deltaTime / 1000 );\n\n        this.viewport.zoomBy( adjustedFactor );\n        this.viewport.applyConstraints();\n        THIS[ this.hash ].lastZoomTime = currentTime;\n        scheduleZoom( this );\n    }\n}\n\n\nfunction doSingleZoomIn() {\n    if ( this.viewport ) {\n        THIS[ this.hash ].zooming = false;\n        this.viewport.zoomBy(\n            this.zoomPerClick / 1.0\n        );\n        this.viewport.applyConstraints();\n    }\n}\n\n\nfunction doSingleZoomOut() {\n    if ( this.viewport ) {\n        THIS[ this.hash ].zooming = false;\n        this.viewport.zoomBy(\n            1.0 / this.zoomPerClick\n        );\n        this.viewport.applyConstraints();\n    }\n}\n\n\nfunction lightUp() {\n    this.buttons.emulateEnter();\n    this.buttons.emulateExit();\n}\n\n\nfunction onHome() {\n    if ( this.viewport ) {\n        this.viewport.goHome();\n    }\n}\n\n\nfunction onFullScreen() {\n    if ( this.isFullPage() && !$.isFullScreen() ) {\n        // Is fullPage but not fullScreen\n        this.setFullPage( false );\n    } else {\n        this.setFullScreen( !this.isFullPage() );\n    }\n    // correct for no mouseout event on change\n    if ( this.buttons ) {\n        this.buttons.emulateExit();\n    }\n    this.fullPageButton.element.focus();\n    if ( this.viewport ) {\n        this.viewport.applyConstraints();\n    }\n}\n\nfunction onRotateLeft() {\n    if ( this.viewport ) {\n        var currRotation = this.viewport.getRotation();\n\n        if ( this.viewport.flipped ){\n          currRotation = $.positiveModulo(currRotation + this.rotationIncrement, 360);\n        } else {\n          currRotation = $.positiveModulo(currRotation - this.rotationIncrement, 360);\n        }\n        this.viewport.setRotation(currRotation);\n    }\n}\n\nfunction onRotateRight() {\n    if ( this.viewport ) {\n        var currRotation = this.viewport.getRotation();\n\n        if ( this.viewport.flipped ){\n          currRotation = $.positiveModulo(currRotation - this.rotationIncrement, 360);\n        } else {\n          currRotation = $.positiveModulo(currRotation + this.rotationIncrement, 360);\n        }\n        this.viewport.setRotation(currRotation);\n    }\n}\n/**\n * Note: When pressed flip control button\n */\nfunction onFlip() {\n   this.viewport.toggleFlip();\n}\n\nfunction onPrevious(){\n    var previous = this._sequenceIndex - 1;\n    if(this.navPrevNextWrap && previous < 0){\n        previous += this.tileSources.length;\n    }\n    this.goToPage( previous );\n}\n\n\nfunction onNext(){\n    var next = this._sequenceIndex + 1;\n    if(this.navPrevNextWrap && next >= this.tileSources.length){\n        next = 0;\n    }\n    this.goToPage( next );\n}\n\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Navigator\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class Navigator\n * @classdesc The Navigator provides a small view of the current image as fixed\n * while representing the viewport as a moving box serving as a frame\n * of reference in the larger viewport as to which portion of the image\n * is currently being examined.  The navigator's viewport can be interacted\n * with using the keyboard or the mouse.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.Viewer\n * @extends OpenSeadragon.EventSource\n * @param {Object} options\n */\n$.Navigator = function( options ){\n\n    var viewer      = options.viewer,\n        _this = this,\n        viewerSize,\n        navigatorSize;\n\n    //We may need to create a new element and id if they did not\n    //provide the id for the existing element\n    if( !options.id ){\n        options.id              = 'navigator-' + $.now();\n        this.element            = $.makeNeutralElement( \"div\" );\n        options.controlOptions  = {\n            anchor:           $.ControlAnchor.TOP_RIGHT,\n            attachToViewer:   true,\n            autoFade:         options.autoFade\n        };\n\n        if( options.position ){\n            if( 'BOTTOM_RIGHT' == options.position ){\n               options.controlOptions.anchor = $.ControlAnchor.BOTTOM_RIGHT;\n            } else if( 'BOTTOM_LEFT' == options.position ){\n               options.controlOptions.anchor = $.ControlAnchor.BOTTOM_LEFT;\n            } else if( 'TOP_RIGHT' == options.position ){\n               options.controlOptions.anchor = $.ControlAnchor.TOP_RIGHT;\n            } else if( 'TOP_LEFT' == options.position ){\n               options.controlOptions.anchor = $.ControlAnchor.TOP_LEFT;\n            } else if( 'ABSOLUTE' == options.position ){\n               options.controlOptions.anchor = $.ControlAnchor.ABSOLUTE;\n               options.controlOptions.top = options.top;\n               options.controlOptions.left = options.left;\n               options.controlOptions.height = options.height;\n               options.controlOptions.width = options.width;\n            }\n        }\n\n    } else {\n        this.element            = document.getElementById( options.id );\n        options.controlOptions  = {\n            anchor:           $.ControlAnchor.NONE,\n            attachToViewer:   false,\n            autoFade:         false\n        };\n    }\n    this.element.id         = options.id;\n    this.element.className  += ' navigator';\n\n    options = $.extend( true, {\n        sizeRatio:     $.DEFAULT_SETTINGS.navigatorSizeRatio\n    }, options, {\n        element:                this.element,\n        tabIndex:               -1, // No keyboard navigation, omit from tab order\n        //These need to be overridden to prevent recursion since\n        //the navigator is a viewer and a viewer has a navigator\n        showNavigator:          false,\n        mouseNavEnabled:        false,\n        showNavigationControl:  false,\n        showSequenceControl:    false,\n        immediateRender:        true,\n        blendTime:              0,\n        animationTime:          0,\n        autoResize:             options.autoResize,\n        // prevent resizing the navigator from adding unwanted space around the image\n        minZoomImageRatio:      1.0,\n        background:             options.background,\n        opacity:                options.opacity,\n        borderColor:            options.borderColor,\n        displayRegionColor:     options.displayRegionColor\n    });\n\n    options.minPixelRatio = this.minPixelRatio = viewer.minPixelRatio;\n\n    $.setElementTouchActionNone( this.element );\n\n    this.borderWidth = 2;\n    //At some browser magnification levels the display regions lines up correctly, but at some there appears to\n    //be a one pixel gap.\n    this.fudge = new $.Point(1, 1);\n    this.totalBorderWidths = new $.Point(this.borderWidth * 2, this.borderWidth * 2).minus(this.fudge);\n\n\n    if ( options.controlOptions.anchor != $.ControlAnchor.NONE ) {\n        (function( style, borderWidth ){\n            style.margin        = '0px';\n            style.border        = borderWidth + 'px solid ' + options.borderColor;\n            style.padding       = '0px';\n            style.background    = options.background;\n            style.opacity       = options.opacity;\n            style.overflow      = 'hidden';\n        }( this.element.style, this.borderWidth));\n    }\n\n    this.displayRegion           = $.makeNeutralElement( \"div\" );\n    this.displayRegion.id        = this.element.id + '-displayregion';\n    this.displayRegion.className = 'displayregion';\n\n    (function( style, borderWidth ){\n        style.position      = 'relative';\n        style.top           = '0px';\n        style.left          = '0px';\n        style.fontSize      = '0px';\n        style.overflow      = 'hidden';\n        style.border        = borderWidth + 'px solid ' + options.displayRegionColor;\n        style.margin        = '0px';\n        style.padding       = '0px';\n        //TODO: IE doesn't like this property being set\n        //try{ style.outline  = '2px auto #909'; }catch(e){/*ignore*/}\n\n        style.background    = 'transparent';\n\n        // We use square bracket notation on the statement below, because float is a keyword.\n        // This is important for the Google Closure compiler, if nothing else.\n        /*jshint sub:true */\n        style['float']      = 'left'; //Webkit\n\n        style.cssFloat      = 'left'; //Firefox\n        style.styleFloat    = 'left'; //IE\n        style.zIndex        = 999999999;\n        style.cursor        = 'default';\n    }( this.displayRegion.style, this.borderWidth ));\n\n    this.displayRegionContainer = $.makeNeutralElement(\"div\");\n    this.displayRegionContainer.id = this.element.id + '-displayregioncontainer';\n    this.displayRegionContainer.className = \"displayregioncontainer\";\n    this.displayRegionContainer.style.width = \"100%\";\n    this.displayRegionContainer.style.height = \"100%\";\n\n    viewer.addControl(\n        this.element,\n        options.controlOptions\n    );\n\n    this._resizeWithViewer = options.controlOptions.anchor != $.ControlAnchor.ABSOLUTE &&\n        options.controlOptions.anchor != $.ControlAnchor.NONE;\n\n    if ( this._resizeWithViewer ) {\n        if ( options.width && options.height ) {\n            this.element.style.height = typeof (options.height) == \"number\" ? (options.height + 'px') : options.height;\n            this.element.style.width  = typeof (options.width) == \"number\" ? (options.width + 'px') : options.width;\n        } else {\n            viewerSize = $.getElementSize( viewer.element );\n            this.element.style.height = Math.round( viewerSize.y * options.sizeRatio ) + 'px';\n            this.element.style.width  = Math.round( viewerSize.x * options.sizeRatio ) + 'px';\n            this.oldViewerSize = viewerSize;\n        }\n        navigatorSize = $.getElementSize( this.element );\n        this.elementArea = navigatorSize.x * navigatorSize.y;\n    }\n\n    this.oldContainerSize = new $.Point( 0, 0 );\n\n    $.Viewer.apply( this, [ options ] );\n\n    this.displayRegionContainer.appendChild(this.displayRegion);\n    this.element.getElementsByTagName('div')[0].appendChild(this.displayRegionContainer);\n\n    function rotate(degrees) {\n        _setTransformRotate(_this.displayRegionContainer, degrees);\n        _setTransformRotate(_this.displayRegion, -degrees);\n        _this.viewport.setRotation(degrees);\n    }\n    if (options.navigatorRotate) {\n        var degrees = options.viewer.viewport ?\n            options.viewer.viewport.getRotation() :\n            options.viewer.degrees || 0;\n\n        rotate(degrees);\n        options.viewer.addHandler(\"rotate\", function (args) {\n            rotate(args.degrees);\n        });\n    }\n\n\n    // Remove the base class' (Viewer's) innerTracker and replace it with our own\n    this.innerTracker.destroy();\n    this.innerTracker = new $.MouseTracker({\n        element:         this.element,\n        dragHandler:     $.delegate( this, onCanvasDrag ),\n        clickHandler:    $.delegate( this, onCanvasClick ),\n        releaseHandler:  $.delegate( this, onCanvasRelease ),\n        scrollHandler:   $.delegate( this, onCanvasScroll )\n    });\n\n    this.addHandler(\"reset-size\", function() {\n        if (_this.viewport) {\n            _this.viewport.goHome(true);\n        }\n    });\n\n    viewer.world.addHandler(\"item-index-change\", function(event) {\n        window.setTimeout(function(){\n            var item = _this.world.getItemAt(event.previousIndex);\n            _this.world.setItemIndex(item, event.newIndex);\n        }, 1);\n    });\n\n    viewer.world.addHandler(\"remove-item\", function(event) {\n        var theirItem = event.item;\n        var myItem = _this._getMatchingItem(theirItem);\n        if (myItem) {\n            _this.world.removeItem(myItem);\n        }\n    });\n\n    this.update(viewer.viewport);\n};\n\n$.extend( $.Navigator.prototype, $.EventSource.prototype, $.Viewer.prototype, /** @lends OpenSeadragon.Navigator.prototype */{\n\n    /**\n     * Used to notify the navigator when its size has changed.\n     * Especially useful when {@link OpenSeadragon.Options}.navigatorAutoResize is set to false and the navigator is resizable.\n     * @function\n     */\n    updateSize: function () {\n        if ( this.viewport ) {\n            var containerSize = new $.Point(\n                    (this.container.clientWidth === 0 ? 1 : this.container.clientWidth),\n                    (this.container.clientHeight === 0 ? 1 : this.container.clientHeight)\n                );\n\n            if ( !containerSize.equals( this.oldContainerSize ) ) {\n                this.viewport.resize( containerSize, true );\n                this.viewport.goHome(true);\n                this.oldContainerSize = containerSize;\n                this.drawer.clear();\n                this.world.draw();\n            }\n        }\n    },\n    /**\n      /* Flip navigator element\n      * @param {Boolean} state - Flip state to set.\n      */\n    setFlip: function(state) {\n      this.viewport.setFlip(state);\n\n      this.setDisplayTransform(this.viewer.viewport.getFlip() ? \"scale(-1,1)\" : \"scale(1,1)\");\n      return this;\n    },\n\n    setDisplayTransform: function(rule) {\n      setElementTransform(this.displayRegion, rule);\n      setElementTransform(this.canvas, rule);\n      setElementTransform(this.element, rule);\n    },\n\n    /**\n     * Used to update the navigator minimap's viewport rectangle when a change in the viewer's viewport occurs.\n     * @function\n     * @param {OpenSeadragon.Viewport} The viewport this navigator is tracking.\n     */\n    update: function( viewport ) {\n\n        var viewerSize,\n            newWidth,\n            newHeight,\n            bounds,\n            topleft,\n            bottomright;\n\n        viewerSize = $.getElementSize( this.viewer.element );\n        if ( this._resizeWithViewer && viewerSize.x && viewerSize.y && !viewerSize.equals( this.oldViewerSize ) ) {\n            this.oldViewerSize = viewerSize;\n\n            if ( this.maintainSizeRatio || !this.elementArea) {\n                newWidth  = viewerSize.x * this.sizeRatio;\n                newHeight = viewerSize.y * this.sizeRatio;\n            } else {\n                newWidth = Math.sqrt(this.elementArea * (viewerSize.x / viewerSize.y));\n                newHeight = this.elementArea / newWidth;\n            }\n\n            this.element.style.width  = Math.round( newWidth ) + 'px';\n            this.element.style.height = Math.round( newHeight ) + 'px';\n\n            if (!this.elementArea) {\n                this.elementArea = newWidth * newHeight;\n            }\n\n            this.updateSize();\n        }\n\n        if (viewport && this.viewport) {\n            bounds      = viewport.getBoundsNoRotate(true);\n            topleft     = this.viewport.pixelFromPointNoRotate(bounds.getTopLeft(), false);\n            bottomright = this.viewport.pixelFromPointNoRotate(bounds.getBottomRight(), false)\n                .minus( this.totalBorderWidths );\n\n            //update style for navigator-box\n            var style = this.displayRegion.style;\n            style.display = this.world.getItemCount() ? 'block' : 'none';\n\n            style.top    = Math.round( topleft.y ) + 'px';\n            style.left   = Math.round( topleft.x ) + 'px';\n\n            var width = Math.abs( topleft.x - bottomright.x );\n            var height = Math.abs( topleft.y - bottomright.y );\n            // make sure width and height are non-negative so IE doesn't throw\n            style.width  = Math.round( Math.max( width, 0 ) ) + 'px';\n            style.height = Math.round( Math.max( height, 0 ) ) + 'px';\n        }\n\n    },\n\n    // overrides Viewer.addTiledImage\n    addTiledImage: function(options) {\n        var _this = this;\n\n        var original = options.originalTiledImage;\n        delete options.original;\n\n        var optionsClone = $.extend({}, options, {\n            success: function(event) {\n                var myItem = event.item;\n                myItem._originalForNavigator = original;\n                _this._matchBounds(myItem, original, true);\n\n                function matchBounds() {\n                    _this._matchBounds(myItem, original);\n                }\n\n                function matchOpacity() {\n                    _this._matchOpacity(myItem, original);\n                }\n\n                function matchCompositeOperation() {\n                    _this._matchCompositeOperation(myItem, original);\n                }\n\n                original.addHandler('bounds-change', matchBounds);\n                original.addHandler('clip-change', matchBounds);\n                original.addHandler('opacity-change', matchOpacity);\n                original.addHandler('composite-operation-change', matchCompositeOperation);\n            }\n        });\n\n        return $.Viewer.prototype.addTiledImage.apply(this, [optionsClone]);\n    },\n\n    // private\n    _getMatchingItem: function(theirItem) {\n        var count = this.world.getItemCount();\n        var item;\n        for (var i = 0; i < count; i++) {\n            item = this.world.getItemAt(i);\n            if (item._originalForNavigator === theirItem) {\n                return item;\n            }\n        }\n\n        return null;\n    },\n\n    // private\n    _matchBounds: function(myItem, theirItem, immediately) {\n        var bounds = theirItem.getBoundsNoRotate();\n        myItem.setPosition(bounds.getTopLeft(), immediately);\n        myItem.setWidth(bounds.width, immediately);\n        myItem.setRotation(theirItem.getRotation(), immediately);\n        myItem.setClip(theirItem.getClip());\n    },\n\n    // private\n    _matchOpacity: function(myItem, theirItem) {\n        myItem.setOpacity(theirItem.opacity);\n    },\n\n    // private\n    _matchCompositeOperation: function(myItem, theirItem) {\n        myItem.setCompositeOperation(theirItem.compositeOperation);\n    }\n});\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onCanvasClick( event ) {\n  var canvasClickEventArgs = {\n    tracker: event.eventSource,\n    position: event.position,\n    quick: event.quick,\n    shift: event.shift,\n    originalEvent: event.originalEvent,\n    preventDefaultAction: event.preventDefaultAction\n  };\n  /**\n   * Raised when a click event occurs on the {@link OpenSeadragon.Viewer#navigator} element.\n   *\n   * @event navigator-click\n   * @memberof OpenSeadragon.Viewer\n   * @type {object}\n   * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n   * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n   * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n   * @property {Boolean} quick - True only if the clickDistThreshold and clickTimeThreshold are both passed. Useful for differentiating between clicks and drags.\n   * @property {Boolean} shift - True if the shift key was pressed during this event.\n   * @property {Object} originalEvent - The original DOM event.\n   * @property {?Object} userData - Arbitrary subscriber-defined object.\n   * @property {Boolean} preventDefaultAction - Set to true to prevent default click to zoom behaviour. Default: false.\n   */\n\n   this.viewer.raiseEvent('navigator-click', canvasClickEventArgs);\n\n   if ( !canvasClickEventArgs.preventDefaultAction && event.quick && this.viewer.viewport && (this.panVertical || this.panHorizontal)) {\n    if(this.viewer.viewport.flipped) {\n      event.position.x = this.viewport.getContainerSize().x - event.position.x;\n    }\n    var target = this.viewport.pointFromPixel(event.position);\n    if (!this.panVertical) {\n      // perform only horizonal pan\n      target.y = this.viewer.viewport.getCenter(true).y;\n    } else if (!this.panHorizontal) {\n      // perform only vertical pan\n      target.x = this.viewer.viewport.getCenter(true).x;\n    }\n    this.viewer.viewport.panTo(target);\n    this.viewer.viewport.applyConstraints();\n  }\n\n}\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onCanvasDrag( event ) {\n    var canvasDragEventArgs = {\n      tracker: event.eventSource,\n      position: event.position,\n      delta: event.delta,\n      speed: event.speed,\n      direction: event.direction,\n      shift: event.shift,\n      originalEvent: event.originalEvent,\n      preventDefaultAction: event.preventDefaultAction\n    };\n    /**\n     * Raised when a drag event occurs on the {@link OpenSeadragon.Viewer#navigator} element.\n     *\n     * @event navigator-drag\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {OpenSeadragon.Point} delta - The x,y components of the difference between start drag and end drag.\n     * @property {Number} speed - Current computed speed, in pixels per second.\n     * @property {Number} direction - Current computed direction, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n     * @property {Boolean} shift - True if the shift key was pressed during this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     * @property {Boolean} preventDefaultAction - Set to true to prevent default click to zoom behaviour. Default: false.\n     */\n     this.viewer.raiseEvent('navigator-drag', canvasDragEventArgs);\n\n     if ( !canvasDragEventArgs.preventDefaultAction && this.viewer.viewport ) {\n       if( !this.panHorizontal ){\n            event.delta.x = 0;\n        }\n        if( !this.panVertical ){\n            event.delta.y = 0;\n        }\n\n        if(this.viewer.viewport.flipped){\n            event.delta.x = -event.delta.x;\n        }\n\n        this.viewer.viewport.panBy(\n            this.viewport.deltaPointsFromPixels(\n                event.delta\n            )\n        );\n        if( this.viewer.constrainDuringPan ){\n            this.viewer.viewport.applyConstraints();\n        }\n    }\n}\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onCanvasRelease( event ) {\n    if ( event.insideElementPressed && this.viewer.viewport ) {\n        this.viewer.viewport.applyConstraints();\n    }\n}\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onCanvasScroll( event ) {\n    /**\n     * Raised when a scroll event occurs on the {@link OpenSeadragon.Viewer#navigator} element (mouse wheel, touch pinch, etc.).\n     *\n     * @event navigator-scroll\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Number} scroll - The scroll delta for the event.\n     * @property {Boolean} shift - True if the shift key was pressed during this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.viewer.raiseEvent( 'navigator-scroll', {\n        tracker: event.eventSource,\n        position: event.position,\n        scroll: event.scroll,\n        shift: event.shift,\n        originalEvent: event.originalEvent\n    });\n\n    //don't scroll the page up and down if the user is scrolling\n    //in the navigator\n    return false;\n}\n\n/**\n    * @function\n    * @private\n    * @param {Object} element\n    * @param {Number} degrees\n    */\nfunction _setTransformRotate( element, degrees ) {\n  setElementTransform(element, \"rotate(\" + degrees + \"deg)\");\n}\n\nfunction setElementTransform( element, rule ) {\n  element.style.webkitTransform = rule;\n  element.style.mozTransform = rule;\n  element.style.msTransform = rule;\n  element.style.oTransform = rule;\n  element.style.transform = rule;\n}\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - getString/setString\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n//TODO: I guess this is where the i18n needs to be reimplemented.  I'll look\n//      into existing patterns for i18n in javascript but i think that mimicking\n//      pythons gettext might be a reasonable approach.\nvar I18N = {\n    Errors: {\n        Dzc:            \"Sorry, we don't support Deep Zoom Collections!\",\n        Dzi:            \"Hmm, this doesn't appear to be a valid Deep Zoom Image.\",\n        Xml:            \"Hmm, this doesn't appear to be a valid Deep Zoom Image.\",\n        ImageFormat:    \"Sorry, we don't support {0}-based Deep Zoom Images.\",\n        Security:       \"It looks like a security restriction stopped us from \" +\n                        \"loading this Deep Zoom Image.\",\n        Status:         \"This space unintentionally left blank ({0} {1}).\",\n        OpenFailed:     \"Unable to open {0}: {1}\"\n    },\n\n    Tooltips: {\n        FullPage:       \"Toggle full page\",\n        Home:           \"Go home\",\n        ZoomIn:         \"Zoom in\",\n        ZoomOut:        \"Zoom out\",\n        NextPage:       \"Next page\",\n        PreviousPage:   \"Previous page\",\n        RotateLeft:     \"Rotate left\",\n        RotateRight:    \"Rotate right\",\n        Flip:           \"Flip Horizontally\"\n    }\n};\n\n$.extend( $, /** @lends OpenSeadragon */{\n\n    /**\n     * @function\n     * @param {String} property\n     */\n    getString: function( prop ) {\n\n        var props   = prop.split('.'),\n            string  = null,\n            args    = arguments,\n            container = I18N,\n            i;\n\n        for (i = 0; i < props.length - 1; i++) {\n            // in case not a subproperty\n            container = container[ props[ i ] ] || {};\n        }\n        string = container[ props[ i ] ];\n\n        if ( typeof ( string ) != \"string\" ) {\n            $.console.log( \"Untranslated source string:\", prop );\n            string = \"\"; // FIXME: this breaks gettext()-style convention, which would return source\n        }\n\n        return string.replace(/\\{\\d+\\}/g, function(capture) {\n            var i = parseInt( capture.match( /\\d+/ ), 10 ) + 1;\n            return i < args.length ?\n                args[ i ] :\n                \"\";\n        });\n    },\n\n    /**\n     * @function\n     * @param {String} property\n     * @param {*} value\n     */\n    setString: function( prop, value ) {\n\n        var props     = prop.split('.'),\n            container = I18N,\n            i;\n\n        for ( i = 0; i < props.length - 1; i++ ) {\n            if ( !container[ props[ i ] ] ) {\n                container[ props[ i ] ] = {};\n            }\n            container = container[ props[ i ] ];\n        }\n\n        container[ props[ i ] ] = value;\n    }\n\n});\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Point\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class Point\n * @classdesc A Point is really used as a 2-dimensional vector, equally useful for\n * representing a point on a plane, or the height and width of a plane\n * not requiring any other frame of reference.\n *\n * @memberof OpenSeadragon\n * @param {Number} [x] The vector component 'x'. Defaults to the origin at 0.\n * @param {Number} [y] The vector component 'y'. Defaults to the origin at 0.\n */\n$.Point = function( x, y ) {\n    /**\n     * The vector component 'x'.\n     * @member {Number} x\n     * @memberof OpenSeadragon.Point#\n     */\n    this.x = typeof ( x ) == \"number\" ? x : 0;\n    /**\n     * The vector component 'y'.\n     * @member {Number} y\n     * @memberof OpenSeadragon.Point#\n     */\n    this.y = typeof ( y ) == \"number\" ? y : 0;\n};\n\n/** @lends OpenSeadragon.Point.prototype */\n$.Point.prototype = {\n    /**\n     * @function\n     * @returns {OpenSeadragon.Point} a duplicate of this Point\n     */\n    clone: function() {\n        return new $.Point(this.x, this.y);\n    },\n\n    /**\n     * Add another Point to this point and return a new Point.\n     * @function\n     * @param {OpenSeadragon.Point} point The point to add vector components.\n     * @returns {OpenSeadragon.Point} A new point representing the sum of the\n     *  vector components\n     */\n    plus: function( point ) {\n        return new $.Point(\n            this.x + point.x,\n            this.y + point.y\n        );\n    },\n\n    /**\n     * Subtract another Point to this point and return a new Point.\n     * @function\n     * @param {OpenSeadragon.Point} point The point to subtract vector components.\n     * @returns {OpenSeadragon.Point} A new point representing the subtraction of the\n     *  vector components\n     */\n    minus: function( point ) {\n        return new $.Point(\n            this.x - point.x,\n            this.y - point.y\n        );\n    },\n\n    /**\n     * Multiply this point by a factor and return a new Point.\n     * @function\n     * @param {Number} factor The factor to multiply vector components.\n     * @returns {OpenSeadragon.Point} A new point representing the multiplication\n     *  of the vector components by the factor\n     */\n    times: function( factor ) {\n        return new $.Point(\n            this.x * factor,\n            this.y * factor\n        );\n    },\n\n    /**\n     * Divide this point by a factor and return a new Point.\n     * @function\n     * @param {Number} factor The factor to divide vector components.\n     * @returns {OpenSeadragon.Point} A new point representing the division of the\n     *  vector components by the factor\n     */\n    divide: function( factor ) {\n        return new $.Point(\n            this.x / factor,\n            this.y / factor\n        );\n    },\n\n    /**\n     * Compute the opposite of this point and return a new Point.\n     * @function\n     * @returns {OpenSeadragon.Point} A new point representing the opposite of the\n     *  vector components\n     */\n    negate: function() {\n        return new $.Point( -this.x, -this.y );\n    },\n\n    /**\n     * Compute the distance between this point and another point.\n     * @function\n     * @param {OpenSeadragon.Point} point The point to compute the distance with.\n     * @returns {Number} The distance between the 2 points\n     */\n    distanceTo: function( point ) {\n        return Math.sqrt(\n            Math.pow( this.x - point.x, 2 ) +\n            Math.pow( this.y - point.y, 2 )\n        );\n    },\n\n    /**\n     * Compute the squared distance between this point and another point.\n     * Useful for optimizing things like comparing distances.\n     * @function\n     * @param {OpenSeadragon.Point} point The point to compute the squared distance with.\n     * @returns {Number} The squared distance between the 2 points\n     */\n    squaredDistanceTo: function( point ) {\n        return Math.pow( this.x - point.x, 2 ) +\n            Math.pow( this.y - point.y, 2 );\n    },\n\n    /**\n     * Apply a function to each coordinate of this point and return a new point.\n     * @function\n     * @param {function} func The function to apply to each coordinate.\n     * @returns {OpenSeadragon.Point} A new point with the coordinates computed\n     * by the specified function\n     */\n    apply: function( func ) {\n        return new $.Point( func( this.x ), func( this.y ) );\n    },\n\n    /**\n     * Check if this point is equal to another one.\n     * @function\n     * @param {OpenSeadragon.Point} point The point to compare this point with.\n     * @returns {Boolean} true if they are equal, false otherwise.\n     */\n    equals: function( point ) {\n        return (\n            point instanceof $.Point\n        ) && (\n            this.x === point.x\n        ) && (\n            this.y === point.y\n        );\n    },\n\n    /**\n     * Rotates the point around the specified pivot\n     * From http://stackoverflow.com/questions/4465931/rotate-rectangle-around-a-point\n     * @function\n     * @param {Number} degress to rotate around the pivot.\n     * @param {OpenSeadragon.Point} [pivot=(0,0)] Point around which to rotate.\n     * Defaults to the origin.\n     * @returns {OpenSeadragon.Point}. A new point representing the point rotated around the specified pivot\n     */\n    rotate: function (degrees, pivot) {\n        pivot = pivot || new $.Point(0, 0);\n        var cos;\n        var sin;\n        // Avoid float computations when possible\n        if (degrees % 90 === 0) {\n            var d = $.positiveModulo(degrees, 360);\n            switch (d) {\n                case 0:\n                    cos = 1;\n                    sin = 0;\n                    break;\n                case 90:\n                    cos = 0;\n                    sin = 1;\n                    break;\n                case 180:\n                    cos = -1;\n                    sin = 0;\n                    break;\n                case 270:\n                    cos = 0;\n                    sin = -1;\n                    break;\n            }\n        } else {\n            var angle = degrees * Math.PI / 180.0;\n            cos = Math.cos(angle);\n            sin = Math.sin(angle);\n        }\n        var x = cos * (this.x - pivot.x) - sin * (this.y - pivot.y) + pivot.x;\n        var y = sin * (this.x - pivot.x) + cos * (this.y - pivot.y) + pivot.y;\n        return new $.Point(x, y);\n    },\n\n    /**\n     * Convert this point to a string in the format (x,y) where x and y are\n     * rounded to the nearest integer.\n     * @function\n     * @returns {String} A string representation of this point.\n     */\n    toString: function() {\n        return \"(\" + (Math.round(this.x * 100) / 100) + \",\" + (Math.round(this.y * 100) / 100) + \")\";\n    }\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - TileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n\n/**\n * @class TileSource\n * @classdesc The TileSource contains the most basic implementation required to create a\n * smooth transition between layers in an image pyramid. It has only a single key\n * interface that must be implemented to complete its key functionality:\n * 'getTileUrl'.  It also has several optional interfaces that can be\n * implemented if a new TileSource wishes to support configuration via a simple\n * object or array ('configure') and if the tile source supports or requires\n * configuration via retrieval of a document on the network ala AJAX or JSONP,\n * ('getImageInfo').\n * <br/>\n * By default the image pyramid is split into N layers where the image's longest\n * side in M (in pixels), where N is the smallest integer which satisfies\n *      <strong>2^(N+1) >= M</strong>.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.EventSource\n * @param {Object} options\n *      You can either specify a URL, or literally define the TileSource (by specifying\n *      width, height, tileSize, tileOverlap, minLevel, and maxLevel). For the former,\n *      the extending class is expected to implement 'getImageInfo' and 'configure'.\n *      For the latter, the construction is assumed to occur through\n *      the extending classes implementation of 'configure'.\n * @param {String} [options.url]\n *      The URL for the data necessary for this TileSource.\n * @param {String} [options.referenceStripThumbnailUrl]\n *      The URL for a thumbnail image to be used by the reference strip\n * @param {Function} [options.success]\n *      A function to be called upon successful creation.\n * @param {Boolean} [options.ajaxWithCredentials]\n *      If this TileSource needs to make an AJAX call, this specifies whether to set\n *      the XHR's withCredentials (for accessing secure data).\n * @param {Object} [options.ajaxHeaders]\n *      A set of headers to include in AJAX requests.\n * @param {Number} [options.width]\n *      Width of the source image at max resolution in pixels.\n * @param {Number} [options.height]\n *      Height of the source image at max resolution in pixels.\n * @param {Number} [options.tileSize]\n *      The size of the tiles to assumed to make up each pyramid layer in pixels.\n *      Tile size determines the point at which the image pyramid must be\n *      divided into a matrix of smaller images.\n *      Use options.tileWidth and options.tileHeight to support non-square tiles.\n * @param {Number} [options.tileWidth]\n *      The width of the tiles to assumed to make up each pyramid layer in pixels.\n * @param {Number} [options.tileHeight]\n *      The height of the tiles to assumed to make up each pyramid layer in pixels.\n * @param {Number} [options.tileOverlap]\n *      The number of pixels each tile is expected to overlap touching tiles.\n * @param {Number} [options.minLevel]\n *      The minimum level to attempt to load.\n * @param {Number} [options.maxLevel]\n *      The maximum level to attempt to load.\n */\n$.TileSource = function( width, height, tileSize, tileOverlap, minLevel, maxLevel ) {\n    var _this = this;\n\n    var args = arguments,\n        options,\n        i;\n\n    if( $.isPlainObject( width ) ){\n        options = width;\n    }else{\n        options = {\n            width: args[0],\n            height: args[1],\n            tileSize: args[2],\n            tileOverlap: args[3],\n            minLevel: args[4],\n            maxLevel: args[5]\n        };\n    }\n\n    //Tile sources supply some events, namely 'ready' when they must be configured\n    //by asynchronously fetching their configuration data.\n    $.EventSource.call( this );\n\n    //we allow options to override anything we don't treat as\n    //required via idiomatic options or which is functionally\n    //set depending on the state of the readiness of this tile\n    //source\n    $.extend( true, this, options );\n\n    if (!this.success) {\n        //Any functions that are passed as arguments are bound to the ready callback\n        for ( i = 0; i < arguments.length; i++ ) {\n            if ( $.isFunction( arguments[ i ] ) ) {\n                this.success = arguments[ i ];\n                //only one callback per constructor\n                break;\n            }\n        }\n    }\n\n    if (this.success) {\n        this.addHandler( 'ready', function ( event ) {\n            _this.success( event );\n        } );\n    }\n\n    /**\n     * Ratio of width to height\n     * @member {Number} aspectRatio\n     * @memberof OpenSeadragon.TileSource#\n     */\n    /**\n     * Vector storing x and y dimensions ( width and height respectively ).\n     * @member {OpenSeadragon.Point} dimensions\n     * @memberof OpenSeadragon.TileSource#\n     */\n    /**\n     * The overlap in pixels each tile shares with its adjacent neighbors.\n     * @member {Number} tileOverlap\n     * @memberof OpenSeadragon.TileSource#\n     */\n    /**\n     * The minimum pyramid level this tile source supports or should attempt to load.\n     * @member {Number} minLevel\n     * @memberof OpenSeadragon.TileSource#\n     */\n    /**\n     * The maximum pyramid level this tile source supports or should attempt to load.\n     * @member {Number} maxLevel\n     * @memberof OpenSeadragon.TileSource#\n     */\n    /**\n     *\n     * @member {Boolean} ready\n     * @memberof OpenSeadragon.TileSource#\n     */\n\n    if( 'string' == $.type( arguments[ 0 ] ) ){\n        this.url = arguments[0];\n    }\n\n    if (this.url) {\n        //in case the getImageInfo method is overridden and/or implies an\n        //async mechanism set some safe defaults first\n        this.aspectRatio = 1;\n        this.dimensions  = new $.Point( 10, 10 );\n        this._tileWidth  = 0;\n        this._tileHeight = 0;\n        this.tileOverlap = 0;\n        this.minLevel    = 0;\n        this.maxLevel    = 0;\n        this.ready       = false;\n        //configuration via url implies the extending class\n        //implements and 'configure'\n        this.getImageInfo( this.url );\n\n    } else {\n\n        //explicit configuration via positional args in constructor\n        //or the more idiomatic 'options' object\n        this.ready       = true;\n        this.aspectRatio = (options.width && options.height) ?\n            (options.width / options.height) : 1;\n        this.dimensions  = new $.Point( options.width, options.height );\n\n        if ( this.tileSize ){\n            this._tileWidth = this._tileHeight = this.tileSize;\n            delete this.tileSize;\n        } else {\n            if( this.tileWidth ){\n                // We were passed tileWidth in options, but we want to rename it\n                // with a leading underscore to make clear that it is not safe to directly modify it\n                this._tileWidth = this.tileWidth;\n                delete this.tileWidth;\n            } else {\n                this._tileWidth = 0;\n            }\n\n            if( this.tileHeight ){\n                // See note above about renaming this.tileWidth\n                this._tileHeight = this.tileHeight;\n                delete this.tileHeight;\n            } else {\n                this._tileHeight = 0;\n            }\n        }\n\n        this.tileOverlap = options.tileOverlap ? options.tileOverlap : 0;\n        this.minLevel    = options.minLevel ? options.minLevel : 0;\n        this.maxLevel    = ( undefined !== options.maxLevel && null !== options.maxLevel ) ?\n            options.maxLevel : (\n                ( options.width && options.height ) ? Math.ceil(\n                    Math.log( Math.max( options.width, options.height ) ) /\n                    Math.log( 2 )\n                ) : 0\n            );\n        if( this.success && $.isFunction( this.success ) ){\n            this.success( this );\n        }\n    }\n\n\n};\n\n/** @lends OpenSeadragon.TileSource.prototype */\n$.TileSource.prototype = {\n\n    getTileSize: function( level ) {\n        $.console.error(\n            \"[TileSource.getTileSize] is deprecated. \" +\n            \"Use TileSource.getTileWidth() and TileSource.getTileHeight() instead\"\n        );\n        return this._tileWidth;\n    },\n\n    /**\n     * Return the tileWidth for a given level.\n     * Subclasses should override this if tileWidth can be different at different levels\n     *   such as in IIIFTileSource.  Code should use this function rather than reading\n     *   from ._tileWidth directly.\n     * @function\n     * @param {Number} level\n     */\n    getTileWidth: function( level ) {\n        if (!this._tileWidth) {\n            return this.getTileSize(level);\n        }\n        return this._tileWidth;\n    },\n\n    /**\n     * Return the tileHeight for a given level.\n     * Subclasses should override this if tileHeight can be different at different levels\n     *   such as in IIIFTileSource.  Code should use this function rather than reading\n     *   from ._tileHeight directly.\n     * @function\n     * @param {Number} level\n     */\n    getTileHeight: function( level ) {\n        if (!this._tileHeight) {\n            return this.getTileSize(level);\n        }\n        return this._tileHeight;\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getLevelScale: function( level ) {\n\n        // see https://github.com/openseadragon/openseadragon/issues/22\n        // we use the tilesources implementation of getLevelScale to generate\n        // a memoized re-implementation\n        var levelScaleCache = {},\n            i;\n        for( i = 0; i <= this.maxLevel; i++ ){\n            levelScaleCache[ i ] = 1 / Math.pow(2, this.maxLevel - i);\n        }\n        this.getLevelScale = function( _level ){\n            return levelScaleCache[ _level ];\n        };\n        return this.getLevelScale( level );\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getNumTiles: function( level ) {\n        var scale = this.getLevelScale( level ),\n            x = Math.ceil( scale * this.dimensions.x / this.getTileWidth(level) ),\n            y = Math.ceil( scale * this.dimensions.y / this.getTileHeight(level) );\n\n        return new $.Point( x, y );\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getPixelRatio: function( level ) {\n        var imageSizeScaled = this.dimensions.times( this.getLevelScale( level ) ),\n            rx = 1.0 / imageSizeScaled.x,\n            ry = 1.0 / imageSizeScaled.y;\n\n        return new $.Point(rx, ry);\n    },\n\n\n    /**\n     * @function\n     * @returns {Number} The highest level in this tile source that can be contained in a single tile.\n     */\n    getClosestLevel: function() {\n        var i,\n            tiles;\n\n        for (i = this.minLevel + 1; i <= this.maxLevel; i++){\n            tiles = this.getNumTiles(i);\n            if (tiles.x > 1 || tiles.y > 1) {\n                break;\n            }\n        }\n\n        return i - 1;\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {OpenSeadragon.Point} point\n     */\n    getTileAtPoint: function(level, point) {\n        var validPoint = point.x >= 0 && point.x <= 1 &&\n            point.y >= 0 && point.y <= 1 / this.aspectRatio;\n        $.console.assert(validPoint, \"[TileSource.getTileAtPoint] must be called with a valid point.\");\n\n        var widthScaled = this.dimensions.x * this.getLevelScale(level);\n        var pixelX = point.x * widthScaled;\n        var pixelY = point.y * widthScaled;\n\n        var x = Math.floor(pixelX / this.getTileWidth(level));\n        var y = Math.floor(pixelY / this.getTileHeight(level));\n\n        // When point.x == 1 or point.y == 1 / this.aspectRatio we want to\n        // return the last tile of the row/column\n        if (point.x >= 1) {\n            x = this.getNumTiles(level).x - 1;\n        }\n        var EPSILON = 1e-15;\n        if (point.y >= 1 / this.aspectRatio - EPSILON) {\n            y = this.getNumTiles(level).y - 1;\n        }\n\n        return new $.Point(x, y);\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     * @param {Boolean} [isSource=false] Whether to return the source bounds of the tile.\n     * @returns {OpenSeadragon.Rect} Either where this tile fits (in normalized coordinates) or the\n     * portion of the tile to use as the source of the drawing operation (in pixels), depending on\n     * the isSource parameter.\n     */\n    getTileBounds: function( level, x, y, isSource ) {\n        var dimensionsScaled = this.dimensions.times( this.getLevelScale( level ) ),\n            tileWidth = this.getTileWidth(level),\n            tileHeight = this.getTileHeight(level),\n            px = ( x === 0 ) ? 0 : tileWidth * x - this.tileOverlap,\n            py = ( y === 0 ) ? 0 : tileHeight * y - this.tileOverlap,\n            sx = tileWidth + ( x === 0 ? 1 : 2 ) * this.tileOverlap,\n            sy = tileHeight + ( y === 0 ? 1 : 2 ) * this.tileOverlap,\n            scale = 1.0 / dimensionsScaled.x;\n\n        sx = Math.min( sx, dimensionsScaled.x - px );\n        sy = Math.min( sy, dimensionsScaled.y - py );\n\n        if (isSource) {\n            return new $.Rect(0, 0, sx, sy);\n        }\n\n        return new $.Rect( px * scale, py * scale, sx * scale, sy * scale );\n    },\n\n\n    /**\n     * Responsible for retrieving, and caching the\n     * image metadata pertinent to this TileSources implementation.\n     * @function\n     * @param {String} url\n     * @throws {Error}\n     */\n    getImageInfo: function( url ) {\n        var _this = this,\n            callbackName,\n            callback,\n            readySource,\n            options,\n            urlParts,\n            filename,\n            lastDot;\n\n\n        if( url ) {\n            urlParts = url.split( '/' );\n            filename = urlParts[ urlParts.length - 1 ];\n            lastDot  = filename.lastIndexOf( '.' );\n            if ( lastDot > -1 ) {\n                urlParts[ urlParts.length - 1 ] = filename.slice( 0, lastDot );\n            }\n        }\n\n        callback = function( data ){\n            if( typeof (data) === \"string\" ) {\n                data = $.parseXml( data );\n            }\n            var $TileSource = $.TileSource.determineType( _this, data, url );\n            if ( !$TileSource ) {\n                /**\n                 * Raised when an error occurs loading a TileSource.\n                 *\n                 * @event open-failed\n                 * @memberof OpenSeadragon.TileSource\n                 * @type {object}\n                 * @property {OpenSeadragon.TileSource} eventSource - A reference to the TileSource which raised the event.\n                 * @property {String} message\n                 * @property {String} source\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( 'open-failed', { message: \"Unable to load TileSource\", source: url } );\n                return;\n            }\n\n            options = $TileSource.prototype.configure.apply( _this, [ data, url ]);\n            if (options.ajaxWithCredentials === undefined) {\n                options.ajaxWithCredentials = _this.ajaxWithCredentials;\n            }\n\n            readySource = new $TileSource( options );\n            _this.ready = true;\n            /**\n             * Raised when a TileSource is opened and initialized.\n             *\n             * @event ready\n             * @memberof OpenSeadragon.TileSource\n             * @type {object}\n             * @property {OpenSeadragon.TileSource} eventSource - A reference to the TileSource which raised the event.\n             * @property {Object} tileSource\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            _this.raiseEvent( 'ready', { tileSource: readySource } );\n        };\n\n        if( url.match(/\\.js$/) ){\n            //TODO: Its not very flexible to require tile sources to end jsonp\n            //      request for info  with a url that ends with '.js' but for\n            //      now it's the only way I see to distinguish uniformly.\n            callbackName = url.split('/').pop().replace('.js', '');\n            $.jsonp({\n                url: url,\n                async: false,\n                callbackName: callbackName,\n                callback: callback\n            });\n        } else {\n            // request info via xhr asynchronously.\n            $.makeAjaxRequest( {\n                url: url,\n                withCredentials: this.ajaxWithCredentials,\n                headers: this.ajaxHeaders,\n                success: function( xhr ) {\n                    var data = processResponse( xhr );\n                    callback( data );\n                },\n                error: function ( xhr, exc ) {\n                    var msg;\n\n                    /*\n                        IE < 10 will block XHR requests to different origins. Any property access on the request\n                        object will raise an exception which we'll attempt to handle by formatting the original\n                        exception rather than the second one raised when we try to access xhr.status\n                     */\n                    try {\n                        msg = \"HTTP \" + xhr.status + \" attempting to load TileSource\";\n                    } catch ( e ) {\n                        var formattedExc;\n                        if ( typeof ( exc ) == \"undefined\" || !exc.toString ) {\n                            formattedExc = \"Unknown error\";\n                        } else {\n                            formattedExc = exc.toString();\n                        }\n\n                        msg = formattedExc + \" attempting to load TileSource\";\n                    }\n\n                    /***\n                     * Raised when an error occurs loading a TileSource.\n                     *\n                     * @event open-failed\n                     * @memberof OpenSeadragon.TileSource\n                     * @type {object}\n                     * @property {OpenSeadragon.TileSource} eventSource - A reference to the TileSource which raised the event.\n                     * @property {String} message\n                     * @property {String} source\n                     * @property {?Object} userData - Arbitrary subscriber-defined object.\n                     */\n                    _this.raiseEvent( 'open-failed', {\n                        message: msg,\n                        source: url\n                    });\n                }\n            });\n        }\n\n    },\n\n    /**\n     * Responsible determining if a the particular TileSource supports the\n     * data format ( and allowed to apply logic against the url the data was\n     * loaded from, if any ). Overriding implementations are expected to do\n     * something smart with data and / or url to determine support.  Also\n     * understand that iteration order of TileSources is not guarunteed so\n     * please make sure your data or url is expressive enough to ensure a simple\n     * and sufficient mechanisim for clear determination.\n     * @function\n     * @param {String|Object|Array|Document} data\n     * @param {String} url - the url the data was loaded\n     *      from if any.\n     * @return {Boolean}\n     */\n    supports: function( data, url ) {\n        return false;\n    },\n\n    /**\n     * Responsible for parsing and configuring the\n     * image metadata pertinent to this TileSources implementation.\n     * This method is not implemented by this class other than to throw an Error\n     * announcing you have to implement it.  Because of the variety of tile\n     * server technologies, and various specifications for building image\n     * pyramids, this method is here to allow easy integration.\n     * @function\n     * @param {String|Object|Array|Document} data\n     * @param {String} url - the url the data was loaded\n     *      from if any.\n     * @return {Object} options - A dictionary of keyword arguments sufficient\n     *      to configure this tile sources constructor.\n     * @throws {Error}\n     */\n    configure: function( data, url ) {\n        throw new Error( \"Method not implemented.\" );\n    },\n\n    /**\n     * Responsible for retrieving the url which will return an image for the\n     * region specified by the given x, y, and level components.\n     * This method is not implemented by this class other than to throw an Error\n     * announcing you have to implement it.  Because of the variety of tile\n     * server technologies, and various specifications for building image\n     * pyramids, this method is here to allow easy integration.\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     * @throws {Error}\n     */\n    getTileUrl: function( level, x, y ) {\n        throw new Error( \"Method not implemented.\" );\n    },\n\n    /**\n     * Responsible for retrieving the headers which will be attached to the image request for the\n     * region specified by the given x, y, and level components.\n     * This option is only relevant if {@link OpenSeadragon.Options}.loadTilesWithAjax is set to true.\n     * The headers returned here will override headers specified at the Viewer or TiledImage level.\n     * Specifying a falsy value for a header will clear its existing value set at the Viewer or\n     * TiledImage level (if any).\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {Object}\n     */\n    getTileAjaxHeaders: function( level, x, y ) {\n        return {};\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     */\n    tileExists: function( level, x, y ) {\n        var numTiles = this.getNumTiles( level );\n        return level >= this.minLevel &&\n               level <= this.maxLevel &&\n               x >= 0 &&\n               y >= 0 &&\n               x < numTiles.x &&\n               y < numTiles.y;\n    }\n};\n\n\n$.extend( true, $.TileSource.prototype, $.EventSource.prototype );\n\n\n/**\n * Decides whether to try to process the response as xml, json, or hand back\n * the text\n * @private\n * @inner\n * @function\n * @param {XMLHttpRequest} xhr - the completed network request\n */\nfunction processResponse( xhr ){\n    var responseText = xhr.responseText,\n        status       = xhr.status,\n        statusText,\n        data;\n\n    if ( !xhr ) {\n        throw new Error( $.getString( \"Errors.Security\" ) );\n    } else if ( xhr.status !== 200 && xhr.status !== 0 ) {\n        status     = xhr.status;\n        statusText = ( status == 404 ) ?\n            \"Not Found\" :\n            xhr.statusText;\n        throw new Error( $.getString( \"Errors.Status\", status, statusText ) );\n    }\n\n    if( responseText.match(/\\s*<.*/) ){\n        try{\n        data = ( xhr.responseXML && xhr.responseXML.documentElement ) ?\n            xhr.responseXML :\n            $.parseXml( responseText );\n        } catch (e){\n            data = xhr.responseText;\n        }\n    }else if( responseText.match(/\\s*[\\{\\[].*/) ){\n        try{\n          data = $.parseJSON(responseText);\n        } catch(e){\n          data =  responseText;\n        }\n    }else{\n        data = responseText;\n    }\n    return data;\n}\n\n\n/**\n * Determines the TileSource Implementation by introspection of OpenSeadragon\n * namespace, calling each TileSource implementation of 'isType'\n * @private\n * @inner\n * @function\n * @param {Object|Array|Document} data - the tile source configuration object\n * @param {String} url - the url where the tile source configuration object was\n *      loaded from, if any.\n */\n$.TileSource.determineType = function( tileSource, data, url ){\n    var property;\n    for( property in OpenSeadragon ){\n        if( property.match(/.+TileSource$/) &&\n            $.isFunction( OpenSeadragon[ property ] ) &&\n            $.isFunction( OpenSeadragon[ property ].prototype.supports ) &&\n            OpenSeadragon[ property ].prototype.supports.call( tileSource, data, url )\n        ){\n            return OpenSeadragon[ property ];\n        }\n    }\n\n    $.console.error( \"No TileSource was able to open %s %s\", url, data );\n};\n\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - DziTileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class DziTileSource\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.TileSource\n * @param {Number|Object} width - the pixel width of the image or the idiomatic\n *      options object which is used instead of positional arguments.\n * @param {Number} height\n * @param {Number} tileSize\n * @param {Number} tileOverlap\n * @param {String} tilesUrl\n * @param {String} fileFormat\n * @param {OpenSeadragon.DisplayRect[]} displayRects\n * @property {String} tilesUrl\n * @property {String} fileFormat\n * @property {OpenSeadragon.DisplayRect[]} displayRects\n */\n$.DziTileSource = function( width, height, tileSize, tileOverlap, tilesUrl, fileFormat, displayRects, minLevel, maxLevel ) {\n    var i,\n        rect,\n        level,\n        options;\n\n    if( $.isPlainObject( width ) ){\n        options = width;\n    }else{\n        options = {\n            width: arguments[ 0 ],\n            height: arguments[ 1 ],\n            tileSize: arguments[ 2 ],\n            tileOverlap: arguments[ 3 ],\n            tilesUrl: arguments[ 4 ],\n            fileFormat: arguments[ 5 ],\n            displayRects: arguments[ 6 ],\n            minLevel: arguments[ 7 ],\n            maxLevel: arguments[ 8 ]\n        };\n    }\n\n    this._levelRects  = {};\n    this.tilesUrl     = options.tilesUrl;\n    this.fileFormat   = options.fileFormat;\n    this.displayRects = options.displayRects;\n\n    if ( this.displayRects ) {\n        for ( i = this.displayRects.length - 1; i >= 0; i-- ) {\n            rect = this.displayRects[ i ];\n            for ( level = rect.minLevel; level <= rect.maxLevel; level++ ) {\n                if ( !this._levelRects[ level ] ) {\n                    this._levelRects[ level ] = [];\n                }\n                this._levelRects[ level ].push( rect );\n            }\n        }\n    }\n\n    $.TileSource.apply( this, [ options ] );\n\n};\n\n$.extend( $.DziTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.DziTileSource.prototype */{\n\n\n    /**\n     * Determine if the data and/or url imply the image service is supported by\n     * this tile source.\n     * @function\n     * @param {Object|Array} data\n     * @param {String} optional - url\n     */\n    supports: function( data, url ){\n        var ns;\n        if ( data.Image ) {\n            ns = data.Image.xmlns;\n        } else if ( data.documentElement) {\n            if (\"Image\" == data.documentElement.localName || \"Image\" == data.documentElement.tagName) {\n                ns = data.documentElement.namespaceURI;\n            }\n        }\n\n        ns = (ns || '').toLowerCase();\n\n        return (ns.indexOf('schemas.microsoft.com/deepzoom/2008') !== -1 ||\n            ns.indexOf('schemas.microsoft.com/deepzoom/2009') !== -1);\n    },\n\n    /**\n     *\n     * @function\n     * @param {Object|XMLDocument} data - the raw configuration\n     * @param {String} url - the url the data was retrieved from if any.\n     * @return {Object} options - A dictionary of keyword arguments sufficient\n     *      to configure this tile sources constructor.\n     */\n    configure: function( data, url ){\n\n        var options;\n\n        if( !$.isPlainObject(data) ){\n\n            options = configureFromXML( this, data );\n\n        }else{\n\n            options = configureFromObject( this, data );\n        }\n\n        if (url && !options.tilesUrl) {\n            options.tilesUrl = url.replace(\n                    /([^\\/]+?)(\\.(dzi|xml|js)?(\\?[^\\/]*)?)?\\/?$/, '$1_files/');\n\n            if (url.search(/\\.(dzi|xml|js)\\?/) != -1) {\n                options.queryParams = url.match(/\\?.*/);\n            }else{\n                options.queryParams = '';\n            }\n        }\n\n        return options;\n    },\n\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     */\n    getTileUrl: function( level, x, y ) {\n        return [ this.tilesUrl, level, '/', x, '_', y, '.', this.fileFormat, this.queryParams ].join( '' );\n    },\n\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     */\n    tileExists: function( level, x, y ) {\n        var rects = this._levelRects[ level ],\n            rect,\n            scale,\n            xMin,\n            yMin,\n            xMax,\n            yMax,\n            i;\n\n        if ((this.minLevel && level < this.minLevel) || (this.maxLevel && level > this.maxLevel)) {\n            return false;\n        }\n\n        if ( !rects || !rects.length ) {\n            return true;\n        }\n\n        for ( i = rects.length - 1; i >= 0; i-- ) {\n            rect = rects[ i ];\n\n            if ( level < rect.minLevel || level > rect.maxLevel ) {\n                continue;\n            }\n\n            scale = this.getLevelScale( level );\n            xMin = rect.x * scale;\n            yMin = rect.y * scale;\n            xMax = xMin + rect.width * scale;\n            yMax = yMin + rect.height * scale;\n\n            xMin = Math.floor( xMin / this._tileWidth );\n            yMin = Math.floor( yMin / this._tileWidth ); // DZI tiles are square, so we just use _tileWidth\n            xMax = Math.ceil( xMax / this._tileWidth );\n            yMax = Math.ceil( yMax / this._tileWidth );\n\n            if ( xMin <= x && x < xMax && yMin <= y && y < yMax ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n});\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction configureFromXML( tileSource, xmlDoc ){\n\n    if ( !xmlDoc || !xmlDoc.documentElement ) {\n        throw new Error( $.getString( \"Errors.Xml\" ) );\n    }\n\n    var root           = xmlDoc.documentElement,\n        rootName       = root.localName || root.tagName,\n        ns             = xmlDoc.documentElement.namespaceURI,\n        configuration  = null,\n        displayRects   = [],\n        dispRectNodes,\n        dispRectNode,\n        rectNode,\n        sizeNode,\n        i;\n\n    if ( rootName == \"Image\" ) {\n\n        try {\n            sizeNode = root.getElementsByTagName(\"Size\" )[ 0 ];\n            if (sizeNode === undefined) {\n                sizeNode = root.getElementsByTagNameNS(ns, \"Size\" )[ 0 ];\n            }\n\n            configuration = {\n                Image: {\n                    xmlns:       \"http://schemas.microsoft.com/deepzoom/2008\",\n                    Url:         root.getAttribute( \"Url\" ),\n                    Format:      root.getAttribute( \"Format\" ),\n                    DisplayRect: null,\n                    Overlap:     parseInt( root.getAttribute( \"Overlap\" ), 10 ),\n                    TileSize:    parseInt( root.getAttribute( \"TileSize\" ), 10 ),\n                    Size: {\n                        Height: parseInt( sizeNode.getAttribute( \"Height\" ), 10 ),\n                        Width:  parseInt( sizeNode.getAttribute( \"Width\" ), 10 )\n                    }\n                }\n            };\n\n            if ( !$.imageFormatSupported( configuration.Image.Format ) ) {\n                throw new Error(\n                    $.getString( \"Errors.ImageFormat\", configuration.Image.Format.toUpperCase() )\n                );\n            }\n\n            dispRectNodes = root.getElementsByTagName(\"DisplayRect\" );\n            if (dispRectNodes === undefined) {\n                dispRectNodes = root.getElementsByTagNameNS(ns, \"DisplayRect\" )[ 0 ];\n            }\n\n            for ( i = 0; i < dispRectNodes.length; i++ ) {\n                dispRectNode = dispRectNodes[ i ];\n                rectNode     = dispRectNode.getElementsByTagName(\"Rect\" )[ 0 ];\n                if (rectNode === undefined) {\n                    rectNode = dispRectNode.getElementsByTagNameNS(ns, \"Rect\" )[ 0 ];\n                }\n\n                displayRects.push({\n                    Rect: {\n                        X: parseInt( rectNode.getAttribute( \"X\" ), 10 ),\n                        Y: parseInt( rectNode.getAttribute( \"Y\" ), 10 ),\n                        Width: parseInt( rectNode.getAttribute( \"Width\" ), 10 ),\n                        Height: parseInt( rectNode.getAttribute( \"Height\" ), 10 ),\n                        MinLevel: parseInt( dispRectNode.getAttribute( \"MinLevel\" ), 10 ),\n                        MaxLevel: parseInt( dispRectNode.getAttribute( \"MaxLevel\" ), 10 )\n                    }\n                });\n            }\n\n            if( displayRects.length ){\n                configuration.Image.DisplayRect = displayRects;\n            }\n\n            return configureFromObject( tileSource, configuration );\n\n        } catch ( e ) {\n            throw (e instanceof Error) ?\n                e :\n                new Error( $.getString(\"Errors.Dzi\") );\n        }\n    } else if ( rootName == \"Collection\" ) {\n        throw new Error( $.getString( \"Errors.Dzc\" ) );\n    } else if ( rootName == \"Error\" ) {\n        var messageNode = root.getElementsByTagName(\"Message\")[0];\n        var message = messageNode.firstChild.nodeValue;\n        throw new Error(message);\n    }\n\n    throw new Error( $.getString( \"Errors.Dzi\" ) );\n}\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction configureFromObject( tileSource, configuration ){\n    var imageData     = configuration.Image,\n        tilesUrl      = imageData.Url,\n        fileFormat    = imageData.Format,\n        sizeData      = imageData.Size,\n        dispRectData  = imageData.DisplayRect || [],\n        width         = parseInt( sizeData.Width, 10 ),\n        height        = parseInt( sizeData.Height, 10 ),\n        tileSize      = parseInt( imageData.TileSize, 10 ),\n        tileOverlap   = parseInt( imageData.Overlap, 10 ),\n        displayRects  = [],\n        rectData,\n        i;\n\n    //TODO: need to figure out out to better handle image format compatibility\n    //      which actually includes additional file formats like xml and pdf\n    //      and plain text for various tilesource implementations to avoid low\n    //      level errors.\n    //\n    //      For now, just don't perform the check.\n    //\n    /*if ( !imageFormatSupported( fileFormat ) ) {\n        throw new Error(\n            $.getString( \"Errors.ImageFormat\", fileFormat.toUpperCase() )\n        );\n    }*/\n\n    for ( i = 0; i < dispRectData.length; i++ ) {\n        rectData = dispRectData[ i ].Rect;\n\n        displayRects.push( new $.DisplayRect(\n            parseInt( rectData.X, 10 ),\n            parseInt( rectData.Y, 10 ),\n            parseInt( rectData.Width, 10 ),\n            parseInt( rectData.Height, 10 ),\n            parseInt( rectData.MinLevel, 10 ),\n            parseInt( rectData.MaxLevel, 10 )\n        ));\n    }\n\n    return $.extend(true, {\n        width: width, /* width *required */\n        height: height, /* height *required */\n        tileSize: tileSize, /* tileSize *required */\n        tileOverlap: tileOverlap, /* tileOverlap *required */\n        minLevel: null, /* minLevel */\n        maxLevel: null, /* maxLevel */\n        tilesUrl: tilesUrl, /* tilesUrl */\n        fileFormat: fileFormat, /* fileFormat */\n        displayRects: displayRects /* displayRects */\n    }, configuration );\n\n}\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - IIIFTileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class IIIFTileSource\n * @classdesc A client implementation of the International Image Interoperability Framework\n * Format: Image API 1.0 - 2.1\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.TileSource\n * @see http://iiif.io/api/image/\n * @param {String} [options.tileFormat='jpg']\n *      The extension that will be used when requiring tiles.\n */\n$.IIIFTileSource = function( options ){\n\n    /* eslint-disable camelcase */\n\n    $.extend( true, this, options );\n\n    if ( !( this.height && this.width && this['@id'] ) ) {\n        throw new Error( 'IIIF required parameters not provided.' );\n    }\n\n    options.tileSizePerScaleFactor = {};\n\n    this.tileFormat = this.tileFormat || 'jpg';\n\n    // N.B. 2.0 renamed scale_factors to scaleFactors\n    if ( this.tile_width && this.tile_height ) {\n        options.tileWidth = this.tile_width;\n        options.tileHeight = this.tile_height;\n    } else if ( this.tile_width ) {\n        options.tileSize = this.tile_width;\n    } else if ( this.tile_height ) {\n        options.tileSize = this.tile_height;\n    } else if ( this.tiles ) {\n        // Version 2.0 forwards\n        if ( this.tiles.length == 1 ) {\n            options.tileWidth  = this.tiles[0].width;\n            // Use height if provided, otherwise assume square tiles and use width.\n            options.tileHeight = this.tiles[0].height || this.tiles[0].width;\n            this.scale_factors = this.tiles[0].scaleFactors;\n        } else {\n            // Multiple tile sizes at different levels\n            this.scale_factors = [];\n            for (var t = 0; t < this.tiles.length; t++ ) {\n                for (var sf = 0; sf < this.tiles[t].scaleFactors.length; sf++) {\n                    var scaleFactor = this.tiles[t].scaleFactors[sf];\n                    this.scale_factors.push(scaleFactor);\n                    options.tileSizePerScaleFactor[scaleFactor] = {\n                        width: this.tiles[t].width,\n                        height: this.tiles[t].height || this.tiles[t].width\n                    };\n                }\n            }\n        }\n    } else if ( canBeTiled(options.profile) ) {\n        // use the largest of tileOptions that is smaller than the short dimension\n        var shortDim = Math.min( this.height, this.width ),\n            tileOptions = [256, 512, 1024],\n            smallerTiles = [];\n\n        for ( var c = 0; c < tileOptions.length; c++ ) {\n            if ( tileOptions[c] <= shortDim ) {\n                smallerTiles.push( tileOptions[c] );\n            }\n        }\n\n        if ( smallerTiles.length > 0 ) {\n            options.tileSize = Math.max.apply( null, smallerTiles );\n        } else {\n            // If we're smaller than 256, just use the short side.\n            options.tileSize = shortDim;\n        }\n    } else if (this.sizes && this.sizes.length > 0) {\n        // This info.json can't be tiled, but we can still construct a legacy pyramid from the sizes array.\n        // In this mode, IIIFTileSource will call functions from the abstract baseTileSource or the\n        // LegacyTileSource instead of performing IIIF tiling.\n        this.emulateLegacyImagePyramid = true;\n\n        options.levels = constructLevels( this );\n        // use the largest available size to define tiles\n        $.extend( true, options, {\n            width: options.levels[ options.levels.length - 1 ].width,\n            height: options.levels[ options.levels.length - 1 ].height,\n            tileSize: Math.max( options.height, options.width ),\n            tileOverlap: 0,\n            minLevel: 0,\n            maxLevel: options.levels.length - 1\n        });\n        this.levels = options.levels;\n    } else {\n        $.console.error(\"Nothing in the info.json to construct image pyramids from\");\n    }\n\n    if (!options.maxLevel && !this.emulateLegacyImagePyramid) {\n        if (!this.scale_factors) {\n            options.maxLevel = Number(Math.ceil(Math.log(Math.max(this.width, this.height), 2)));\n        } else {\n            var maxScaleFactor = Math.max.apply(null, this.scale_factors);\n            options.maxLevel = Math.round(Math.log(maxScaleFactor) * Math.LOG2E);\n        }\n    }\n\n    $.TileSource.apply( this, [ options ] );\n};\n\n$.extend( $.IIIFTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.IIIFTileSource.prototype */{\n    /**\n     * Determine if the data and/or url imply the image service is supported by\n     * this tile source.\n     * @function\n     * @param {Object|Array} data\n     * @param {String} optional - url\n     */\n\n    supports: function( data, url ) {\n        // Version 2.0 and forwards\n        if (data.protocol && data.protocol == 'http://iiif.io/api/image') {\n            return true;\n        // Version 1.1\n        } else if ( data['@context'] && (\n            data['@context'] == \"http://library.stanford.edu/iiif/image-api/1.1/context.json\" ||\n            data['@context'] == \"http://iiif.io/api/image/1/context.json\") ) {\n            // N.B. the iiif.io context is wrong, but where the representation lives so likely to be used\n            return true;\n\n        // Version 1.0\n        } else if ( data.profile &&\n            data.profile.indexOf(\"http://library.stanford.edu/iiif/image-api/compliance.html\") === 0) {\n            return true;\n        } else if ( data.identifier && data.width && data.height ) {\n            return true;\n        } else if ( data.documentElement &&\n            \"info\" == data.documentElement.tagName &&\n            \"http://library.stanford.edu/iiif/image-api/ns/\" ==\n                data.documentElement.namespaceURI) {\n            return true;\n\n        // Not IIIF\n        } else {\n            return false;\n        }\n    },\n\n    /**\n     *\n     * @function\n     * @param {Object} data - the raw configuration\n     * @example <caption>IIIF 1.1 Info Looks like this</caption>\n     * {\n     *   \"@context\" : \"http://library.stanford.edu/iiif/image-api/1.1/context.json\",\n     *   \"@id\" : \"http://iiif.example.com/prefix/1E34750D-38DB-4825-A38A-B60A345E591C\",\n     *   \"width\" : 6000,\n     *   \"height\" : 4000,\n     *   \"scale_factors\" : [ 1, 2, 4 ],\n     *   \"tile_width\" : 1024,\n     *   \"tile_height\" : 1024,\n     *   \"formats\" : [ \"jpg\", \"png\" ],\n     *   \"qualities\" : [ \"native\", \"grey\" ],\n     *   \"profile\" : \"http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0\"\n     * }\n     */\n    configure: function( data, url ){\n        // Try to deduce our version and fake it upwards if needed\n        if ( !$.isPlainObject(data) ) {\n            var options = configureFromXml10( data );\n            options['@context'] = \"http://iiif.io/api/image/1.0/context.json\";\n            options['@id'] = url.replace('/info.xml', '');\n            return options;\n        } else {\n            if ( !data['@context'] ) {\n                data['@context'] = 'http://iiif.io/api/image/1.0/context.json';\n                data['@id'] = url.replace('/info.json', '');\n            }\n            if(data.preferredFormats) {\n                for (var f = 0; f < data.preferredFormats.length; f++ ) {\n                    if ( OpenSeadragon.imageFormatSupported(data.preferredFormats[f]) ) {\n                        data.tileFormat = data.preferredFormats[f];\n                        break;\n                    }\n                }\n            }\n            return data;\n        }\n    },\n\n    /**\n     * Return the tileWidth for the given level.\n     * @function\n     * @param {Number} level\n     */\n    getTileWidth: function( level ) {\n\n        if(this.emulateLegacyImagePyramid) {\n            return $.TileSource.prototype.getTileWidth.call(this, level);\n        }\n\n        var scaleFactor = Math.pow(2, this.maxLevel - level);\n\n        if (this.tileSizePerScaleFactor && this.tileSizePerScaleFactor[scaleFactor]) {\n            return this.tileSizePerScaleFactor[scaleFactor].width;\n        }\n        return this._tileWidth;\n    },\n\n    /**\n     * Return the tileHeight for the given level.\n     * @function\n     * @param {Number} level\n     */\n    getTileHeight: function( level ) {\n\n        if(this.emulateLegacyImagePyramid) {\n            return $.TileSource.prototype.getTileHeight.call(this, level);\n        }\n\n        var scaleFactor = Math.pow(2, this.maxLevel - level);\n\n        if (this.tileSizePerScaleFactor && this.tileSizePerScaleFactor[scaleFactor]) {\n            return this.tileSizePerScaleFactor[scaleFactor].height;\n        }\n        return this._tileHeight;\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getLevelScale: function ( level ) {\n\n        if(this.emulateLegacyImagePyramid) {\n            var levelScale = NaN;\n            if (this.levels.length > 0 && level >= this.minLevel && level <= this.maxLevel) {\n                levelScale =\n                    this.levels[level].width /\n                    this.levels[this.maxLevel].width;\n            }\n            return levelScale;\n        }\n\n        return $.TileSource.prototype.getLevelScale.call(this, level);\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getNumTiles: function( level ) {\n\n        if(this.emulateLegacyImagePyramid) {\n            var scale = this.getLevelScale(level);\n            if (scale) {\n                return new $.Point(1, 1);\n            } else {\n                return new $.Point(0, 0);\n            }\n        }\n\n        return $.TileSource.prototype.getNumTiles.call(this, level);\n    },\n\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {OpenSeadragon.Point} point\n     */\n    getTileAtPoint: function( level, point ) {\n\n        if(this.emulateLegacyImagePyramid) {\n            return new $.Point(0, 0);\n        }\n\n        return $.TileSource.prototype.getTileAtPoint.call(this, level, point);\n    },\n\n\n    /**\n     * Responsible for retrieving the url which will return an image for the\n     * region specified by the given x, y, and level components.\n     * @function\n     * @param {Number} level - z index\n     * @param {Number} x\n     * @param {Number} y\n     * @throws {Error}\n     */\n    getTileUrl: function( level, x, y ){\n\n        if(this.emulateLegacyImagePyramid) {\n            var url = null;\n            if ( this.levels.length > 0 && level >= this.minLevel && level <= this.maxLevel ) {\n                url = this.levels[ level ].url;\n            }\n            return url;\n        }\n\n        //# constants\n        var IIIF_ROTATION = '0',\n            //## get the scale (level as a decimal)\n            scale = Math.pow( 0.5, this.maxLevel - level ),\n\n            //# image dimensions at this level\n            levelWidth = Math.ceil( this.width * scale ),\n            levelHeight = Math.ceil( this.height * scale ),\n\n            //## iiif region\n            tileWidth,\n            tileHeight,\n            iiifTileSizeWidth,\n            iiifTileSizeHeight,\n            iiifRegion,\n            iiifTileX,\n            iiifTileY,\n            iiifTileW,\n            iiifTileH,\n            iiifSize,\n            iiifSizeW,\n            iiifQuality,\n            uri,\n            isv1;\n\n        tileWidth = this.getTileWidth(level);\n        tileHeight = this.getTileHeight(level);\n        iiifTileSizeWidth = Math.ceil( tileWidth / scale );\n        iiifTileSizeHeight = Math.ceil( tileHeight / scale );\n        isv1 = ( this['@context'].indexOf('/1.0/context.json') > -1 ||\n             this['@context'].indexOf('/1.1/context.json') > -1 ||\n             this['@context'].indexOf('/1/context.json') > -1 );\n        if (isv1) {\n            iiifQuality = \"native.\" + this.tileFormat;\n        } else {\n            iiifQuality = \"default.\" + this.tileFormat;\n        }\n        if ( levelWidth < tileWidth && levelHeight < tileHeight ){\n            if ( isv1 || levelWidth !== this.width ) {\n                iiifSize = levelWidth + \",\";\n            } else {\n                iiifSize = \"max\";\n            }\n            iiifRegion = 'full';\n        } else {\n            iiifTileX = x * iiifTileSizeWidth;\n            iiifTileY = y * iiifTileSizeHeight;\n            iiifTileW = Math.min( iiifTileSizeWidth, this.width - iiifTileX );\n            iiifTileH = Math.min( iiifTileSizeHeight, this.height - iiifTileY );\n            if ( x === 0 && y === 0 && iiifTileW === this.width && iiifTileH === this.height ) {\n                iiifRegion = \"full\";\n            } else {\n                iiifRegion = [ iiifTileX, iiifTileY, iiifTileW, iiifTileH ].join( ',' );\n            }\n            iiifSizeW = Math.ceil( iiifTileW * scale );\n            if ( (!isv1) && iiifSizeW === this.width ) {\n                iiifSize = \"max\";\n            } else {\n                iiifSize = iiifSizeW + \",\";\n            }\n        }\n        uri = [ this['@id'], iiifRegion, iiifSize, IIIF_ROTATION, iiifQuality ].join( '/' );\n\n        return uri;\n    }\n\n  });\n\n    /**\n     * Determine whether arbitrary tile requests can be made against a service with the given profile\n     * @function\n     * @param {array} profile - IIIF profile array\n     * @throws {Error}\n     */\n    function canBeTiled ( profile ) {\n        var level0Profiles = [\n            \"http://library.stanford.edu/iiif/image-api/compliance.html#level0\",\n            \"http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0\",\n            \"http://iiif.io/api/image/2/level0.json\"\n        ];\n        var isLevel0 = (level0Profiles.indexOf(profile[0]) !== -1);\n        var hasSizeByW = false;\n        if ( profile.length > 1 && profile[1].supports ) {\n            hasSizeByW = profile[1].supports.indexOf( \"sizeByW\" ) !== -1;\n        }\n        return !isLevel0 || hasSizeByW;\n    }\n\n    /**\n     * Build the legacy pyramid URLs (one tile per level)\n     * @function\n     * @param {object} options - infoJson\n     * @throws {Error}\n     */\n    function constructLevels(options) {\n        var levels = [];\n        for(var i = 0; i < options.sizes.length; i++) {\n            levels.push({\n                url: options['@id'] + '/full/' + options.sizes[i].width + ',/0/default.' + options.tileFormat,\n                width: options.sizes[i].width,\n                height: options.sizes[i].height\n            });\n        }\n        return levels.sort(function(a, b) {\n            return a.width - b.width;\n        });\n    }\n\n\n    function configureFromXml10(xmlDoc) {\n        //parse the xml\n        if ( !xmlDoc || !xmlDoc.documentElement ) {\n            throw new Error( $.getString( \"Errors.Xml\" ) );\n        }\n\n        var root            = xmlDoc.documentElement,\n            rootName        = root.tagName,\n            configuration   = null;\n\n        if ( rootName == \"info\" ) {\n            try {\n                configuration = {};\n                parseXML10( root, configuration );\n                return configuration;\n\n            } catch ( e ) {\n                throw (e instanceof Error) ?\n                    e :\n                    new Error( $.getString(\"Errors.IIIF\") );\n            }\n        }\n        throw new Error( $.getString( \"Errors.IIIF\" ) );\n    }\n\n    function parseXML10( node, configuration, property ) {\n        var i,\n            value;\n        if ( node.nodeType == 3 && property ) {//text node\n            value = node.nodeValue.trim();\n            if( value.match(/^\\d*$/)){\n                value = Number( value );\n            }\n            if( !configuration[ property ] ){\n                configuration[ property ] = value;\n            }else{\n                if( !$.isArray( configuration[ property ] ) ){\n                    configuration[ property ] = [ configuration[ property ] ];\n                }\n                configuration[ property ].push( value );\n            }\n        } else if( node.nodeType == 1 ){\n            for( i = 0; i < node.childNodes.length; i++ ){\n                parseXML10( node.childNodes[ i ], configuration, node.nodeName );\n            }\n        }\n    }\n\n\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - OsmTileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * Derived from the OSM tile source in Rainer Simon's seajax-utils project\n * <http://github.com/rsimon/seajax-utils>.  Rainer Simon has contributed\n * the included code to the OpenSeadragon project under the New BSD license;\n * see <https://github.com/openseadragon/openseadragon/issues/58>.\n */\n\n\n(function( $ ){\n\n/**\n * @class OsmTileSource\n * @classdesc A tilesource implementation for OpenStreetMap.<br><br>\n *\n * Note 1. Zoomlevels. Deep Zoom and OSM define zoom levels differently. In  Deep\n * Zoom, level 0 equals an image of 1x1 pixels. In OSM, level 0 equals an image of\n * 256x256 levels (see http://gasi.ch/blog/inside-deep-zoom-2). I.e. there is a\n * difference of log2(256)=8 levels.<br><br>\n *\n * Note 2. Image dimension. According to the OSM Wiki\n * (http://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Zoom_levels)\n * the highest Mapnik zoom level has 256.144x256.144 tiles, with a 256x256\n * pixel size. I.e. the Deep Zoom image dimension is 65.572.864x65.572.864\n * pixels.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.TileSource\n * @param {Number|Object} width - the pixel width of the image or the idiomatic\n *      options object which is used instead of positional arguments.\n * @param {Number} height\n * @param {Number} tileSize\n * @param {Number} tileOverlap\n * @param {String} tilesUrl\n */\n$.OsmTileSource = function( width, height, tileSize, tileOverlap, tilesUrl ) {\n    var options;\n\n    if( $.isPlainObject( width ) ){\n        options = width;\n    }else{\n        options = {\n            width: arguments[0],\n            height: arguments[1],\n            tileSize: arguments[2],\n            tileOverlap: arguments[3],\n            tilesUrl: arguments[4]\n        };\n    }\n    //apply default setting for standard public OpenStreatMaps service\n    //but allow them to be specified so fliks can host there own instance\n    //or apply against other services supportting the same standard\n    if( !options.width || !options.height ){\n        options.width = 65572864;\n        options.height = 65572864;\n    }\n    if( !options.tileSize ){\n        options.tileSize = 256;\n        options.tileOverlap = 0;\n    }\n    if( !options.tilesUrl ){\n        options.tilesUrl = \"http://tile.openstreetmap.org/\";\n    }\n    options.minLevel = 8;\n\n    $.TileSource.apply( this, [ options ] );\n\n};\n\n$.extend( $.OsmTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.OsmTileSource.prototype */{\n\n\n    /**\n     * Determine if the data and/or url imply the image service is supported by\n     * this tile source.\n     * @function\n     * @param {Object|Array} data\n     * @param {String} optional - url\n     */\n    supports: function( data, url ){\n        return (\n            data.type &&\n            \"openstreetmaps\" == data.type\n        );\n    },\n\n    /**\n     *\n     * @function\n     * @param {Object} data - the raw configuration\n     * @param {String} url - the url the data was retrieved from if any.\n     * @return {Object} options - A dictionary of keyword arguments sufficient\n     *      to configure this tile sources constructor.\n     */\n    configure: function( data, url ){\n        return data;\n    },\n\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     */\n    getTileUrl: function( level, x, y ) {\n        return this.tilesUrl + (level - 8) + \"/\" + x + \"/\" + y + \".png\";\n    }\n});\n\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - TmsTileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * Derived from the TMS tile source in Rainer Simon's seajax-utils project\n * <http://github.com/rsimon/seajax-utils>.  Rainer Simon has contributed\n * the included code to the OpenSeadragon project under the New BSD license;\n * see <https://github.com/openseadragon/openseadragon/issues/58>.\n */\n\n\n(function( $ ){\n\n/**\n * @class TmsTileSource\n * @classdesc A tilesource implementation for Tiled Map Services (TMS).\n * TMS tile scheme ( [ as supported by OpenLayers ] is described here\n * ( http://openlayers.org/dev/examples/tms.html ).\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.TileSource\n * @param {Number|Object} width - the pixel width of the image or the idiomatic\n *      options object which is used instead of positional arguments.\n * @param {Number} height\n * @param {Number} tileSize\n * @param {Number} tileOverlap\n * @param {String} tilesUrl\n */\n$.TmsTileSource = function( width, height, tileSize, tileOverlap, tilesUrl ) {\n    var options;\n\n    if( $.isPlainObject( width ) ){\n        options = width;\n    }else{\n        options = {\n            width: arguments[0],\n            height: arguments[1],\n            tileSize: arguments[2],\n            tileOverlap: arguments[3],\n            tilesUrl: arguments[4]\n        };\n    }\n    // TMS has integer multiples of 256 for width/height and adds buffer\n    // if necessary -> account for this!\n    var bufferedWidth = Math.ceil(options.width / 256) * 256,\n        bufferedHeight = Math.ceil(options.height / 256) * 256,\n        max;\n\n    // Compute number of zoomlevels in this tileset\n    if (bufferedWidth > bufferedHeight) {\n        max = bufferedWidth / 256;\n    } else {\n        max = bufferedHeight / 256;\n    }\n    options.maxLevel = Math.ceil(Math.log(max) / Math.log(2)) - 1;\n    options.tileSize = 256;\n    options.width = bufferedWidth;\n    options.height = bufferedHeight;\n\n    $.TileSource.apply( this, [ options ] );\n\n};\n\n$.extend( $.TmsTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.TmsTileSource.prototype */{\n\n\n    /**\n     * Determine if the data and/or url imply the image service is supported by\n     * this tile source.\n     * @function\n     * @param {Object|Array} data\n     * @param {String} optional - url\n     */\n    supports: function( data, url ){\n        return ( data.type && \"tiledmapservice\" == data.type );\n    },\n\n    /**\n     *\n     * @function\n     * @param {Object} data - the raw configuration\n     * @param {String} url - the url the data was retrieved from if any.\n     * @return {Object} options - A dictionary of keyword arguments sufficient\n     *      to configure this tile sources constructor.\n     */\n    configure: function( data, url ){\n        return data;\n    },\n\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     */\n    getTileUrl: function( level, x, y ) {\n        // Convert from Deep Zoom definition to TMS zoom definition\n        var yTiles = this.getNumTiles( level ).y - 1;\n\n        return this.tilesUrl + level + \"/\" + x + \"/\" + (yTiles - y) + \".png\";\n    }\n});\n\n\n}( OpenSeadragon ));\n\n(function($) {\n\n    /**\n     * @class ZoomifyTileSource\n     * @classdesc A tilesource implementation for the zoomify format.\n     *\n     * A description of the format can be found here:\n     * https://ecommons.cornell.edu/bitstream/handle/1813/5410/Introducing_Zoomify_Image.pdf\n     *\n     * There are two ways of creating a zoomify tilesource for openseadragon\n     *\n     * 1) Supplying all necessary information in the tilesource object. A minimal example object for this method looks like this:\n     *\n     * {\n     *      type: \"zoomifytileservice\",\n     *      width: 1000,\n     *      height: 1000,\n     *      tilesUrl: \"/test/data/zoomify/\"\n     * }\n     *\n     * The tileSize is currently hardcoded to 256 (the usual Zoomify default). The tileUrl must the path to the image _directory_.\n     *\n     * 2) Loading image metadata from xml file: (CURRENTLY NOT SUPPORTED)\n     *\n     * When creating zoomify formatted images one \"xml\" like file with name ImageProperties.xml\n     * will be created as well. Here is an example of such a file:\n     *\n     * <IMAGE_PROPERTIES WIDTH=\"1000\" HEIGHT=\"1000\" NUMTILES=\"21\" NUMIMAGES=\"1\" VERSION=\"1.8\" TILESIZE=\"256\" />\n     *\n     * To use this xml file as metadata source you must supply the path to the ImageProperties.xml file and leave out all other parameters:\n     * As stated above, this method of loading a zoomify tilesource is currently not supported\n     *\n     * {\n     *      type: \"zoomifytileservice\",\n     *      tilesUrl: \"/test/data/zoomify/ImageProperties.xml\"\n     * }\n\n    *\n    * @memberof OpenSeadragon\n     * @extends OpenSeadragon.TileSource\n     * @param {Number} width - the pixel width of the image.\n     * @param {Number} height\n     * @param {Number} tileSize\n     * @param {String} tilesUrl\n     */\n    $.ZoomifyTileSource = function(options) {\n        options.tileSize = 256;\n\n        var currentImageSize = {\n            x: options.width,\n            y: options.height\n        };\n        options.imageSizes = [{\n            x: options.width,\n            y: options.height\n        }];\n        options.gridSize = [this._getGridSize(options.width, options.height, options.tileSize)];\n\n        while (parseInt(currentImageSize.x, 10) > options.tileSize || parseInt(currentImageSize.y, 10) > options.tileSize) {\n            currentImageSize.x = Math.floor(currentImageSize.x / 2);\n            currentImageSize.y = Math.floor(currentImageSize.y / 2);\n            options.imageSizes.push({\n                x: currentImageSize.x,\n                y: currentImageSize.y\n            });\n            options.gridSize.push(this._getGridSize(currentImageSize.x, currentImageSize.y, options.tileSize));\n        }\n        options.imageSizes.reverse();\n        options.gridSize.reverse();\n        options.minLevel = 0;\n        options.maxLevel = options.gridSize.length - 1;\n\n        OpenSeadragon.TileSource.apply(this, [options]);\n    };\n\n    $.extend($.ZoomifyTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.ZoomifyTileSource.prototype */ {\n\n        //private\n        _getGridSize: function(width, height, tileSize) {\n            return {\n                x: Math.ceil(width / tileSize),\n                y: Math.ceil(height / tileSize)\n            };\n        },\n\n        //private\n        _calculateAbsoluteTileNumber: function(level, x, y) {\n            var num = 0;\n            var size = {};\n\n            //Sum up all tiles below the level we want the number of tiles\n            for (var z = 0; z < level; z++) {\n                size = this.gridSize[z];\n                num += size.x * size.y;\n            }\n            //Add the tiles of the level\n            size = this.gridSize[level];\n            num += size.x * y + x;\n            return num;\n        },\n\n        /**\n         * Determine if the data and/or url imply the image service is supported by\n         * this tile source.\n         * @function\n         * @param {Object|Array} data\n         * @param {String} optional - url\n         */\n        supports: function(data, url) {\n            return (data.type && \"zoomifytileservice\" == data.type);\n        },\n\n        /**\n         *\n         * @function\n         * @param {Object} data - the raw configuration\n         * @param {String} url - the url the data was retrieved from if any.\n         * @return {Object} options - A dictionary of keyword arguments sufficient\n         *      to configure this tile sources constructor.\n         */\n        configure: function(data, url) {\n            return data;\n        },\n\n        /**\n         * @function\n         * @param {Number} level\n         * @param {Number} x\n         * @param {Number} y\n         */\n        getTileUrl: function(level, x, y) {\n            //console.log(level);\n            var result = 0;\n            var num = this._calculateAbsoluteTileNumber(level, x, y);\n            result = Math.floor(num / 256);\n            return this.tilesUrl + 'TileGroup' + result + '/' + level + '-' + x + '-' + y + '.jpg';\n\n        }\n    });\n\n}(OpenSeadragon));\n\n\n/*\n * OpenSeadragon - LegacyTileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class LegacyTileSource\n * @classdesc The LegacyTileSource allows simple, traditional image pyramids to be loaded\n * into an OpenSeadragon Viewer.  Basically, this translates to the historically\n * common practice of starting with a 'master' image, maybe a tiff for example,\n * and generating a set of 'service' images like one or more thumbnails, a medium\n * resolution image and a high resolution image in standard web formats like\n * png or jpg.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.TileSource\n * @param {Array} levels An array of file descriptions, each is an object with\n *      a 'url', a 'width', and a 'height'.  Overriding classes can expect more\n *      properties but these properties are sufficient for this implementation.\n *      Additionally, the levels are required to be listed in order from\n *      smallest to largest.\n * @property {Number} aspectRatio\n * @property {Number} dimensions\n * @property {Number} tileSize\n * @property {Number} tileOverlap\n * @property {Number} minLevel\n * @property {Number} maxLevel\n * @property {Array}  levels\n */\n$.LegacyTileSource = function( levels ) {\n\n    var options,\n        width,\n        height;\n\n    if( $.isArray( levels ) ){\n        options = {\n            type: 'legacy-image-pyramid',\n            levels: levels\n        };\n    }\n\n    //clean up the levels to make sure we support all formats\n    options.levels = filterFiles( options.levels );\n\n    if ( options.levels.length > 0 ) {\n        width = options.levels[ options.levels.length - 1 ].width;\n        height = options.levels[ options.levels.length - 1 ].height;\n    }\n    else {\n        width = 0;\n        height = 0;\n        $.console.error( \"No supported image formats found\" );\n    }\n\n    $.extend( true, options, {\n        width: width,\n        height: height,\n        tileSize: Math.max( height, width ),\n        tileOverlap: 0,\n        minLevel: 0,\n        maxLevel: options.levels.length > 0 ? options.levels.length - 1 : 0\n    } );\n\n    $.TileSource.apply( this, [ options ] );\n\n    this.levels = options.levels;\n};\n\n$.extend( $.LegacyTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.LegacyTileSource.prototype */{\n    /**\n     * Determine if the data and/or url imply the image service is supported by\n     * this tile source.\n     * @function\n     * @param {Object|Array} data\n     * @param {String} optional - url\n     */\n    supports: function( data, url ){\n        return (\n            data.type &&\n            \"legacy-image-pyramid\" == data.type\n        ) || (\n            data.documentElement &&\n            \"legacy-image-pyramid\" == data.documentElement.getAttribute('type')\n        );\n    },\n\n\n    /**\n     *\n     * @function\n     * @param {Object|XMLDocument} configuration - the raw configuration\n     * @param {String} dataUrl - the url the data was retrieved from if any.\n     * @return {Object} options - A dictionary of keyword arguments sufficient\n     *      to configure this tile sources constructor.\n     */\n    configure: function( configuration, dataUrl ){\n\n        var options;\n\n        if( !$.isPlainObject(configuration) ){\n\n            options = configureFromXML( this, configuration );\n\n        }else{\n\n            options = configureFromObject( this, configuration );\n        }\n\n        return options;\n\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getLevelScale: function ( level ) {\n        var levelScale = NaN;\n        if ( this.levels.length > 0 && level >= this.minLevel && level <= this.maxLevel ) {\n            levelScale =\n                this.levels[ level ].width /\n                this.levels[ this.maxLevel ].width;\n        }\n        return levelScale;\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getNumTiles: function( level ) {\n        var scale = this.getLevelScale( level );\n        if ( scale ){\n            return new $.Point( 1, 1 );\n        } else {\n            return new $.Point( 0, 0 );\n        }\n    },\n\n    /**\n     * This method is not implemented by this class other than to throw an Error\n     * announcing you have to implement it.  Because of the variety of tile\n     * server technologies, and various specifications for building image\n     * pyramids, this method is here to allow easy integration.\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     * @throws {Error}\n     */\n    getTileUrl: function ( level, x, y ) {\n        var url = null;\n        if ( this.levels.length > 0 && level >= this.minLevel && level <= this.maxLevel ) {\n            url = this.levels[ level ].url;\n        }\n        return url;\n    }\n} );\n\n/**\n * This method removes any files from the Array which don't conform to our\n * basic requirements for a 'level' in the LegacyTileSource.\n * @private\n * @inner\n * @function\n */\nfunction filterFiles( files ){\n    var filtered = [],\n        file,\n        i;\n    for( i = 0; i < files.length; i++ ){\n        file = files[ i ];\n        if( file.height &&\n            file.width &&\n            file.url ){\n            //This is sufficient to serve as a level\n            filtered.push({\n                url: file.url,\n                width: Number( file.width ),\n                height: Number( file.height )\n            });\n        }\n        else {\n            $.console.error( 'Unsupported image format: %s', file.url ? file.url : '<no URL>' );\n        }\n    }\n\n    return filtered.sort(function(a, b) {\n        return a.height - b.height;\n    });\n\n}\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction configureFromXML( tileSource, xmlDoc ){\n\n    if ( !xmlDoc || !xmlDoc.documentElement ) {\n        throw new Error( $.getString( \"Errors.Xml\" ) );\n    }\n\n    var root         = xmlDoc.documentElement,\n        rootName     = root.tagName,\n        conf         = null,\n        levels       = [],\n        level,\n        i;\n\n    if ( rootName == \"image\" ) {\n\n        try {\n            conf = {\n                type:        root.getAttribute( \"type\" ),\n                levels:      []\n            };\n\n            levels = root.getElementsByTagName( \"level\" );\n            for ( i = 0; i < levels.length; i++ ) {\n                level = levels[ i ];\n\n                conf.levels.push({\n                    url:    level.getAttribute( \"url\" ),\n                    width:  parseInt( level.getAttribute( \"width\" ), 10 ),\n                    height: parseInt( level.getAttribute( \"height\" ), 10 )\n                });\n            }\n\n            return configureFromObject( tileSource, conf );\n\n        } catch ( e ) {\n            throw (e instanceof Error) ?\n                e :\n                new Error( 'Unknown error parsing Legacy Image Pyramid XML.' );\n        }\n    } else if ( rootName == \"collection\" ) {\n        throw new Error( 'Legacy Image Pyramid Collections not yet supported.' );\n    } else if ( rootName == \"error\" ) {\n        throw new Error( 'Error: ' + xmlDoc );\n    }\n\n    throw new Error( 'Unknown element ' + rootName );\n}\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction configureFromObject( tileSource, configuration ){\n\n    return configuration.levels;\n\n}\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - ImageTileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function ($) {\n\n    /**\n     * @class ImageTileSource\n     * @classdesc The ImageTileSource allows a simple image to be loaded\n     * into an OpenSeadragon Viewer.\n     * There are 2 ways to open an ImageTileSource:\n     * 1. viewer.open({type: 'image', url: fooUrl});\n     * 2. viewer.open(new OpenSeadragon.ImageTileSource({url: fooUrl}));\n     *\n     * With the first syntax, the crossOriginPolicy, ajaxWithCredentials and\n     * useCanvas options are inherited from the viewer if they are not\n     * specified directly in the options object.\n     *\n     * @memberof OpenSeadragon\n     * @extends OpenSeadragon.TileSource\n     * @param {Object} options Options object.\n     * @param {String} options.url URL of the image\n     * @param {Boolean} [options.buildPyramid=true] If set to true (default), a\n     * pyramid will be built internally to provide a better downsampling.\n     * @param {String|Boolean} [options.crossOriginPolicy=false] Valid values are\n     * 'Anonymous', 'use-credentials', and false. If false, image requests will\n     * not use CORS preventing internal pyramid building for images from other\n     * domains.\n     * @param {String|Boolean} [options.ajaxWithCredentials=false] Whether to set\n     * the withCredentials XHR flag for AJAX requests (when loading tile sources).\n     * @param {Boolean} [options.useCanvas=true] Set to false to prevent any use\n     * of the canvas API.\n     */\n    $.ImageTileSource = function (options) {\n\n        options = $.extend({\n            buildPyramid: true,\n            crossOriginPolicy: false,\n            ajaxWithCredentials: false,\n            useCanvas: true\n        }, options);\n        $.TileSource.apply(this, [options]);\n\n    };\n\n    $.extend($.ImageTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.ImageTileSource.prototype */{\n        /**\n         * Determine if the data and/or url imply the image service is supported by\n         * this tile source.\n         * @function\n         * @param {Object|Array} data\n         * @param {String} optional - url\n         */\n        supports: function (data, url) {\n            return data.type && data.type === \"image\";\n        },\n        /**\n         *\n         * @function\n         * @param {Object} options - the options\n         * @param {String} dataUrl - the url the image was retrieved from, if any.\n         * @return {Object} options - A dictionary of keyword arguments sufficient\n         *      to configure this tile sources constructor.\n         */\n        configure: function (options, dataUrl) {\n            return options;\n        },\n        /**\n         * Responsible for retrieving, and caching the\n         * image metadata pertinent to this TileSources implementation.\n         * @function\n         * @param {String} url\n         * @throws {Error}\n         */\n        getImageInfo: function (url) {\n            var image = this._image = new Image();\n            var _this = this;\n\n            if (this.crossOriginPolicy) {\n                image.crossOrigin = this.crossOriginPolicy;\n            }\n            if (this.ajaxWithCredentials) {\n                image.useCredentials = this.ajaxWithCredentials;\n            }\n\n            $.addEvent(image, 'load', function () {\n                /* IE8 fix since it has no naturalWidth and naturalHeight */\n                _this.width = Object.prototype.hasOwnProperty.call(image, 'naturalWidth') ? image.naturalWidth : image.width;\n                _this.height = Object.prototype.hasOwnProperty.call(image, 'naturalHeight') ? image.naturalHeight : image.height;\n                _this.aspectRatio = _this.width / _this.height;\n                _this.dimensions = new $.Point(_this.width, _this.height);\n                _this._tileWidth = _this.width;\n                _this._tileHeight = _this.height;\n                _this.tileOverlap = 0;\n                _this.minLevel = 0;\n                _this.levels = _this._buildLevels();\n                _this.maxLevel = _this.levels.length - 1;\n\n                _this.ready = true;\n\n                // Note: this event is documented elsewhere, in TileSource\n                _this.raiseEvent('ready', {tileSource: _this});\n            });\n\n            $.addEvent(image, 'error', function () {\n                // Note: this event is documented elsewhere, in TileSource\n                _this.raiseEvent('open-failed', {\n                    message: \"Error loading image at \" + url,\n                    source: url\n                });\n            });\n\n            image.src = url;\n        },\n        /**\n         * @function\n         * @param {Number} level\n         */\n        getLevelScale: function (level) {\n            var levelScale = NaN;\n            if (level >= this.minLevel && level <= this.maxLevel) {\n                levelScale =\n                        this.levels[level].width /\n                        this.levels[this.maxLevel].width;\n            }\n            return levelScale;\n        },\n        /**\n         * @function\n         * @param {Number} level\n         */\n        getNumTiles: function (level) {\n            var scale = this.getLevelScale(level);\n            if (scale) {\n                return new $.Point(1, 1);\n            } else {\n                return new $.Point(0, 0);\n            }\n        },\n        /**\n         * Retrieves a tile url\n         * @function\n         * @param {Number} level Level of the tile\n         * @param {Number} x x coordinate of the tile\n         * @param {Number} y y coordinate of the tile\n         */\n        getTileUrl: function (level, x, y) {\n            var url = null;\n            if (level >= this.minLevel && level <= this.maxLevel) {\n                url = this.levels[level].url;\n            }\n            return url;\n        },\n        /**\n         * Retrieves a tile context 2D\n         * @function\n         * @param {Number} level Level of the tile\n         * @param {Number} x x coordinate of the tile\n         * @param {Number} y y coordinate of the tile\n         */\n        getContext2D: function (level, x, y) {\n            var context = null;\n            if (level >= this.minLevel && level <= this.maxLevel) {\n                context = this.levels[level].context2D;\n            }\n            return context;\n        },\n\n        // private\n        //\n        // Builds the different levels of the pyramid if possible\n        // (i.e. if canvas API enabled and no canvas tainting issue).\n        _buildLevels: function () {\n            var levels = [{\n                    url: this._image.src,\n                    /* IE8 fix since it has no naturalWidth and naturalHeight */\n                    width: Object.prototype.hasOwnProperty.call(this._image, 'naturalWidth') ? this._image.naturalWidth : this._image.width,\n                    height:  Object.prototype.hasOwnProperty.call(this._image, 'naturalHeight') ? this._image.naturalHeight : this._image.height\n                }];\n\n            if (!this.buildPyramid || !$.supportsCanvas || !this.useCanvas) {\n                // We don't need the image anymore. Allows it to be GC.\n                delete this._image;\n                return levels;\n            }\n\n            /* IE8 fix since it has no naturalWidth and naturalHeight */\n            var currentWidth = Object.prototype.hasOwnProperty.call(this._image, 'naturalWidth') ? this._image.naturalWidth : this._image.width;\n            var currentHeight = Object.prototype.hasOwnProperty.call(this._image, 'naturalHeight') ? this._image.naturalHeight : this._image.height;\n\n\n            var bigCanvas = document.createElement(\"canvas\");\n            var bigContext = bigCanvas.getContext(\"2d\");\n\n            bigCanvas.width = currentWidth;\n            bigCanvas.height = currentHeight;\n            bigContext.drawImage(this._image, 0, 0, currentWidth, currentHeight);\n            // We cache the context of the highest level because the browser\n            // is a lot faster at downsampling something it already has\n            // downsampled before.\n            levels[0].context2D = bigContext;\n            // We don't need the image anymore. Allows it to be GC.\n            delete this._image;\n\n            if ($.isCanvasTainted(bigCanvas)) {\n                // If the canvas is tainted, we can't compute the pyramid.\n                return levels;\n            }\n\n            // We build smaller levels until either width or height becomes\n            // 1 pixel wide.\n            while (currentWidth >= 2 && currentHeight >= 2) {\n                currentWidth = Math.floor(currentWidth / 2);\n                currentHeight = Math.floor(currentHeight / 2);\n                var smallCanvas = document.createElement(\"canvas\");\n                var smallContext = smallCanvas.getContext(\"2d\");\n                smallCanvas.width = currentWidth;\n                smallCanvas.height = currentHeight;\n                smallContext.drawImage(bigCanvas, 0, 0, currentWidth, currentHeight);\n\n                levels.splice(0, 0, {\n                    context2D: smallContext,\n                    width: currentWidth,\n                    height: currentHeight\n                });\n\n                bigCanvas = smallCanvas;\n                bigContext = smallContext;\n            }\n            return levels;\n        }\n    });\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - TileSourceCollection\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function($) {\n\n// deprecated\n$.TileSourceCollection = function(tileSize, tileSources, rows, layout) {\n    $.console.error('TileSourceCollection is deprecated; use World instead');\n};\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - Button\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * An enumeration of button states\n * @member ButtonState\n * @memberof OpenSeadragon\n * @static\n * @type {Object}\n * @property {Number} REST\n * @property {Number} GROUP\n * @property {Number} HOVER\n * @property {Number} DOWN\n */\n$.ButtonState = {\n    REST:   0,\n    GROUP:  1,\n    HOVER:  2,\n    DOWN:   3\n};\n\n/**\n * @class Button\n * @classdesc Manages events, hover states for individual buttons, tool-tips, as well\n * as fading the buttons out when the user has not interacted with them\n * for a specified period.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.EventSource\n * @param {Object} options\n * @param {Element} [options.element=null] Element to use as the button. If not specified, an HTML &lt;div&gt; element is created.\n * @param {String} [options.tooltip=null] Provides context help for the button when the\n *  user hovers over it.\n * @param {String} [options.srcRest=null] URL of image to use in 'rest' state.\n * @param {String} [options.srcGroup=null] URL of image to use in 'up' state.\n * @param {String} [options.srcHover=null] URL of image to use in 'hover' state.\n * @param {String} [options.srcDown=null] URL of image to use in 'down' state.\n * @param {Number} [options.fadeDelay=0] How long to wait before fading.\n * @param {Number} [options.fadeLength=2000] How long should it take to fade the button.\n * @param {OpenSeadragon.EventHandler} [options.onPress=null] Event handler callback for {@link OpenSeadragon.Button.event:press}.\n * @param {OpenSeadragon.EventHandler} [options.onRelease=null] Event handler callback for {@link OpenSeadragon.Button.event:release}.\n * @param {OpenSeadragon.EventHandler} [options.onClick=null] Event handler callback for {@link OpenSeadragon.Button.event:click}.\n * @param {OpenSeadragon.EventHandler} [options.onEnter=null] Event handler callback for {@link OpenSeadragon.Button.event:enter}.\n * @param {OpenSeadragon.EventHandler} [options.onExit=null] Event handler callback for {@link OpenSeadragon.Button.event:exit}.\n * @param {OpenSeadragon.EventHandler} [options.onFocus=null] Event handler callback for {@link OpenSeadragon.Button.event:focus}.\n * @param {OpenSeadragon.EventHandler} [options.onBlur=null] Event handler callback for {@link OpenSeadragon.Button.event:blur}.\n */\n$.Button = function( options ) {\n\n    var _this = this;\n\n    $.EventSource.call( this );\n\n    $.extend( true, this, {\n\n        tooltip:            null,\n        srcRest:            null,\n        srcGroup:           null,\n        srcHover:           null,\n        srcDown:            null,\n        clickTimeThreshold: $.DEFAULT_SETTINGS.clickTimeThreshold,\n        clickDistThreshold: $.DEFAULT_SETTINGS.clickDistThreshold,\n        /**\n         * How long to wait before fading.\n         * @member {Number} fadeDelay\n         * @memberof OpenSeadragon.Button#\n         */\n        fadeDelay:          0,\n        /**\n         * How long should it take to fade the button.\n         * @member {Number} fadeLength\n         * @memberof OpenSeadragon.Button#\n         */\n        fadeLength:         2000,\n        onPress:            null,\n        onRelease:          null,\n        onClick:            null,\n        onEnter:            null,\n        onExit:             null,\n        onFocus:            null,\n        onBlur:             null\n\n    }, options );\n\n    /**\n     * The button element.\n     * @member {Element} element\n     * @memberof OpenSeadragon.Button#\n     */\n    this.element = options.element || $.makeNeutralElement(\"div\");\n\n    //if the user has specified the element to bind the control to explicitly\n    //then do not add the default control images\n    if ( !options.element ) {\n        this.imgRest      = $.makeTransparentImage( this.srcRest );\n        this.imgGroup     = $.makeTransparentImage( this.srcGroup );\n        this.imgHover     = $.makeTransparentImage( this.srcHover );\n        this.imgDown      = $.makeTransparentImage( this.srcDown );\n\n        this.imgRest.alt  =\n        this.imgGroup.alt =\n        this.imgHover.alt =\n        this.imgDown.alt  =\n            this.tooltip;\n\n        this.element.style.position = \"relative\";\n        $.setElementTouchActionNone( this.element );\n\n        this.imgGroup.style.position =\n        this.imgHover.style.position =\n        this.imgDown.style.position  =\n            \"absolute\";\n\n        this.imgGroup.style.top =\n        this.imgHover.style.top =\n        this.imgDown.style.top  =\n            \"0px\";\n\n        this.imgGroup.style.left =\n        this.imgHover.style.left =\n        this.imgDown.style.left  =\n            \"0px\";\n\n        this.imgHover.style.visibility =\n        this.imgDown.style.visibility  =\n            \"hidden\";\n\n        if ($.Browser.vendor == $.BROWSERS.FIREFOX && $.Browser.version < 3) {\n            this.imgGroup.style.top =\n            this.imgHover.style.top =\n            this.imgDown.style.top  =\n                \"\";\n        }\n\n        this.element.appendChild( this.imgRest );\n        this.element.appendChild( this.imgGroup );\n        this.element.appendChild( this.imgHover );\n        this.element.appendChild( this.imgDown );\n    }\n\n\n    this.addHandler(\"press\", this.onPress);\n    this.addHandler(\"release\", this.onRelease);\n    this.addHandler(\"click\", this.onClick);\n    this.addHandler(\"enter\", this.onEnter);\n    this.addHandler(\"exit\", this.onExit);\n    this.addHandler(\"focus\", this.onFocus);\n    this.addHandler(\"blur\", this.onBlur);\n\n    /**\n     * The button's current state.\n     * @member {OpenSeadragon.ButtonState} currentState\n     * @memberof OpenSeadragon.Button#\n     */\n    this.currentState = $.ButtonState.GROUP;\n\n    // When the button last began to fade.\n    this.fadeBeginTime  = null;\n    // Whether this button should fade after user stops interacting with the viewport.\n    this.shouldFade     = false;\n\n    this.element.style.display  = \"inline-block\";\n    this.element.style.position = \"relative\";\n    this.element.title          = this.tooltip;\n\n    /**\n     * Tracks mouse/touch/key events on the button.\n     * @member {OpenSeadragon.MouseTracker} tracker\n     * @memberof OpenSeadragon.Button#\n     */\n    this.tracker = new $.MouseTracker({\n\n        element:            this.element,\n        clickTimeThreshold: this.clickTimeThreshold,\n        clickDistThreshold: this.clickDistThreshold,\n\n        enterHandler: function( event ) {\n            if ( event.insideElementPressed ) {\n                inTo( _this, $.ButtonState.DOWN );\n                /**\n                 * Raised when the cursor enters the Button element.\n                 *\n                 * @event enter\n                 * @memberof OpenSeadragon.Button\n                 * @type {object}\n                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n                 * @property {Object} originalEvent - The original DOM event.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( \"enter\", { originalEvent: event.originalEvent } );\n            } else if ( !event.buttonDownAny ) {\n                inTo( _this, $.ButtonState.HOVER );\n            }\n        },\n\n        focusHandler: function ( event ) {\n            this.enterHandler( event );\n            /**\n             * Raised when the Button element receives focus.\n             *\n             * @event focus\n             * @memberof OpenSeadragon.Button\n             * @type {object}\n             * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n             * @property {Object} originalEvent - The original DOM event.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            _this.raiseEvent( \"focus\", { originalEvent: event.originalEvent } );\n        },\n\n        exitHandler: function( event ) {\n            outTo( _this, $.ButtonState.GROUP );\n            if ( event.insideElementPressed ) {\n                /**\n                 * Raised when the cursor leaves the Button element.\n                 *\n                 * @event exit\n                 * @memberof OpenSeadragon.Button\n                 * @type {object}\n                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n                 * @property {Object} originalEvent - The original DOM event.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( \"exit\", { originalEvent: event.originalEvent } );\n            }\n        },\n\n        blurHandler: function ( event ) {\n            this.exitHandler( event );\n            /**\n             * Raised when the Button element loses focus.\n             *\n             * @event blur\n             * @memberof OpenSeadragon.Button\n             * @type {object}\n             * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n             * @property {Object} originalEvent - The original DOM event.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            _this.raiseEvent( \"blur\", { originalEvent: event.originalEvent } );\n        },\n\n        pressHandler: function ( event ) {\n            inTo( _this, $.ButtonState.DOWN );\n            /**\n             * Raised when a mouse button is pressed or touch occurs in the Button element.\n             *\n             * @event press\n             * @memberof OpenSeadragon.Button\n             * @type {object}\n             * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n             * @property {Object} originalEvent - The original DOM event.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            _this.raiseEvent( \"press\", { originalEvent: event.originalEvent } );\n        },\n\n        releaseHandler: function( event ) {\n            if ( event.insideElementPressed && event.insideElementReleased ) {\n                outTo( _this, $.ButtonState.HOVER );\n                /**\n                 * Raised when the mouse button is released or touch ends in the Button element.\n                 *\n                 * @event release\n                 * @memberof OpenSeadragon.Button\n                 * @type {object}\n                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n                 * @property {Object} originalEvent - The original DOM event.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( \"release\", { originalEvent: event.originalEvent } );\n            } else if ( event.insideElementPressed ) {\n                outTo( _this, $.ButtonState.GROUP );\n            } else {\n                inTo( _this, $.ButtonState.HOVER );\n            }\n        },\n\n        clickHandler: function( event ) {\n            if ( event.quick ) {\n                /**\n                 * Raised when a mouse button is pressed and released or touch is initiated and ended in the Button element within the time and distance threshold.\n                 *\n                 * @event click\n                 * @memberof OpenSeadragon.Button\n                 * @type {object}\n                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n                 * @property {Object} originalEvent - The original DOM event.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent(\"click\", { originalEvent: event.originalEvent });\n            }\n        },\n\n        keyHandler: function( event ){\n            //console.log( \"%s : handling key %s!\", _this.tooltip, event.keyCode);\n            if( 13 === event.keyCode ){\n                /***\n                 * Raised when a mouse button is pressed and released or touch is initiated and ended in the Button element within the time and distance threshold.\n                 *\n                 * @event click\n                 * @memberof OpenSeadragon.Button\n                 * @type {object}\n                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n                 * @property {Object} originalEvent - The original DOM event.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( \"click\", { originalEvent: event.originalEvent } );\n                /***\n                 * Raised when the mouse button is released or touch ends in the Button element.\n                 *\n                 * @event release\n                 * @memberof OpenSeadragon.Button\n                 * @type {object}\n                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n                 * @property {Object} originalEvent - The original DOM event.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( \"release\", { originalEvent: event.originalEvent } );\n                return false;\n            }\n            return true;\n        }\n\n    });\n\n    outTo( this, $.ButtonState.REST );\n};\n\n$.extend( $.Button.prototype, $.EventSource.prototype, /** @lends OpenSeadragon.Button.prototype */{\n\n    /**\n     * TODO: Determine what this function is intended to do and if it's actually\n     * useful as an API point.\n     * @function\n     */\n    notifyGroupEnter: function() {\n        inTo( this, $.ButtonState.GROUP );\n    },\n\n    /**\n     * TODO: Determine what this function is intended to do and if it's actually\n     * useful as an API point.\n     * @function\n     */\n    notifyGroupExit: function() {\n        outTo( this, $.ButtonState.REST );\n    },\n\n    /**\n     * @function\n     */\n    disable: function(){\n        this.notifyGroupExit();\n        this.element.disabled = true;\n        $.setElementOpacity( this.element, 0.2, true );\n    },\n\n    /**\n     * @function\n     */\n    enable: function(){\n        this.element.disabled = false;\n        $.setElementOpacity( this.element, 1.0, true );\n        this.notifyGroupEnter();\n    }\n\n});\n\n\nfunction scheduleFade( button ) {\n    $.requestAnimationFrame(function(){\n        updateFade( button );\n    });\n}\n\nfunction updateFade( button ) {\n    var currentTime,\n        deltaTime,\n        opacity;\n\n    if ( button.shouldFade ) {\n        currentTime = $.now();\n        deltaTime   = currentTime - button.fadeBeginTime;\n        opacity     = 1.0 - deltaTime / button.fadeLength;\n        opacity     = Math.min( 1.0, opacity );\n        opacity     = Math.max( 0.0, opacity );\n\n        if( button.imgGroup ){\n            $.setElementOpacity( button.imgGroup, opacity, true );\n        }\n        if ( opacity > 0 ) {\n            // fade again\n            scheduleFade( button );\n        }\n    }\n}\n\nfunction beginFading( button ) {\n    button.shouldFade = true;\n    button.fadeBeginTime = $.now() + button.fadeDelay;\n    window.setTimeout( function(){\n        scheduleFade( button );\n    }, button.fadeDelay );\n}\n\nfunction stopFading( button ) {\n    button.shouldFade = false;\n    if( button.imgGroup ){\n        $.setElementOpacity( button.imgGroup, 1.0, true );\n    }\n}\n\nfunction inTo( button, newState ) {\n\n    if( button.element.disabled ){\n        return;\n    }\n\n    if ( newState >= $.ButtonState.GROUP &&\n         button.currentState == $.ButtonState.REST ) {\n        stopFading( button );\n        button.currentState = $.ButtonState.GROUP;\n    }\n\n    if ( newState >= $.ButtonState.HOVER &&\n         button.currentState == $.ButtonState.GROUP ) {\n        if( button.imgHover ){\n            button.imgHover.style.visibility = \"\";\n        }\n        button.currentState = $.ButtonState.HOVER;\n    }\n\n    if ( newState >= $.ButtonState.DOWN &&\n         button.currentState == $.ButtonState.HOVER ) {\n        if( button.imgDown ){\n            button.imgDown.style.visibility = \"\";\n        }\n        button.currentState = $.ButtonState.DOWN;\n    }\n}\n\n\nfunction outTo( button, newState ) {\n\n    if( button.element.disabled ){\n        return;\n    }\n\n    if ( newState <= $.ButtonState.HOVER &&\n         button.currentState == $.ButtonState.DOWN ) {\n        if( button.imgDown ){\n            button.imgDown.style.visibility = \"hidden\";\n        }\n        button.currentState = $.ButtonState.HOVER;\n    }\n\n    if ( newState <= $.ButtonState.GROUP &&\n         button.currentState == $.ButtonState.HOVER ) {\n        if( button.imgHover ){\n            button.imgHover.style.visibility = \"hidden\";\n        }\n        button.currentState = $.ButtonState.GROUP;\n    }\n\n    if ( newState <= $.ButtonState.REST &&\n         button.currentState == $.ButtonState.GROUP ) {\n        beginFading( button );\n        button.currentState = $.ButtonState.REST;\n    }\n}\n\n\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - ButtonGroup\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n/**\n * @class ButtonGroup\n * @classdesc Manages events on groups of buttons.\n *\n * @memberof OpenSeadragon\n * @param {Object} options - A dictionary of settings applied against the entire group of buttons.\n * @param {Array} options.buttons Array of buttons\n * @param {Element} [options.element] Element to use as the container\n **/\n$.ButtonGroup = function( options ) {\n\n    $.extend( true, this, {\n        /**\n         * An array containing the buttons themselves.\n         * @member {Array} buttons\n         * @memberof OpenSeadragon.ButtonGroup#\n         */\n        buttons:            [],\n        clickTimeThreshold: $.DEFAULT_SETTINGS.clickTimeThreshold,\n        clickDistThreshold: $.DEFAULT_SETTINGS.clickDistThreshold,\n        labelText:          \"\"\n    }, options );\n\n    // copy the button elements  TODO: Why?\n    var buttons = this.buttons.concat([]),\n        _this = this,\n        i;\n\n    /**\n     * The shared container for the buttons.\n     * @member {Element} element\n     * @memberof OpenSeadragon.ButtonGroup#\n     */\n    this.element = options.element || $.makeNeutralElement( \"div\" );\n\n    // TODO What if there IS an options.group specified?\n    if( !options.group ){\n        this.element.style.display = \"inline-block\";\n        //this.label   = $.makeNeutralElement( \"label\" );\n        //TODO: support labels for ButtonGroups\n        //this.label.innerHTML = this.labelText;\n        //this.element.appendChild( this.label );\n        for ( i = 0; i < buttons.length; i++ ) {\n            this.element.appendChild( buttons[ i ].element );\n        }\n    }\n\n    $.setElementTouchActionNone( this.element );\n\n    /**\n     * Tracks mouse/touch/key events across the group of buttons.\n     * @member {OpenSeadragon.MouseTracker} tracker\n     * @memberof OpenSeadragon.ButtonGroup#\n     */\n    this.tracker = new $.MouseTracker({\n        element:            this.element,\n        clickTimeThreshold: this.clickTimeThreshold,\n        clickDistThreshold: this.clickDistThreshold,\n        enterHandler: function ( event ) {\n            var i;\n            for ( i = 0; i < _this.buttons.length; i++ ) {\n                _this.buttons[ i ].notifyGroupEnter();\n            }\n        },\n        exitHandler: function ( event ) {\n            var i;\n            if ( !event.insideElementPressed ) {\n                for ( i = 0; i < _this.buttons.length; i++ ) {\n                    _this.buttons[ i ].notifyGroupExit();\n                }\n            }\n        },\n    });\n};\n\n/** @lends OpenSeadragon.ButtonGroup.prototype */\n$.ButtonGroup.prototype = {\n\n    /**\n     * TODO: Figure out why this is used on the public API and if a more useful\n     * api can be created.\n     * @function\n     * @private\n     */\n    emulateEnter: function() {\n        this.tracker.enterHandler( { eventSource: this.tracker } );\n    },\n\n    /**\n     * TODO: Figure out why this is used on the public API and if a more useful\n     * api can be created.\n     * @function\n     * @private\n     */\n    emulateExit: function() {\n        this.tracker.exitHandler( { eventSource: this.tracker } );\n    }\n};\n\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Rect\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function($) {\n\n/**\n * @class Rect\n * @classdesc A Rectangle is described by it top left coordinates (x, y), width,\n * height and degrees of rotation around (x, y).\n * Note that the coordinate system used is the one commonly used with images:\n * x increases when going to the right\n * y increases when going to the bottom\n * degrees increases clockwise with 0 being the horizontal\n *\n * The constructor normalizes the rectangle to always have 0 <= degrees < 90\n *\n * @memberof OpenSeadragon\n * @param {Number} [x=0] The vector component 'x'.\n * @param {Number} [y=0] The vector component 'y'.\n * @param {Number} [width=0] The vector component 'width'.\n * @param {Number} [height=0] The vector component 'height'.\n * @param {Number} [degrees=0] Rotation of the rectangle around (x,y) in degrees.\n */\n$.Rect = function(x, y, width, height, degrees) {\n    /**\n     * The vector component 'x'.\n     * @member {Number} x\n     * @memberof OpenSeadragon.Rect#\n     */\n    this.x = typeof (x) === \"number\" ? x : 0;\n    /**\n     * The vector component 'y'.\n     * @member {Number} y\n     * @memberof OpenSeadragon.Rect#\n     */\n    this.y = typeof (y) === \"number\" ? y : 0;\n    /**\n     * The vector component 'width'.\n     * @member {Number} width\n     * @memberof OpenSeadragon.Rect#\n     */\n    this.width  = typeof (width) === \"number\" ? width : 0;\n    /**\n     * The vector component 'height'.\n     * @member {Number} height\n     * @memberof OpenSeadragon.Rect#\n     */\n    this.height = typeof (height) === \"number\" ? height : 0;\n\n    this.degrees = typeof (degrees) === \"number\" ? degrees : 0;\n\n    // Normalizes the rectangle.\n    this.degrees = $.positiveModulo(this.degrees, 360);\n    var newTopLeft, newWidth;\n    if (this.degrees >= 270) {\n        newTopLeft = this.getTopRight();\n        this.x = newTopLeft.x;\n        this.y = newTopLeft.y;\n        newWidth = this.height;\n        this.height = this.width;\n        this.width = newWidth;\n        this.degrees -= 270;\n    } else if (this.degrees >= 180) {\n        newTopLeft = this.getBottomRight();\n        this.x = newTopLeft.x;\n        this.y = newTopLeft.y;\n        this.degrees -= 180;\n    } else if (this.degrees >= 90) {\n        newTopLeft = this.getBottomLeft();\n        this.x = newTopLeft.x;\n        this.y = newTopLeft.y;\n        newWidth = this.height;\n        this.height = this.width;\n        this.width = newWidth;\n        this.degrees -= 90;\n    }\n};\n\n/**\n * Builds a rectangle having the 3 specified points as summits.\n * @static\n * @memberof OpenSeadragon.Rect\n * @param {OpenSeadragon.Point} topLeft\n * @param {OpenSeadragon.Point} topRight\n * @param {OpenSeadragon.Point} bottomLeft\n * @returns {OpenSeadragon.Rect}\n */\n$.Rect.fromSummits = function(topLeft, topRight, bottomLeft) {\n    var width = topLeft.distanceTo(topRight);\n    var height = topLeft.distanceTo(bottomLeft);\n    var diff = topRight.minus(topLeft);\n    var radians = Math.atan(diff.y / diff.x);\n    if (diff.x < 0) {\n        radians += Math.PI;\n    } else if (diff.y < 0) {\n        radians += 2 * Math.PI;\n    }\n    return new $.Rect(\n        topLeft.x,\n        topLeft.y,\n        width,\n        height,\n        radians / Math.PI * 180);\n};\n\n/** @lends OpenSeadragon.Rect.prototype */\n$.Rect.prototype = {\n    /**\n     * @function\n     * @returns {OpenSeadragon.Rect} a duplicate of this Rect\n     */\n    clone: function() {\n        return new $.Rect(\n            this.x,\n            this.y,\n            this.width,\n            this.height,\n            this.degrees);\n    },\n\n    /**\n     * The aspect ratio is simply the ratio of width to height.\n     * @function\n     * @returns {Number} The ratio of width to height.\n     */\n    getAspectRatio: function() {\n        return this.width / this.height;\n    },\n\n    /**\n     * Provides the coordinates of the upper-left corner of the rectangle as a\n     * point.\n     * @function\n     * @returns {OpenSeadragon.Point} The coordinate of the upper-left corner of\n     *  the rectangle.\n     */\n    getTopLeft: function() {\n        return new $.Point(\n            this.x,\n            this.y\n        );\n    },\n\n    /**\n     * Provides the coordinates of the bottom-right corner of the rectangle as a\n     * point.\n     * @function\n     * @returns {OpenSeadragon.Point} The coordinate of the bottom-right corner of\n     *  the rectangle.\n     */\n    getBottomRight: function() {\n        return new $.Point(this.x + this.width, this.y + this.height)\n            .rotate(this.degrees, this.getTopLeft());\n    },\n\n    /**\n     * Provides the coordinates of the top-right corner of the rectangle as a\n     * point.\n     * @function\n     * @returns {OpenSeadragon.Point} The coordinate of the top-right corner of\n     *  the rectangle.\n     */\n    getTopRight: function() {\n        return new $.Point(this.x + this.width, this.y)\n            .rotate(this.degrees, this.getTopLeft());\n    },\n\n    /**\n     * Provides the coordinates of the bottom-left corner of the rectangle as a\n     * point.\n     * @function\n     * @returns {OpenSeadragon.Point} The coordinate of the bottom-left corner of\n     *  the rectangle.\n     */\n    getBottomLeft: function() {\n        return new $.Point(this.x, this.y + this.height)\n            .rotate(this.degrees, this.getTopLeft());\n    },\n\n    /**\n     * Computes the center of the rectangle.\n     * @function\n     * @returns {OpenSeadragon.Point} The center of the rectangle as represented\n     *  as represented by a 2-dimensional vector (x,y)\n     */\n    getCenter: function() {\n        return new $.Point(\n            this.x + this.width / 2.0,\n            this.y + this.height / 2.0\n        ).rotate(this.degrees, this.getTopLeft());\n    },\n\n    /**\n     * Returns the width and height component as a vector OpenSeadragon.Point\n     * @function\n     * @returns {OpenSeadragon.Point} The 2 dimensional vector representing the\n     *  the width and height of the rectangle.\n     */\n    getSize: function() {\n        return new $.Point(this.width, this.height);\n    },\n\n    /**\n     * Determines if two Rectangles have equivalent components.\n     * @function\n     * @param {OpenSeadragon.Rect} rectangle The Rectangle to compare to.\n     * @return {Boolean} 'true' if all components are equal, otherwise 'false'.\n     */\n    equals: function(other) {\n        return (other instanceof $.Rect) &&\n            this.x === other.x &&\n            this.y === other.y &&\n            this.width === other.width &&\n            this.height === other.height &&\n            this.degrees === other.degrees;\n    },\n\n    /**\n    * Multiply all dimensions (except degrees) in this Rect by a factor and\n    * return a new Rect.\n    * @function\n    * @param {Number} factor The factor to multiply vector components.\n    * @returns {OpenSeadragon.Rect} A new rect representing the multiplication\n    *  of the vector components by the factor\n    */\n    times: function(factor) {\n        return new $.Rect(\n            this.x * factor,\n            this.y * factor,\n            this.width * factor,\n            this.height * factor,\n            this.degrees);\n    },\n\n    /**\n    * Translate/move this Rect by a vector and return new Rect.\n    * @function\n    * @param {OpenSeadragon.Point} delta The translation vector.\n    * @returns {OpenSeadragon.Rect} A new rect with altered position\n    */\n    translate: function(delta) {\n        return new $.Rect(\n            this.x + delta.x,\n            this.y + delta.y,\n            this.width,\n            this.height,\n            this.degrees);\n    },\n\n    /**\n     * Returns the smallest rectangle that will contain this and the given\n     * rectangle bounding boxes.\n     * @param {OpenSeadragon.Rect} rect\n     * @return {OpenSeadragon.Rect} The new rectangle.\n     */\n    union: function(rect) {\n        var thisBoundingBox = this.getBoundingBox();\n        var otherBoundingBox = rect.getBoundingBox();\n\n        var left = Math.min(thisBoundingBox.x, otherBoundingBox.x);\n        var top = Math.min(thisBoundingBox.y, otherBoundingBox.y);\n        var right = Math.max(\n            thisBoundingBox.x + thisBoundingBox.width,\n            otherBoundingBox.x + otherBoundingBox.width);\n        var bottom = Math.max(\n            thisBoundingBox.y + thisBoundingBox.height,\n            otherBoundingBox.y + otherBoundingBox.height);\n\n        return new $.Rect(\n            left,\n            top,\n            right - left,\n            bottom - top);\n    },\n\n    /**\n     * Returns the bounding box of the intersection of this rectangle with the\n     * given rectangle.\n     * @param {OpenSeadragon.Rect} rect\n     * @return {OpenSeadragon.Rect} the bounding box of the intersection\n     * or null if the rectangles don't intersect.\n     */\n    intersection: function(rect) {\n        // Simplified version of Weiler Atherton clipping algorithm\n        // https://en.wikipedia.org/wiki/Weiler%E2%80%93Atherton_clipping_algorithm\n        // Because we just want the bounding box of the intersection,\n        // we can just compute the bounding box of:\n        // 1. all the summits of this which are inside rect\n        // 2. all the summits of rect which are inside this\n        // 3. all the intersections of rect and this\n        var EPSILON = 0.0000000001;\n\n        var intersectionPoints = [];\n\n        var thisTopLeft = this.getTopLeft();\n        if (rect.containsPoint(thisTopLeft, EPSILON)) {\n            intersectionPoints.push(thisTopLeft);\n        }\n        var thisTopRight = this.getTopRight();\n        if (rect.containsPoint(thisTopRight, EPSILON)) {\n            intersectionPoints.push(thisTopRight);\n        }\n        var thisBottomLeft = this.getBottomLeft();\n        if (rect.containsPoint(thisBottomLeft, EPSILON)) {\n            intersectionPoints.push(thisBottomLeft);\n        }\n        var thisBottomRight = this.getBottomRight();\n        if (rect.containsPoint(thisBottomRight, EPSILON)) {\n            intersectionPoints.push(thisBottomRight);\n        }\n\n        var rectTopLeft = rect.getTopLeft();\n        if (this.containsPoint(rectTopLeft, EPSILON)) {\n            intersectionPoints.push(rectTopLeft);\n        }\n        var rectTopRight = rect.getTopRight();\n        if (this.containsPoint(rectTopRight, EPSILON)) {\n            intersectionPoints.push(rectTopRight);\n        }\n        var rectBottomLeft = rect.getBottomLeft();\n        if (this.containsPoint(rectBottomLeft, EPSILON)) {\n            intersectionPoints.push(rectBottomLeft);\n        }\n        var rectBottomRight = rect.getBottomRight();\n        if (this.containsPoint(rectBottomRight, EPSILON)) {\n            intersectionPoints.push(rectBottomRight);\n        }\n\n        var thisSegments = this._getSegments();\n        var rectSegments = rect._getSegments();\n        for (var i = 0; i < thisSegments.length; i++) {\n            var thisSegment = thisSegments[i];\n            for (var j = 0; j < rectSegments.length; j++) {\n                var rectSegment = rectSegments[j];\n                var intersect = getIntersection(thisSegment[0], thisSegment[1],\n                    rectSegment[0], rectSegment[1]);\n                if (intersect) {\n                    intersectionPoints.push(intersect);\n                }\n            }\n        }\n\n        // Get intersection point of segments [a,b] and [c,d]\n        function getIntersection(a, b, c, d) {\n            // http://stackoverflow.com/a/1968345/1440403\n            var abVector = b.minus(a);\n            var cdVector = d.minus(c);\n\n            var denom = -cdVector.x * abVector.y + abVector.x * cdVector.y;\n            if (denom === 0) {\n                return null;\n            }\n\n            var s = (abVector.x * (a.y - c.y) - abVector.y * (a.x - c.x)) / denom;\n            var t = (cdVector.x * (a.y - c.y) - cdVector.y * (a.x - c.x)) / denom;\n\n            if (-EPSILON <= s && s <= 1 - EPSILON &&\n                -EPSILON <= t && t <= 1 - EPSILON) {\n                return new $.Point(a.x + t * abVector.x, a.y + t * abVector.y);\n            }\n            return null;\n        }\n\n        if (intersectionPoints.length === 0) {\n            return null;\n        }\n\n        var minX = intersectionPoints[0].x;\n        var maxX = intersectionPoints[0].x;\n        var minY = intersectionPoints[0].y;\n        var maxY = intersectionPoints[0].y;\n        for (var k = 1; k < intersectionPoints.length; k++) {\n            var point = intersectionPoints[k];\n            if (point.x < minX) {\n                minX = point.x;\n            }\n            if (point.x > maxX) {\n                maxX = point.x;\n            }\n            if (point.y < minY) {\n                minY = point.y;\n            }\n            if (point.y > maxY) {\n                maxY = point.y;\n            }\n        }\n        return new $.Rect(minX, minY, maxX - minX, maxY - minY);\n    },\n\n    // private\n    _getSegments: function() {\n        var topLeft = this.getTopLeft();\n        var topRight = this.getTopRight();\n        var bottomLeft = this.getBottomLeft();\n        var bottomRight = this.getBottomRight();\n        return [[topLeft, topRight],\n            [topRight, bottomRight],\n            [bottomRight, bottomLeft],\n            [bottomLeft, topLeft]];\n    },\n\n    /**\n     * Rotates a rectangle around a point.\n     * @function\n     * @param {Number} degrees The angle in degrees to rotate.\n     * @param {OpenSeadragon.Point} [pivot] The point about which to rotate.\n     * Defaults to the center of the rectangle.\n     * @return {OpenSeadragon.Rect}\n     */\n    rotate: function(degrees, pivot) {\n        degrees = $.positiveModulo(degrees, 360);\n        if (degrees === 0) {\n            return this.clone();\n        }\n\n        pivot = pivot || this.getCenter();\n        var newTopLeft = this.getTopLeft().rotate(degrees, pivot);\n        var newTopRight = this.getTopRight().rotate(degrees, pivot);\n\n        var diff = newTopRight.minus(newTopLeft);\n        // Handle floating point error\n        diff = diff.apply(function(x) {\n            var EPSILON = 1e-15;\n            return Math.abs(x) < EPSILON ? 0 : x;\n        });\n        var radians = Math.atan(diff.y / diff.x);\n        if (diff.x < 0) {\n            radians += Math.PI;\n        } else if (diff.y < 0) {\n            radians += 2 * Math.PI;\n        }\n        return new $.Rect(\n            newTopLeft.x,\n            newTopLeft.y,\n            this.width,\n            this.height,\n            radians / Math.PI * 180);\n    },\n\n    /**\n     * Retrieves the smallest horizontal (degrees=0) rectangle which contains\n     * this rectangle.\n     * @returns {OpenSeadragon.Rect}\n     */\n    getBoundingBox: function() {\n        if (this.degrees === 0) {\n            return this.clone();\n        }\n        var topLeft = this.getTopLeft();\n        var topRight = this.getTopRight();\n        var bottomLeft = this.getBottomLeft();\n        var bottomRight = this.getBottomRight();\n        var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n        var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n        var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n        var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n        return new $.Rect(\n            minX,\n            minY,\n            maxX - minX,\n            maxY - minY);\n    },\n\n    /**\n     * Retrieves the smallest horizontal (degrees=0) rectangle which contains\n     * this rectangle and has integers x, y, width and height\n     * @returns {OpenSeadragon.Rect}\n     */\n    getIntegerBoundingBox: function() {\n        var boundingBox = this.getBoundingBox();\n        var x = Math.floor(boundingBox.x);\n        var y = Math.floor(boundingBox.y);\n        var width = Math.ceil(boundingBox.width + boundingBox.x - x);\n        var height = Math.ceil(boundingBox.height + boundingBox.y - y);\n        return new $.Rect(x, y, width, height);\n    },\n\n    /**\n     * Determines whether a point is inside this rectangle (edge included).\n     * @function\n     * @param {OpenSeadragon.Point} point\n     * @param {Number} [epsilon=0] the margin of error allowed\n     * @returns {Boolean} true if the point is inside this rectangle, false\n     * otherwise.\n     */\n    containsPoint: function(point, epsilon) {\n        epsilon = epsilon || 0;\n\n        // See http://stackoverflow.com/a/2752754/1440403 for explanation\n        var topLeft = this.getTopLeft();\n        var topRight = this.getTopRight();\n        var bottomLeft = this.getBottomLeft();\n        var topDiff = topRight.minus(topLeft);\n        var leftDiff = bottomLeft.minus(topLeft);\n\n        return ((point.x - topLeft.x) * topDiff.x +\n            (point.y - topLeft.y) * topDiff.y >= -epsilon) &&\n\n            ((point.x - topRight.x) * topDiff.x +\n            (point.y - topRight.y) * topDiff.y <= epsilon) &&\n\n            ((point.x - topLeft.x) * leftDiff.x +\n            (point.y - topLeft.y) * leftDiff.y >= -epsilon) &&\n\n            ((point.x - bottomLeft.x) * leftDiff.x +\n            (point.y - bottomLeft.y) * leftDiff.y <= epsilon);\n    },\n\n    /**\n     * Provides a string representation of the rectangle which is useful for\n     * debugging.\n     * @function\n     * @returns {String} A string representation of the rectangle.\n     */\n    toString: function() {\n        return \"[\" +\n            (Math.round(this.x * 100) / 100) + \", \" +\n            (Math.round(this.y * 100) / 100) + \", \" +\n            (Math.round(this.width * 100) / 100) + \"x\" +\n            (Math.round(this.height * 100) / 100) + \", \" +\n            (Math.round(this.degrees * 100) / 100) + \"deg\" +\n            \"]\";\n    }\n};\n\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - ReferenceStrip\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function ( $ ) {\n\n// dictionary from id to private properties\nvar THIS = {};\n\n/**\n *  The CollectionDrawer is a reimplementation if the Drawer API that\n *  focuses on allowing a viewport to be redefined as a collection\n *  of smaller viewports, defined by a clear number of rows and / or\n *  columns of which each item in the matrix of viewports has its own\n *  source.\n *\n *  This idea is a reexpression of the idea of dzi collections\n *  which allows a clearer algorithm to reuse the tile sources already\n *  supported by OpenSeadragon, in heterogenious or homogenious\n *  sequences just like mixed groups already supported by the viewer\n *  for the purpose of image sequnces.\n *\n *  TODO:   The difficult part of this feature is figuring out how to express\n *          this functionality as a combination of the functionality already\n *          provided by Drawer, Viewport, TileSource, and Navigator.  It may\n *          require better abstraction at those points in order to efficiently\n *          reuse those paradigms.\n */\n/**\n * @class ReferenceStrip\n * @memberof OpenSeadragon\n * @param {Object} options\n */\n$.ReferenceStrip = function ( options ) {\n\n    var _this       = this,\n        viewer      = options.viewer,\n        viewerSize  = $.getElementSize( viewer.element ),\n        element,\n        style,\n        i;\n\n    //We may need to create a new element and id if they did not\n    //provide the id for the existing element\n    if ( !options.id ) {\n        options.id              = 'referencestrip-' + $.now();\n        this.element            = $.makeNeutralElement( \"div\" );\n        this.element.id         = options.id;\n        this.element.className  = 'referencestrip';\n    }\n\n    options = $.extend( true, {\n        sizeRatio:  $.DEFAULT_SETTINGS.referenceStripSizeRatio,\n        position:   $.DEFAULT_SETTINGS.referenceStripPosition,\n        scroll:     $.DEFAULT_SETTINGS.referenceStripScroll,\n        clickTimeThreshold:  $.DEFAULT_SETTINGS.clickTimeThreshold\n    }, options, {\n        //required overrides\n        element:                this.element,\n        //These need to be overridden to prevent recursion since\n        //the navigator is a viewer and a viewer has a navigator\n        showNavigator:          false,\n        mouseNavEnabled:        false,\n        showNavigationControl:  false,\n        showSequenceControl:    false\n    } );\n\n    $.extend( this, options );\n    //Private state properties\n    THIS[this.id] = {\n        \"animating\":           false\n    };\n\n    this.minPixelRatio = this.viewer.minPixelRatio;\n\n    style = this.element.style;\n    style.marginTop     = '0px';\n    style.marginRight   = '0px';\n    style.marginBottom  = '0px';\n    style.marginLeft    = '0px';\n    style.left          = '0px';\n    style.bottom        = '0px';\n    style.border        = '0px';\n    style.background    = '#000';\n    style.position      = 'relative';\n\n    $.setElementTouchActionNone( this.element );\n\n    $.setElementOpacity( this.element, 0.8 );\n\n    this.viewer = viewer;\n    this.innerTracker = new $.MouseTracker( {\n        element:        this.element,\n        dragHandler:    $.delegate( this, onStripDrag ),\n        scrollHandler:  $.delegate( this, onStripScroll ),\n        enterHandler:   $.delegate( this, onStripEnter ),\n        exitHandler:    $.delegate( this, onStripExit ),\n        keyDownHandler: $.delegate( this, onKeyDown ),\n        keyHandler:     $.delegate( this, onKeyPress )\n    } );\n\n    //Controls the position and orientation of the reference strip and sets the\n    //appropriate width and height\n    if ( options.width && options.height ) {\n        this.element.style.width  = options.width + 'px';\n        this.element.style.height = options.height + 'px';\n        viewer.addControl(\n            this.element,\n            { anchor: $.ControlAnchor.BOTTOM_LEFT }\n        );\n    } else {\n        if ( \"horizontal\" == options.scroll ) {\n            this.element.style.width = (\n                viewerSize.x *\n                options.sizeRatio *\n                viewer.tileSources.length\n            ) + ( 12 * viewer.tileSources.length ) + 'px';\n\n            this.element.style.height = (\n                viewerSize.y *\n                options.sizeRatio\n            ) + 'px';\n\n            viewer.addControl(\n                this.element,\n                { anchor: $.ControlAnchor.BOTTOM_LEFT }\n            );\n        } else {\n            this.element.style.height = (\n                viewerSize.y *\n                options.sizeRatio *\n                viewer.tileSources.length\n            ) + ( 12 * viewer.tileSources.length ) + 'px';\n\n            this.element.style.width = (\n                viewerSize.x *\n                options.sizeRatio\n            ) + 'px';\n\n            viewer.addControl(\n                this.element,\n                { anchor: $.ControlAnchor.TOP_LEFT }\n            );\n\n        }\n    }\n\n    this.panelWidth = ( viewerSize.x * this.sizeRatio ) + 8;\n    this.panelHeight = ( viewerSize.y * this.sizeRatio ) + 8;\n    this.panels = [];\n    this.miniViewers = {};\n\n    /*jshint loopfunc:true*/\n    for ( i = 0; i < viewer.tileSources.length; i++ ) {\n\n        element = $.makeNeutralElement( 'div' );\n        element.id = this.element.id + \"-\" + i;\n\n        element.style.width         = _this.panelWidth + 'px';\n        element.style.height        = _this.panelHeight + 'px';\n        element.style.display       = 'inline';\n        element.style.float         = 'left'; //Webkit\n        element.style.cssFloat      = 'left'; //Firefox\n        element.style.styleFloat    = 'left'; //IE\n        element.style.padding       = '2px';\n        $.setElementTouchActionNone( element );\n\n        element.innerTracker = new $.MouseTracker( {\n            element:            element,\n            clickTimeThreshold: this.clickTimeThreshold,\n            clickDistThreshold: this.clickDistThreshold,\n            pressHandler: function ( event ) {\n                event.eventSource.dragging = $.now();\n            },\n            releaseHandler: function ( event ) {\n                var tracker = event.eventSource,\n                    id      = tracker.element.id,\n                    page    = Number( id.split( '-' )[2] ),\n                    now     = $.now();\n\n                if ( event.insideElementPressed &&\n                     event.insideElementReleased &&\n                     tracker.dragging &&\n                     ( now - tracker.dragging ) < tracker.clickTimeThreshold ) {\n                    tracker.dragging = null;\n                    viewer.goToPage( page );\n                }\n            }\n        } );\n\n        this.element.appendChild( element );\n\n        element.activePanel = false;\n\n        this.panels.push( element );\n\n    }\n    loadPanels( this, this.scroll == 'vertical' ? viewerSize.y : viewerSize.x, 0 );\n    this.setFocus( 0 );\n\n};\n\n$.extend( $.ReferenceStrip.prototype, $.EventSource.prototype, $.Viewer.prototype, /** @lends OpenSeadragon.ReferenceStrip.prototype */{\n\n    /**\n     * @function\n     */\n    setFocus: function ( page ) {\n        var element      = $.getElement( this.element.id + '-' + page ),\n            viewerSize   = $.getElementSize( this.viewer.canvas ),\n            scrollWidth  = Number( this.element.style.width.replace( 'px', '' ) ),\n            scrollHeight = Number( this.element.style.height.replace( 'px', '' ) ),\n            offsetLeft   = -Number( this.element.style.marginLeft.replace( 'px', '' ) ),\n            offsetTop    = -Number( this.element.style.marginTop.replace( 'px', '' ) ),\n            offset;\n\n        if ( this.currentSelected !== element ) {\n            if ( this.currentSelected ) {\n                this.currentSelected.style.background = '#000';\n            }\n            this.currentSelected = element;\n            this.currentSelected.style.background = '#999';\n\n            if ( 'horizontal' == this.scroll ) {\n                //right left\n                offset = ( Number( page ) ) * ( this.panelWidth + 3 );\n                if ( offset > offsetLeft + viewerSize.x - this.panelWidth ) {\n                    offset = Math.min( offset, ( scrollWidth - viewerSize.x ) );\n                    this.element.style.marginLeft = -offset + 'px';\n                    loadPanels( this, viewerSize.x, -offset );\n                } else if ( offset < offsetLeft ) {\n                    offset = Math.max( 0, offset - viewerSize.x / 2 );\n                    this.element.style.marginLeft = -offset + 'px';\n                    loadPanels( this, viewerSize.x, -offset );\n                }\n            } else {\n                offset = ( Number( page ) ) * ( this.panelHeight + 3 );\n                if ( offset > offsetTop + viewerSize.y - this.panelHeight ) {\n                    offset = Math.min( offset, ( scrollHeight - viewerSize.y ) );\n                    this.element.style.marginTop = -offset + 'px';\n                    loadPanels( this, viewerSize.y, -offset );\n                } else if ( offset < offsetTop ) {\n                    offset = Math.max( 0, offset - viewerSize.y / 2 );\n                    this.element.style.marginTop = -offset + 'px';\n                    loadPanels( this, viewerSize.y, -offset );\n                }\n            }\n\n            this.currentPage = page;\n            onStripEnter.call( this, { eventSource: this.innerTracker } );\n        }\n    },\n\n    /**\n     * @function\n     */\n    update: function () {\n        if ( THIS[this.id].animating ) {\n            $.console.log( 'image reference strip update' );\n            return true;\n        }\n        return false;\n    },\n\n    // Overrides Viewer.destroy\n    destroy: function() {\n        if (this.miniViewers) {\n          for (var key in this.miniViewers) {\n            this.miniViewers[key].destroy();\n          }\n        }\n\n        if (this.element) {\n            this.element.parentNode.removeChild(this.element);\n        }\n    }\n\n} );\n\n\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onStripDrag( event ) {\n\n    var offsetLeft   = Number( this.element.style.marginLeft.replace( 'px', '' ) ),\n        offsetTop    = Number( this.element.style.marginTop.replace( 'px', '' ) ),\n        scrollWidth  = Number( this.element.style.width.replace( 'px', '' ) ),\n        scrollHeight = Number( this.element.style.height.replace( 'px', '' ) ),\n        viewerSize   = $.getElementSize( this.viewer.canvas );\n    this.dragging = true;\n    if ( this.element ) {\n        if ( 'horizontal' == this.scroll ) {\n            if ( -event.delta.x > 0 ) {\n                //forward\n                if ( offsetLeft > -( scrollWidth - viewerSize.x ) ) {\n                    this.element.style.marginLeft = ( offsetLeft + ( event.delta.x * 2 ) ) + 'px';\n                    loadPanels( this, viewerSize.x, offsetLeft + ( event.delta.x * 2 ) );\n                }\n            } else if ( -event.delta.x < 0 ) {\n                //reverse\n                if ( offsetLeft < 0 ) {\n                    this.element.style.marginLeft = ( offsetLeft + ( event.delta.x * 2 ) ) + 'px';\n                    loadPanels( this, viewerSize.x, offsetLeft + ( event.delta.x * 2 ) );\n                }\n            }\n        } else {\n            if ( -event.delta.y > 0 ) {\n                //forward\n                if ( offsetTop > -( scrollHeight - viewerSize.y ) ) {\n                    this.element.style.marginTop = ( offsetTop + ( event.delta.y * 2 ) ) + 'px';\n                    loadPanels( this, viewerSize.y, offsetTop + ( event.delta.y * 2 ) );\n                }\n            } else if ( -event.delta.y < 0 ) {\n                //reverse\n                if ( offsetTop < 0 ) {\n                    this.element.style.marginTop = ( offsetTop + ( event.delta.y * 2 ) ) + 'px';\n                    loadPanels( this, viewerSize.y, offsetTop + ( event.delta.y * 2 ) );\n                }\n            }\n        }\n    }\n    return false;\n\n}\n\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onStripScroll( event ) {\n    var offsetLeft   = Number( this.element.style.marginLeft.replace( 'px', '' ) ),\n        offsetTop    = Number( this.element.style.marginTop.replace( 'px', '' ) ),\n        scrollWidth  = Number( this.element.style.width.replace( 'px', '' ) ),\n        scrollHeight = Number( this.element.style.height.replace( 'px', '' ) ),\n        viewerSize   = $.getElementSize( this.viewer.canvas );\n    if ( this.element ) {\n        if ( 'horizontal' == this.scroll ) {\n            if ( event.scroll > 0 ) {\n                //forward\n                if ( offsetLeft > -( scrollWidth - viewerSize.x ) ) {\n                    this.element.style.marginLeft = ( offsetLeft - ( event.scroll * 60 ) ) + 'px';\n                    loadPanels( this, viewerSize.x, offsetLeft - ( event.scroll * 60 ) );\n                }\n            } else if ( event.scroll < 0 ) {\n                //reverse\n                if ( offsetLeft < 0 ) {\n                    this.element.style.marginLeft = ( offsetLeft - ( event.scroll * 60 ) ) + 'px';\n                    loadPanels( this, viewerSize.x, offsetLeft - ( event.scroll * 60 ) );\n                }\n            }\n        } else {\n            if ( event.scroll < 0 ) {\n                //scroll up\n                if ( offsetTop > viewerSize.y - scrollHeight ) {\n                    this.element.style.marginTop = ( offsetTop + ( event.scroll * 60 ) ) + 'px';\n                    loadPanels( this, viewerSize.y, offsetTop + ( event.scroll * 60 ) );\n                }\n            } else if ( event.scroll > 0 ) {\n                //scroll dowm\n                if ( offsetTop < 0 ) {\n                    this.element.style.marginTop = ( offsetTop + ( event.scroll * 60 ) ) + 'px';\n                    loadPanels( this, viewerSize.y, offsetTop + ( event.scroll * 60 ) );\n                }\n            }\n        }\n    }\n    //cancels event\n    return false;\n}\n\n\nfunction loadPanels( strip, viewerSize, scroll ) {\n    var panelSize,\n        activePanelsStart,\n        activePanelsEnd,\n        miniViewer,\n        style,\n        i,\n        element;\n    if ( 'horizontal' == strip.scroll ) {\n        panelSize = strip.panelWidth;\n    } else {\n        panelSize = strip.panelHeight;\n    }\n    activePanelsStart = Math.ceil( viewerSize / panelSize ) + 5;\n    activePanelsEnd = Math.ceil( ( Math.abs( scroll ) + viewerSize ) / panelSize ) + 1;\n    activePanelsStart = activePanelsEnd - activePanelsStart;\n    activePanelsStart = activePanelsStart < 0 ? 0 : activePanelsStart;\n\n    for ( i = activePanelsStart; i < activePanelsEnd && i < strip.panels.length; i++ ) {\n        element = strip.panels[i];\n        if ( !element.activePanel ) {\n            var miniTileSource;\n            var originalTileSource = strip.viewer.tileSources[i];\n            if (originalTileSource.referenceStripThumbnailUrl) {\n                miniTileSource = {\n                    type: 'image',\n                    url: originalTileSource.referenceStripThumbnailUrl\n                };\n            } else {\n                miniTileSource = originalTileSource;\n            }\n            miniViewer = new $.Viewer( {\n                id:                     element.id,\n                tileSources:            [miniTileSource],\n                element:                element,\n                navigatorSizeRatio:     strip.sizeRatio,\n                showNavigator:          false,\n                mouseNavEnabled:        false,\n                showNavigationControl:  false,\n                showSequenceControl:    false,\n                immediateRender:        true,\n                blendTime:              0,\n                animationTime:          0\n            } );\n\n            miniViewer.displayRegion           = $.makeNeutralElement( \"div\" );\n            miniViewer.displayRegion.id        = element.id + '-displayregion';\n            miniViewer.displayRegion.className = 'displayregion';\n\n            style               = miniViewer.displayRegion.style;\n            style.position      = 'relative';\n            style.top           = '0px';\n            style.left          = '0px';\n            style.fontSize      = '0px';\n            style.overflow      = 'hidden';\n            style.float         = 'left'; //Webkit\n            style.cssFloat      = 'left'; //Firefox\n            style.styleFloat    = 'left'; //IE\n            style.zIndex        = 999999999;\n            style.cursor        = 'default';\n            style.width         = ( strip.panelWidth - 4 ) + 'px';\n            style.height        = ( strip.panelHeight - 4 ) + 'px';\n\n            // TODO: What is this for? Future keyboard navigation support?\n            miniViewer.displayRegion.innerTracker = new $.MouseTracker( {\n                element: miniViewer.displayRegion,\n                startDisabled: true\n            } );\n\n            element.getElementsByTagName( 'div' )[0].appendChild(\n                miniViewer.displayRegion\n            );\n\n            strip.miniViewers[element.id] = miniViewer;\n\n            element.activePanel = true;\n        }\n    }\n}\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onStripEnter( event ) {\n    var element = event.eventSource.element;\n\n    //$.setElementOpacity(element, 0.8);\n\n    //element.style.border = '1px solid #555';\n    //element.style.background = '#000';\n\n    if ( 'horizontal' == this.scroll ) {\n\n        //element.style.paddingTop = \"0px\";\n        element.style.marginBottom = \"0px\";\n\n    } else {\n\n        //element.style.paddingRight = \"0px\";\n        element.style.marginLeft = \"0px\";\n\n    }\n    return false;\n}\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onStripExit( event ) {\n    var element = event.eventSource.element;\n\n    if ( 'horizontal' == this.scroll ) {\n\n        //element.style.paddingTop = \"10px\";\n        element.style.marginBottom = \"-\" + ( $.getElementSize( element ).y / 2 ) + \"px\";\n\n    } else {\n\n        //element.style.paddingRight = \"10px\";\n        element.style.marginLeft = \"-\" + ( $.getElementSize( element ).x / 2 ) + \"px\";\n\n    }\n    return false;\n}\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onKeyDown( event ) {\n    //console.log( event.keyCode );\n\n    if ( !event.preventDefaultAction && !event.ctrl && !event.alt && !event.meta ) {\n        switch ( event.keyCode ) {\n            case 38: //up arrow\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n                return false;\n            case 40: //down arrow\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n                return false;\n            case 37: //left arrow\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n                return false;\n            case 39: //right arrow\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n                return false;\n            default:\n                //console.log( 'navigator keycode %s', event.keyCode );\n                return true;\n        }\n    } else {\n        return true;\n    }\n}\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onKeyPress( event ) {\n    //console.log( event.keyCode );\n\n    if ( !event.preventDefaultAction && !event.ctrl && !event.alt && !event.meta ) {\n        switch ( event.keyCode ) {\n            case 61: //=|+\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n                return false;\n            case 45: //-|_\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n                return false;\n            case 48: //0|)\n            case 119: //w\n            case 87: //W\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n                return false;\n            case 115: //s\n            case 83: //S\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n                return false;\n            case 97: //a\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n                return false;\n            case 100: //d\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n                return false;\n            default:\n                //console.log( 'navigator keycode %s', event.keyCode );\n                return true;\n        }\n    } else {\n        return true;\n    }\n}\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - DisplayRect\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class DisplayRect\n * @classdesc A display rectangle is very similar to {@link OpenSeadragon.Rect} but adds two\n * fields, 'minLevel' and 'maxLevel' which denote the supported zoom levels\n * for this rectangle.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.Rect\n * @param {Number} x The vector component 'x'.\n * @param {Number} y The vector component 'y'.\n * @param {Number} width The vector component 'height'.\n * @param {Number} height The vector component 'width'.\n * @param {Number} minLevel The lowest zoom level supported.\n * @param {Number} maxLevel The highest zoom level supported.\n */\n$.DisplayRect = function( x, y, width, height, minLevel, maxLevel ) {\n    $.Rect.apply( this, [ x, y, width, height ] );\n\n    /**\n     * The lowest zoom level supported.\n     * @member {Number} minLevel\n     * @memberof OpenSeadragon.DisplayRect#\n     */\n    this.minLevel = minLevel;\n    /**\n     * The highest zoom level supported.\n     * @member {Number} maxLevel\n     * @memberof OpenSeadragon.DisplayRect#\n     */\n    this.maxLevel = maxLevel;\n};\n\n$.extend( $.DisplayRect.prototype, $.Rect.prototype );\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Spring\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class Spring\n * @memberof OpenSeadragon\n * @param {Object} options - Spring configuration settings.\n * @param {Number} options.springStiffness - Spring stiffness. Must be greater than zero.\n * The closer to zero, the closer to linear animation.\n * @param {Number} options.animationTime - Animation duration per spring, in seconds.\n * Must be zero or greater.\n * @param {Number} [options.initial=0] - Initial value of spring.\n * @param {Boolean} [options.exponential=false] - Whether this spring represents\n * an exponential scale (such as zoom) and should be animated accordingly. Note that\n * exponential springs must have non-zero values.\n */\n$.Spring = function( options ) {\n    var args = arguments;\n\n    if( typeof ( options ) != 'object' ){\n        //allows backward compatible use of ( initialValue, config ) as\n        //constructor parameters\n        options = {\n            initial: args.length && typeof ( args[ 0 ] ) == \"number\" ?\n                args[ 0 ] :\n                undefined,\n            /**\n             * Spring stiffness.\n             * @member {Number} springStiffness\n             * @memberof OpenSeadragon.Spring#\n             */\n            springStiffness: args.length > 1 ?\n                args[ 1 ].springStiffness :\n                5.0,\n            /**\n             * Animation duration per spring.\n             * @member {Number} animationTime\n             * @memberof OpenSeadragon.Spring#\n             */\n            animationTime: args.length > 1 ?\n                args[ 1 ].animationTime :\n                1.5\n        };\n    }\n\n    $.console.assert(typeof options.springStiffness === \"number\" && options.springStiffness !== 0,\n        \"[OpenSeadragon.Spring] options.springStiffness must be a non-zero number\");\n\n    $.console.assert(typeof options.animationTime === \"number\" && options.animationTime >= 0,\n        \"[OpenSeadragon.Spring] options.animationTime must be a number greater than or equal to 0\");\n\n    if (options.exponential) {\n        this._exponential = true;\n        delete options.exponential;\n    }\n\n    $.extend( true, this, options);\n\n    /**\n     * @member {Object} current\n     * @memberof OpenSeadragon.Spring#\n     * @property {Number} value\n     * @property {Number} time\n     */\n    this.current = {\n        value: typeof ( this.initial ) == \"number\" ?\n            this.initial :\n            (this._exponential ? 0 : 1),\n        time:  $.now() // always work in milliseconds\n    };\n\n    $.console.assert(!this._exponential || this.current.value !== 0,\n        \"[OpenSeadragon.Spring] value must be non-zero for exponential springs\");\n\n    /**\n     * @member {Object} start\n     * @memberof OpenSeadragon.Spring#\n     * @property {Number} value\n     * @property {Number} time\n     */\n    this.start = {\n        value: this.current.value,\n        time:  this.current.time\n    };\n\n    /**\n     * @member {Object} target\n     * @memberof OpenSeadragon.Spring#\n     * @property {Number} value\n     * @property {Number} time\n     */\n    this.target = {\n        value: this.current.value,\n        time:  this.current.time\n    };\n\n    if (this._exponential) {\n        this.start._logValue = Math.log(this.start.value);\n        this.target._logValue = Math.log(this.target.value);\n        this.current._logValue = Math.log(this.current.value);\n    }\n};\n\n/** @lends OpenSeadragon.Spring.prototype */\n$.Spring.prototype = {\n\n    /**\n     * @function\n     * @param {Number} target\n     */\n    resetTo: function( target ) {\n        $.console.assert(!this._exponential || target !== 0,\n            \"[OpenSeadragon.Spring.resetTo] target must be non-zero for exponential springs\");\n\n        this.start.value = this.target.value = this.current.value = target;\n        this.start.time = this.target.time = this.current.time = $.now();\n\n        if (this._exponential) {\n            this.start._logValue = Math.log(this.start.value);\n            this.target._logValue = Math.log(this.target.value);\n            this.current._logValue = Math.log(this.current.value);\n        }\n    },\n\n    /**\n     * @function\n     * @param {Number} target\n     */\n    springTo: function( target ) {\n        $.console.assert(!this._exponential || target !== 0,\n            \"[OpenSeadragon.Spring.springTo] target must be non-zero for exponential springs\");\n\n        this.start.value  = this.current.value;\n        this.start.time   = this.current.time;\n        this.target.value = target;\n        this.target.time  = this.start.time + 1000 * this.animationTime;\n\n        if (this._exponential) {\n            this.start._logValue = Math.log(this.start.value);\n            this.target._logValue = Math.log(this.target.value);\n        }\n    },\n\n    /**\n     * @function\n     * @param {Number} delta\n     */\n    shiftBy: function( delta ) {\n        this.start.value  += delta;\n        this.target.value += delta;\n\n        if (this._exponential) {\n            $.console.assert(this.target.value !== 0 && this.start.value !== 0,\n                \"[OpenSeadragon.Spring.shiftBy] spring value must be non-zero for exponential springs\");\n\n            this.start._logValue = Math.log(this.start.value);\n            this.target._logValue = Math.log(this.target.value);\n        }\n    },\n\n    setExponential: function(value) {\n        this._exponential = value;\n\n        if (this._exponential) {\n            $.console.assert(this.current.value !== 0 && this.target.value !== 0 && this.start.value !== 0,\n                \"[OpenSeadragon.Spring.setExponential] spring value must be non-zero for exponential springs\");\n\n            this.start._logValue = Math.log(this.start.value);\n            this.target._logValue = Math.log(this.target.value);\n            this.current._logValue = Math.log(this.current.value);\n        }\n    },\n\n    /**\n     * @function\n     * @returns true if the value got updated, false otherwise\n     */\n    update: function() {\n        this.current.time  = $.now();\n\n        var startValue, targetValue;\n        if (this._exponential) {\n            startValue = this.start._logValue;\n            targetValue = this.target._logValue;\n        } else {\n            startValue = this.start.value;\n            targetValue = this.target.value;\n        }\n\n        var currentValue = (this.current.time >= this.target.time) ?\n            targetValue :\n            startValue +\n                ( targetValue - startValue ) *\n                transform(\n                    this.springStiffness,\n                    ( this.current.time - this.start.time ) /\n                    ( this.target.time - this.start.time )\n                );\n\n        var oldValue = this.current.value;\n        if (this._exponential) {\n            this.current.value = Math.exp(currentValue);\n        } else {\n            this.current.value = currentValue;\n        }\n\n        return oldValue != this.current.value;\n    },\n\n    /**\n     * Returns whether the spring is at the target value\n     * @function\n     * @returns {Boolean} True if at target value, false otherwise\n     */\n    isAtTargetValue: function() {\n        return this.current.value === this.target.value;\n    }\n};\n\n/**\n * @private\n */\nfunction transform( stiffness, x ) {\n    return ( 1.0 - Math.exp( stiffness * -x ) ) /\n        ( 1.0 - Math.exp( -stiffness ) );\n}\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - ImageLoader\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function($){\n\n/**\n * @private\n * @class ImageJob\n * @classdesc Handles downloading of a single image.\n * @param {Object} options - Options for this ImageJob.\n * @param {String} [options.src] - URL of image to download.\n * @param {String} [options.loadWithAjax] - Whether to load this image with AJAX.\n * @param {String} [options.ajaxHeaders] - Headers to add to the image request if using AJAX.\n * @param {String} [options.crossOriginPolicy] - CORS policy to use for downloads\n * @param {Function} [options.callback] - Called once image has been downloaded.\n * @param {Function} [options.abort] - Called when this image job is aborted.\n * @param {Number} [options.timeout] - The max number of milliseconds that this image job may take to complete.\n */\nfunction ImageJob (options) {\n\n    $.extend(true, this, {\n        timeout: $.DEFAULT_SETTINGS.timeout,\n        jobId: null\n    }, options);\n\n    /**\n     * Image object which will contain downloaded image.\n     * @member {Image} image\n     * @memberof OpenSeadragon.ImageJob#\n     */\n    this.image = null;\n}\n\nImageJob.prototype = {\n    errorMsg: null,\n\n    /**\n     * Starts the image job.\n     * @method\n     */\n    start: function(){\n        var self = this;\n        var selfAbort = this.abort;\n\n        this.image = new Image();\n\n        this.image.onload = function(){\n            self.finish(true);\n        };\n        this.image.onabort = this.image.onerror = function() {\n            self.errorMsg = \"Image load aborted\";\n            self.finish(false);\n        };\n\n        this.jobId = window.setTimeout(function(){\n            self.errorMsg = \"Image load exceeded timeout (\" + self.timeout + \" ms)\";\n            self.finish(false);\n        }, this.timeout);\n\n        // Load the tile with an AJAX request if the loadWithAjax option is\n        // set. Otherwise load the image by setting the source proprety of the image object.\n        if (this.loadWithAjax) {\n            this.request = $.makeAjaxRequest({\n                url: this.src,\n                withCredentials: this.ajaxWithCredentials,\n                headers: this.ajaxHeaders,\n                responseType: \"arraybuffer\",\n                success: function(request) {\n                    var blb;\n                    // Make the raw data into a blob.\n                    // BlobBuilder fallback adapted from\n                    // http://stackoverflow.com/questions/15293694/blob-constructor-browser-compatibility\n                    try {\n                        blb = new window.Blob([request.response]);\n                    } catch (e) {\n                        var BlobBuilder = (\n                            window.BlobBuilder ||\n                            window.WebKitBlobBuilder ||\n                            window.MozBlobBuilder ||\n                            window.MSBlobBuilder\n                        );\n                        if (e.name === 'TypeError' && BlobBuilder) {\n                            var bb = new BlobBuilder();\n                            bb.append(request.response);\n                            blb = bb.getBlob();\n                        }\n                    }\n                    // If the blob is empty for some reason consider the image load a failure.\n                    if (blb.size === 0) {\n                        self.errorMsg = \"Empty image response.\";\n                        self.finish(false);\n                    }\n                    // Create a URL for the blob data and make it the source of the image object.\n                    // This will still trigger Image.onload to indicate a successful tile load.\n                    var url = (window.URL || window.webkitURL).createObjectURL(blb);\n                    self.image.src = url;\n                },\n                error: function(request) {\n                    self.errorMsg = \"Image load aborted - XHR error\";\n                    self.finish(false);\n                }\n            });\n\n            // Provide a function to properly abort the request.\n            this.abort = function() {\n                self.request.abort();\n\n                // Call the existing abort function if available\n                if (typeof selfAbort === \"function\") {\n                    selfAbort();\n                }\n            };\n        } else {\n            if (this.crossOriginPolicy !== false) {\n                this.image.crossOrigin = this.crossOriginPolicy;\n            }\n\n            this.image.src = this.src;\n        }\n    },\n\n    finish: function(successful) {\n        this.image.onload = this.image.onerror = this.image.onabort = null;\n        if (!successful) {\n            this.image = null;\n        }\n\n        if (this.jobId) {\n            window.clearTimeout(this.jobId);\n        }\n\n        this.callback(this);\n    }\n\n};\n\n/**\n * @class ImageLoader\n * @memberof OpenSeadragon\n * @classdesc Handles downloading of a set of images using asynchronous queue pattern.\n * You generally won't have to interact with the ImageLoader directly.\n * @param {Object} options - Options for this ImageLoader.\n * @param {Number} [options.jobLimit] - The number of concurrent image requests. See imageLoaderLimit in {@link OpenSeadragon.Options} for details.\n * @param {Number} [options.timeout] - The max number of milliseconds that an image job may take to complete.\n */\n$.ImageLoader = function(options) {\n\n    $.extend(true, this, {\n        jobLimit:       $.DEFAULT_SETTINGS.imageLoaderLimit,\n        timeout:        $.DEFAULT_SETTINGS.timeout,\n        jobQueue:       [],\n        jobsInProgress: 0\n    }, options);\n\n};\n\n/** @lends OpenSeadragon.ImageLoader.prototype */\n$.ImageLoader.prototype = {\n\n    /**\n     * Add an unloaded image to the loader queue.\n     * @method\n     * @param {Object} options - Options for this job.\n     * @param {String} [options.src] - URL of image to download.\n     * @param {String} [options.loadWithAjax] - Whether to load this image with AJAX.\n     * @param {String} [options.ajaxHeaders] - Headers to add to the image request if using AJAX.\n     * @param {String|Boolean} [options.crossOriginPolicy] - CORS policy to use for downloads\n     * @param {Boolean} [options.ajaxWithCredentials] - Whether to set withCredentials on AJAX\n     * requests.\n     * @param {Function} [options.callback] - Called once image has been downloaded.\n     * @param {Function} [options.abort] - Called when this image job is aborted.\n     */\n    addJob: function(options) {\n        var _this = this,\n            complete = function(job) {\n                completeJob(_this, job, options.callback);\n            },\n            jobOptions = {\n                src: options.src,\n                loadWithAjax: options.loadWithAjax,\n                ajaxHeaders: options.loadWithAjax ? options.ajaxHeaders : null,\n                crossOriginPolicy: options.crossOriginPolicy,\n                ajaxWithCredentials: options.ajaxWithCredentials,\n                callback: complete,\n                abort: options.abort,\n                timeout: this.timeout\n            },\n            newJob = new ImageJob(jobOptions);\n\n        if ( !this.jobLimit || this.jobsInProgress < this.jobLimit ) {\n            newJob.start();\n            this.jobsInProgress++;\n        }\n        else {\n            this.jobQueue.push( newJob );\n        }\n    },\n\n    /**\n     * Clear any unstarted image loading jobs from the queue.\n     * @method\n     */\n    clear: function() {\n        for( var i = 0; i < this.jobQueue.length; i++ ) {\n            var job = this.jobQueue[i];\n            if ( typeof job.abort === \"function\" ) {\n                job.abort();\n            }\n        }\n\n        this.jobQueue = [];\n    }\n};\n\n/**\n * Cleans up ImageJob once completed.\n * @method\n * @private\n * @param loader - ImageLoader used to start job.\n * @param job - The ImageJob that has completed.\n * @param callback - Called once cleanup is finished.\n */\nfunction completeJob(loader, job, callback) {\n    var nextJob;\n\n    loader.jobsInProgress--;\n\n    if ((!loader.jobLimit || loader.jobsInProgress < loader.jobLimit) && loader.jobQueue.length > 0) {\n        nextJob = loader.jobQueue.shift();\n        nextJob.start();\n        loader.jobsInProgress++;\n    }\n\n    callback(job.image, job.errorMsg, job.request);\n}\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - Tile\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class Tile\n * @memberof OpenSeadragon\n * @param {Number} level The zoom level this tile belongs to.\n * @param {Number} x The vector component 'x'.\n * @param {Number} y The vector component 'y'.\n * @param {OpenSeadragon.Rect} bounds Where this tile fits, in normalized\n *      coordinates.\n * @param {Boolean} exists Is this tile a part of a sparse image? ( Also has\n *      this tile failed to load? )\n * @param {String} url The URL of this tile's image.\n * @param {CanvasRenderingContext2D} context2D The context2D of this tile if it\n * is provided directly by the tile source.\n * @param {Boolean} loadWithAjax Whether this tile image should be loaded with an AJAX request .\n * @param {Object} ajaxHeaders The headers to send with this tile's AJAX request (if applicable).\n * @param {OpenSeadragon.Rect} sourceBounds The portion of the tile to use as the source of the\n * drawing operation, in pixels. Note that this only works when drawing with canvas; when drawing\n * with HTML the entire tile is always used.\n */\n$.Tile = function(level, x, y, bounds, exists, url, context2D, loadWithAjax, ajaxHeaders, sourceBounds) {\n    /**\n     * The zoom level this tile belongs to.\n     * @member {Number} level\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.level   = level;\n    /**\n     * The vector component 'x'.\n     * @member {Number} x\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.x       = x;\n    /**\n     * The vector component 'y'.\n     * @member {Number} y\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.y       = y;\n    /**\n     * Where this tile fits, in normalized coordinates\n     * @member {OpenSeadragon.Rect} bounds\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.bounds  = bounds;\n    /**\n    * The portion of the tile to use as the source of the drawing operation, in pixels. Note that\n    * this only works when drawing with canvas; when drawing with HTML the entire tile is always used.\n    * @member {OpenSeadragon.Rect} sourceBounds\n    * @memberof OpenSeadragon.Tile#\n    */\n    this.sourceBounds = sourceBounds;\n    /**\n     * Is this tile a part of a sparse image? Also has this tile failed to load?\n     * @member {Boolean} exists\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.exists  = exists;\n    /**\n     * The URL of this tile's image.\n     * @member {String} url\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.url     = url;\n    /**\n     * The context2D of this tile if it is provided directly by the tile source.\n     * @member {CanvasRenderingContext2D} context2D\n     * @memberOf OpenSeadragon.Tile#\n     */\n    this.context2D = context2D;\n    /**\n     * Whether to load this tile's image with an AJAX request.\n     * @member {Boolean} loadWithAjax\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.loadWithAjax = loadWithAjax;\n    /**\n     * The headers to be used in requesting this tile's image.\n     * Only used if loadWithAjax is set to true.\n     * @member {Object} ajaxHeaders\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.ajaxHeaders = ajaxHeaders;\n    /**\n     * The unique cache key for this tile.\n     * @member {String} cacheKey\n     * @memberof OpenSeadragon.Tile#\n     */\n    if (this.ajaxHeaders) {\n        this.cacheKey = this.url + \"+\" + JSON.stringify(this.ajaxHeaders);\n    } else {\n        this.cacheKey = this.url;\n    }\n    /**\n     * Is this tile loaded?\n     * @member {Boolean} loaded\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.loaded  = false;\n    /**\n     * Is this tile loading?\n     * @member {Boolean} loading\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.loading = false;\n\n    /**\n     * The HTML div element for this tile\n     * @member {Element} element\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.element    = null;\n    /**\n     * The HTML img element for this tile.\n     * @member {Element} imgElement\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.imgElement = null;\n    /**\n     * The Image object for this tile.\n     * @member {Object} image\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.image      = null;\n\n    /**\n     * The alias of this.element.style.\n     * @member {String} style\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.style      = null;\n    /**\n     * This tile's position on screen, in pixels.\n     * @member {OpenSeadragon.Point} position\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.position   = null;\n    /**\n     * This tile's size on screen, in pixels.\n     * @member {OpenSeadragon.Point} size\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.size       = null;\n    /**\n     * The start time of this tile's blending.\n     * @member {Number} blendStart\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.blendStart = null;\n    /**\n     * The current opacity this tile should be.\n     * @member {Number} opacity\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.opacity    = null;\n    /**\n     * The squared distance of this tile to the viewport center.\n     * Use for comparing tiles.\n     * @private\n     * @member {Number} squaredDistance\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.squaredDistance   = null;\n    /**\n     * The visibility score of this tile.\n     * @member {Number} visibility\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.visibility = null;\n\n    /**\n     * Whether this tile is currently being drawn.\n     * @member {Boolean} beingDrawn\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.beingDrawn     = false;\n\n    /**\n     * Timestamp the tile was last touched.\n     * @member {Number} lastTouchTime\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.lastTouchTime  = 0;\n\n    /**\n     * Whether this tile is in the right-most column for its level.\n     * @member {Boolean} isRightMost\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.isRightMost = false;\n\n    /**\n     * Whether this tile is in the bottom-most row for its level.\n     * @member {Boolean} isBottomMost\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.isBottomMost = false;\n};\n\n/** @lends OpenSeadragon.Tile.prototype */\n$.Tile.prototype = {\n\n    /**\n     * Provides a string representation of this tiles level and (x,y)\n     * components.\n     * @function\n     * @returns {String}\n     */\n    toString: function() {\n        return this.level + \"/\" + this.x + \"_\" + this.y;\n    },\n\n    // private\n    _hasTransparencyChannel: function() {\n        return !!this.context2D || this.url.match('.png');\n    },\n\n    /**\n     * Renders the tile in an html container.\n     * @function\n     * @param {Element} container\n     */\n    drawHTML: function( container ) {\n        if (!this.cacheImageRecord) {\n            $.console.warn(\n                '[Tile.drawHTML] attempting to draw tile %s when it\\'s not cached',\n                this.toString());\n            return;\n        }\n\n        if ( !this.loaded ) {\n            $.console.warn(\n                \"Attempting to draw tile %s when it's not yet loaded.\",\n                this.toString()\n            );\n            return;\n        }\n\n        //EXPERIMENTAL - trying to figure out how to scale the container\n        //               content during animation of the container size.\n\n        if ( !this.element ) {\n            this.element                              = $.makeNeutralElement( \"div\" );\n            this.imgElement                           = this.cacheImageRecord.getImage().cloneNode();\n            this.imgElement.style.msInterpolationMode = \"nearest-neighbor\";\n            this.imgElement.style.width               = \"100%\";\n            this.imgElement.style.height              = \"100%\";\n\n            this.style                     = this.element.style;\n            this.style.position            = \"absolute\";\n        }\n        if ( this.element.parentNode != container ) {\n            container.appendChild( this.element );\n        }\n        if ( this.imgElement.parentNode != this.element ) {\n            this.element.appendChild( this.imgElement );\n        }\n\n        this.style.top     = this.position.y + \"px\";\n        this.style.left    = this.position.x + \"px\";\n        this.style.height  = this.size.y + \"px\";\n        this.style.width   = this.size.x + \"px\";\n\n        $.setElementOpacity( this.element, this.opacity );\n    },\n\n    /**\n     * Renders the tile in a canvas-based context.\n     * @function\n     * @param {Canvas} context\n     * @param {Function} drawingHandler - Method for firing the drawing event.\n     * drawingHandler({context, tile, rendered})\n     * where <code>rendered</code> is the context with the pre-drawn image.\n     * @param {Number} [scale=1] - Apply a scale to position and size\n     * @param {OpenSeadragon.Point} [translate] - A translation vector\n     */\n    drawCanvas: function( context, drawingHandler, scale, translate ) {\n\n        var position = this.position.times($.pixelDensityRatio),\n            size     = this.size.times($.pixelDensityRatio),\n            rendered;\n\n        if (!this.context2D && !this.cacheImageRecord) {\n            $.console.warn(\n                '[Tile.drawCanvas] attempting to draw tile %s when it\\'s not cached',\n                this.toString());\n            return;\n        }\n\n        rendered = this.context2D || this.cacheImageRecord.getRenderedContext();\n\n        if ( !this.loaded || !rendered ){\n            $.console.warn(\n                \"Attempting to draw tile %s when it's not yet loaded.\",\n                this.toString()\n            );\n\n            return;\n        }\n\n        context.save();\n\n        context.globalAlpha = this.opacity;\n\n        if (typeof scale === 'number' && scale !== 1) {\n            // draw tile at a different scale\n            position = position.times(scale);\n            size = size.times(scale);\n        }\n\n        if (translate instanceof $.Point) {\n            // shift tile position slightly\n            position = position.plus(translate);\n        }\n\n        //if we are supposed to be rendering fully opaque rectangle,\n        //ie its done fading or fading is turned off, and if we are drawing\n        //an image with an alpha channel, then the only way\n        //to avoid seeing the tile underneath is to clear the rectangle\n        if (context.globalAlpha === 1 && this._hasTransparencyChannel()) {\n            //clearing only the inside of the rectangle occupied\n            //by the png prevents edge flikering\n            context.clearRect(\n                position.x,\n                position.y,\n                size.x,\n                size.y\n            );\n        }\n\n        // This gives the application a chance to make image manipulation\n        // changes as we are rendering the image\n        drawingHandler({context: context, tile: this, rendered: rendered});\n\n        var sourceWidth, sourceHeight;\n        if (this.sourceBounds) {\n            sourceWidth = Math.min(this.sourceBounds.width, rendered.canvas.width);\n            sourceHeight = Math.min(this.sourceBounds.height, rendered.canvas.height);\n        } else {\n            sourceWidth = rendered.canvas.width;\n            sourceHeight = rendered.canvas.height;\n        }\n\n        context.drawImage(\n            rendered.canvas,\n            0,\n            0,\n            sourceWidth,\n            sourceHeight,\n            position.x,\n            position.y,\n            size.x,\n            size.y\n        );\n\n        context.restore();\n    },\n\n    /**\n     * Get the ratio between current and original size.\n     * @function\n     * @return {Float}\n     */\n    getScaleForEdgeSmoothing: function() {\n        var context;\n        if (this.cacheImageRecord) {\n            context = this.cacheImageRecord.getRenderedContext();\n        } else if (this.context2D) {\n            context = this.context2D;\n        } else {\n            $.console.warn(\n                '[Tile.drawCanvas] attempting to get tile scale %s when tile\\'s not cached',\n                this.toString());\n            return 1;\n        }\n        return context.canvas.width / (this.size.x * $.pixelDensityRatio);\n    },\n\n    /**\n     * Get a translation vector that when applied to the tile position produces integer coordinates.\n     * Needed to avoid swimming and twitching.\n     * @function\n     * @param {Number} [scale=1] - Scale to be applied to position.\n     * @return {OpenSeadragon.Point}\n     */\n    getTranslationForEdgeSmoothing: function(scale, canvasSize, sketchCanvasSize) {\n        // The translation vector must have positive values, otherwise the image goes a bit off\n        // the sketch canvas to the top and left and we must use negative coordinates to repaint it\n        // to the main canvas. In that case, some browsers throw:\n        // INDEX_SIZE_ERR: DOM Exception 1: Index or size was negative, or greater than the allowed value.\n        var x = Math.max(1, Math.ceil((sketchCanvasSize.x - canvasSize.x) / 2));\n        var y = Math.max(1, Math.ceil((sketchCanvasSize.y - canvasSize.y) / 2));\n        return new $.Point(x, y).minus(\n            this.position\n                .times($.pixelDensityRatio)\n                .times(scale || 1)\n                .apply(function(x) {\n                    return x % 1;\n                })\n        );\n    },\n\n    /**\n     * Removes tile from its container.\n     * @function\n     */\n    unload: function() {\n        if ( this.imgElement && this.imgElement.parentNode ) {\n            this.imgElement.parentNode.removeChild( this.imgElement );\n        }\n        if ( this.element && this.element.parentNode ) {\n            this.element.parentNode.removeChild( this.element );\n        }\n\n        this.element    = null;\n        this.imgElement = null;\n        this.loaded     = false;\n        this.loading    = false;\n    }\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Overlay\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function($) {\n\n    /**\n     * An enumeration of positions that an overlay may be assigned relative to\n     * the viewport.\n     * It is identical to OpenSeadragon.Placement but is kept for backward\n     * compatibility.\n     * @member OverlayPlacement\n     * @memberof OpenSeadragon\n     * @see OpenSeadragon.Placement\n     * @static\n     * @readonly\n     * @type {Object}\n     * @property {Number} CENTER\n     * @property {Number} TOP_LEFT\n     * @property {Number} TOP\n     * @property {Number} TOP_RIGHT\n     * @property {Number} RIGHT\n     * @property {Number} BOTTOM_RIGHT\n     * @property {Number} BOTTOM\n     * @property {Number} BOTTOM_LEFT\n     * @property {Number} LEFT\n     */\n    $.OverlayPlacement = $.Placement;\n\n    /**\n     * An enumeration of possible ways to handle overlays rotation\n     * @member OverlayRotationMode\n     * @memberOf OpenSeadragon\n     * @static\n     * @readonly\n     * @property {Number} NO_ROTATION The overlay ignore the viewport rotation.\n     * @property {Number} EXACT The overlay use CSS 3 transforms to rotate with\n     * the viewport. If the overlay contains text, it will get rotated as well.\n     * @property {Number} BOUNDING_BOX The overlay adjusts for rotation by\n     * taking the size of the bounding box of the rotated bounds.\n     * Only valid for overlays with Rect location and scalable in both directions.\n     */\n    $.OverlayRotationMode = $.freezeObject({\n        NO_ROTATION: 1,\n        EXACT: 2,\n        BOUNDING_BOX: 3\n    });\n\n    /**\n     * @class Overlay\n     * @classdesc Provides a way to float an HTML element on top of the viewer element.\n     *\n     * @memberof OpenSeadragon\n     * @param {Object} options\n     * @param {Element} options.element\n     * @param {OpenSeadragon.Point|OpenSeadragon.Rect} options.location - The\n     * location of the overlay on the image. If a {@link OpenSeadragon.Point}\n     * is specified, the overlay will be located at this location with respect\n     * to the placement option. If a {@link OpenSeadragon.Rect} is specified,\n     * the overlay will be placed at this location with the corresponding width\n     * and height and placement TOP_LEFT.\n     * @param {OpenSeadragon.Placement} [options.placement=OpenSeadragon.Placement.TOP_LEFT]\n     * Defines what part of the overlay should be at the specified options.location\n     * @param {OpenSeadragon.Overlay.OnDrawCallback} [options.onDraw]\n     * @param {Boolean} [options.checkResize=true] Set to false to avoid to\n     * check the size of the overlay every time it is drawn in the directions\n     * which are not scaled. It will improve performances but will cause a\n     * misalignment if the overlay size changes.\n     * @param {Number} [options.width] The width of the overlay in viewport\n     * coordinates. If specified, the width of the overlay will be adjusted when\n     * the zoom changes.\n     * @param {Number} [options.height] The height of the overlay in viewport\n     * coordinates. If specified, the height of the overlay will be adjusted when\n     * the zoom changes.\n     * @param {Boolean} [options.rotationMode=OpenSeadragon.OverlayRotationMode.EXACT]\n     * How to handle the rotation of the viewport.\n     */\n    $.Overlay = function(element, location, placement) {\n\n        /**\n         * onDraw callback signature used by {@link OpenSeadragon.Overlay}.\n         *\n         * @callback OnDrawCallback\n         * @memberof OpenSeadragon.Overlay\n         * @param {OpenSeadragon.Point} position\n         * @param {OpenSeadragon.Point} size\n         * @param {Element} element\n         */\n\n        var options;\n        if ($.isPlainObject(element)) {\n            options = element;\n        } else {\n            options = {\n                element: element,\n                location: location,\n                placement: placement\n            };\n        }\n\n        this.element = options.element;\n        this.style = options.element.style;\n        this._init(options);\n    };\n\n    /** @lends OpenSeadragon.Overlay.prototype */\n    $.Overlay.prototype = {\n\n        // private\n        _init: function(options) {\n            this.location = options.location;\n            this.placement = options.placement === undefined ?\n                $.Placement.TOP_LEFT : options.placement;\n            this.onDraw = options.onDraw;\n            this.checkResize = options.checkResize === undefined ?\n                true : options.checkResize;\n\n            // When this.width is not null, the overlay get scaled horizontally\n            this.width = options.width === undefined ? null : options.width;\n\n            // When this.height is not null, the overlay get scaled vertically\n            this.height = options.height === undefined ? null : options.height;\n\n            this.rotationMode = options.rotationMode || $.OverlayRotationMode.EXACT;\n\n            // Having a rect as location is a syntactic sugar\n            if (this.location instanceof $.Rect) {\n                this.width = this.location.width;\n                this.height = this.location.height;\n                this.location = this.location.getTopLeft();\n                this.placement = $.Placement.TOP_LEFT;\n            }\n\n            // Deprecated properties kept for backward compatibility.\n            this.scales = this.width !== null && this.height !== null;\n            this.bounds = new $.Rect(\n                this.location.x, this.location.y, this.width, this.height);\n            this.position = this.location;\n        },\n\n        /**\n         * Internal function to adjust the position of an overlay\n         * depending on it size and placement.\n         * @function\n         * @param {OpenSeadragon.Point} position\n         * @param {OpenSeadragon.Point} size\n         */\n        adjust: function(position, size) {\n            var properties = $.Placement.properties[this.placement];\n            if (!properties) {\n                return;\n            }\n            if (properties.isHorizontallyCentered) {\n                position.x -= size.x / 2;\n            } else if (properties.isRight) {\n                position.x -= size.x;\n            }\n            if (properties.isVerticallyCentered) {\n                position.y -= size.y / 2;\n            } else if (properties.isBottom) {\n                position.y -= size.y;\n            }\n        },\n\n        /**\n         * @function\n         */\n        destroy: function() {\n            var element = this.element;\n            var style = this.style;\n\n            if (element.parentNode) {\n                element.parentNode.removeChild(element);\n                //this should allow us to preserve overlays when required between\n                //pages\n                if (element.prevElementParent) {\n                    style.display = 'none';\n                    //element.prevElementParent.insertBefore(\n                    //    element,\n                    //    element.prevNextSibling\n                    //);\n                    document.body.appendChild(element);\n                }\n            }\n\n            // clear the onDraw callback\n            this.onDraw = null;\n\n            style.top = \"\";\n            style.left = \"\";\n            style.position = \"\";\n\n            if (this.width !== null) {\n                style.width = \"\";\n            }\n            if (this.height !== null) {\n                style.height = \"\";\n            }\n            var transformOriginProp = $.getCssPropertyWithVendorPrefix(\n                'transformOrigin');\n            var transformProp = $.getCssPropertyWithVendorPrefix(\n                'transform');\n            if (transformOriginProp && transformProp) {\n                style[transformOriginProp] = \"\";\n                style[transformProp] = \"\";\n            }\n        },\n\n        /**\n         * @function\n         * @param {Element} container\n         */\n        drawHTML: function(container, viewport) {\n            var element = this.element;\n            if (element.parentNode !== container) {\n                //save the source parent for later if we need it\n                element.prevElementParent = element.parentNode;\n                element.prevNextSibling = element.nextSibling;\n                container.appendChild(element);\n\n                // have to set position before calculating size, fix #1116\n                this.style.position = \"absolute\";\n                // this.size is used by overlays which don't get scaled in at\n                // least one direction when this.checkResize is set to false.\n                this.size = $.getElementSize(element);\n            }\n\n            var positionAndSize = this._getOverlayPositionAndSize(viewport);\n\n            var position = positionAndSize.position;\n            var size = this.size = positionAndSize.size;\n            var rotate = positionAndSize.rotate;\n\n            // call the onDraw callback if it exists to allow one to overwrite\n            // the drawing/positioning/sizing of the overlay\n            if (this.onDraw) {\n                this.onDraw(position, size, this.element);\n            } else {\n                var style = this.style;\n                style.left = position.x + \"px\";\n                style.top = position.y + \"px\";\n                if (this.width !== null) {\n                    style.width = size.x + \"px\";\n                }\n                if (this.height !== null) {\n                    style.height = size.y + \"px\";\n                }\n                var transformOriginProp = $.getCssPropertyWithVendorPrefix(\n                    'transformOrigin');\n                var transformProp = $.getCssPropertyWithVendorPrefix(\n                    'transform');\n                if (transformOriginProp && transformProp) {\n                    if (rotate) {\n                        style[transformOriginProp] = this._getTransformOrigin();\n                        style[transformProp] = \"rotate(\" + rotate + \"deg)\";\n                    } else {\n                        style[transformOriginProp] = \"\";\n                        style[transformProp] = \"\";\n                    }\n                }\n\n                if (style.display !== 'none') {\n                    style.display = 'block';\n                }\n            }\n        },\n\n        // private\n        _getOverlayPositionAndSize: function(viewport) {\n            var position = viewport.pixelFromPoint(this.location, true);\n            var size = this._getSizeInPixels(viewport);\n            this.adjust(position, size);\n\n            var rotate = 0;\n            if (viewport.degrees &&\n                this.rotationMode !== $.OverlayRotationMode.NO_ROTATION) {\n                // BOUNDING_BOX is only valid if both directions get scaled.\n                // Get replaced by EXACT otherwise.\n                if (this.rotationMode === $.OverlayRotationMode.BOUNDING_BOX &&\n                    this.width !== null && this.height !== null) {\n                    var rect = new $.Rect(position.x, position.y, size.x, size.y);\n                    var boundingBox = this._getBoundingBox(rect, viewport.degrees);\n                    position = boundingBox.getTopLeft();\n                    size = boundingBox.getSize();\n                } else {\n                    rotate = viewport.degrees;\n                }\n            }\n\n            return {\n                position: position,\n                size: size,\n                rotate: rotate\n            };\n        },\n\n        // private\n        _getSizeInPixels: function(viewport) {\n            var width = this.size.x;\n            var height = this.size.y;\n            if (this.width !== null || this.height !== null) {\n                var scaledSize = viewport.deltaPixelsFromPointsNoRotate(\n                    new $.Point(this.width || 0, this.height || 0), true);\n                if (this.width !== null) {\n                    width = scaledSize.x;\n                }\n                if (this.height !== null) {\n                    height = scaledSize.y;\n                }\n            }\n            if (this.checkResize &&\n                (this.width === null || this.height === null)) {\n                var eltSize = this.size = $.getElementSize(this.element);\n                if (this.width === null) {\n                    width = eltSize.x;\n                }\n                if (this.height === null) {\n                    height = eltSize.y;\n                }\n            }\n            return new $.Point(width, height);\n        },\n\n        // private\n        _getBoundingBox: function(rect, degrees) {\n            var refPoint = this._getPlacementPoint(rect);\n            return rect.rotate(degrees, refPoint).getBoundingBox();\n        },\n\n        // private\n        _getPlacementPoint: function(rect) {\n            var result = new $.Point(rect.x, rect.y);\n            var properties = $.Placement.properties[this.placement];\n            if (properties) {\n                if (properties.isHorizontallyCentered) {\n                    result.x += rect.width / 2;\n                } else if (properties.isRight) {\n                    result.x += rect.width;\n                }\n                if (properties.isVerticallyCentered) {\n                    result.y += rect.height / 2;\n                } else if (properties.isBottom) {\n                    result.y += rect.height;\n                }\n            }\n            return result;\n        },\n\n        // private\n        _getTransformOrigin: function() {\n            var result = \"\";\n            var properties = $.Placement.properties[this.placement];\n            if (!properties) {\n                return result;\n            }\n            if (properties.isLeft) {\n                result = \"left\";\n            } else if (properties.isRight) {\n                result = \"right\";\n            }\n            if (properties.isTop) {\n                result += \" top\";\n            } else if (properties.isBottom) {\n                result += \" bottom\";\n            }\n            return result;\n        },\n\n        /**\n         * Changes the overlay settings.\n         * @function\n         * @param {OpenSeadragon.Point|OpenSeadragon.Rect|Object} location\n         * If an object is specified, the options are the same than the constructor\n         * except for the element which can not be changed.\n         * @param {OpenSeadragon.Placement} placement\n         */\n        update: function(location, placement) {\n            var options = $.isPlainObject(location) ? location : {\n                location: location,\n                placement: placement\n            };\n            this._init({\n                location: options.location || this.location,\n                placement: options.placement !== undefined ?\n                    options.placement : this.placement,\n                onDraw: options.onDraw || this.onDraw,\n                checkResize: options.checkResize || this.checkResize,\n                width: options.width !== undefined ? options.width : this.width,\n                height: options.height !== undefined ? options.height : this.height,\n                rotationMode: options.rotationMode || this.rotationMode\n            });\n        },\n\n        /**\n         * Returns the current bounds of the overlay in viewport coordinates\n         * @function\n         * @param {OpenSeadragon.Viewport} viewport the viewport\n         * @returns {OpenSeadragon.Rect} overlay bounds\n         */\n        getBounds: function(viewport) {\n            $.console.assert(viewport,\n                'A viewport must now be passed to Overlay.getBounds.');\n            var width = this.width;\n            var height = this.height;\n            if (width === null || height === null) {\n                var size = viewport.deltaPointsFromPixelsNoRotate(this.size, true);\n                if (width === null) {\n                    width = size.x;\n                }\n                if (height === null) {\n                    height = size.y;\n                }\n            }\n            var location = this.location.clone();\n            this.adjust(location, new $.Point(width, height));\n            return this._adjustBoundsForRotation(\n                viewport, new $.Rect(location.x, location.y, width, height));\n        },\n\n        // private\n        _adjustBoundsForRotation: function(viewport, bounds) {\n            if (!viewport ||\n                viewport.degrees === 0 ||\n                this.rotationMode === $.OverlayRotationMode.EXACT) {\n                return bounds;\n            }\n            if (this.rotationMode === $.OverlayRotationMode.BOUNDING_BOX) {\n                // If overlay not fully scalable, BOUNDING_BOX falls back to EXACT\n                if (this.width === null || this.height === null) {\n                    return bounds;\n                }\n                // It is easier to just compute the position and size and\n                // convert to viewport coordinates.\n                var positionAndSize = this._getOverlayPositionAndSize(viewport);\n                return viewport.viewerElementToViewportRectangle(new $.Rect(\n                    positionAndSize.position.x,\n                    positionAndSize.position.y,\n                    positionAndSize.size.x,\n                    positionAndSize.size.y));\n            }\n\n            // NO_ROTATION case\n            return bounds.rotate(-viewport.degrees,\n                this._getPlacementPoint(bounds));\n        }\n    };\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - Drawer\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class Drawer\n * @memberof OpenSeadragon\n * @classdesc Handles rendering of tiles for an {@link OpenSeadragon.Viewer}.\n * @param {Object} options - Options for this Drawer.\n * @param {OpenSeadragon.Viewer} options.viewer - The Viewer that owns this Drawer.\n * @param {OpenSeadragon.Viewport} options.viewport - Reference to Viewer viewport.\n * @param {Element} options.element - Parent element.\n * @param {Number} [options.debugGridColor] - See debugGridColor in {@link OpenSeadragon.Options} for details.\n */\n$.Drawer = function( options ) {\n\n    $.console.assert( options.viewer, \"[Drawer] options.viewer is required\" );\n\n    //backward compatibility for positional args while preferring more\n    //idiomatic javascript options object as the only argument\n    var args  = arguments;\n\n    if( !$.isPlainObject( options ) ){\n        options = {\n            source:     args[ 0 ], // Reference to Viewer tile source.\n            viewport:   args[ 1 ], // Reference to Viewer viewport.\n            element:    args[ 2 ]  // Parent element.\n        };\n    }\n\n    $.console.assert( options.viewport, \"[Drawer] options.viewport is required\" );\n    $.console.assert( options.element, \"[Drawer] options.element is required\" );\n\n    if ( options.source ) {\n        $.console.error( \"[Drawer] options.source is no longer accepted; use TiledImage instead\" );\n    }\n\n    this.viewer = options.viewer;\n    this.viewport = options.viewport;\n    this.debugGridColor = typeof options.debugGridColor === 'string' ? [options.debugGridColor] : options.debugGridColor || $.DEFAULT_SETTINGS.debugGridColor;\n    if (options.opacity) {\n        $.console.error( \"[Drawer] options.opacity is no longer accepted; set the opacity on the TiledImage instead\" );\n    }\n\n    this.useCanvas  = $.supportsCanvas && ( this.viewer ? this.viewer.useCanvas : true );\n    /**\n     * The parent element of this Drawer instance, passed in when the Drawer was created.\n     * The parent of {@link OpenSeadragon.Drawer#canvas}.\n     * @member {Element} container\n     * @memberof OpenSeadragon.Drawer#\n     */\n    this.container  = $.getElement( options.element );\n    /**\n     * A &lt;canvas&gt; element if the browser supports them, otherwise a &lt;div&gt; element.\n     * Child element of {@link OpenSeadragon.Drawer#container}.\n     * @member {Element} canvas\n     * @memberof OpenSeadragon.Drawer#\n     */\n    this.canvas     = $.makeNeutralElement( this.useCanvas ? \"canvas\" : \"div\" );\n    /**\n     * 2d drawing context for {@link OpenSeadragon.Drawer#canvas} if it's a &lt;canvas&gt; element, otherwise null.\n     * @member {Object} context\n     * @memberof OpenSeadragon.Drawer#\n     */\n    this.context    = this.useCanvas ? this.canvas.getContext( \"2d\" ) : null;\n\n    /**\n     * Sketch canvas used to temporarily draw tiles which cannot be drawn directly\n     * to the main canvas due to opacity. Lazily initialized.\n     */\n    this.sketchCanvas = null;\n    this.sketchContext = null;\n\n    /**\n     * @member {Element} element\n     * @memberof OpenSeadragon.Drawer#\n     * @deprecated Alias for {@link OpenSeadragon.Drawer#container}.\n     */\n    this.element    = this.container;\n\n    // We force our container to ltr because our drawing math doesn't work in rtl.\n    // This issue only affects our canvas renderer, but we do it always for consistency.\n    // Note that this means overlays you want to be rtl need to be explicitly set to rtl.\n    this.container.dir = 'ltr';\n\n    // check canvas available width and height, set canvas width and height such that the canvas backing store is set to the proper pixel density\n    if (this.useCanvas) {\n        var viewportSize = this._calculateCanvasSize();\n        this.canvas.width = viewportSize.x;\n        this.canvas.height = viewportSize.y;\n    }\n\n    this.canvas.style.width     = \"100%\";\n    this.canvas.style.height    = \"100%\";\n    this.canvas.style.position  = \"absolute\";\n    $.setElementOpacity( this.canvas, this.opacity, true );\n\n    // explicit left-align\n    this.container.style.textAlign = \"left\";\n    this.container.appendChild( this.canvas );\n\n    // Image smoothing for canvas rendering (only if canvas is used).\n    // Canvas default is \"true\", so this will only be changed if user specified \"false\".\n    this._imageSmoothingEnabled = true;\n};\n\n/** @lends OpenSeadragon.Drawer.prototype */\n$.Drawer.prototype = {\n    // deprecated\n    addOverlay: function( element, location, placement, onDraw ) {\n        $.console.error(\"drawer.addOverlay is deprecated. Use viewer.addOverlay instead.\");\n        this.viewer.addOverlay( element, location, placement, onDraw );\n        return this;\n    },\n\n    // deprecated\n    updateOverlay: function( element, location, placement ) {\n        $.console.error(\"drawer.updateOverlay is deprecated. Use viewer.updateOverlay instead.\");\n        this.viewer.updateOverlay( element, location, placement );\n        return this;\n    },\n\n    // deprecated\n    removeOverlay: function( element ) {\n        $.console.error(\"drawer.removeOverlay is deprecated. Use viewer.removeOverlay instead.\");\n        this.viewer.removeOverlay( element );\n        return this;\n    },\n\n    // deprecated\n    clearOverlays: function() {\n        $.console.error(\"drawer.clearOverlays is deprecated. Use viewer.clearOverlays instead.\");\n        this.viewer.clearOverlays();\n        return this;\n    },\n\n    /**\n     * Set the opacity of the drawer.\n     * @param {Number} opacity\n     * @return {OpenSeadragon.Drawer} Chainable.\n     */\n    setOpacity: function( opacity ) {\n        $.console.error(\"drawer.setOpacity is deprecated. Use tiledImage.setOpacity instead.\");\n        var world = this.viewer.world;\n        for (var i = 0; i < world.getItemCount(); i++) {\n            world.getItemAt( i ).setOpacity( opacity );\n        }\n        return this;\n    },\n\n    /**\n     * Get the opacity of the drawer.\n     * @returns {Number}\n     */\n    getOpacity: function() {\n        $.console.error(\"drawer.getOpacity is deprecated. Use tiledImage.getOpacity instead.\");\n        var world = this.viewer.world;\n        var maxOpacity = 0;\n        for (var i = 0; i < world.getItemCount(); i++) {\n            var opacity = world.getItemAt( i ).getOpacity();\n            if ( opacity > maxOpacity ) {\n                maxOpacity = opacity;\n            }\n        }\n        return maxOpacity;\n    },\n\n    // deprecated\n    needsUpdate: function() {\n        $.console.error( \"[Drawer.needsUpdate] this function is deprecated. Use World.needsDraw instead.\" );\n        return this.viewer.world.needsDraw();\n    },\n\n    // deprecated\n    numTilesLoaded: function() {\n        $.console.error( \"[Drawer.numTilesLoaded] this function is deprecated. Use TileCache.numTilesLoaded instead.\" );\n        return this.viewer.tileCache.numTilesLoaded();\n    },\n\n    // deprecated\n    reset: function() {\n        $.console.error( \"[Drawer.reset] this function is deprecated. Use World.resetItems instead.\" );\n        this.viewer.world.resetItems();\n        return this;\n    },\n\n    // deprecated\n    update: function() {\n        $.console.error( \"[Drawer.update] this function is deprecated. Use Drawer.clear and World.draw instead.\" );\n        this.clear();\n        this.viewer.world.draw();\n        return this;\n    },\n\n    /**\n     * @return {Boolean} True if rotation is supported.\n     */\n    canRotate: function() {\n        return this.useCanvas;\n    },\n\n    /**\n     * Destroy the drawer (unload current loaded tiles)\n     */\n    destroy: function() {\n        //force unloading of current canvas (1x1 will be gc later, trick not necessarily needed)\n        this.canvas.width  = 1;\n        this.canvas.height = 1;\n        this.sketchCanvas = null;\n        this.sketchContext = null;\n    },\n\n    /**\n     * Clears the Drawer so it's ready to draw another frame.\n     */\n    clear: function() {\n        this.canvas.innerHTML = \"\";\n        if ( this.useCanvas ) {\n            var viewportSize = this._calculateCanvasSize();\n            if( this.canvas.width != viewportSize.x ||\n                this.canvas.height != viewportSize.y ) {\n                this.canvas.width = viewportSize.x;\n                this.canvas.height = viewportSize.y;\n                this._updateImageSmoothingEnabled(this.context);\n                if ( this.sketchCanvas !== null ) {\n                    var sketchCanvasSize = this._calculateSketchCanvasSize();\n                    this.sketchCanvas.width = sketchCanvasSize.x;\n                    this.sketchCanvas.height = sketchCanvasSize.y;\n                    this._updateImageSmoothingEnabled(this.sketchContext);\n                }\n            }\n            this._clear();\n        }\n    },\n\n    _clear: function (useSketch, bounds) {\n        if (!this.useCanvas) {\n            return;\n        }\n        var context = this._getContext(useSketch);\n        if (bounds) {\n            context.clearRect(bounds.x, bounds.y, bounds.width, bounds.height);\n        } else {\n            var canvas = context.canvas;\n            context.clearRect(0, 0, canvas.width, canvas.height);\n        }\n    },\n\n    /**\n     * Scale from OpenSeadragon viewer rectangle to drawer rectangle\n     * (ignoring rotation)\n     * @param {OpenSeadragon.Rect} rectangle - The rectangle in viewport coordinate system.\n     * @return {OpenSeadragon.Rect} Rectangle in drawer coordinate system.\n     */\n    viewportToDrawerRectangle: function(rectangle) {\n        var topLeft = this.viewport.pixelFromPointNoRotate(rectangle.getTopLeft(), true);\n        var size = this.viewport.deltaPixelsFromPointsNoRotate(rectangle.getSize(), true);\n\n        return new $.Rect(\n            topLeft.x * $.pixelDensityRatio,\n            topLeft.y * $.pixelDensityRatio,\n            size.x * $.pixelDensityRatio,\n            size.y * $.pixelDensityRatio\n        );\n    },\n\n    /**\n     * Draws the given tile.\n     * @param {OpenSeadragon.Tile} tile - The tile to draw.\n     * @param {Function} drawingHandler - Method for firing the drawing event if using canvas.\n     * drawingHandler({context, tile, rendered})\n     * @param {Boolean} useSketch - Whether to use the sketch canvas or not.\n     * where <code>rendered</code> is the context with the pre-drawn image.\n     * @param {Float} [scale=1] - Apply a scale to tile position and size. Defaults to 1.\n     * @param {OpenSeadragon.Point} [translate] A translation vector to offset tile position\n     */\n    drawTile: function(tile, drawingHandler, useSketch, scale, translate) {\n        $.console.assert(tile, '[Drawer.drawTile] tile is required');\n        $.console.assert(drawingHandler, '[Drawer.drawTile] drawingHandler is required');\n\n        if (this.useCanvas) {\n            var context = this._getContext(useSketch);\n            scale = scale || 1;\n            tile.drawCanvas(context, drawingHandler, scale, translate);\n        } else {\n            tile.drawHTML( this.canvas );\n        }\n    },\n\n    _getContext: function( useSketch ) {\n        var context = this.context;\n        if ( useSketch ) {\n            if (this.sketchCanvas === null) {\n                this.sketchCanvas = document.createElement( \"canvas\" );\n                var sketchCanvasSize = this._calculateSketchCanvasSize();\n                this.sketchCanvas.width = sketchCanvasSize.x;\n                this.sketchCanvas.height = sketchCanvasSize.y;\n                this.sketchContext = this.sketchCanvas.getContext( \"2d\" );\n\n                // If the viewport is not currently rotated, the sketchCanvas\n                // will have the same size as the main canvas. However, if\n                // the viewport get rotated later on, we will need to resize it.\n                if (this.viewport.getRotation() === 0) {\n                    var self = this;\n                    this.viewer.addHandler('rotate', function resizeSketchCanvas() {\n                        if (self.viewport.getRotation() === 0) {\n                            return;\n                        }\n                        self.viewer.removeHandler('rotate', resizeSketchCanvas);\n                        var sketchCanvasSize = self._calculateSketchCanvasSize();\n                        self.sketchCanvas.width = sketchCanvasSize.x;\n                        self.sketchCanvas.height = sketchCanvasSize.y;\n                    });\n                }\n                this._updateImageSmoothingEnabled(this.sketchContext);\n            }\n            context = this.sketchContext;\n        }\n        return context;\n    },\n\n    // private\n    saveContext: function( useSketch ) {\n        if (!this.useCanvas) {\n            return;\n        }\n\n        this._getContext( useSketch ).save();\n    },\n\n    // private\n    restoreContext: function( useSketch ) {\n        if (!this.useCanvas) {\n            return;\n        }\n\n        this._getContext( useSketch ).restore();\n    },\n\n    // private\n    setClip: function(rect, useSketch) {\n        if (!this.useCanvas) {\n            return;\n        }\n\n        var context = this._getContext( useSketch );\n        context.beginPath();\n        context.rect(rect.x, rect.y, rect.width, rect.height);\n        context.clip();\n    },\n\n    // private\n    drawRectangle: function(rect, fillStyle, useSketch) {\n        if (!this.useCanvas) {\n            return;\n        }\n\n        var context = this._getContext( useSketch );\n        context.save();\n        context.fillStyle = fillStyle;\n        context.fillRect(rect.x, rect.y, rect.width, rect.height);\n        context.restore();\n    },\n\n    /**\n     * Blends the sketch canvas in the main canvas.\n     * @param {Object} options The options\n     * @param {Float} options.opacity The opacity of the blending.\n     * @param {Float} [options.scale=1] The scale at which tiles were drawn on\n     * the sketch. Default is 1.\n     * Use scale to draw at a lower scale and then enlarge onto the main canvas.\n     * @param {OpenSeadragon.Point} [options.translate] A translation vector\n     * that was used to draw the tiles\n     * @param {String} [options.compositeOperation] - How the image is\n     * composited onto other images; see compositeOperation in\n     * {@link OpenSeadragon.Options} for possible values.\n     * @param {OpenSeadragon.Rect} [options.bounds] The part of the sketch\n     * canvas to blend in the main canvas. If specified, options.scale and\n     * options.translate get ignored.\n     */\n    blendSketch: function(opacity, scale, translate, compositeOperation) {\n        var options = opacity;\n        if (!$.isPlainObject(options)) {\n            options = {\n                opacity: opacity,\n                scale: scale,\n                translate: translate,\n                compositeOperation: compositeOperation\n            };\n        }\n        if (!this.useCanvas || !this.sketchCanvas) {\n            return;\n        }\n        opacity = options.opacity;\n        compositeOperation = options.compositeOperation;\n        var bounds = options.bounds;\n\n        this.context.save();\n        this.context.globalAlpha = opacity;\n        if (compositeOperation) {\n            this.context.globalCompositeOperation = compositeOperation;\n        }\n        if (bounds) {\n            // Internet Explorer, Microsoft Edge, and Safari have problems\n            // when you call context.drawImage with negative x or y\n            // or x + width or y + height greater than the canvas width or height respectively.\n            if (bounds.x < 0) {\n                bounds.width += bounds.x;\n                bounds.x = 0;\n            }\n            if (bounds.x + bounds.width > this.canvas.width) {\n                bounds.width = this.canvas.width - bounds.x;\n            }\n            if (bounds.y < 0) {\n                bounds.height += bounds.y;\n                bounds.y = 0;\n            }\n            if (bounds.y + bounds.height > this.canvas.height) {\n                bounds.height = this.canvas.height - bounds.y;\n            }\n\n            this.context.drawImage(\n                this.sketchCanvas,\n                bounds.x,\n                bounds.y,\n                bounds.width,\n                bounds.height,\n                bounds.x,\n                bounds.y,\n                bounds.width,\n                bounds.height\n            );\n        } else {\n            scale = options.scale || 1;\n            translate = options.translate;\n            var position = translate instanceof $.Point ?\n                translate : new $.Point(0, 0);\n\n            var widthExt = 0;\n            var heightExt = 0;\n            if (translate) {\n                var widthDiff = this.sketchCanvas.width - this.canvas.width;\n                var heightDiff = this.sketchCanvas.height - this.canvas.height;\n                widthExt = Math.round(widthDiff / 2);\n                heightExt = Math.round(heightDiff / 2);\n            }\n            this.context.drawImage(\n                this.sketchCanvas,\n                position.x - widthExt * scale,\n                position.y - heightExt * scale,\n                (this.canvas.width + 2 * widthExt) * scale,\n                (this.canvas.height + 2 * heightExt) * scale,\n                -widthExt,\n                -heightExt,\n                this.canvas.width + 2 * widthExt,\n                this.canvas.height + 2 * heightExt\n            );\n        }\n        this.context.restore();\n    },\n\n    // private\n    drawDebugInfo: function(tile, count, i, tiledImage) {\n        if ( !this.useCanvas ) {\n            return;\n        }\n\n        var colorIndex = this.viewer.world.getIndexOfItem(tiledImage) % this.debugGridColor.length;\n        var context = this.context;\n        context.save();\n        context.lineWidth = 2 * $.pixelDensityRatio;\n        context.font = 'small-caps bold ' + (13 * $.pixelDensityRatio) + 'px arial';\n        context.strokeStyle = this.debugGridColor[colorIndex];\n        context.fillStyle = this.debugGridColor[colorIndex];\n\n        if ( this.viewport.degrees !== 0 ) {\n            this._offsetForRotation({degrees: this.viewport.degrees});\n        }\n        if (tiledImage.getRotation(true) % 360 !== 0) {\n            this._offsetForRotation({\n                degrees: tiledImage.getRotation(true),\n                point: tiledImage.viewport.pixelFromPointNoRotate(\n                    tiledImage._getRotationPoint(true), true)\n            });\n        }\n        if (tiledImage.viewport.degrees === 0 && tiledImage.getRotation(true) % 360 === 0){\n          if(tiledImage._drawer.viewer.viewport.getFlip()) {\n              tiledImage._drawer._flip();\n          }\n        }\n\n        context.strokeRect(\n            tile.position.x * $.pixelDensityRatio,\n            tile.position.y * $.pixelDensityRatio,\n            tile.size.x * $.pixelDensityRatio,\n            tile.size.y * $.pixelDensityRatio\n        );\n\n        var tileCenterX = (tile.position.x + (tile.size.x / 2)) * $.pixelDensityRatio;\n        var tileCenterY = (tile.position.y + (tile.size.y / 2)) * $.pixelDensityRatio;\n\n        // Rotate the text the right way around.\n        context.translate( tileCenterX, tileCenterY );\n        context.rotate( Math.PI / 180 * -this.viewport.degrees );\n        context.translate( -tileCenterX, -tileCenterY );\n\n        if( tile.x === 0 && tile.y === 0 ){\n            context.fillText(\n                \"Zoom: \" + this.viewport.getZoom(),\n                tile.position.x * $.pixelDensityRatio,\n                (tile.position.y - 30) * $.pixelDensityRatio\n            );\n            context.fillText(\n                \"Pan: \" + this.viewport.getBounds().toString(),\n                tile.position.x * $.pixelDensityRatio,\n                (tile.position.y - 20) * $.pixelDensityRatio\n            );\n        }\n        context.fillText(\n            \"Level: \" + tile.level,\n            (tile.position.x + 10) * $.pixelDensityRatio,\n            (tile.position.y + 20) * $.pixelDensityRatio\n        );\n        context.fillText(\n            \"Column: \" + tile.x,\n            (tile.position.x + 10) * $.pixelDensityRatio,\n            (tile.position.y + 30) * $.pixelDensityRatio\n        );\n        context.fillText(\n            \"Row: \" + tile.y,\n            (tile.position.x + 10) * $.pixelDensityRatio,\n            (tile.position.y + 40) * $.pixelDensityRatio\n        );\n        context.fillText(\n            \"Order: \" + i + \" of \" + count,\n            (tile.position.x + 10) * $.pixelDensityRatio,\n            (tile.position.y + 50) * $.pixelDensityRatio\n        );\n        context.fillText(\n            \"Size: \" + tile.size.toString(),\n            (tile.position.x + 10) * $.pixelDensityRatio,\n            (tile.position.y + 60) * $.pixelDensityRatio\n        );\n        context.fillText(\n            \"Position: \" + tile.position.toString(),\n            (tile.position.x + 10) * $.pixelDensityRatio,\n            (tile.position.y + 70) * $.pixelDensityRatio\n        );\n\n        if ( this.viewport.degrees !== 0 ) {\n            this._restoreRotationChanges();\n        }\n        if (tiledImage.getRotation(true) % 360 !== 0) {\n            this._restoreRotationChanges();\n        }\n\n        if (tiledImage.viewport.degrees === 0 && tiledImage.getRotation(true) % 360 === 0){\n          if(tiledImage._drawer.viewer.viewport.getFlip()) {\n              tiledImage._drawer._flip();\n          }\n        }\n\n        context.restore();\n    },\n\n    // private\n    debugRect: function(rect) {\n        if ( this.useCanvas ) {\n            var context = this.context;\n            context.save();\n            context.lineWidth = 2 * $.pixelDensityRatio;\n            context.strokeStyle = this.debugGridColor[0];\n            context.fillStyle = this.debugGridColor[0];\n\n            context.strokeRect(\n                rect.x * $.pixelDensityRatio,\n                rect.y * $.pixelDensityRatio,\n                rect.width * $.pixelDensityRatio,\n                rect.height * $.pixelDensityRatio\n            );\n\n            context.restore();\n        }\n    },\n\n    /**\n     * Turns image smoothing on or off for this viewer. Note: Ignored in some (especially older) browsers that do not support this property.\n     *\n     * @function\n     * @param {Boolean} [imageSmoothingEnabled] - Whether or not the image is\n     * drawn smoothly on the canvas; see imageSmoothingEnabled in\n     * {@link OpenSeadragon.Options} for more explanation.\n     */\n    setImageSmoothingEnabled: function(imageSmoothingEnabled){\n        if ( this.useCanvas ) {\n            this._imageSmoothingEnabled = imageSmoothingEnabled;\n            this._updateImageSmoothingEnabled(this.context);\n            this.viewer.forceRedraw();\n        }\n    },\n\n    // private\n    _updateImageSmoothingEnabled: function(context){\n        context.mozImageSmoothingEnabled = this._imageSmoothingEnabled;\n        context.webkitImageSmoothingEnabled = this._imageSmoothingEnabled;\n        context.msImageSmoothingEnabled = this._imageSmoothingEnabled;\n        context.imageSmoothingEnabled = this._imageSmoothingEnabled;\n    },\n\n    /**\n     * Get the canvas size\n     * @param {Boolean} sketch If set to true return the size of the sketch canvas\n     * @returns {OpenSeadragon.Point} The size of the canvas\n     */\n    getCanvasSize: function(sketch) {\n        var canvas = this._getContext(sketch).canvas;\n        return new $.Point(canvas.width, canvas.height);\n    },\n\n    getCanvasCenter: function() {\n        return new $.Point(this.canvas.width / 2, this.canvas.height / 2);\n    },\n\n    // private\n    _offsetForRotation: function(options) {\n        var point = options.point ?\n            options.point.times($.pixelDensityRatio) :\n            this.getCanvasCenter();\n\n        var context = this._getContext(options.useSketch);\n        context.save();\n\n        context.translate(point.x, point.y);\n        if(this.viewer.viewport.flipped){\n          context.rotate(Math.PI / 180 * -options.degrees);\n          context.scale(-1, 1);\n        } else{\n          context.rotate(Math.PI / 180 * options.degrees);\n        }\n        context.translate(-point.x, -point.y);\n    },\n\n    // private\n    _flip: function(options) {\n      options = options || {};\n      var point = options.point ?\n        options.point.times($.pixelDensityRatio) :\n        this.getCanvasCenter();\n      var context = this._getContext(options.useSketch);\n\n      context.translate(point.x, 0);\n      context.scale(-1, 1);\n      context.translate(-point.x, 0);\n    },\n\n    // private\n    _restoreRotationChanges: function(useSketch) {\n        var context = this._getContext(useSketch);\n        context.restore();\n    },\n\n    // private\n    _calculateCanvasSize: function() {\n        var pixelDensityRatio = $.pixelDensityRatio;\n        var viewportSize = this.viewport.getContainerSize();\n        return {\n            // canvas width and height are integers\n            x: Math.round(viewportSize.x * pixelDensityRatio),\n            y: Math.round(viewportSize.y * pixelDensityRatio)\n        };\n    },\n\n    // private\n    _calculateSketchCanvasSize: function() {\n        var canvasSize = this._calculateCanvasSize();\n        if (this.viewport.getRotation() === 0) {\n            return canvasSize;\n        }\n        // If the viewport is rotated, we need a larger sketch canvas in order\n        // to support edge smoothing.\n        var sketchCanvasSize = Math.ceil(Math.sqrt(\n            canvasSize.x * canvasSize.x +\n            canvasSize.y * canvasSize.y));\n        return {\n            x: sketchCanvasSize,\n            y: sketchCanvasSize\n        };\n    }\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Viewport\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n\n/**\n * @class Viewport\n * @memberof OpenSeadragon\n * @classdesc Handles coordinate-related functionality (zoom, pan, rotation, etc.)\n * for an {@link OpenSeadragon.Viewer}.\n * @param {Object} options - Options for this Viewport.\n * @param {Object} [options.margins] - See viewportMargins in {@link OpenSeadragon.Options}.\n * @param {Number} [options.springStiffness] - See springStiffness in {@link OpenSeadragon.Options}.\n * @param {Number} [options.animationTime] - See animationTime in {@link OpenSeadragon.Options}.\n * @param {Number} [options.minZoomImageRatio] - See minZoomImageRatio in {@link OpenSeadragon.Options}.\n * @param {Number} [options.maxZoomPixelRatio] - See maxZoomPixelRatio in {@link OpenSeadragon.Options}.\n * @param {Number} [options.visibilityRatio] - See visibilityRatio in {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.wrapHorizontal] - See wrapHorizontal in {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.wrapVertical] - See wrapVertical in {@link OpenSeadragon.Options}.\n * @param {Number} [options.defaultZoomLevel] - See defaultZoomLevel in {@link OpenSeadragon.Options}.\n * @param {Number} [options.minZoomLevel] - See minZoomLevel in {@link OpenSeadragon.Options}.\n * @param {Number} [options.maxZoomLevel] - See maxZoomLevel in {@link OpenSeadragon.Options}.\n * @param {Number} [options.degrees] - See degrees in {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.homeFillsViewer] - See homeFillsViewer in {@link OpenSeadragon.Options}.\n */\n$.Viewport = function( options ) {\n\n    //backward compatibility for positional args while preferring more\n    //idiomatic javascript options object as the only argument\n    var args = arguments;\n    if (args.length && args[0] instanceof $.Point) {\n        options = {\n            containerSize:  args[0],\n            contentSize:    args[1],\n            config:         args[2]\n        };\n    }\n\n    //options.config and the general config argument are deprecated\n    //in favor of the more direct specification of optional settings\n    //being passed directly on the options object\n    if ( options.config ){\n        $.extend( true, options, options.config );\n        delete options.config;\n    }\n\n    this._margins = $.extend({\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n    }, options.margins || {});\n\n    delete options.margins;\n\n    $.extend( true, this, {\n\n        //required settings\n        containerSize:      null,\n        contentSize:        null,\n\n        //internal state properties\n        zoomPoint:          null,\n        viewer:           null,\n\n        //configurable options\n        springStiffness:    $.DEFAULT_SETTINGS.springStiffness,\n        animationTime:      $.DEFAULT_SETTINGS.animationTime,\n        minZoomImageRatio:  $.DEFAULT_SETTINGS.minZoomImageRatio,\n        maxZoomPixelRatio:  $.DEFAULT_SETTINGS.maxZoomPixelRatio,\n        visibilityRatio:    $.DEFAULT_SETTINGS.visibilityRatio,\n        wrapHorizontal:     $.DEFAULT_SETTINGS.wrapHorizontal,\n        wrapVertical:       $.DEFAULT_SETTINGS.wrapVertical,\n        defaultZoomLevel:   $.DEFAULT_SETTINGS.defaultZoomLevel,\n        minZoomLevel:       $.DEFAULT_SETTINGS.minZoomLevel,\n        maxZoomLevel:       $.DEFAULT_SETTINGS.maxZoomLevel,\n        degrees:            $.DEFAULT_SETTINGS.degrees,\n        flipped:            $.DEFAULT_SETTINGS.flipped,\n        homeFillsViewer:    $.DEFAULT_SETTINGS.homeFillsViewer\n\n    }, options );\n\n    this._updateContainerInnerSize();\n\n    this.centerSpringX = new $.Spring({\n        initial: 0,\n        springStiffness: this.springStiffness,\n        animationTime:   this.animationTime\n    });\n    this.centerSpringY = new $.Spring({\n        initial: 0,\n        springStiffness: this.springStiffness,\n        animationTime:   this.animationTime\n    });\n    this.zoomSpring    = new $.Spring({\n        exponential: true,\n        initial: 1,\n        springStiffness: this.springStiffness,\n        animationTime:   this.animationTime\n    });\n\n    this._oldCenterX = this.centerSpringX.current.value;\n    this._oldCenterY = this.centerSpringY.current.value;\n    this._oldZoom    = this.zoomSpring.current.value;\n\n    this._setContentBounds(new $.Rect(0, 0, 1, 1), 1);\n\n    this.goHome(true);\n    this.update();\n};\n\n/** @lends OpenSeadragon.Viewport.prototype */\n$.Viewport.prototype = {\n    /**\n     * Updates the viewport's home bounds and constraints for the given content size.\n     * @function\n     * @param {OpenSeadragon.Point} contentSize - size of the content in content units\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:reset-size\n     */\n    resetContentSize: function(contentSize) {\n        $.console.assert(contentSize, \"[Viewport.resetContentSize] contentSize is required\");\n        $.console.assert(contentSize instanceof $.Point, \"[Viewport.resetContentSize] contentSize must be an OpenSeadragon.Point\");\n        $.console.assert(contentSize.x > 0, \"[Viewport.resetContentSize] contentSize.x must be greater than 0\");\n        $.console.assert(contentSize.y > 0, \"[Viewport.resetContentSize] contentSize.y must be greater than 0\");\n\n        this._setContentBounds(new $.Rect(0, 0, 1, contentSize.y / contentSize.x), contentSize.x);\n        return this;\n    },\n\n    // deprecated\n    setHomeBounds: function(bounds, contentFactor) {\n        $.console.error(\"[Viewport.setHomeBounds] this function is deprecated; The content bounds should not be set manually.\");\n        this._setContentBounds(bounds, contentFactor);\n    },\n\n    // Set the viewport's content bounds\n    // @param {OpenSeadragon.Rect} bounds - the new bounds in viewport coordinates\n    // without rotation\n    // @param {Number} contentFactor - how many content units per viewport unit\n    // @fires OpenSeadragon.Viewer.event:reset-size\n    // @private\n    _setContentBounds: function(bounds, contentFactor) {\n        $.console.assert(bounds, \"[Viewport._setContentBounds] bounds is required\");\n        $.console.assert(bounds instanceof $.Rect, \"[Viewport._setContentBounds] bounds must be an OpenSeadragon.Rect\");\n        $.console.assert(bounds.width > 0, \"[Viewport._setContentBounds] bounds.width must be greater than 0\");\n        $.console.assert(bounds.height > 0, \"[Viewport._setContentBounds] bounds.height must be greater than 0\");\n\n        this._contentBoundsNoRotate = bounds.clone();\n        this._contentSizeNoRotate = this._contentBoundsNoRotate.getSize().times(\n            contentFactor);\n\n        this._contentBounds = bounds.rotate(this.degrees).getBoundingBox();\n        this._contentSize = this._contentBounds.getSize().times(contentFactor);\n        this._contentAspectRatio = this._contentSize.x / this._contentSize.y;\n\n        if (this.viewer) {\n            /**\n             * Raised when the viewer's content size or home bounds are reset\n             * (see {@link OpenSeadragon.Viewport#resetContentSize}).\n             *\n             * @event reset-size\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {OpenSeadragon.Point} contentSize\n             * @property {OpenSeadragon.Rect} contentBounds - Content bounds.\n             * @property {OpenSeadragon.Rect} homeBounds - Content bounds.\n             * Deprecated use contentBounds instead.\n             * @property {Number} contentFactor\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.viewer.raiseEvent('reset-size', {\n                contentSize: this._contentSizeNoRotate.clone(),\n                contentFactor: contentFactor,\n                homeBounds: this._contentBoundsNoRotate.clone(),\n                contentBounds: this._contentBounds.clone()\n            });\n        }\n    },\n\n    /**\n     * Returns the home zoom in \"viewport zoom\" value.\n     * @function\n     * @returns {Number} The home zoom in \"viewport zoom\".\n     */\n    getHomeZoom: function() {\n        if (this.defaultZoomLevel) {\n            return this.defaultZoomLevel;\n        }\n\n        var aspectFactor = this._contentAspectRatio / this.getAspectRatio();\n        var output;\n        if (this.homeFillsViewer) { // fill the viewer and clip the image\n            output = aspectFactor >= 1 ? aspectFactor : 1;\n        } else {\n            output = aspectFactor >= 1 ? 1 : aspectFactor;\n        }\n\n        return output / this._contentBounds.width;\n    },\n\n    /**\n     * Returns the home bounds in viewport coordinates.\n     * @function\n     * @returns {OpenSeadragon.Rect} The home bounds in vewport coordinates.\n     */\n    getHomeBounds: function() {\n        return this.getHomeBoundsNoRotate().rotate(-this.getRotation());\n    },\n\n    /**\n     * Returns the home bounds in viewport coordinates.\n     * This method ignores the viewport rotation. Use\n     * {@link OpenSeadragon.Viewport#getHomeBounds} to take it into account.\n     * @function\n     * @returns {OpenSeadragon.Rect} The home bounds in vewport coordinates.\n     */\n    getHomeBoundsNoRotate: function() {\n        var center = this._contentBounds.getCenter();\n        var width  = 1.0 / this.getHomeZoom();\n        var height = width / this.getAspectRatio();\n\n        return new $.Rect(\n            center.x - (width / 2.0),\n            center.y - (height / 2.0),\n            width,\n            height\n        );\n    },\n\n    /**\n     * @function\n     * @param {Boolean} immediately\n     * @fires OpenSeadragon.Viewer.event:home\n     */\n    goHome: function(immediately) {\n        if (this.viewer) {\n            /**\n             * Raised when the \"home\" operation occurs (see {@link OpenSeadragon.Viewport#goHome}).\n             *\n             * @event home\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {Boolean} immediately\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.viewer.raiseEvent('home', {\n                immediately: immediately\n            });\n        }\n        return this.fitBounds(this.getHomeBounds(), immediately);\n    },\n\n    /**\n     * @function\n     */\n    getMinZoom: function() {\n        var homeZoom = this.getHomeZoom(),\n            zoom = this.minZoomLevel ?\n            this.minZoomLevel :\n                this.minZoomImageRatio * homeZoom;\n\n        return zoom;\n    },\n\n    /**\n     * @function\n     */\n    getMaxZoom: function() {\n        var zoom = this.maxZoomLevel;\n        if (!zoom) {\n            zoom = this._contentSize.x * this.maxZoomPixelRatio / this._containerInnerSize.x;\n            zoom /= this._contentBounds.width;\n        }\n\n        return Math.max( zoom, this.getHomeZoom() );\n    },\n\n    /**\n     * @function\n     */\n    getAspectRatio: function() {\n        return this._containerInnerSize.x / this._containerInnerSize.y;\n    },\n\n    /**\n     * @function\n     * @returns {OpenSeadragon.Point} The size of the container, in screen coordinates.\n     */\n    getContainerSize: function() {\n        return new $.Point(\n            this.containerSize.x,\n            this.containerSize.y\n        );\n    },\n\n    /**\n     * The margins push the \"home\" region in from the sides by the specified amounts.\n     * @function\n     * @returns {Object} Properties (Numbers, in screen coordinates): left, top, right, bottom.\n     */\n    getMargins: function() {\n        return $.extend({}, this._margins); // Make a copy so we are not returning our original\n    },\n\n    /**\n     * The margins push the \"home\" region in from the sides by the specified amounts.\n     * @function\n     * @param {Object} margins - Properties (Numbers, in screen coordinates): left, top, right, bottom.\n     */\n    setMargins: function(margins) {\n        $.console.assert($.type(margins) === 'object', '[Viewport.setMargins] margins must be an object');\n\n        this._margins = $.extend({\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        }, margins);\n\n        this._updateContainerInnerSize();\n        if (this.viewer) {\n            this.viewer.forceRedraw();\n        }\n    },\n\n    /**\n     * Returns the bounds of the visible area in viewport coordinates.\n     * @function\n     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n     * @returns {OpenSeadragon.Rect} The location you are zoomed/panned to, in viewport coordinates.\n     */\n    getBounds: function(current) {\n        return this.getBoundsNoRotate(current).rotate(-this.getRotation());\n    },\n\n    /**\n     * Returns the bounds of the visible area in viewport coordinates.\n     * This method ignores the viewport rotation. Use\n     * {@link OpenSeadragon.Viewport#getBounds} to take it into account.\n     * @function\n     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n     * @returns {OpenSeadragon.Rect} The location you are zoomed/panned to, in viewport coordinates.\n     */\n    getBoundsNoRotate: function(current) {\n        var center = this.getCenter(current);\n        var width  = 1.0 / this.getZoom(current);\n        var height = width / this.getAspectRatio();\n\n        return new $.Rect(\n            center.x - (width / 2.0),\n            center.y - (height / 2.0),\n            width,\n            height\n        );\n    },\n\n    /**\n     * @function\n     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n     * @returns {OpenSeadragon.Rect} The location you are zoomed/panned to,\n     * including the space taken by margins, in viewport coordinates.\n     */\n    getBoundsWithMargins: function(current) {\n        return this.getBoundsNoRotateWithMargins(current).rotate(\n            -this.getRotation(), this.getCenter(current));\n    },\n\n    /**\n     * @function\n     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n     * @returns {OpenSeadragon.Rect} The location you are zoomed/panned to,\n     * including the space taken by margins, in viewport coordinates.\n     */\n    getBoundsNoRotateWithMargins: function(current) {\n        var bounds = this.getBoundsNoRotate(current);\n        var factor = this._containerInnerSize.x * this.getZoom(current);\n        bounds.x -= this._margins.left / factor;\n        bounds.y -= this._margins.top / factor;\n        bounds.width += (this._margins.left + this._margins.right) / factor;\n        bounds.height += (this._margins.top + this._margins.bottom) / factor;\n        return bounds;\n    },\n\n    /**\n     * @function\n     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n     */\n    getCenter: function( current ) {\n        var centerCurrent = new $.Point(\n                this.centerSpringX.current.value,\n                this.centerSpringY.current.value\n            ),\n            centerTarget = new $.Point(\n                this.centerSpringX.target.value,\n                this.centerSpringY.target.value\n            ),\n            oldZoomPixel,\n            zoom,\n            width,\n            height,\n            bounds,\n            newZoomPixel,\n            deltaZoomPixels,\n            deltaZoomPoints;\n\n        if ( current ) {\n            return centerCurrent;\n        } else if ( !this.zoomPoint ) {\n            return centerTarget;\n        }\n\n        oldZoomPixel = this.pixelFromPoint(this.zoomPoint, true);\n\n        zoom    = this.getZoom();\n        width   = 1.0 / zoom;\n        height  = width / this.getAspectRatio();\n        bounds  = new $.Rect(\n            centerCurrent.x - width / 2.0,\n            centerCurrent.y - height / 2.0,\n            width,\n            height\n        );\n\n        newZoomPixel = this._pixelFromPoint(this.zoomPoint, bounds);\n        deltaZoomPixels = newZoomPixel.minus( oldZoomPixel );\n        deltaZoomPoints = deltaZoomPixels.divide( this._containerInnerSize.x * zoom );\n\n        return centerTarget.plus( deltaZoomPoints );\n    },\n\n    /**\n     * @function\n     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n     */\n    getZoom: function( current ) {\n        if ( current ) {\n            return this.zoomSpring.current.value;\n        } else {\n            return this.zoomSpring.target.value;\n        }\n    },\n\n    // private\n    _applyZoomConstraints: function(zoom) {\n        return Math.max(\n            Math.min(zoom, this.getMaxZoom()),\n            this.getMinZoom());\n    },\n\n    /**\n     * @function\n     * @private\n     * @param {OpenSeadragon.Rect} bounds\n     * @return {OpenSeadragon.Rect} constrained bounds.\n     */\n    _applyBoundaryConstraints: function(bounds) {\n        var newBounds = new $.Rect(\n                bounds.x,\n                bounds.y,\n                bounds.width,\n                bounds.height);\n\n        if (this.wrapHorizontal) {\n            //do nothing\n        } else {\n            var horizontalThreshold = this.visibilityRatio * newBounds.width;\n            var boundsRight = newBounds.x + newBounds.width;\n            var contentRight = this._contentBoundsNoRotate.x + this._contentBoundsNoRotate.width;\n            var leftDx = this._contentBoundsNoRotate.x - boundsRight + horizontalThreshold;\n            var rightDx = contentRight - newBounds.x - horizontalThreshold;\n\n            if (horizontalThreshold > this._contentBoundsNoRotate.width) {\n                newBounds.x += (leftDx + rightDx) / 2;\n            } else if (rightDx < 0) {\n                newBounds.x += rightDx;\n            } else if (leftDx > 0) {\n                newBounds.x += leftDx;\n            }\n        }\n\n        if (this.wrapVertical) {\n            //do nothing\n        } else {\n            var verticalThreshold   = this.visibilityRatio * newBounds.height;\n            var boundsBottom = newBounds.y + newBounds.height;\n            var contentBottom = this._contentBoundsNoRotate.y + this._contentBoundsNoRotate.height;\n            var topDy = this._contentBoundsNoRotate.y - boundsBottom + verticalThreshold;\n            var bottomDy = contentBottom - newBounds.y - verticalThreshold;\n\n            if (verticalThreshold > this._contentBoundsNoRotate.height) {\n                newBounds.y += (topDy + bottomDy) / 2;\n            } else if (bottomDy < 0) {\n                newBounds.y += bottomDy;\n            } else if (topDy > 0) {\n                newBounds.y += topDy;\n            }\n        }\n\n        return newBounds;\n    },\n\n    /**\n     * @function\n     * @private\n     * @param {Boolean} [immediately=false] - whether the function that triggered this event was\n     * called with the \"immediately\" flag\n     */\n    _raiseConstraintsEvent: function(immediately) {\n        if (this.viewer) {\n            /**\n             * Raised when the viewport constraints are applied (see {@link OpenSeadragon.Viewport#applyConstraints}).\n             *\n             * @event constrain\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {Boolean} immediately - whether the function that triggered this event was\n             * called with the \"immediately\" flag\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.viewer.raiseEvent( 'constrain', {\n                immediately: immediately\n            });\n        }\n    },\n\n    /**\n     * Enforces the minZoom, maxZoom and visibilityRatio constraints by\n     * zooming and panning to the closest acceptable zoom and location.\n     * @function\n     * @param {Boolean} [immediately=false]\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:constrain\n     */\n    applyConstraints: function(immediately) {\n        var actualZoom = this.getZoom();\n        var constrainedZoom = this._applyZoomConstraints(actualZoom);\n\n        if (actualZoom !== constrainedZoom) {\n            this.zoomTo(constrainedZoom, this.zoomPoint, immediately);\n        }\n\n        var bounds = this.getBoundsNoRotate();\n        var constrainedBounds = this._applyBoundaryConstraints(bounds);\n        this._raiseConstraintsEvent(immediately);\n\n        if (bounds.x !== constrainedBounds.x ||\n            bounds.y !== constrainedBounds.y ||\n            immediately) {\n            this.fitBounds(\n                constrainedBounds.rotate(-this.getRotation()),\n                immediately);\n        }\n        return this;\n    },\n\n    /**\n     * Equivalent to {@link OpenSeadragon.Viewport#applyConstraints}\n     * @function\n     * @param {Boolean} [immediately=false]\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:constrain\n     */\n    ensureVisible: function(immediately) {\n        return this.applyConstraints(immediately);\n    },\n\n    /**\n     * @function\n     * @private\n     * @param {OpenSeadragon.Rect} bounds\n     * @param {Object} options (immediately=false, constraints=false)\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    _fitBounds: function(bounds, options) {\n        options = options || {};\n        var immediately = options.immediately || false;\n        var constraints = options.constraints || false;\n\n        var aspect = this.getAspectRatio();\n        var center = bounds.getCenter();\n\n        // Compute width and height of bounding box.\n        var newBounds = new $.Rect(\n            bounds.x,\n            bounds.y,\n            bounds.width,\n            bounds.height,\n            bounds.degrees + this.getRotation())\n            .getBoundingBox();\n\n        if (newBounds.getAspectRatio() >= aspect) {\n            newBounds.height = newBounds.width / aspect;\n        } else {\n            newBounds.width = newBounds.height * aspect;\n        }\n\n        // Compute x and y from width, height and center position\n        newBounds.x = center.x - newBounds.width / 2;\n        newBounds.y = center.y - newBounds.height / 2;\n        var newZoom = 1.0 / newBounds.width;\n\n        if (constraints) {\n            var newBoundsAspectRatio = newBounds.getAspectRatio();\n            var newConstrainedZoom = this._applyZoomConstraints(newZoom);\n\n            if (newZoom !== newConstrainedZoom) {\n                newZoom = newConstrainedZoom;\n                newBounds.width = 1.0 / newZoom;\n                newBounds.x = center.x - newBounds.width / 2;\n                newBounds.height = newBounds.width / newBoundsAspectRatio;\n                newBounds.y = center.y - newBounds.height / 2;\n            }\n\n            newBounds = this._applyBoundaryConstraints(newBounds);\n            center = newBounds.getCenter();\n            this._raiseConstraintsEvent(immediately);\n        }\n\n        if (immediately) {\n            this.panTo(center, true);\n            return this.zoomTo(newZoom, null, true);\n        }\n\n        this.panTo(this.getCenter(true), true);\n        this.zoomTo(this.getZoom(true), null, true);\n\n        var oldBounds = this.getBounds();\n        var oldZoom   = this.getZoom();\n\n        if (oldZoom === 0 || Math.abs(newZoom / oldZoom - 1) < 0.00000001) {\n            this.zoomTo(newZoom, true);\n            return this.panTo(center, immediately);\n        }\n\n        newBounds = newBounds.rotate(-this.getRotation());\n        var referencePoint = newBounds.getTopLeft().times(newZoom)\n            .minus(oldBounds.getTopLeft().times(oldZoom))\n            .divide(newZoom - oldZoom);\n\n        return this.zoomTo(newZoom, referencePoint, immediately);\n    },\n\n    /**\n     * Makes the viewport zoom and pan so that the specified bounds take\n     * as much space as possible in the viewport.\n     * Note: this method ignores the constraints (minZoom, maxZoom and\n     * visibilityRatio).\n     * Use {@link OpenSeadragon.Viewport#fitBoundsWithConstraints} to enforce\n     * them.\n     * @function\n     * @param {OpenSeadragon.Rect} bounds\n     * @param {Boolean} [immediately=false]\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    fitBounds: function(bounds, immediately) {\n        return this._fitBounds(bounds, {\n            immediately: immediately,\n            constraints: false\n        });\n    },\n\n    /**\n     * Makes the viewport zoom and pan so that the specified bounds take\n     * as much space as possible in the viewport while enforcing the constraints\n     * (minZoom, maxZoom and visibilityRatio).\n     * Note: because this method enforces the constraints, part of the\n     * provided bounds may end up outside of the viewport.\n     * Use {@link OpenSeadragon.Viewport#fitBounds} to ignore them.\n     * @function\n     * @param {OpenSeadragon.Rect} bounds\n     * @param {Boolean} [immediately=false]\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    fitBoundsWithConstraints: function(bounds, immediately) {\n        return this._fitBounds(bounds, {\n            immediately: immediately,\n            constraints: true\n        });\n    },\n\n    /**\n     * Zooms so the image just fills the viewer vertically.\n     * @param {Boolean} immediately\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    fitVertically: function(immediately) {\n        var box = new $.Rect(\n            this._contentBounds.x + (this._contentBounds.width / 2),\n            this._contentBounds.y,\n            0,\n            this._contentBounds.height);\n        return this.fitBounds(box, immediately);\n    },\n\n    /**\n     * Zooms so the image just fills the viewer horizontally.\n     * @param {Boolean} immediately\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    fitHorizontally: function(immediately) {\n        var box = new $.Rect(\n            this._contentBounds.x,\n            this._contentBounds.y + (this._contentBounds.height / 2),\n            this._contentBounds.width,\n            0);\n        return this.fitBounds(box, immediately);\n    },\n\n\n    /**\n     * Returns bounds taking constraints into account\n     * Added to improve constrained panning\n     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    getConstrainedBounds: function(current) {\n        var bounds,\n            constrainedBounds;\n\n        bounds = this.getBounds(current);\n\n        constrainedBounds = this._applyBoundaryConstraints(bounds);\n\n        return constrainedBounds;\n    },\n\n    /**\n     * @function\n     * @param {OpenSeadragon.Point} delta\n     * @param {Boolean} immediately\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:pan\n     */\n    panBy: function( delta, immediately ) {\n        var center = new $.Point(\n            this.centerSpringX.target.value,\n            this.centerSpringY.target.value\n        );\n        return this.panTo( center.plus( delta ), immediately );\n    },\n\n    /**\n     * @function\n     * @param {OpenSeadragon.Point} center\n     * @param {Boolean} immediately\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:pan\n     */\n    panTo: function( center, immediately ) {\n        if ( immediately ) {\n            this.centerSpringX.resetTo( center.x );\n            this.centerSpringY.resetTo( center.y );\n        } else {\n            this.centerSpringX.springTo( center.x );\n            this.centerSpringY.springTo( center.y );\n        }\n\n        if( this.viewer ){\n            /**\n             * Raised when the viewport is panned (see {@link OpenSeadragon.Viewport#panBy} and {@link OpenSeadragon.Viewport#panTo}).\n             *\n             * @event pan\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {OpenSeadragon.Point} center\n             * @property {Boolean} immediately\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.viewer.raiseEvent( 'pan', {\n                center: center,\n                immediately: immediately\n            });\n        }\n\n        return this;\n    },\n\n    /**\n     * @function\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:zoom\n     */\n    zoomBy: function(factor, refPoint, immediately) {\n        return this.zoomTo(\n            this.zoomSpring.target.value * factor, refPoint, immediately);\n    },\n\n    /**\n     * Zooms to the specified zoom level\n     * @function\n     * @param {Number} zoom The zoom level to zoom to.\n     * @param {OpenSeadragon.Point} [refPoint] The point which will stay at\n     * the same screen location. Defaults to the viewport center.\n     * @param {Boolean} [immediately=false]\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:zoom\n     */\n    zoomTo: function(zoom, refPoint, immediately) {\n        var _this = this;\n\n        this.zoomPoint = refPoint instanceof $.Point &&\n            !isNaN(refPoint.x) &&\n            !isNaN(refPoint.y) ?\n            refPoint :\n            null;\n\n        if (immediately) {\n            this._adjustCenterSpringsForZoomPoint(function() {\n                _this.zoomSpring.resetTo(zoom);\n            });\n        } else {\n            this.zoomSpring.springTo(zoom);\n        }\n\n        if (this.viewer) {\n            /**\n             * Raised when the viewport zoom level changes (see {@link OpenSeadragon.Viewport#zoomBy} and {@link OpenSeadragon.Viewport#zoomTo}).\n             *\n             * @event zoom\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {Number} zoom\n             * @property {OpenSeadragon.Point} refPoint\n             * @property {Boolean} immediately\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.viewer.raiseEvent('zoom', {\n                zoom: zoom,\n                refPoint: refPoint,\n                immediately: immediately\n            });\n        }\n\n        return this;\n    },\n\n    /**\n     * Rotates this viewport to the angle specified.\n     * @function\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    setRotation: function(degrees) {\n        if (!this.viewer || !this.viewer.drawer.canRotate()) {\n            return this;\n        }\n        this.degrees = $.positiveModulo(degrees, 360);\n        this._setContentBounds(\n            this.viewer.world.getHomeBounds(),\n            this.viewer.world.getContentFactor());\n        this.viewer.forceRedraw();\n\n        /**\n         * Raised when rotation has been changed.\n         *\n         * @event rotate\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Number} degrees - The number of degrees the rotation was set to.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.viewer.raiseEvent('rotate', {\"degrees\": degrees});\n        return this;\n    },\n\n    /**\n     * Gets the current rotation in degrees.\n     * @function\n     * @return {Number} The current rotation in degrees.\n     */\n    getRotation: function() {\n        return this.degrees;\n    },\n\n    /**\n     * @function\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:resize\n     */\n    resize: function( newContainerSize, maintain ) {\n        var oldBounds = this.getBoundsNoRotate(),\n            newBounds = oldBounds,\n            widthDeltaFactor;\n\n        this.containerSize.x = newContainerSize.x;\n        this.containerSize.y = newContainerSize.y;\n\n        this._updateContainerInnerSize();\n\n        if ( maintain ) {\n            // TODO: widthDeltaFactor will always be 1; probably not what's intended\n            widthDeltaFactor = newContainerSize.x / this.containerSize.x;\n            newBounds.width  = oldBounds.width * widthDeltaFactor;\n            newBounds.height = newBounds.width / this.getAspectRatio();\n        }\n\n        if( this.viewer ){\n            /**\n             * Raised when the viewer is resized (see {@link OpenSeadragon.Viewport#resize}).\n             *\n             * @event resize\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {OpenSeadragon.Point} newContainerSize\n             * @property {Boolean} maintain\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.viewer.raiseEvent( 'resize', {\n                newContainerSize: newContainerSize,\n                maintain: maintain\n            });\n        }\n\n        return this.fitBounds( newBounds, true );\n    },\n\n    // private\n    _updateContainerInnerSize: function() {\n        this._containerInnerSize = new $.Point(\n            Math.max(1, this.containerSize.x - (this._margins.left + this._margins.right)),\n            Math.max(1, this.containerSize.y - (this._margins.top + this._margins.bottom))\n        );\n    },\n\n    /**\n     * Update the zoom and center (X and Y) springs.\n     * @function\n     * @returns {Boolean} True if any change has been made, false otherwise.\n     */\n    update: function() {\n        var _this = this;\n        this._adjustCenterSpringsForZoomPoint(function() {\n            _this.zoomSpring.update();\n        });\n\n        this.centerSpringX.update();\n        this.centerSpringY.update();\n\n        var changed = this.centerSpringX.current.value !== this._oldCenterX ||\n            this.centerSpringY.current.value !== this._oldCenterY ||\n            this.zoomSpring.current.value !== this._oldZoom;\n\n        this._oldCenterX = this.centerSpringX.current.value;\n        this._oldCenterY = this.centerSpringY.current.value;\n        this._oldZoom    = this.zoomSpring.current.value;\n\n        return changed;\n    },\n\n    _adjustCenterSpringsForZoomPoint: function(zoomSpringHandler) {\n        if (this.zoomPoint) {\n            var oldZoomPixel = this.pixelFromPoint(this.zoomPoint, true);\n            zoomSpringHandler();\n            var newZoomPixel = this.pixelFromPoint(this.zoomPoint, true);\n\n            var deltaZoomPixels = newZoomPixel.minus(oldZoomPixel);\n            var deltaZoomPoints = this.deltaPointsFromPixels(\n                deltaZoomPixels, true);\n\n            this.centerSpringX.shiftBy(deltaZoomPoints.x);\n            this.centerSpringY.shiftBy(deltaZoomPoints.y);\n\n            if (this.zoomSpring.isAtTargetValue()) {\n                this.zoomPoint = null;\n            }\n        } else {\n            zoomSpringHandler();\n        }\n    },\n\n    /**\n     * Convert a delta (translation vector) from viewport coordinates to pixels\n     * coordinates. This method does not take rotation into account.\n     * Consider using deltaPixelsFromPoints if you need to account for rotation.\n     * @param {OpenSeadragon.Point} deltaPoints - The translation vector to convert.\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    deltaPixelsFromPointsNoRotate: function(deltaPoints, current) {\n        return deltaPoints.times(\n            this._containerInnerSize.x * this.getZoom(current)\n        );\n    },\n\n    /**\n     * Convert a delta (translation vector) from viewport coordinates to pixels\n     * coordinates.\n     * @param {OpenSeadragon.Point} deltaPoints - The translation vector to convert.\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    deltaPixelsFromPoints: function(deltaPoints, current) {\n        return this.deltaPixelsFromPointsNoRotate(\n            deltaPoints.rotate(this.getRotation()),\n            current);\n    },\n\n    /**\n     * Convert a delta (translation vector) from pixels coordinates to viewport\n     * coordinates. This method does not take rotation into account.\n     * Consider using deltaPointsFromPixels if you need to account for rotation.\n     * @param {OpenSeadragon.Point} deltaPixels - The translation vector to convert.\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    deltaPointsFromPixelsNoRotate: function(deltaPixels, current) {\n        return deltaPixels.divide(\n            this._containerInnerSize.x * this.getZoom(current)\n        );\n    },\n\n    /**\n     * Convert a delta (translation vector) from pixels coordinates to viewport\n     * coordinates.\n     * @param {OpenSeadragon.Point} deltaPixels - The translation vector to convert.\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    deltaPointsFromPixels: function(deltaPixels, current) {\n        return this.deltaPointsFromPixelsNoRotate(deltaPixels, current)\n            .rotate(-this.getRotation());\n    },\n\n    /**\n     * Convert viewport coordinates to pixels coordinates.\n     * This method does not take rotation into account.\n     * Consider using pixelFromPoint if you need to account for rotation.\n     * @param {OpenSeadragon.Point} point the viewport coordinates\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    pixelFromPointNoRotate: function(point, current) {\n        return this._pixelFromPointNoRotate(\n            point, this.getBoundsNoRotate(current));\n    },\n\n    /**\n     * Convert viewport coordinates to pixel coordinates.\n     * @param {OpenSeadragon.Point} point the viewport coordinates\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    pixelFromPoint: function(point, current) {\n        return this._pixelFromPoint(point, this.getBoundsNoRotate(current));\n    },\n\n    // private\n    _pixelFromPointNoRotate: function(point, bounds) {\n        return point.minus(\n            bounds.getTopLeft()\n        ).times(\n            this._containerInnerSize.x / bounds.width\n        ).plus(\n            new $.Point(this._margins.left, this._margins.top)\n        );\n    },\n\n    // private\n    _pixelFromPoint: function(point, bounds) {\n        return this._pixelFromPointNoRotate(\n            point.rotate(this.getRotation(), this.getCenter(true)),\n            bounds);\n    },\n\n    /**\n     * Convert pixel coordinates to viewport coordinates.\n     * This method does not take rotation into account.\n     * Consider using pointFromPixel if you need to account for rotation.\n     * @param {OpenSeadragon.Point} pixel Pixel coordinates\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    pointFromPixelNoRotate: function(pixel, current) {\n        var bounds = this.getBoundsNoRotate(current);\n        return pixel.minus(\n            new $.Point(this._margins.left, this._margins.top)\n        ).divide(\n            this._containerInnerSize.x / bounds.width\n        ).plus(\n            bounds.getTopLeft()\n        );\n    },\n\n    /**\n     * Convert pixel coordinates to viewport coordinates.\n     * @param {OpenSeadragon.Point} pixel Pixel coordinates\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    pointFromPixel: function(pixel, current) {\n        return this.pointFromPixelNoRotate(pixel, current).rotate(\n            -this.getRotation(),\n            this.getCenter(true)\n        );\n    },\n\n    // private\n    _viewportToImageDelta: function( viewerX, viewerY ) {\n        var scale = this._contentBoundsNoRotate.width;\n        return new $.Point(\n            viewerX * this._contentSizeNoRotate.x / scale,\n            viewerY * this._contentSizeNoRotate.x / scale);\n    },\n\n    /**\n     * Translates from OpenSeadragon viewer coordinate system to image coordinate system.\n     * This method can be called either by passing X,Y coordinates or an\n     * OpenSeadragon.Point\n     * Note: not accurate with multi-image; use TiledImage.viewportToImageCoordinates instead.\n     * @function\n     * @param {(OpenSeadragon.Point|Number)} viewerX either a point or the X\n     * coordinate in viewport coordinate system.\n     * @param {Number} [viewerY] Y coordinate in viewport coordinate system.\n     * @return {OpenSeadragon.Point} a point representing the coordinates in the image.\n     */\n    viewportToImageCoordinates: function(viewerX, viewerY) {\n        if (viewerX instanceof $.Point) {\n            //they passed a point instead of individual components\n            return this.viewportToImageCoordinates(viewerX.x, viewerX.y);\n        }\n\n        if (this.viewer) {\n            var count = this.viewer.world.getItemCount();\n            if (count > 1) {\n                $.console.error('[Viewport.viewportToImageCoordinates] is not accurate ' +\n                    'with multi-image; use TiledImage.viewportToImageCoordinates instead.');\n            } else if (count === 1) {\n                // It is better to use TiledImage.viewportToImageCoordinates\n                // because this._contentBoundsNoRotate can not be relied on\n                // with clipping.\n                var item = this.viewer.world.getItemAt(0);\n                return item.viewportToImageCoordinates(viewerX, viewerY, true);\n            }\n        }\n\n        return this._viewportToImageDelta(\n            viewerX - this._contentBoundsNoRotate.x,\n            viewerY - this._contentBoundsNoRotate.y);\n    },\n\n    // private\n    _imageToViewportDelta: function( imageX, imageY ) {\n        var scale = this._contentBoundsNoRotate.width;\n        return new $.Point(\n            imageX / this._contentSizeNoRotate.x * scale,\n            imageY / this._contentSizeNoRotate.x * scale);\n    },\n\n    /**\n     * Translates from image coordinate system to OpenSeadragon viewer coordinate system\n     * This method can be called either by passing X,Y coordinates or an\n     * OpenSeadragon.Point\n     * Note: not accurate with multi-image; use TiledImage.imageToViewportCoordinates instead.\n     * @function\n     * @param {(OpenSeadragon.Point | Number)} imageX the point or the\n     * X coordinate in image coordinate system.\n     * @param {Number} [imageY] Y coordinate in image coordinate system.\n     * @return {OpenSeadragon.Point} a point representing the coordinates in the viewport.\n     */\n    imageToViewportCoordinates: function(imageX, imageY) {\n        if (imageX instanceof $.Point) {\n            //they passed a point instead of individual components\n            return this.imageToViewportCoordinates(imageX.x, imageX.y);\n        }\n\n        if (this.viewer) {\n            var count = this.viewer.world.getItemCount();\n            if (count > 1) {\n                $.console.error('[Viewport.imageToViewportCoordinates] is not accurate ' +\n                    'with multi-image; use TiledImage.imageToViewportCoordinates instead.');\n            } else if (count === 1) {\n                // It is better to use TiledImage.viewportToImageCoordinates\n                // because this._contentBoundsNoRotate can not be relied on\n                // with clipping.\n                var item = this.viewer.world.getItemAt(0);\n                return item.imageToViewportCoordinates(imageX, imageY, true);\n            }\n        }\n\n        var point = this._imageToViewportDelta(imageX, imageY);\n        point.x += this._contentBoundsNoRotate.x;\n        point.y += this._contentBoundsNoRotate.y;\n        return point;\n    },\n\n    /**\n     * Translates from a rectangle which describes a portion of the image in\n     * pixel coordinates to OpenSeadragon viewport rectangle coordinates.\n     * This method can be called either by passing X,Y,width,height or an\n     * OpenSeadragon.Rect\n     * Note: not accurate with multi-image; use TiledImage.imageToViewportRectangle instead.\n     * @function\n     * @param {(OpenSeadragon.Rect | Number)} imageX the rectangle or the X\n     * coordinate of the top left corner of the rectangle in image coordinate system.\n     * @param {Number} [imageY] the Y coordinate of the top left corner of the rectangle\n     * in image coordinate system.\n     * @param {Number} [pixelWidth] the width in pixel of the rectangle.\n     * @param {Number} [pixelHeight] the height in pixel of the rectangle.\n     * @returns {OpenSeadragon.Rect} This image's bounds in viewport coordinates\n     */\n    imageToViewportRectangle: function(imageX, imageY, pixelWidth, pixelHeight) {\n        var rect = imageX;\n        if (!(rect instanceof $.Rect)) {\n            //they passed individual components instead of a rectangle\n            rect = new $.Rect(imageX, imageY, pixelWidth, pixelHeight);\n        }\n\n        if (this.viewer) {\n            var count = this.viewer.world.getItemCount();\n            if (count > 1) {\n                $.console.error('[Viewport.imageToViewportRectangle] is not accurate ' +\n                    'with multi-image; use TiledImage.imageToViewportRectangle instead.');\n            } else if (count === 1) {\n                // It is better to use TiledImage.imageToViewportRectangle\n                // because this._contentBoundsNoRotate can not be relied on\n                // with clipping.\n                var item = this.viewer.world.getItemAt(0);\n                return item.imageToViewportRectangle(\n                    imageX, imageY, pixelWidth, pixelHeight, true);\n            }\n        }\n\n        var coordA = this.imageToViewportCoordinates(rect.x, rect.y);\n        var coordB = this._imageToViewportDelta(rect.width, rect.height);\n        return new $.Rect(\n            coordA.x,\n            coordA.y,\n            coordB.x,\n            coordB.y,\n            rect.degrees\n        );\n    },\n\n    /**\n     * Translates from a rectangle which describes a portion of\n     * the viewport in point coordinates to image rectangle coordinates.\n     * This method can be called either by passing X,Y,width,height or an\n     * OpenSeadragon.Rect\n     * Note: not accurate with multi-image; use TiledImage.viewportToImageRectangle instead.\n     * @function\n     * @param {(OpenSeadragon.Rect | Number)} viewerX either a rectangle or\n     * the X coordinate of the top left corner of the rectangle in viewport\n     * coordinate system.\n     * @param {Number} [viewerY] the Y coordinate of the top left corner of the rectangle\n     * in viewport coordinate system.\n     * @param {Number} [pointWidth] the width of the rectangle in viewport coordinate system.\n     * @param {Number} [pointHeight] the height of the rectangle in viewport coordinate system.\n     */\n    viewportToImageRectangle: function(viewerX, viewerY, pointWidth, pointHeight) {\n        var rect = viewerX;\n        if (!(rect instanceof $.Rect)) {\n            //they passed individual components instead of a rectangle\n            rect = new $.Rect(viewerX, viewerY, pointWidth, pointHeight);\n        }\n\n        if (this.viewer) {\n            var count = this.viewer.world.getItemCount();\n            if (count > 1) {\n                $.console.error('[Viewport.viewportToImageRectangle] is not accurate ' +\n                    'with multi-image; use TiledImage.viewportToImageRectangle instead.');\n            } else if (count === 1) {\n                // It is better to use TiledImage.viewportToImageCoordinates\n                // because this._contentBoundsNoRotate can not be relied on\n                // with clipping.\n                var item = this.viewer.world.getItemAt(0);\n                return item.viewportToImageRectangle(\n                    viewerX, viewerY, pointWidth, pointHeight, true);\n            }\n        }\n\n        var coordA = this.viewportToImageCoordinates(rect.x, rect.y);\n        var coordB = this._viewportToImageDelta(rect.width, rect.height);\n        return new $.Rect(\n            coordA.x,\n            coordA.y,\n            coordB.x,\n            coordB.y,\n            rect.degrees\n        );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the viewer element to image\n     * coordinates.\n     * Note: not accurate with multi-image.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    viewerElementToImageCoordinates: function( pixel ) {\n        var point = this.pointFromPixel( pixel, true );\n        return this.viewportToImageCoordinates( point );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the image to\n     * viewer element coordinates.\n     * Note: not accurate with multi-image.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    imageToViewerElementCoordinates: function( pixel ) {\n        var point = this.imageToViewportCoordinates( pixel );\n        return this.pixelFromPoint( point, true );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the window to image coordinates.\n     * Note: not accurate with multi-image.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    windowToImageCoordinates: function(pixel) {\n        $.console.assert(this.viewer,\n            \"[Viewport.windowToImageCoordinates] the viewport must have a viewer.\");\n        var viewerCoordinates = pixel.minus(\n                $.getElementPosition(this.viewer.element));\n        return this.viewerElementToImageCoordinates(viewerCoordinates);\n    },\n\n    /**\n     * Convert image coordinates to pixel coordinates relative to the window.\n     * Note: not accurate with multi-image.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    imageToWindowCoordinates: function(pixel) {\n        $.console.assert(this.viewer,\n            \"[Viewport.imageToWindowCoordinates] the viewport must have a viewer.\");\n        var viewerCoordinates = this.imageToViewerElementCoordinates(pixel);\n        return viewerCoordinates.plus(\n                $.getElementPosition(this.viewer.element));\n    },\n\n    /**\n     * Convert pixel coordinates relative to the viewer element to viewport\n     * coordinates.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    viewerElementToViewportCoordinates: function( pixel ) {\n        return this.pointFromPixel( pixel, true );\n    },\n\n    /**\n     * Convert viewport coordinates to pixel coordinates relative to the\n     * viewer element.\n     * @param {OpenSeadragon.Point} point\n     * @returns {OpenSeadragon.Point}\n     */\n    viewportToViewerElementCoordinates: function( point ) {\n        return this.pixelFromPoint( point, true );\n    },\n\n    /**\n     * Convert a rectangle in pixel coordinates relative to the viewer element\n     * to viewport coordinates.\n     * @param {OpenSeadragon.Rect} rectangle the rectangle to convert\n     * @returns {OpenSeadragon.Rect} the converted rectangle\n     */\n    viewerElementToViewportRectangle: function(rectangle) {\n        return $.Rect.fromSummits(\n            this.pointFromPixel(rectangle.getTopLeft(), true),\n            this.pointFromPixel(rectangle.getTopRight(), true),\n            this.pointFromPixel(rectangle.getBottomLeft(), true)\n        );\n    },\n\n    /**\n     * Convert a rectangle in viewport coordinates to pixel coordinates relative\n     * to the viewer element.\n     * @param {OpenSeadragon.Rect} rectangle the rectangle to convert\n     * @returns {OpenSeadragon.Rect} the converted rectangle\n     */\n    viewportToViewerElementRectangle: function(rectangle) {\n        return $.Rect.fromSummits(\n            this.pixelFromPoint(rectangle.getTopLeft(), true),\n            this.pixelFromPoint(rectangle.getTopRight(), true),\n            this.pixelFromPoint(rectangle.getBottomLeft(), true)\n        );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the window to viewport coordinates.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    windowToViewportCoordinates: function(pixel) {\n        $.console.assert(this.viewer,\n            \"[Viewport.windowToViewportCoordinates] the viewport must have a viewer.\");\n        var viewerCoordinates = pixel.minus(\n                $.getElementPosition(this.viewer.element));\n        return this.viewerElementToViewportCoordinates(viewerCoordinates);\n    },\n\n    /**\n     * Convert viewport coordinates to pixel coordinates relative to the window.\n     * @param {OpenSeadragon.Point} point\n     * @returns {OpenSeadragon.Point}\n     */\n    viewportToWindowCoordinates: function(point) {\n        $.console.assert(this.viewer,\n            \"[Viewport.viewportToWindowCoordinates] the viewport must have a viewer.\");\n        var viewerCoordinates = this.viewportToViewerElementCoordinates(point);\n        return viewerCoordinates.plus(\n                $.getElementPosition(this.viewer.element));\n    },\n\n    /**\n     * Convert a viewport zoom to an image zoom.\n     * Image zoom: ratio of the original image size to displayed image size.\n     * 1 means original image size, 0.5 half size...\n     * Viewport zoom: ratio of the displayed image's width to viewport's width.\n     * 1 means identical width, 2 means image's width is twice the viewport's width...\n     * Note: not accurate with multi-image.\n     * @function\n     * @param {Number} viewportZoom The viewport zoom\n     * target zoom.\n     * @returns {Number} imageZoom The image zoom\n     */\n    viewportToImageZoom: function(viewportZoom) {\n        if (this.viewer) {\n            var count = this.viewer.world.getItemCount();\n            if (count > 1) {\n                $.console.error('[Viewport.viewportToImageZoom] is not ' +\n                    'accurate with multi-image.');\n            } else if (count === 1) {\n                // It is better to use TiledImage.viewportToImageZoom\n                // because this._contentBoundsNoRotate can not be relied on\n                // with clipping.\n                var item = this.viewer.world.getItemAt(0);\n                return item.viewportToImageZoom(viewportZoom);\n            }\n        }\n\n        var imageWidth = this._contentSizeNoRotate.x;\n        var containerWidth = this._containerInnerSize.x;\n        var scale = this._contentBoundsNoRotate.width;\n        var viewportToImageZoomRatio = (containerWidth / imageWidth) * scale;\n        return viewportZoom * viewportToImageZoomRatio;\n    },\n\n    /**\n     * Convert an image zoom to a viewport zoom.\n     * Image zoom: ratio of the original image size to displayed image size.\n     * 1 means original image size, 0.5 half size...\n     * Viewport zoom: ratio of the displayed image's width to viewport's width.\n     * 1 means identical width, 2 means image's width is twice the viewport's width...\n     * Note: not accurate with multi-image.\n     * @function\n     * @param {Number} imageZoom The image zoom\n     * target zoom.\n     * @returns {Number} viewportZoom The viewport zoom\n     */\n    imageToViewportZoom: function(imageZoom) {\n        if (this.viewer) {\n            var count = this.viewer.world.getItemCount();\n            if (count > 1) {\n                $.console.error('[Viewport.imageToViewportZoom] is not accurate ' +\n                    'with multi-image.');\n            } else if (count === 1) {\n                // It is better to use TiledImage.imageToViewportZoom\n                // because this._contentBoundsNoRotate can not be relied on\n                // with clipping.\n                var item = this.viewer.world.getItemAt(0);\n                return item.imageToViewportZoom(imageZoom);\n            }\n        }\n\n        var imageWidth = this._contentSizeNoRotate.x;\n        var containerWidth = this._containerInnerSize.x;\n        var scale = this._contentBoundsNoRotate.width;\n        var viewportToImageZoomRatio = (imageWidth / containerWidth) / scale;\n        return imageZoom * viewportToImageZoomRatio;\n    },\n\n    /**\n     * Toggles flip state and demands a new drawing on navigator and viewer objects.\n     * @function\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    toggleFlip: function() {\n      this.setFlip(!this.getFlip());\n      return this;\n    },\n\n    /**\n     * Get flip state stored on viewport.\n     * @function\n     * @return {Boolean} Flip state.\n     */\n    getFlip: function() {\n      return this.flipped;\n    },\n\n    /**\n     * Sets flip state according to the state input argument.\n     * @function\n     * @param {Boolean} state - Flip state to set.\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    setFlip: function( state ) {\n      if ( this.flipped === state ) {\n        return this;\n      }\n\n      this.flipped = state;\n      if(this.viewer.navigator){\n        this.viewer.navigator.setFlip(this.getFlip());\n      }\n      this.viewer.forceRedraw();\n\n      /**\n       * Raised when flip state has been changed.\n       *\n       * @event flip\n       * @memberof OpenSeadragon.Viewer\n       * @type {object}\n       * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n       * @property {Number} flipped - The flip state after this change.\n       * @property {?Object} userData - Arbitrary subscriber-defined object.\n       */\n      this.viewer.raiseEvent('flip', {\"flipped\": state});\n      return this;\n    }\n\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - TiledImage\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * You shouldn't have to create a TiledImage instance directly; get it asynchronously by\n * using {@link OpenSeadragon.Viewer#open} or {@link OpenSeadragon.Viewer#addTiledImage} instead.\n * @class TiledImage\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.EventSource\n * @classdesc Handles rendering of tiles for an {@link OpenSeadragon.Viewer}.\n * A new instance is created for each TileSource opened.\n * @param {Object} options - Configuration for this TiledImage.\n * @param {OpenSeadragon.TileSource} options.source - The TileSource that defines this TiledImage.\n * @param {OpenSeadragon.Viewer} options.viewer - The Viewer that owns this TiledImage.\n * @param {OpenSeadragon.TileCache} options.tileCache - The TileCache for this TiledImage to use.\n * @param {OpenSeadragon.Drawer} options.drawer - The Drawer for this TiledImage to draw onto.\n * @param {OpenSeadragon.ImageLoader} options.imageLoader - The ImageLoader for this TiledImage to use.\n * @param {Number} [options.x=0] - Left position, in viewport coordinates.\n * @param {Number} [options.y=0] - Top position, in viewport coordinates.\n * @param {Number} [options.width=1] - Width, in viewport coordinates.\n * @param {Number} [options.height] - Height, in viewport coordinates.\n * @param {OpenSeadragon.Rect} [options.fitBounds] The bounds in viewport coordinates\n * to fit the image into. If specified, x, y, width and height get ignored.\n * @param {OpenSeadragon.Placement} [options.fitBoundsPlacement=OpenSeadragon.Placement.CENTER]\n * How to anchor the image in the bounds if options.fitBounds is set.\n * @param {OpenSeadragon.Rect} [options.clip] - An area, in image pixels, to clip to\n * (portions of the image outside of this area will not be visible). Only works on\n * browsers that support the HTML5 canvas.\n * @param {Number} [options.springStiffness] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.animationTime] - See {@link OpenSeadragon.Options}.\n * @param {Number} [options.minZoomImageRatio] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.wrapHorizontal] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.wrapVertical] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.immediateRender] - See {@link OpenSeadragon.Options}.\n * @param {Number} [options.blendTime] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.alwaysBlend] - See {@link OpenSeadragon.Options}.\n * @param {Number} [options.minPixelRatio] - See {@link OpenSeadragon.Options}.\n * @param {Number} [options.smoothTileEdgesMinZoom] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.iOSDevice] - See {@link OpenSeadragon.Options}.\n * @param {Number} [options.opacity=1] - Set to draw at proportional opacity. If zero, images will not draw.\n * @param {Boolean} [options.preload=false] - Set true to load even when the image is hidden by zero opacity.\n * @param {String} [options.compositeOperation] - How the image is composited onto other images; see compositeOperation in {@link OpenSeadragon.Options} for possible values.\n * @param {Boolean} [options.debugMode] - See {@link OpenSeadragon.Options}.\n * @param {String|CanvasGradient|CanvasPattern|Function} [options.placeholderFillStyle] - See {@link OpenSeadragon.Options}.\n * @param {String|Boolean} [options.crossOriginPolicy] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.ajaxWithCredentials] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.loadTilesWithAjax]\n *      Whether to load tile data using AJAX requests.\n *      Defaults to the setting in {@link OpenSeadragon.Options}.\n * @param {Object} [options.ajaxHeaders={}]\n *      A set of headers to include when making tile AJAX requests.\n */\n$.TiledImage = function( options ) {\n    var _this = this;\n    /**\n     * The {@link OpenSeadragon.TileSource} that defines this TiledImage.\n     * @member {OpenSeadragon.TileSource} source\n     * @memberof OpenSeadragon.TiledImage#\n     */\n    $.console.assert( options.tileCache, \"[TiledImage] options.tileCache is required\" );\n    $.console.assert( options.drawer, \"[TiledImage] options.drawer is required\" );\n    $.console.assert( options.viewer, \"[TiledImage] options.viewer is required\" );\n    $.console.assert( options.imageLoader, \"[TiledImage] options.imageLoader is required\" );\n    $.console.assert( options.source, \"[TiledImage] options.source is required\" );\n    $.console.assert(!options.clip || options.clip instanceof $.Rect,\n        \"[TiledImage] options.clip must be an OpenSeadragon.Rect if present\");\n\n    $.EventSource.call( this );\n\n    this._tileCache = options.tileCache;\n    delete options.tileCache;\n\n    this._drawer = options.drawer;\n    delete options.drawer;\n\n    this._imageLoader = options.imageLoader;\n    delete options.imageLoader;\n\n    if (options.clip instanceof $.Rect) {\n        this._clip = options.clip.clone();\n    }\n\n    delete options.clip;\n\n    var x = options.x || 0;\n    delete options.x;\n    var y = options.y || 0;\n    delete options.y;\n\n    // Ratio of zoomable image height to width.\n    this.normHeight = options.source.dimensions.y / options.source.dimensions.x;\n    this.contentAspectX = options.source.dimensions.x / options.source.dimensions.y;\n\n    var scale = 1;\n    if ( options.width ) {\n        scale = options.width;\n        delete options.width;\n\n        if ( options.height ) {\n            $.console.error( \"specifying both width and height to a tiledImage is not supported\" );\n            delete options.height;\n        }\n    } else if ( options.height ) {\n        scale = options.height / this.normHeight;\n        delete options.height;\n    }\n\n    var fitBounds = options.fitBounds;\n    delete options.fitBounds;\n    var fitBoundsPlacement = options.fitBoundsPlacement || OpenSeadragon.Placement.CENTER;\n    delete options.fitBoundsPlacement;\n\n    var degrees = options.degrees || 0;\n    delete options.degrees;\n\n    $.extend( true, this, {\n\n        //internal state properties\n        viewer:         null,\n        tilesMatrix:    {},    // A '3d' dictionary [level][x][y] --> Tile.\n        coverage:       {},    // A '3d' dictionary [level][x][y] --> Boolean; shows what areas have been drawn.\n        loadingCoverage: {},   // A '3d' dictionary [level][x][y] --> Boolean; shows what areas are loaded or are being loaded/blended.\n        lastDrawn:      [],    // An unordered list of Tiles drawn last frame.\n        lastResetTime:  0,     // Last time for which the tiledImage was reset.\n        _midDraw:       false, // Is the tiledImage currently updating the viewport?\n        _needsDraw:     true,  // Does the tiledImage need to update the viewport again?\n        _hasOpaqueTile: false,  // Do we have even one fully opaque tile?\n        _tilesLoading:  0,     // The number of pending tile requests.\n        //configurable settings\n        springStiffness:        $.DEFAULT_SETTINGS.springStiffness,\n        animationTime:          $.DEFAULT_SETTINGS.animationTime,\n        minZoomImageRatio:      $.DEFAULT_SETTINGS.minZoomImageRatio,\n        wrapHorizontal:         $.DEFAULT_SETTINGS.wrapHorizontal,\n        wrapVertical:           $.DEFAULT_SETTINGS.wrapVertical,\n        immediateRender:        $.DEFAULT_SETTINGS.immediateRender,\n        blendTime:              $.DEFAULT_SETTINGS.blendTime,\n        alwaysBlend:            $.DEFAULT_SETTINGS.alwaysBlend,\n        minPixelRatio:          $.DEFAULT_SETTINGS.minPixelRatio,\n        smoothTileEdgesMinZoom: $.DEFAULT_SETTINGS.smoothTileEdgesMinZoom,\n        iOSDevice:              $.DEFAULT_SETTINGS.iOSDevice,\n        debugMode:              $.DEFAULT_SETTINGS.debugMode,\n        crossOriginPolicy:      $.DEFAULT_SETTINGS.crossOriginPolicy,\n        ajaxWithCredentials:    $.DEFAULT_SETTINGS.ajaxWithCredentials,\n        placeholderFillStyle:   $.DEFAULT_SETTINGS.placeholderFillStyle,\n        opacity:                $.DEFAULT_SETTINGS.opacity,\n        preload:                $.DEFAULT_SETTINGS.preload,\n        compositeOperation:     $.DEFAULT_SETTINGS.compositeOperation\n    }, options );\n\n    this._preload = this.preload;\n    delete this.preload;\n\n    this._fullyLoaded = false;\n\n    this._xSpring = new $.Spring({\n        initial: x,\n        springStiffness: this.springStiffness,\n        animationTime: this.animationTime\n    });\n\n    this._ySpring = new $.Spring({\n        initial: y,\n        springStiffness: this.springStiffness,\n        animationTime: this.animationTime\n    });\n\n    this._scaleSpring = new $.Spring({\n        initial: scale,\n        springStiffness: this.springStiffness,\n        animationTime: this.animationTime\n    });\n\n    this._degreesSpring = new $.Spring({\n        initial: degrees,\n        springStiffness: this.springStiffness,\n        animationTime: this.animationTime\n    });\n\n    this._updateForScale();\n\n    if (fitBounds) {\n        this.fitBounds(fitBounds, fitBoundsPlacement, true);\n    }\n\n    // We need a callback to give image manipulation a chance to happen\n    this._drawingHandler = function(args) {\n      /**\n       * This event is fired just before the tile is drawn giving the application a chance to alter the image.\n       *\n       * NOTE: This event is only fired when the drawer is using a &lt;canvas&gt;.\n       *\n       * @event tile-drawing\n       * @memberof OpenSeadragon.Viewer\n       * @type {object}\n       * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n       * @property {OpenSeadragon.Tile} tile - The Tile being drawn.\n       * @property {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n       * @property {OpenSeadragon.Tile} context - The HTML canvas context being drawn into.\n       * @property {OpenSeadragon.Tile} rendered - The HTML canvas context containing the tile imagery.\n       * @property {?Object} userData - Arbitrary subscriber-defined object.\n       */\n        _this.viewer.raiseEvent('tile-drawing', $.extend({\n            tiledImage: _this\n        }, args));\n    };\n};\n\n$.extend($.TiledImage.prototype, $.EventSource.prototype, /** @lends OpenSeadragon.TiledImage.prototype */{\n    /**\n     * @returns {Boolean} Whether the TiledImage needs to be drawn.\n     */\n    needsDraw: function() {\n        return this._needsDraw;\n    },\n\n    /**\n     * @returns {Boolean} Whether all tiles necessary for this TiledImage to draw at the current view have been loaded.\n     */\n    getFullyLoaded: function() {\n        return this._fullyLoaded;\n    },\n\n    // private\n    _setFullyLoaded: function(flag) {\n        if (flag === this._fullyLoaded) {\n            return;\n        }\n\n        this._fullyLoaded = flag;\n\n        /**\n         * Fired when the TiledImage's \"fully loaded\" flag (whether all tiles necessary for this TiledImage\n         * to draw at the current view have been loaded) changes.\n         *\n         * @event fully-loaded-change\n         * @memberof OpenSeadragon.TiledImage\n         * @type {object}\n         * @property {Boolean} fullyLoaded - The new \"fully loaded\" value.\n         * @property {OpenSeadragon.TiledImage} eventSource - A reference to the TiledImage which raised the event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent('fully-loaded-change', {\n            fullyLoaded: this._fullyLoaded\n        });\n    },\n\n    /**\n     * Clears all tiles and triggers an update on the next call to\n     * {@link OpenSeadragon.TiledImage#update}.\n     */\n    reset: function() {\n        this._tileCache.clearTilesFor(this);\n        this.lastResetTime = $.now();\n        this._needsDraw = true;\n    },\n\n    /**\n     * Updates the TiledImage's bounds, animating if needed.\n     * @returns {Boolean} Whether the TiledImage animated.\n     */\n    update: function() {\n        var xUpdated = this._xSpring.update();\n        var yUpdated = this._ySpring.update();\n        var scaleUpdated = this._scaleSpring.update();\n        var degreesUpdated = this._degreesSpring.update();\n\n        if (xUpdated || yUpdated || scaleUpdated || degreesUpdated) {\n            this._updateForScale();\n            this._needsDraw = true;\n            return true;\n        }\n\n        return false;\n    },\n\n    /**\n     * Draws the TiledImage to its Drawer.\n     */\n    draw: function() {\n        if (this.opacity !== 0 || this._preload) {\n            this._midDraw = true;\n            this._updateViewport();\n            this._midDraw = false;\n        }\n        // Images with opacity 0 should not need to be drawn in future. this._needsDraw = false is set in this._updateViewport() for other images.\n        else {\n            this._needsDraw = false;\n        }\n    },\n\n    /**\n     * Destroy the TiledImage (unload current loaded tiles).\n     */\n    destroy: function() {\n        this.reset();\n    },\n\n    /**\n     * Get this TiledImage's bounds in viewport coordinates.\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * false for target location.\n     * @returns {OpenSeadragon.Rect} This TiledImage's bounds in viewport coordinates.\n     */\n    getBounds: function(current) {\n        return this.getBoundsNoRotate(current)\n            .rotate(this.getRotation(current), this._getRotationPoint(current));\n    },\n\n    /**\n     * Get this TiledImage's bounds in viewport coordinates without taking\n     * rotation into account.\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * false for target location.\n     * @returns {OpenSeadragon.Rect} This TiledImage's bounds in viewport coordinates.\n     */\n    getBoundsNoRotate: function(current) {\n        return current ?\n            new $.Rect(\n                this._xSpring.current.value,\n                this._ySpring.current.value,\n                this._worldWidthCurrent,\n                this._worldHeightCurrent) :\n            new $.Rect(\n                this._xSpring.target.value,\n                this._ySpring.target.value,\n                this._worldWidthTarget,\n                this._worldHeightTarget);\n    },\n\n    // deprecated\n    getWorldBounds: function() {\n        $.console.error('[TiledImage.getWorldBounds] is deprecated; use TiledImage.getBounds instead');\n        return this.getBounds();\n    },\n\n    /**\n     * Get the bounds of the displayed part of the tiled image.\n     * @param {Boolean} [current=false] Pass true for the current location,\n     * false for the target location.\n     * @returns {$.Rect} The clipped bounds in viewport coordinates.\n     */\n    getClippedBounds: function(current) {\n        var bounds = this.getBoundsNoRotate(current);\n        if (this._clip) {\n            var worldWidth = current ?\n                this._worldWidthCurrent : this._worldWidthTarget;\n            var ratio = worldWidth / this.source.dimensions.x;\n            var clip = this._clip.times(ratio);\n            bounds = new $.Rect(\n                bounds.x + clip.x,\n                bounds.y + clip.y,\n                clip.width,\n                clip.height);\n        }\n        return bounds.rotate(this.getRotation(current), this._getRotationPoint(current));\n    },\n\n    /**\n     * @returns {OpenSeadragon.Point} This TiledImage's content size, in original pixels.\n     */\n    getContentSize: function() {\n        return new $.Point(this.source.dimensions.x, this.source.dimensions.y);\n    },\n\n    // private\n    _viewportToImageDelta: function( viewerX, viewerY, current ) {\n        var scale = (current ? this._scaleSpring.current.value : this._scaleSpring.target.value);\n        return new $.Point(viewerX * (this.source.dimensions.x / scale),\n            viewerY * ((this.source.dimensions.y * this.contentAspectX) / scale));\n    },\n\n    /**\n     * Translates from OpenSeadragon viewer coordinate system to image coordinate system.\n     * This method can be called either by passing X,Y coordinates or an {@link OpenSeadragon.Point}.\n     * @param {Number|OpenSeadragon.Point} viewerX - The X coordinate or point in viewport coordinate system.\n     * @param {Number} [viewerY] - The Y coordinate in viewport coordinate system.\n     * @param {Boolean} [current=false] - Pass true to use the current location; false for target location.\n     * @return {OpenSeadragon.Point} A point representing the coordinates in the image.\n     */\n    viewportToImageCoordinates: function(viewerX, viewerY, current) {\n        var point;\n        if (viewerX instanceof $.Point) {\n            //they passed a point instead of individual components\n            current = viewerY;\n            point = viewerX;\n        } else {\n            point = new $.Point(viewerX, viewerY);\n        }\n\n        point = point.rotate(-this.getRotation(current), this._getRotationPoint(current));\n        return current ?\n            this._viewportToImageDelta(\n                point.x - this._xSpring.current.value,\n                point.y - this._ySpring.current.value) :\n            this._viewportToImageDelta(\n                point.x - this._xSpring.target.value,\n                point.y - this._ySpring.target.value);\n    },\n\n    // private\n    _imageToViewportDelta: function( imageX, imageY, current ) {\n        var scale = (current ? this._scaleSpring.current.value : this._scaleSpring.target.value);\n        return new $.Point((imageX / this.source.dimensions.x) * scale,\n            (imageY / this.source.dimensions.y / this.contentAspectX) * scale);\n    },\n\n    /**\n     * Translates from image coordinate system to OpenSeadragon viewer coordinate system\n     * This method can be called either by passing X,Y coordinates or an {@link OpenSeadragon.Point}.\n     * @param {Number|OpenSeadragon.Point} imageX - The X coordinate or point in image coordinate system.\n     * @param {Number} [imageY] - The Y coordinate in image coordinate system.\n     * @param {Boolean} [current=false] - Pass true to use the current location; false for target location.\n     * @return {OpenSeadragon.Point} A point representing the coordinates in the viewport.\n     */\n    imageToViewportCoordinates: function(imageX, imageY, current) {\n        if (imageX instanceof $.Point) {\n            //they passed a point instead of individual components\n            current = imageY;\n            imageY = imageX.y;\n            imageX = imageX.x;\n        }\n\n        var point = this._imageToViewportDelta(imageX, imageY);\n        if (current) {\n            point.x += this._xSpring.current.value;\n            point.y += this._ySpring.current.value;\n        } else {\n            point.x += this._xSpring.target.value;\n            point.y += this._ySpring.target.value;\n        }\n\n        return point.rotate(this.getRotation(current), this._getRotationPoint(current));\n    },\n\n    /**\n     * Translates from a rectangle which describes a portion of the image in\n     * pixel coordinates to OpenSeadragon viewport rectangle coordinates.\n     * This method can be called either by passing X,Y,width,height or an {@link OpenSeadragon.Rect}.\n     * @param {Number|OpenSeadragon.Rect} imageX - The left coordinate or rectangle in image coordinate system.\n     * @param {Number} [imageY] - The top coordinate in image coordinate system.\n     * @param {Number} [pixelWidth] - The width in pixel of the rectangle.\n     * @param {Number} [pixelHeight] - The height in pixel of the rectangle.\n     * @param {Boolean} [current=false] - Pass true to use the current location; false for target location.\n     * @return {OpenSeadragon.Rect} A rect representing the coordinates in the viewport.\n     */\n    imageToViewportRectangle: function(imageX, imageY, pixelWidth, pixelHeight, current) {\n        var rect = imageX;\n        if (rect instanceof $.Rect) {\n            //they passed a rect instead of individual components\n            current = imageY;\n        } else {\n            rect = new $.Rect(imageX, imageY, pixelWidth, pixelHeight);\n        }\n\n        var coordA = this.imageToViewportCoordinates(rect.getTopLeft(), current);\n        var coordB = this._imageToViewportDelta(rect.width, rect.height, current);\n\n        return new $.Rect(\n            coordA.x,\n            coordA.y,\n            coordB.x,\n            coordB.y,\n            rect.degrees + this.getRotation(current)\n        );\n    },\n\n    /**\n     * Translates from a rectangle which describes a portion of\n     * the viewport in point coordinates to image rectangle coordinates.\n     * This method can be called either by passing X,Y,width,height or an {@link OpenSeadragon.Rect}.\n     * @param {Number|OpenSeadragon.Rect} viewerX - The left coordinate or rectangle in viewport coordinate system.\n     * @param {Number} [viewerY] - The top coordinate in viewport coordinate system.\n     * @param {Number} [pointWidth] - The width in viewport coordinate system.\n     * @param {Number} [pointHeight] - The height in viewport coordinate system.\n     * @param {Boolean} [current=false] - Pass true to use the current location; false for target location.\n     * @return {OpenSeadragon.Rect} A rect representing the coordinates in the image.\n     */\n    viewportToImageRectangle: function( viewerX, viewerY, pointWidth, pointHeight, current ) {\n        var rect = viewerX;\n        if (viewerX instanceof $.Rect) {\n            //they passed a rect instead of individual components\n            current = viewerY;\n        } else {\n            rect = new $.Rect(viewerX, viewerY, pointWidth, pointHeight);\n        }\n\n        var coordA = this.viewportToImageCoordinates(rect.getTopLeft(), current);\n        var coordB = this._viewportToImageDelta(rect.width, rect.height, current);\n\n        return new $.Rect(\n            coordA.x,\n            coordA.y,\n            coordB.x,\n            coordB.y,\n            rect.degrees - this.getRotation(current)\n        );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the viewer element to image\n     * coordinates.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    viewerElementToImageCoordinates: function( pixel ) {\n        var point = this.viewport.pointFromPixel( pixel, true );\n        return this.viewportToImageCoordinates( point );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the image to\n     * viewer element coordinates.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    imageToViewerElementCoordinates: function( pixel ) {\n        var point = this.imageToViewportCoordinates( pixel );\n        return this.viewport.pixelFromPoint( point, true );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the window to image coordinates.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    windowToImageCoordinates: function( pixel ) {\n        var viewerCoordinates = pixel.minus(\n                OpenSeadragon.getElementPosition( this.viewer.element ));\n        return this.viewerElementToImageCoordinates( viewerCoordinates );\n    },\n\n    /**\n     * Convert image coordinates to pixel coordinates relative to the window.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    imageToWindowCoordinates: function( pixel ) {\n        var viewerCoordinates = this.imageToViewerElementCoordinates( pixel );\n        return viewerCoordinates.plus(\n                OpenSeadragon.getElementPosition( this.viewer.element ));\n    },\n\n    // private\n    // Convert rectangle in viewport coordinates to this tiled image point\n    // coordinates (x in [0, 1] and y in [0, aspectRatio])\n    _viewportToTiledImageRectangle: function(rect) {\n        var scale = this._scaleSpring.current.value;\n        rect = rect.rotate(-this.getRotation(true), this._getRotationPoint(true));\n        return new $.Rect(\n            (rect.x - this._xSpring.current.value) / scale,\n            (rect.y - this._ySpring.current.value) / scale,\n            rect.width / scale,\n            rect.height / scale,\n            rect.degrees);\n    },\n\n    /**\n     * Convert a viewport zoom to an image zoom.\n     * Image zoom: ratio of the original image size to displayed image size.\n     * 1 means original image size, 0.5 half size...\n     * Viewport zoom: ratio of the displayed image's width to viewport's width.\n     * 1 means identical width, 2 means image's width is twice the viewport's width...\n     * @function\n     * @param {Number} viewportZoom The viewport zoom\n     * @returns {Number} imageZoom The image zoom\n     */\n    viewportToImageZoom: function( viewportZoom ) {\n        var ratio = this._scaleSpring.current.value *\n                this.viewport._containerInnerSize.x / this.source.dimensions.x;\n        return ratio * viewportZoom;\n    },\n\n    /**\n     * Convert an image zoom to a viewport zoom.\n     * Image zoom: ratio of the original image size to displayed image size.\n     * 1 means original image size, 0.5 half size...\n     * Viewport zoom: ratio of the displayed image's width to viewport's width.\n     * 1 means identical width, 2 means image's width is twice the viewport's width...\n     * Note: not accurate with multi-image.\n     * @function\n     * @param {Number} imageZoom The image zoom\n     * @returns {Number} viewportZoom The viewport zoom\n     */\n    imageToViewportZoom: function( imageZoom ) {\n        var ratio = this._scaleSpring.current.value *\n                this.viewport._containerInnerSize.x / this.source.dimensions.x;\n        return imageZoom / ratio;\n    },\n\n    /**\n     * Sets the TiledImage's position in the world.\n     * @param {OpenSeadragon.Point} position - The new position, in viewport coordinates.\n     * @param {Boolean} [immediately=false] - Whether to animate to the new position or snap immediately.\n     * @fires OpenSeadragon.TiledImage.event:bounds-change\n     */\n    setPosition: function(position, immediately) {\n        var sameTarget = (this._xSpring.target.value === position.x &&\n            this._ySpring.target.value === position.y);\n\n        if (immediately) {\n            if (sameTarget && this._xSpring.current.value === position.x &&\n                    this._ySpring.current.value === position.y) {\n                return;\n            }\n\n            this._xSpring.resetTo(position.x);\n            this._ySpring.resetTo(position.y);\n            this._needsDraw = true;\n        } else {\n            if (sameTarget) {\n                return;\n            }\n\n            this._xSpring.springTo(position.x);\n            this._ySpring.springTo(position.y);\n            this._needsDraw = true;\n        }\n\n        if (!sameTarget) {\n            this._raiseBoundsChange();\n        }\n    },\n\n    /**\n     * Sets the TiledImage's width in the world, adjusting the height to match based on aspect ratio.\n     * @param {Number} width - The new width, in viewport coordinates.\n     * @param {Boolean} [immediately=false] - Whether to animate to the new size or snap immediately.\n     * @fires OpenSeadragon.TiledImage.event:bounds-change\n     */\n    setWidth: function(width, immediately) {\n        this._setScale(width, immediately);\n    },\n\n    /**\n     * Sets the TiledImage's height in the world, adjusting the width to match based on aspect ratio.\n     * @param {Number} height - The new height, in viewport coordinates.\n     * @param {Boolean} [immediately=false] - Whether to animate to the new size or snap immediately.\n     * @fires OpenSeadragon.TiledImage.event:bounds-change\n     */\n    setHeight: function(height, immediately) {\n        this._setScale(height / this.normHeight, immediately);\n    },\n\n    /**\n     * Positions and scales the TiledImage to fit in the specified bounds.\n     * Note: this method fires OpenSeadragon.TiledImage.event:bounds-change\n     * twice\n     * @param {OpenSeadragon.Rect} bounds The bounds to fit the image into.\n     * @param {OpenSeadragon.Placement} [anchor=OpenSeadragon.Placement.CENTER]\n     * How to anchor the image in the bounds.\n     * @param {Boolean} [immediately=false] Whether to animate to the new size\n     * or snap immediately.\n     * @fires OpenSeadragon.TiledImage.event:bounds-change\n     */\n    fitBounds: function(bounds, anchor, immediately) {\n        anchor = anchor || $.Placement.CENTER;\n        var anchorProperties = $.Placement.properties[anchor];\n        var aspectRatio = this.contentAspectX;\n        var xOffset = 0;\n        var yOffset = 0;\n        var displayedWidthRatio = 1;\n        var displayedHeightRatio = 1;\n        if (this._clip) {\n            aspectRatio = this._clip.getAspectRatio();\n            displayedWidthRatio = this._clip.width / this.source.dimensions.x;\n            displayedHeightRatio = this._clip.height / this.source.dimensions.y;\n            if (bounds.getAspectRatio() > aspectRatio) {\n                xOffset = this._clip.x / this._clip.height * bounds.height;\n                yOffset = this._clip.y / this._clip.height * bounds.height;\n            } else {\n                xOffset = this._clip.x / this._clip.width * bounds.width;\n                yOffset = this._clip.y / this._clip.width * bounds.width;\n            }\n        }\n\n        if (bounds.getAspectRatio() > aspectRatio) {\n            // We will have margins on the X axis\n            var height = bounds.height / displayedHeightRatio;\n            var marginLeft = 0;\n            if (anchorProperties.isHorizontallyCentered) {\n                marginLeft = (bounds.width - bounds.height * aspectRatio) / 2;\n            } else if (anchorProperties.isRight) {\n                marginLeft = bounds.width - bounds.height * aspectRatio;\n            }\n            this.setPosition(\n                new $.Point(bounds.x - xOffset + marginLeft, bounds.y - yOffset),\n                immediately);\n            this.setHeight(height, immediately);\n        } else {\n            // We will have margins on the Y axis\n            var width = bounds.width / displayedWidthRatio;\n            var marginTop = 0;\n            if (anchorProperties.isVerticallyCentered) {\n                marginTop = (bounds.height - bounds.width / aspectRatio) / 2;\n            } else if (anchorProperties.isBottom) {\n                marginTop = bounds.height - bounds.width / aspectRatio;\n            }\n            this.setPosition(\n                new $.Point(bounds.x - xOffset, bounds.y - yOffset + marginTop),\n                immediately);\n            this.setWidth(width, immediately);\n        }\n    },\n\n    /**\n     * @returns {OpenSeadragon.Rect|null} The TiledImage's current clip rectangle,\n     * in image pixels, or null if none.\n     */\n    getClip: function() {\n        if (this._clip) {\n            return this._clip.clone();\n        }\n\n        return null;\n    },\n\n    /**\n     * @param {OpenSeadragon.Rect|null} newClip - An area, in image pixels, to clip to\n     * (portions of the image outside of this area will not be visible). Only works on\n     * browsers that support the HTML5 canvas.\n     * @fires OpenSeadragon.TiledImage.event:clip-change\n     */\n    setClip: function(newClip) {\n        $.console.assert(!newClip || newClip instanceof $.Rect,\n            \"[TiledImage.setClip] newClip must be an OpenSeadragon.Rect or null\");\n\n        if (newClip instanceof $.Rect) {\n            this._clip = newClip.clone();\n        } else {\n            this._clip = null;\n        }\n\n        this._needsDraw = true;\n        /**\n         * Raised when the TiledImage's clip is changed.\n         * @event clip-change\n         * @memberOf OpenSeadragon.TiledImage\n         * @type {object}\n         * @property {OpenSeadragon.TiledImage} eventSource - A reference to the\n         * TiledImage which raised the event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent('clip-change');\n    },\n\n    /**\n     * @returns {Number} The TiledImage's current opacity.\n     */\n    getOpacity: function() {\n        return this.opacity;\n    },\n\n    /**\n     * @param {Number} opacity Opacity the tiled image should be drawn at.\n     * @fires OpenSeadragon.TiledImage.event:opacity-change\n     */\n    setOpacity: function(opacity) {\n        if (opacity === this.opacity) {\n            return;\n        }\n\n        this.opacity = opacity;\n        this._needsDraw = true;\n        /**\n         * Raised when the TiledImage's opacity is changed.\n         * @event opacity-change\n         * @memberOf OpenSeadragon.TiledImage\n         * @type {object}\n         * @property {Number} opacity - The new opacity value.\n         * @property {OpenSeadragon.TiledImage} eventSource - A reference to the\n         * TiledImage which raised the event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent('opacity-change', {\n            opacity: this.opacity\n        });\n    },\n\n    /**\n     * @returns {Boolean} whether the tiledImage can load its tiles even when it has zero opacity.\n     */\n    getPreload: function() {\n        return this._preload;\n    },\n\n    /**\n     * Set true to load even when hidden. Set false to block loading when hidden.\n     */\n    setPreload: function(preload) {\n        this._preload = !!preload;\n        this._needsDraw = true;\n    },\n\n    /**\n     * Get the rotation of this tiled image in degrees.\n     * @param {Boolean} [current=false] True for current rotation, false for target.\n     * @returns {Number} the rotation of this tiled image in degrees.\n     */\n    getRotation: function(current) {\n        return current ?\n            this._degreesSpring.current.value :\n            this._degreesSpring.target.value;\n    },\n\n    /**\n     * Set the current rotation of this tiled image in degrees.\n     * @param {Number} degrees the rotation in degrees.\n     * @param {Boolean} [immediately=false] Whether to animate to the new angle\n     * or rotate immediately.\n     * @fires OpenSeadragon.TiledImage.event:bounds-change\n     */\n    setRotation: function(degrees, immediately) {\n        if (this._degreesSpring.target.value === degrees &&\n            this._degreesSpring.isAtTargetValue()) {\n            return;\n        }\n        if (immediately) {\n            this._degreesSpring.resetTo(degrees);\n        } else {\n            this._degreesSpring.springTo(degrees);\n        }\n        this._needsDraw = true;\n        this._raiseBoundsChange();\n    },\n\n    /**\n     * Get the point around which this tiled image is rotated\n     * @private\n     * @param {Boolean} current True for current rotation point, false for target.\n     * @returns {OpenSeadragon.Point}\n     */\n    _getRotationPoint: function(current) {\n        return this.getBoundsNoRotate(current).getCenter();\n    },\n\n    /**\n     * @returns {String} The TiledImage's current compositeOperation.\n     */\n    getCompositeOperation: function() {\n        return this.compositeOperation;\n    },\n\n    /**\n     * @param {String} compositeOperation the tiled image should be drawn with this globalCompositeOperation.\n     * @fires OpenSeadragon.TiledImage.event:composite-operation-change\n     */\n    setCompositeOperation: function(compositeOperation) {\n        if (compositeOperation === this.compositeOperation) {\n            return;\n        }\n\n        this.compositeOperation = compositeOperation;\n        this._needsDraw = true;\n        /**\n         * Raised when the TiledImage's opacity is changed.\n         * @event composite-operation-change\n         * @memberOf OpenSeadragon.TiledImage\n         * @type {object}\n         * @property {String} compositeOperation - The new compositeOperation value.\n         * @property {OpenSeadragon.TiledImage} eventSource - A reference to the\n         * TiledImage which raised the event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent('composite-operation-change', {\n            compositeOperation: this.compositeOperation\n        });\n    },\n\n    // private\n    _setScale: function(scale, immediately) {\n        var sameTarget = (this._scaleSpring.target.value === scale);\n        if (immediately) {\n            if (sameTarget && this._scaleSpring.current.value === scale) {\n                return;\n            }\n\n            this._scaleSpring.resetTo(scale);\n            this._updateForScale();\n            this._needsDraw = true;\n        } else {\n            if (sameTarget) {\n                return;\n            }\n\n            this._scaleSpring.springTo(scale);\n            this._updateForScale();\n            this._needsDraw = true;\n        }\n\n        if (!sameTarget) {\n            this._raiseBoundsChange();\n        }\n    },\n\n    // private\n    _updateForScale: function() {\n        this._worldWidthTarget = this._scaleSpring.target.value;\n        this._worldHeightTarget = this.normHeight * this._scaleSpring.target.value;\n        this._worldWidthCurrent = this._scaleSpring.current.value;\n        this._worldHeightCurrent = this.normHeight * this._scaleSpring.current.value;\n    },\n\n    // private\n    _raiseBoundsChange: function() {\n        /**\n         * Raised when the TiledImage's bounds are changed.\n         * Note that this event is triggered only when the animation target is changed;\n         * not for every frame of animation.\n         * @event bounds-change\n         * @memberOf OpenSeadragon.TiledImage\n         * @type {object}\n         * @property {OpenSeadragon.TiledImage} eventSource - A reference to the\n         * TiledImage which raised the event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent('bounds-change');\n    },\n\n    // private\n    _isBottomItem: function() {\n        return this.viewer.world.getItemAt(0) === this;\n    },\n\n    // private\n    _getLevelsInterval: function() {\n        var lowestLevel = Math.max(\n            this.source.minLevel,\n            Math.floor(Math.log(this.minZoomImageRatio) / Math.log(2))\n        );\n        var currentZeroRatio = this.viewport.deltaPixelsFromPointsNoRotate(\n            this.source.getPixelRatio(0), true).x *\n            this._scaleSpring.current.value;\n        var highestLevel = Math.min(\n            Math.abs(this.source.maxLevel),\n            Math.abs(Math.floor(\n                Math.log(currentZeroRatio / this.minPixelRatio) / Math.log(2)\n            ))\n        );\n\n        // Calculations for the interval of levels to draw\n        // can return invalid intervals; fix that here if necessary\n        highestLevel = Math.max(highestLevel, this.source.minLevel || 0);\n        lowestLevel = Math.min(lowestLevel, highestLevel);\n        return {\n            lowestLevel: lowestLevel,\n            highestLevel: highestLevel\n        };\n    },\n\n    /**\n     * @private\n     * @inner\n     * Pretty much every other line in this needs to be documented so it's clear\n     * how each piece of this routine contributes to the drawing process.  That's\n     * why there are so many TODO's inside this function.\n     */\n    _updateViewport: function() {\n        this._needsDraw = false;\n        this._tilesLoading = 0;\n        this.loadingCoverage = {};\n\n        // Reset tile's internal drawn state\n        while (this.lastDrawn.length > 0) {\n            var tile = this.lastDrawn.pop();\n            tile.beingDrawn = false;\n        }\n\n        var viewport = this.viewport;\n        var drawArea = this._viewportToTiledImageRectangle(\n            viewport.getBoundsWithMargins(true));\n\n        if (!this.wrapHorizontal && !this.wrapVertical) {\n            var tiledImageBounds = this._viewportToTiledImageRectangle(\n                this.getClippedBounds(true));\n            drawArea = drawArea.intersection(tiledImageBounds);\n            if (drawArea === null) {\n                return;\n            }\n        }\n\n        var levelsInterval = this._getLevelsInterval();\n        var lowestLevel = levelsInterval.lowestLevel;\n        var highestLevel = levelsInterval.highestLevel;\n        var bestTile = null;\n        var haveDrawn = false;\n        var currentTime = $.now();\n\n        // Update any level that will be drawn\n        for (var level = highestLevel; level >= lowestLevel; level--) {\n            var drawLevel = false;\n\n            //Avoid calculations for draw if we have already drawn this\n            var currentRenderPixelRatio = viewport.deltaPixelsFromPointsNoRotate(\n                this.source.getPixelRatio(level),\n                true\n            ).x * this._scaleSpring.current.value;\n\n            if (level === lowestLevel ||\n                (!haveDrawn && currentRenderPixelRatio >= this.minPixelRatio)) {\n                drawLevel = true;\n                haveDrawn = true;\n            } else if (!haveDrawn) {\n                continue;\n            }\n\n            //Perform calculations for draw if we haven't drawn this\n            var targetRenderPixelRatio = viewport.deltaPixelsFromPointsNoRotate(\n                this.source.getPixelRatio(level),\n                false\n            ).x * this._scaleSpring.current.value;\n\n            var targetZeroRatio = viewport.deltaPixelsFromPointsNoRotate(\n                this.source.getPixelRatio(\n                    Math.max(\n                        this.source.getClosestLevel(),\n                        0\n                    )\n                ),\n                false\n            ).x * this._scaleSpring.current.value;\n\n            var optimalRatio = this.immediateRender ? 1 : targetZeroRatio;\n            var levelOpacity = Math.min(1, (currentRenderPixelRatio - 0.5) / 0.5);\n            var levelVisibility = optimalRatio / Math.abs(\n                optimalRatio - targetRenderPixelRatio\n            );\n\n            // Update the level and keep track of 'best' tile to load\n            bestTile = updateLevel(\n                this,\n                haveDrawn,\n                drawLevel,\n                level,\n                levelOpacity,\n                levelVisibility,\n                drawArea,\n                currentTime,\n                bestTile\n            );\n\n            // Stop the loop if lower-res tiles would all be covered by\n            // already drawn tiles\n            if (providesCoverage(this.coverage, level)) {\n                break;\n            }\n        }\n\n        // Perform the actual drawing\n        drawTiles(this, this.lastDrawn);\n\n        // Load the new 'best' tile\n        if (bestTile && !bestTile.context2D) {\n            loadTile(this, bestTile, currentTime);\n            this._needsDraw = true;\n            this._setFullyLoaded(false);\n        } else {\n            this._setFullyLoaded(this._tilesLoading === 0);\n        }\n    },\n\n    // private\n    _getCornerTiles: function(level, topLeftBound, bottomRightBound) {\n        var leftX;\n        var rightX;\n        if (this.wrapHorizontal) {\n            leftX = $.positiveModulo(topLeftBound.x, 1);\n            rightX = $.positiveModulo(bottomRightBound.x, 1);\n        } else {\n            leftX = Math.max(0, topLeftBound.x);\n            rightX = Math.min(1, bottomRightBound.x);\n        }\n        var topY;\n        var bottomY;\n        var aspectRatio = 1 / this.source.aspectRatio;\n        if (this.wrapVertical) {\n            topY = $.positiveModulo(topLeftBound.y, aspectRatio);\n            bottomY = $.positiveModulo(bottomRightBound.y, aspectRatio);\n        } else {\n            topY = Math.max(0, topLeftBound.y);\n            bottomY = Math.min(aspectRatio, bottomRightBound.y);\n        }\n\n        var topLeftTile = this.source.getTileAtPoint(level, new $.Point(leftX, topY));\n        var bottomRightTile = this.source.getTileAtPoint(level, new $.Point(rightX, bottomY));\n        var numTiles  = this.source.getNumTiles(level);\n\n        if (this.wrapHorizontal) {\n            topLeftTile.x += numTiles.x * Math.floor(topLeftBound.x);\n            bottomRightTile.x += numTiles.x * Math.floor(bottomRightBound.x);\n        }\n        if (this.wrapVertical) {\n            topLeftTile.y += numTiles.y * Math.floor(topLeftBound.y / aspectRatio);\n            bottomRightTile.y += numTiles.y * Math.floor(bottomRightBound.y / aspectRatio);\n        }\n\n        return {\n            topLeft: topLeftTile,\n            bottomRight: bottomRightTile,\n        };\n    }\n});\n\n/**\n * @private\n * @inner\n * Updates all tiles at a given resolution level.\n * @param {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n * @param {Boolean} haveDrawn\n * @param {Boolean} drawLevel\n * @param {Number} level\n * @param {Number} levelOpacity\n * @param {Number} levelVisibility\n * @param {OpenSeadragon.Point} viewportTL - The index of the most top-left visible tile.\n * @param {OpenSeadragon.Point} viewportBR - The index of the most bottom-right visible tile.\n * @param {Number} currentTime\n * @param {OpenSeadragon.Tile} best - The current \"best\" tile to draw.\n */\nfunction updateLevel(tiledImage, haveDrawn, drawLevel, level, levelOpacity,\n    levelVisibility, drawArea, currentTime, best) {\n\n    var topLeftBound = drawArea.getBoundingBox().getTopLeft();\n    var bottomRightBound = drawArea.getBoundingBox().getBottomRight();\n\n    if (tiledImage.viewer) {\n        /**\n         * <em>- Needs documentation -</em>\n         *\n         * @event update-level\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n         * @property {Object} havedrawn\n         * @property {Object} level\n         * @property {Object} opacity\n         * @property {Object} visibility\n         * @property {OpenSeadragon.Rect} drawArea\n         * @property {Object} topleft deprecated, use drawArea instead\n         * @property {Object} bottomright deprecated, use drawArea instead\n         * @property {Object} currenttime\n         * @property {Object} best\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        tiledImage.viewer.raiseEvent('update-level', {\n            tiledImage: tiledImage,\n            havedrawn: haveDrawn,\n            level: level,\n            opacity: levelOpacity,\n            visibility: levelVisibility,\n            drawArea: drawArea,\n            topleft: topLeftBound,\n            bottomright: bottomRightBound,\n            currenttime: currentTime,\n            best: best\n        });\n    }\n\n    resetCoverage(tiledImage.coverage, level);\n    resetCoverage(tiledImage.loadingCoverage, level);\n\n    //OK, a new drawing so do your calculations\n    var cornerTiles = tiledImage._getCornerTiles(level, topLeftBound, bottomRightBound);\n    var topLeftTile = cornerTiles.topLeft;\n    var bottomRightTile = cornerTiles.bottomRight;\n    var numberOfTiles  = tiledImage.source.getNumTiles(level);\n\n    var viewportCenter = tiledImage.viewport.pixelFromPoint(\n        tiledImage.viewport.getCenter());\n    for (var x = topLeftTile.x; x <= bottomRightTile.x; x++) {\n        for (var y = topLeftTile.y; y <= bottomRightTile.y; y++) {\n\n            // Optimisation disabled with wrapping because getTileBounds does not\n            // work correctly with x and y outside of the number of tiles\n            if (!tiledImage.wrapHorizontal && !tiledImage.wrapVertical) {\n                var tileBounds = tiledImage.source.getTileBounds(level, x, y);\n                if (drawArea.intersection(tileBounds) === null) {\n                    // This tile is outside of the viewport, no need to draw it\n                    continue;\n                }\n            }\n\n            best = updateTile(\n                tiledImage,\n                drawLevel,\n                haveDrawn,\n                x, y,\n                level,\n                levelOpacity,\n                levelVisibility,\n                viewportCenter,\n                numberOfTiles,\n                currentTime,\n                best\n            );\n\n        }\n    }\n\n    return best;\n}\n\n/**\n * @private\n * @inner\n * Update a single tile at a particular resolution level.\n * @param {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n * @param {Boolean} haveDrawn\n * @param {Boolean} drawLevel\n * @param {Number} x\n * @param {Number} y\n * @param {Number} level\n * @param {Number} levelOpacity\n * @param {Number} levelVisibility\n * @param {OpenSeadragon.Point} viewportCenter\n * @param {Number} numberOfTiles\n * @param {Number} currentTime\n * @param {OpenSeadragon.Tile} best - The current \"best\" tile to draw.\n */\nfunction updateTile( tiledImage, haveDrawn, drawLevel, x, y, level, levelOpacity, levelVisibility, viewportCenter, numberOfTiles, currentTime, best){\n\n    var tile = getTile(\n            x, y,\n            level,\n            tiledImage,\n            tiledImage.source,\n            tiledImage.tilesMatrix,\n            currentTime,\n            numberOfTiles,\n            tiledImage._worldWidthCurrent,\n            tiledImage._worldHeightCurrent\n        ),\n        drawTile = drawLevel;\n\n    if( tiledImage.viewer ){\n        /**\n         * <em>- Needs documentation -</em>\n         *\n         * @event update-tile\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n         * @property {OpenSeadragon.Tile} tile\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        tiledImage.viewer.raiseEvent( 'update-tile', {\n            tiledImage: tiledImage,\n            tile: tile\n        });\n    }\n\n    setCoverage( tiledImage.coverage, level, x, y, false );\n\n    var loadingCoverage = tile.loaded || tile.loading || isCovered(tiledImage.loadingCoverage, level, x, y);\n    setCoverage(tiledImage.loadingCoverage, level, x, y, loadingCoverage);\n\n    if ( !tile.exists ) {\n        return best;\n    }\n\n    if ( haveDrawn && !drawTile ) {\n        if ( isCovered( tiledImage.coverage, level, x, y ) ) {\n            setCoverage( tiledImage.coverage, level, x, y, true );\n        } else {\n            drawTile = true;\n        }\n    }\n\n    if ( !drawTile ) {\n        return best;\n    }\n\n    positionTile(\n        tile,\n        tiledImage.source.tileOverlap,\n        tiledImage.viewport,\n        viewportCenter,\n        levelVisibility,\n        tiledImage\n    );\n\n    if (!tile.loaded) {\n        if (tile.context2D) {\n            setTileLoaded(tiledImage, tile);\n        } else {\n            var imageRecord = tiledImage._tileCache.getImageRecord(tile.cacheKey);\n            if (imageRecord) {\n                var image = imageRecord.getImage();\n                setTileLoaded(tiledImage, tile, image);\n            }\n        }\n    }\n\n    if ( tile.loaded ) {\n        var needsDraw = blendTile(\n            tiledImage,\n            tile,\n            x, y,\n            level,\n            levelOpacity,\n            currentTime\n        );\n\n        if ( needsDraw ) {\n            tiledImage._needsDraw = true;\n        }\n    } else if ( tile.loading ) {\n        // the tile is already in the download queue\n        tiledImage._tilesLoading++;\n    } else if (!loadingCoverage) {\n        best = compareTiles( best, tile );\n    }\n\n    return best;\n}\n\n/**\n * @private\n * @inner\n * Obtains a tile at the given location.\n * @param {Number} x\n * @param {Number} y\n * @param {Number} level\n * @param {OpenSeadragon.TiledImage} tiledImage\n * @param {OpenSeadragon.TileSource} tileSource\n * @param {Object} tilesMatrix - A '3d' dictionary [level][x][y] --> Tile.\n * @param {Number} time\n * @param {Number} numTiles\n * @param {Number} worldWidth\n * @param {Number} worldHeight\n * @returns {OpenSeadragon.Tile}\n */\nfunction getTile(\n    x, y,\n    level,\n    tiledImage,\n    tileSource,\n    tilesMatrix,\n    time,\n    numTiles,\n    worldWidth,\n    worldHeight\n) {\n    var xMod,\n        yMod,\n        bounds,\n        sourceBounds,\n        exists,\n        url,\n        ajaxHeaders,\n        context2D,\n        tile;\n\n    if ( !tilesMatrix[ level ] ) {\n        tilesMatrix[ level ] = {};\n    }\n    if ( !tilesMatrix[ level ][ x ] ) {\n        tilesMatrix[ level ][ x ] = {};\n    }\n\n    if ( !tilesMatrix[ level ][ x ][ y ] ) {\n        xMod    = ( numTiles.x + ( x % numTiles.x ) ) % numTiles.x;\n        yMod    = ( numTiles.y + ( y % numTiles.y ) ) % numTiles.y;\n        bounds  = tileSource.getTileBounds( level, xMod, yMod );\n        sourceBounds = tileSource.getTileBounds( level, xMod, yMod, true );\n        exists  = tileSource.tileExists( level, xMod, yMod );\n        url     = tileSource.getTileUrl( level, xMod, yMod );\n\n        // Headers are only applicable if loadTilesWithAjax is set\n        if (tiledImage.loadTilesWithAjax) {\n            ajaxHeaders = tileSource.getTileAjaxHeaders( level, xMod, yMod );\n            // Combine tile AJAX headers with tiled image AJAX headers (if applicable)\n            if ($.isPlainObject(tiledImage.ajaxHeaders)) {\n                ajaxHeaders = $.extend({}, tiledImage.ajaxHeaders, ajaxHeaders);\n            }\n        } else {\n            ajaxHeaders = null;\n        }\n\n        context2D = tileSource.getContext2D ?\n            tileSource.getContext2D(level, xMod, yMod) : undefined;\n\n        bounds.x += ( x - xMod ) / numTiles.x;\n        bounds.y += (worldHeight / worldWidth) * (( y - yMod ) / numTiles.y);\n\n        tile = new $.Tile(\n            level,\n            x,\n            y,\n            bounds,\n            exists,\n            url,\n            context2D,\n            tiledImage.loadTilesWithAjax,\n            ajaxHeaders,\n            sourceBounds\n        );\n\n        if (xMod === numTiles.x - 1) {\n            tile.isRightMost = true;\n        }\n\n        if (yMod === numTiles.y - 1) {\n            tile.isBottomMost = true;\n        }\n\n        tilesMatrix[ level ][ x ][ y ] = tile;\n    }\n\n    tile = tilesMatrix[ level ][ x ][ y ];\n    tile.lastTouchTime = time;\n\n    return tile;\n}\n\n/**\n * @private\n * @inner\n * Dispatch a job to the ImageLoader to load the Image for a Tile.\n * @param {OpenSeadragon.TiledImage} tiledImage\n * @param {OpenSeadragon.Tile} tile\n * @param {Number} time\n */\nfunction loadTile( tiledImage, tile, time ) {\n    tile.loading = true;\n    tiledImage._imageLoader.addJob({\n        src: tile.url,\n        loadWithAjax: tile.loadWithAjax,\n        ajaxHeaders: tile.ajaxHeaders,\n        crossOriginPolicy: tiledImage.crossOriginPolicy,\n        ajaxWithCredentials: tiledImage.ajaxWithCredentials,\n        callback: function( image, errorMsg, tileRequest ){\n            onTileLoad( tiledImage, tile, time, image, errorMsg, tileRequest );\n        },\n        abort: function() {\n            tile.loading = false;\n        }\n    });\n}\n\n/**\n * @private\n * @inner\n * Callback fired when a Tile's Image finished downloading.\n * @param {OpenSeadragon.TiledImage} tiledImage\n * @param {OpenSeadragon.Tile} tile\n * @param {Number} time\n * @param {Image} image\n * @param {String} errorMsg\n * @param {XMLHttpRequest} tileRequest\n */\nfunction onTileLoad( tiledImage, tile, time, image, errorMsg, tileRequest ) {\n    if ( !image ) {\n        $.console.log( \"Tile %s failed to load: %s - error: %s\", tile, tile.url, errorMsg );\n        /**\n         * Triggered when a tile fails to load.\n         *\n         * @event tile-load-failed\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Tile} tile - The tile that failed to load.\n         * @property {OpenSeadragon.TiledImage} tiledImage - The tiled image the tile belongs to.\n         * @property {number} time - The time in milliseconds when the tile load began.\n         * @property {string} message - The error message.\n         * @property {XMLHttpRequest} tileRequest - The XMLHttpRequest used to load the tile if available.\n         */\n        tiledImage.viewer.raiseEvent(\"tile-load-failed\", {\n            tile: tile,\n            tiledImage: tiledImage,\n            time: time,\n            message: errorMsg,\n            tileRequest: tileRequest\n        });\n        tile.loading = false;\n        tile.exists = false;\n        return;\n    }\n\n    if ( time < tiledImage.lastResetTime ) {\n        $.console.log( \"Ignoring tile %s loaded before reset: %s\", tile, tile.url );\n        tile.loading = false;\n        return;\n    }\n\n    var finish = function() {\n        var cutoff = tiledImage.source.getClosestLevel();\n        setTileLoaded(tiledImage, tile, image, cutoff, tileRequest);\n    };\n\n    // Check if we're mid-update; this can happen on IE8 because image load events for\n    // cached images happen immediately there\n    if ( !tiledImage._midDraw ) {\n        finish();\n    } else {\n        // Wait until after the update, in case caching unloads any tiles\n        window.setTimeout( finish, 1);\n    }\n}\n\n/**\n * @private\n * @inner\n * @param {OpenSeadragon.TiledImage} tiledImage\n * @param {OpenSeadragon.Tile} tile\n * @param {Image} image\n * @param {Number} cutoff\n */\nfunction setTileLoaded(tiledImage, tile, image, cutoff, tileRequest) {\n    var increment = 0;\n\n    function getCompletionCallback() {\n        increment++;\n        return completionCallback;\n    }\n\n    function completionCallback() {\n        increment--;\n        if (increment === 0) {\n            tile.loading = false;\n            tile.loaded = true;\n            if (!tile.context2D) {\n                tiledImage._tileCache.cacheTile({\n                    image: image,\n                    tile: tile,\n                    cutoff: cutoff,\n                    tiledImage: tiledImage\n                });\n            }\n            tiledImage._needsDraw = true;\n        }\n    }\n\n    /**\n     * Triggered when a tile has just been loaded in memory. That means that the\n     * image has been downloaded and can be modified before being drawn to the canvas.\n     *\n     * @event tile-loaded\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {Image} image - The image of the tile.\n     * @property {OpenSeadragon.TiledImage} tiledImage - The tiled image of the loaded tile.\n     * @property {OpenSeadragon.Tile} tile - The tile which has been loaded.\n     * @property {XMLHttpRequest} tiledImage - The AJAX request that loaded this tile (if applicable).\n     * @property {function} getCompletionCallback - A function giving a callback to call\n     * when the asynchronous processing of the image is done. The image will be\n     * marked as entirely loaded when the callback has been called once for each\n     * call to getCompletionCallback.\n     */\n    tiledImage.viewer.raiseEvent(\"tile-loaded\", {\n        tile: tile,\n        tiledImage: tiledImage,\n        tileRequest: tileRequest,\n        image: image,\n        getCompletionCallback: getCompletionCallback\n    });\n    // In case the completion callback is never called, we at least force it once.\n    getCompletionCallback()();\n}\n\n/**\n * @private\n * @inner\n * @param {OpenSeadragon.Tile} tile\n * @param {Boolean} overlap\n * @param {OpenSeadragon.Viewport} viewport\n * @param {OpenSeadragon.Point} viewportCenter\n * @param {Number} levelVisibility\n * @param {OpenSeadragon.TiledImage} tiledImage\n */\nfunction positionTile( tile, overlap, viewport, viewportCenter, levelVisibility, tiledImage ){\n    var boundsTL     = tile.bounds.getTopLeft();\n\n    boundsTL.x *= tiledImage._scaleSpring.current.value;\n    boundsTL.y *= tiledImage._scaleSpring.current.value;\n    boundsTL.x += tiledImage._xSpring.current.value;\n    boundsTL.y += tiledImage._ySpring.current.value;\n\n    var boundsSize   = tile.bounds.getSize();\n\n    boundsSize.x *= tiledImage._scaleSpring.current.value;\n    boundsSize.y *= tiledImage._scaleSpring.current.value;\n\n    var positionC = viewport.pixelFromPointNoRotate(boundsTL, true),\n        positionT = viewport.pixelFromPointNoRotate(boundsTL, false),\n        sizeC = viewport.deltaPixelsFromPointsNoRotate(boundsSize, true),\n        sizeT = viewport.deltaPixelsFromPointsNoRotate(boundsSize, false),\n        tileCenter = positionT.plus( sizeT.divide( 2 ) ),\n        tileSquaredDistance = viewportCenter.squaredDistanceTo( tileCenter );\n\n    if ( !overlap ) {\n        sizeC = sizeC.plus( new $.Point( 1, 1 ) );\n    }\n\n    if (tile.isRightMost && tiledImage.wrapHorizontal) {\n        sizeC.x += 0.75; // Otherwise Firefox and Safari show seams\n    }\n\n    if (tile.isBottomMost && tiledImage.wrapVertical) {\n        sizeC.y += 0.75; // Otherwise Firefox and Safari show seams\n    }\n\n    tile.position   = positionC;\n    tile.size       = sizeC;\n    tile.squaredDistance   = tileSquaredDistance;\n    tile.visibility = levelVisibility;\n}\n\n/**\n * @private\n * @inner\n * Updates the opacity of a tile according to the time it has been on screen\n * to perform a fade-in.\n * Updates coverage once a tile is fully opaque.\n * Returns whether the fade-in has completed.\n *\n * @param {OpenSeadragon.TiledImage} tiledImage\n * @param {OpenSeadragon.Tile} tile\n * @param {Number} x\n * @param {Number} y\n * @param {Number} level\n * @param {Number} levelOpacity\n * @param {Number} currentTime\n * @returns {Boolean}\n */\nfunction blendTile( tiledImage, tile, x, y, level, levelOpacity, currentTime ){\n    var blendTimeMillis = 1000 * tiledImage.blendTime,\n        deltaTime,\n        opacity;\n\n    if ( !tile.blendStart ) {\n        tile.blendStart = currentTime;\n    }\n\n    deltaTime   = currentTime - tile.blendStart;\n    opacity     = blendTimeMillis ? Math.min( 1, deltaTime / ( blendTimeMillis ) ) : 1;\n\n    if ( tiledImage.alwaysBlend ) {\n        opacity *= levelOpacity;\n    }\n\n    tile.opacity = opacity;\n\n    tiledImage.lastDrawn.push( tile );\n\n    if ( opacity === 1 ) {\n        setCoverage( tiledImage.coverage, level, x, y, true );\n        tiledImage._hasOpaqueTile = true;\n    } else if ( deltaTime < blendTimeMillis ) {\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * @private\n * @inner\n * Returns true if the given tile provides coverage to lower-level tiles of\n * lower resolution representing the same content. If neither x nor y is\n * given, returns true if the entire visible level provides coverage.\n *\n * Note that out-of-bounds tiles provide coverage in this sense, since\n * there's no content that they would need to cover. Tiles at non-existent\n * levels that are within the image bounds, however, do not.\n *\n * @param {Object} coverage - A '3d' dictionary [level][x][y] --> Boolean.\n * @param {Number} level - The resolution level of the tile.\n * @param {Number} x - The X position of the tile.\n * @param {Number} y - The Y position of the tile.\n * @returns {Boolean}\n */\nfunction providesCoverage( coverage, level, x, y ) {\n    var rows,\n        cols,\n        i, j;\n\n    if ( !coverage[ level ] ) {\n        return false;\n    }\n\n    if ( x === undefined || y === undefined ) {\n        rows = coverage[ level ];\n        for ( i in rows ) {\n            if ( rows.hasOwnProperty( i ) ) {\n                cols = rows[ i ];\n                for ( j in cols ) {\n                    if ( cols.hasOwnProperty( j ) && !cols[ j ] ) {\n                        return false;\n                    }\n                }\n            }\n        }\n\n        return true;\n    }\n\n    return (\n        coverage[ level ][ x] === undefined ||\n        coverage[ level ][ x ][ y ] === undefined ||\n        coverage[ level ][ x ][ y ] === true\n    );\n}\n\n/**\n * @private\n * @inner\n * Returns true if the given tile is completely covered by higher-level\n * tiles of higher resolution representing the same content. If neither x\n * nor y is given, returns true if the entire visible level is covered.\n *\n * @param {Object} coverage - A '3d' dictionary [level][x][y] --> Boolean.\n * @param {Number} level - The resolution level of the tile.\n * @param {Number} x - The X position of the tile.\n * @param {Number} y - The Y position of the tile.\n * @returns {Boolean}\n */\nfunction isCovered( coverage, level, x, y ) {\n    if ( x === undefined || y === undefined ) {\n        return providesCoverage( coverage, level + 1 );\n    } else {\n        return (\n             providesCoverage( coverage, level + 1, 2 * x, 2 * y ) &&\n             providesCoverage( coverage, level + 1, 2 * x, 2 * y + 1 ) &&\n             providesCoverage( coverage, level + 1, 2 * x + 1, 2 * y ) &&\n             providesCoverage( coverage, level + 1, 2 * x + 1, 2 * y + 1 )\n        );\n    }\n}\n\n/**\n * @private\n * @inner\n * Sets whether the given tile provides coverage or not.\n *\n * @param {Object} coverage - A '3d' dictionary [level][x][y] --> Boolean.\n * @param {Number} level - The resolution level of the tile.\n * @param {Number} x - The X position of the tile.\n * @param {Number} y - The Y position of the tile.\n * @param {Boolean} covers - Whether the tile provides coverage.\n */\nfunction setCoverage( coverage, level, x, y, covers ) {\n    if ( !coverage[ level ] ) {\n        $.console.warn(\n            \"Setting coverage for a tile before its level's coverage has been reset: %s\",\n            level\n        );\n        return;\n    }\n\n    if ( !coverage[ level ][ x ] ) {\n        coverage[ level ][ x ] = {};\n    }\n\n    coverage[ level ][ x ][ y ] = covers;\n}\n\n/**\n * @private\n * @inner\n * Resets coverage information for the given level. This should be called\n * after every draw routine. Note that at the beginning of the next draw\n * routine, coverage for every visible tile should be explicitly set.\n *\n * @param {Object} coverage - A '3d' dictionary [level][x][y] --> Boolean.\n * @param {Number} level - The resolution level of tiles to completely reset.\n */\nfunction resetCoverage( coverage, level ) {\n    coverage[ level ] = {};\n}\n\n/**\n * @private\n * @inner\n * Determines whether the 'last best' tile for the area is better than the\n * tile in question.\n *\n * @param {OpenSeadragon.Tile} previousBest\n * @param {OpenSeadragon.Tile} tile\n * @returns {OpenSeadragon.Tile} The new best tile.\n */\nfunction compareTiles( previousBest, tile ) {\n    if ( !previousBest ) {\n        return tile;\n    }\n\n    if ( tile.visibility > previousBest.visibility ) {\n        return tile;\n    } else if ( tile.visibility == previousBest.visibility ) {\n        if ( tile.squaredDistance < previousBest.squaredDistance ) {\n            return tile;\n        }\n    }\n\n    return previousBest;\n}\n\n/**\n * @private\n * @inner\n * Draws a TiledImage.\n * @param {OpenSeadragon.TiledImage} tiledImage\n * @param {OpenSeadragon.Tile[]} lastDrawn - An unordered list of Tiles drawn last frame.\n */\nfunction drawTiles( tiledImage, lastDrawn ) {\n    if (tiledImage.opacity === 0 || (lastDrawn.length === 0 && !tiledImage.placeholderFillStyle)) {\n        return;\n    }\n\n    var tile = lastDrawn[0];\n    var useSketch;\n\n    if (tile) {\n        useSketch = tiledImage.opacity < 1 ||\n            (tiledImage.compositeOperation &&\n                tiledImage.compositeOperation !== 'source-over') ||\n            (!tiledImage._isBottomItem() && tile._hasTransparencyChannel());\n    }\n\n    var sketchScale;\n    var sketchTranslate;\n\n    var zoom = tiledImage.viewport.getZoom(true);\n    var imageZoom = tiledImage.viewportToImageZoom(zoom);\n\n    if (lastDrawn.length > 1 &&\n        imageZoom > tiledImage.smoothTileEdgesMinZoom &&\n        !tiledImage.iOSDevice &&\n        tiledImage.getRotation(true) % 360 === 0 && // TODO: support tile edge smoothing with tiled image rotation.\n        $.supportsCanvas) {\n        // When zoomed in a lot (>100%) the tile edges are visible.\n        // So we have to composite them at ~100% and scale them up together.\n        // Note: Disabled on iOS devices per default as it causes a native crash\n        useSketch = true;\n        sketchScale = tile.getScaleForEdgeSmoothing();\n        sketchTranslate = tile.getTranslationForEdgeSmoothing(sketchScale,\n            tiledImage._drawer.getCanvasSize(false),\n            tiledImage._drawer.getCanvasSize(true));\n    }\n\n    var bounds;\n    if (useSketch) {\n        if (!sketchScale) {\n            // Except when edge smoothing, we only clean the part of the\n            // sketch canvas we are going to use for performance reasons.\n            bounds = tiledImage.viewport.viewportToViewerElementRectangle(\n                tiledImage.getClippedBounds(true))\n                .getIntegerBoundingBox()\n                .times($.pixelDensityRatio);\n\n            if(tiledImage._drawer.viewer.viewport.getFlip()) {\n              if (tiledImage.viewport.degrees !== 0 || tiledImage.getRotation(true) % 360 !== 0){\n                bounds.x = tiledImage._drawer.viewer.container.clientWidth - (bounds.x + bounds.width);\n              }\n            }\n        }\n        tiledImage._drawer._clear(true, bounds);\n    }\n\n    // When scaling, we must rotate only when blending the sketch canvas to\n    // avoid interpolation\n    if (!sketchScale) {\n        if (tiledImage.viewport.degrees !== 0) {\n            tiledImage._drawer._offsetForRotation({\n                degrees: tiledImage.viewport.degrees,\n                useSketch: useSketch\n            });\n        }\n        if (tiledImage.getRotation(true) % 360 !== 0) {\n            tiledImage._drawer._offsetForRotation({\n                degrees: tiledImage.getRotation(true),\n                point: tiledImage.viewport.pixelFromPointNoRotate(\n                    tiledImage._getRotationPoint(true), true),\n                useSketch: useSketch\n            });\n        }\n\n        if (tiledImage.viewport.degrees === 0 && tiledImage.getRotation(true) % 360 === 0){\n          if(tiledImage._drawer.viewer.viewport.getFlip()) {\n              tiledImage._drawer._flip();\n          }\n        }\n    }\n\n    var usedClip = false;\n    if ( tiledImage._clip ) {\n        tiledImage._drawer.saveContext(useSketch);\n\n        var box = tiledImage.imageToViewportRectangle(tiledImage._clip, true);\n        box = box.rotate(-tiledImage.getRotation(true), tiledImage._getRotationPoint(true));\n        var clipRect = tiledImage._drawer.viewportToDrawerRectangle(box);\n        if (sketchScale) {\n            clipRect = clipRect.times(sketchScale);\n        }\n        if (sketchTranslate) {\n            clipRect = clipRect.translate(sketchTranslate);\n        }\n        tiledImage._drawer.setClip(clipRect, useSketch);\n\n        usedClip = true;\n    }\n\n    if ( tiledImage.placeholderFillStyle && tiledImage._hasOpaqueTile === false ) {\n        var placeholderRect = tiledImage._drawer.viewportToDrawerRectangle(tiledImage.getBounds(true));\n        if (sketchScale) {\n            placeholderRect = placeholderRect.times(sketchScale);\n        }\n        if (sketchTranslate) {\n            placeholderRect = placeholderRect.translate(sketchTranslate);\n        }\n\n        var fillStyle = null;\n        if ( typeof tiledImage.placeholderFillStyle === \"function\" ) {\n            fillStyle = tiledImage.placeholderFillStyle(tiledImage, tiledImage._drawer.context);\n        }\n        else {\n            fillStyle = tiledImage.placeholderFillStyle;\n        }\n\n        tiledImage._drawer.drawRectangle(placeholderRect, fillStyle, useSketch);\n    }\n\n    for (var i = lastDrawn.length - 1; i >= 0; i--) {\n        tile = lastDrawn[ i ];\n        tiledImage._drawer.drawTile( tile, tiledImage._drawingHandler, useSketch, sketchScale, sketchTranslate );\n        tile.beingDrawn = true;\n\n        if( tiledImage.viewer ){\n            /**\n             * <em>- Needs documentation -</em>\n             *\n             * @event tile-drawn\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n             * @property {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n             * @property {OpenSeadragon.Tile} tile\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            tiledImage.viewer.raiseEvent( 'tile-drawn', {\n                tiledImage: tiledImage,\n                tile: tile\n            });\n        }\n    }\n\n    if ( usedClip ) {\n        tiledImage._drawer.restoreContext( useSketch );\n    }\n\n    if (!sketchScale) {\n        if (tiledImage.getRotation(true) % 360 !== 0) {\n            tiledImage._drawer._restoreRotationChanges(useSketch);\n        }\n        if (tiledImage.viewport.degrees !== 0) {\n            tiledImage._drawer._restoreRotationChanges(useSketch);\n        }\n    }\n\n    if (useSketch) {\n        if (sketchScale) {\n            if (tiledImage.viewport.degrees !== 0) {\n                tiledImage._drawer._offsetForRotation({\n                    degrees: tiledImage.viewport.degrees,\n                    useSketch: false\n                });\n            }\n            if (tiledImage.getRotation(true) % 360 !== 0) {\n                tiledImage._drawer._offsetForRotation({\n                    degrees: tiledImage.getRotation(true),\n                    point: tiledImage.viewport.pixelFromPointNoRotate(\n                        tiledImage._getRotationPoint(true), true),\n                    useSketch: false\n                });\n            }\n        }\n        tiledImage._drawer.blendSketch({\n            opacity: tiledImage.opacity,\n            scale: sketchScale,\n            translate: sketchTranslate,\n            compositeOperation: tiledImage.compositeOperation,\n            bounds: bounds\n        });\n        if (sketchScale) {\n            if (tiledImage.getRotation(true) % 360 !== 0) {\n                tiledImage._drawer._restoreRotationChanges(false);\n            }\n            if (tiledImage.viewport.degrees !== 0) {\n                tiledImage._drawer._restoreRotationChanges(false);\n            }\n        }\n    }\n\n    if (!sketchScale) {\n      if (tiledImage.viewport.degrees === 0 && tiledImage.getRotation(true) % 360 === 0){\n        if(tiledImage._drawer.viewer.viewport.getFlip()) {\n            tiledImage._drawer._flip();\n        }\n      }\n    }\n\n    drawDebugInfo( tiledImage, lastDrawn );\n}\n\n/**\n * @private\n * @inner\n * Draws special debug information for a TiledImage if in debug mode.\n * @param {OpenSeadragon.TiledImage} tiledImage\n * @param {OpenSeadragon.Tile[]} lastDrawn - An unordered list of Tiles drawn last frame.\n */\nfunction drawDebugInfo( tiledImage, lastDrawn ) {\n    if( tiledImage.debugMode ) {\n        for ( var i = lastDrawn.length - 1; i >= 0; i-- ) {\n            var tile = lastDrawn[ i ];\n            try {\n                tiledImage._drawer.drawDebugInfo(\n                    tile, lastDrawn.length, i, tiledImage);\n            } catch(e) {\n                $.console.error(e);\n            }\n        }\n    }\n}\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - TileCache\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n// private class\nvar TileRecord = function( options ) {\n    $.console.assert( options, \"[TileCache.cacheTile] options is required\" );\n    $.console.assert( options.tile, \"[TileCache.cacheTile] options.tile is required\" );\n    $.console.assert( options.tiledImage, \"[TileCache.cacheTile] options.tiledImage is required\" );\n    this.tile = options.tile;\n    this.tiledImage = options.tiledImage;\n};\n\n// private class\nvar ImageRecord = function(options) {\n    $.console.assert( options, \"[ImageRecord] options is required\" );\n    $.console.assert( options.image, \"[ImageRecord] options.image is required\" );\n    this._image = options.image;\n    this._tiles = [];\n};\n\nImageRecord.prototype = {\n    destroy: function() {\n        this._image = null;\n        this._renderedContext = null;\n        this._tiles = null;\n    },\n\n    getImage: function() {\n        return this._image;\n    },\n\n    getRenderedContext: function() {\n        if (!this._renderedContext) {\n            var canvas = document.createElement( 'canvas' );\n            canvas.width = this._image.width;\n            canvas.height = this._image.height;\n            this._renderedContext = canvas.getContext('2d');\n            this._renderedContext.drawImage( this._image, 0, 0 );\n            //since we are caching the prerendered image on a canvas\n            //allow the image to not be held in memory\n            this._image = null;\n        }\n        return this._renderedContext;\n    },\n\n    setRenderedContext: function(renderedContext) {\n        $.console.error(\"ImageRecord.setRenderedContext is deprecated. \" +\n                \"The rendered context should be created by the ImageRecord \" +\n                \"itself when calling ImageRecord.getRenderedContext.\");\n        this._renderedContext = renderedContext;\n    },\n\n    addTile: function(tile) {\n        $.console.assert(tile, '[ImageRecord.addTile] tile is required');\n        this._tiles.push(tile);\n    },\n\n    removeTile: function(tile) {\n        for (var i = 0; i < this._tiles.length; i++) {\n            if (this._tiles[i] === tile) {\n                this._tiles.splice(i, 1);\n                return;\n            }\n        }\n\n        $.console.warn('[ImageRecord.removeTile] trying to remove unknown tile', tile);\n    },\n\n    getTileCount: function() {\n        return this._tiles.length;\n    }\n};\n\n/**\n * @class TileCache\n * @memberof OpenSeadragon\n * @classdesc Stores all the tiles displayed in a {@link OpenSeadragon.Viewer}.\n * You generally won't have to interact with the TileCache directly.\n * @param {Object} options - Configuration for this TileCache.\n * @param {Number} [options.maxImageCacheCount] - See maxImageCacheCount in\n * {@link OpenSeadragon.Options} for details.\n */\n$.TileCache = function( options ) {\n    options = options || {};\n\n    this._maxImageCacheCount = options.maxImageCacheCount || $.DEFAULT_SETTINGS.maxImageCacheCount;\n    this._tilesLoaded = [];\n    this._imagesLoaded = [];\n    this._imagesLoadedCount = 0;\n};\n\n/** @lends OpenSeadragon.TileCache.prototype */\n$.TileCache.prototype = {\n    /**\n     * @returns {Number} The total number of tiles that have been loaded by\n     * this TileCache.\n     */\n    numTilesLoaded: function() {\n        return this._tilesLoaded.length;\n    },\n\n    /**\n     * Caches the specified tile, removing an old tile if necessary to stay under the\n     * maxImageCacheCount specified on construction. Note that if multiple tiles reference\n     * the same image, there may be more tiles than maxImageCacheCount; the goal is to keep\n     * the number of images below that number. Note, as well, that even the number of images\n     * may temporarily surpass that number, but should eventually come back down to the max specified.\n     * @param {Object} options - Tile info.\n     * @param {OpenSeadragon.Tile} options.tile - The tile to cache.\n     * @param {String} options.tile.cacheKey - The unique key used to identify this tile in the cache.\n     * @param {Image} options.image - The image of the tile to cache.\n     * @param {OpenSeadragon.TiledImage} options.tiledImage - The TiledImage that owns that tile.\n     * @param {Number} [options.cutoff=0] - If adding this tile goes over the cache max count, this\n     * function will release an old tile. The cutoff option specifies a tile level at or below which\n     * tiles will not be released.\n     */\n    cacheTile: function( options ) {\n        $.console.assert( options, \"[TileCache.cacheTile] options is required\" );\n        $.console.assert( options.tile, \"[TileCache.cacheTile] options.tile is required\" );\n        $.console.assert( options.tile.cacheKey, \"[TileCache.cacheTile] options.tile.cacheKey is required\" );\n        $.console.assert( options.tiledImage, \"[TileCache.cacheTile] options.tiledImage is required\" );\n\n        var cutoff = options.cutoff || 0;\n        var insertionIndex = this._tilesLoaded.length;\n\n        var imageRecord = this._imagesLoaded[options.tile.cacheKey];\n        if (!imageRecord) {\n            $.console.assert( options.image, \"[TileCache.cacheTile] options.image is required to create an ImageRecord\" );\n            imageRecord = this._imagesLoaded[options.tile.cacheKey] = new ImageRecord({\n                image: options.image\n            });\n\n            this._imagesLoadedCount++;\n        }\n\n        imageRecord.addTile(options.tile);\n        options.tile.cacheImageRecord = imageRecord;\n\n        // Note that just because we're unloading a tile doesn't necessarily mean\n        // we're unloading an image. With repeated calls it should sort itself out, though.\n        if ( this._imagesLoadedCount > this._maxImageCacheCount ) {\n            var worstTile       = null;\n            var worstTileIndex  = -1;\n            var worstTileRecord = null;\n            var prevTile, worstTime, worstLevel, prevTime, prevLevel, prevTileRecord;\n\n            for ( var i = this._tilesLoaded.length - 1; i >= 0; i-- ) {\n                prevTileRecord = this._tilesLoaded[ i ];\n                prevTile = prevTileRecord.tile;\n\n                if ( prevTile.level <= cutoff || prevTile.beingDrawn ) {\n                    continue;\n                } else if ( !worstTile ) {\n                    worstTile       = prevTile;\n                    worstTileIndex  = i;\n                    worstTileRecord = prevTileRecord;\n                    continue;\n                }\n\n                prevTime    = prevTile.lastTouchTime;\n                worstTime   = worstTile.lastTouchTime;\n                prevLevel   = prevTile.level;\n                worstLevel  = worstTile.level;\n\n                if ( prevTime < worstTime ||\n                   ( prevTime == worstTime && prevLevel > worstLevel ) ) {\n                    worstTile       = prevTile;\n                    worstTileIndex  = i;\n                    worstTileRecord = prevTileRecord;\n                }\n            }\n\n            if ( worstTile && worstTileIndex >= 0 ) {\n                this._unloadTile(worstTileRecord);\n                insertionIndex = worstTileIndex;\n            }\n        }\n\n        this._tilesLoaded[ insertionIndex ] = new TileRecord({\n            tile: options.tile,\n            tiledImage: options.tiledImage\n        });\n    },\n\n    /**\n     * Clears all tiles associated with the specified tiledImage.\n     * @param {OpenSeadragon.TiledImage} tiledImage\n     */\n    clearTilesFor: function( tiledImage ) {\n        $.console.assert(tiledImage, '[TileCache.clearTilesFor] tiledImage is required');\n        var tileRecord;\n        for ( var i = 0; i < this._tilesLoaded.length; ++i ) {\n            tileRecord = this._tilesLoaded[ i ];\n            if ( tileRecord.tiledImage === tiledImage ) {\n                this._unloadTile(tileRecord);\n                this._tilesLoaded.splice( i, 1 );\n                i--;\n            }\n        }\n    },\n\n    // private\n    getImageRecord: function(cacheKey) {\n        $.console.assert(cacheKey, '[TileCache.getImageRecord] cacheKey is required');\n        return this._imagesLoaded[cacheKey];\n    },\n\n    // private\n    _unloadTile: function(tileRecord) {\n        $.console.assert(tileRecord, '[TileCache._unloadTile] tileRecord is required');\n        var tile = tileRecord.tile;\n        var tiledImage = tileRecord.tiledImage;\n\n        tile.unload();\n        tile.cacheImageRecord = null;\n\n        var imageRecord = this._imagesLoaded[tile.cacheKey];\n        imageRecord.removeTile(tile);\n        if (!imageRecord.getTileCount()) {\n            imageRecord.destroy();\n            delete this._imagesLoaded[tile.cacheKey];\n            this._imagesLoadedCount--;\n        }\n\n        /**\n         * Triggered when a tile has just been unloaded from memory.\n         *\n         * @event tile-unloaded\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.TiledImage} tiledImage - The tiled image of the unloaded tile.\n         * @property {OpenSeadragon.Tile} tile - The tile which has been unloaded.\n         */\n        tiledImage.viewer.raiseEvent(\"tile-unloaded\", {\n            tile: tile,\n            tiledImage: tiledImage\n        });\n    }\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - World\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class World\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.EventSource\n * @classdesc Keeps track of all of the tiled images in the scene.\n * @param {Object} options - World options.\n * @param {OpenSeadragon.Viewer} options.viewer - The Viewer that owns this World.\n **/\n$.World = function( options ) {\n    var _this = this;\n\n    $.console.assert( options.viewer, \"[World] options.viewer is required\" );\n\n    $.EventSource.call( this );\n\n    this.viewer = options.viewer;\n    this._items = [];\n    this._needsDraw = false;\n    this._autoRefigureSizes = true;\n    this._needsSizesFigured = false;\n    this._delegatedFigureSizes = function(event) {\n        if (_this._autoRefigureSizes) {\n            _this._figureSizes();\n        } else {\n            _this._needsSizesFigured = true;\n        }\n    };\n\n    this._figureSizes();\n};\n\n$.extend( $.World.prototype, $.EventSource.prototype, /** @lends OpenSeadragon.World.prototype */{\n    /**\n     * Add the specified item.\n     * @param {OpenSeadragon.TiledImage} item - The item to add.\n     * @param {Number} [options.index] - Index for the item. If not specified, goes at the top.\n     * @fires OpenSeadragon.World.event:add-item\n     * @fires OpenSeadragon.World.event:metrics-change\n     */\n    addItem: function( item, options ) {\n        $.console.assert(item, \"[World.addItem] item is required\");\n        $.console.assert(item instanceof $.TiledImage, \"[World.addItem] only TiledImages supported at this time\");\n\n        options = options || {};\n        if (options.index !== undefined) {\n            var index = Math.max(0, Math.min(this._items.length, options.index));\n            this._items.splice(index, 0, item);\n        } else {\n            this._items.push( item );\n        }\n\n        if (this._autoRefigureSizes) {\n            this._figureSizes();\n        } else {\n            this._needsSizesFigured = true;\n        }\n\n        this._needsDraw = true;\n\n        item.addHandler('bounds-change', this._delegatedFigureSizes);\n        item.addHandler('clip-change', this._delegatedFigureSizes);\n\n        /**\n         * Raised when an item is added to the World.\n         * @event add-item\n         * @memberOf OpenSeadragon.World\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the World which raised the event.\n         * @property {OpenSeadragon.TiledImage} item - The item that has been added.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'add-item', {\n            item: item\n        } );\n    },\n\n    /**\n     * Get the item at the specified index.\n     * @param {Number} index - The item's index.\n     * @returns {OpenSeadragon.TiledImage} The item at the specified index.\n     */\n    getItemAt: function( index ) {\n        $.console.assert(index !== undefined, \"[World.getItemAt] index is required\");\n        return this._items[ index ];\n    },\n\n    /**\n     * Get the index of the given item or -1 if not present.\n     * @param {OpenSeadragon.TiledImage} item - The item.\n     * @returns {Number} The index of the item or -1 if not present.\n     */\n    getIndexOfItem: function( item ) {\n        $.console.assert(item, \"[World.getIndexOfItem] item is required\");\n        return $.indexOf( this._items, item );\n    },\n\n    /**\n     * @returns {Number} The number of items used.\n     */\n    getItemCount: function() {\n        return this._items.length;\n    },\n\n    /**\n     * Change the index of a item so that it appears over or under others.\n     * @param {OpenSeadragon.TiledImage} item - The item to move.\n     * @param {Number} index - The new index.\n     * @fires OpenSeadragon.World.event:item-index-change\n     */\n    setItemIndex: function( item, index ) {\n        $.console.assert(item, \"[World.setItemIndex] item is required\");\n        $.console.assert(index !== undefined, \"[World.setItemIndex] index is required\");\n\n        var oldIndex = this.getIndexOfItem( item );\n\n        if ( index >= this._items.length ) {\n            throw new Error( \"Index bigger than number of layers.\" );\n        }\n\n        if ( index === oldIndex || oldIndex === -1 ) {\n            return;\n        }\n\n        this._items.splice( oldIndex, 1 );\n        this._items.splice( index, 0, item );\n        this._needsDraw = true;\n\n        /**\n         * Raised when the order of the indexes has been changed.\n         * @event item-index-change\n         * @memberOf OpenSeadragon.World\n         * @type {object}\n         * @property {OpenSeadragon.World} eventSource - A reference to the World which raised the event.\n         * @property {OpenSeadragon.TiledImage} item - The item whose index has\n         * been changed\n         * @property {Number} previousIndex - The previous index of the item\n         * @property {Number} newIndex - The new index of the item\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'item-index-change', {\n            item: item,\n            previousIndex: oldIndex,\n            newIndex: index\n        } );\n    },\n\n    /**\n     * Remove an item.\n     * @param {OpenSeadragon.TiledImage} item - The item to remove.\n     * @fires OpenSeadragon.World.event:remove-item\n     * @fires OpenSeadragon.World.event:metrics-change\n     */\n    removeItem: function( item ) {\n        $.console.assert(item, \"[World.removeItem] item is required\");\n\n        var index = $.indexOf(this._items, item );\n        if ( index === -1 ) {\n            return;\n        }\n\n        item.removeHandler('bounds-change', this._delegatedFigureSizes);\n        item.removeHandler('clip-change', this._delegatedFigureSizes);\n        item.destroy();\n        this._items.splice( index, 1 );\n        this._figureSizes();\n        this._needsDraw = true;\n        this._raiseRemoveItem(item);\n    },\n\n    /**\n     * Remove all items.\n     * @fires OpenSeadragon.World.event:remove-item\n     * @fires OpenSeadragon.World.event:metrics-change\n     */\n    removeAll: function() {\n        // We need to make sure any pending images are canceled so the world items don't get messed up\n        this.viewer._cancelPendingImages();\n        var item;\n        var i;\n        for (i = 0; i < this._items.length; i++) {\n            item = this._items[i];\n            item.removeHandler('bounds-change', this._delegatedFigureSizes);\n            item.removeHandler('clip-change', this._delegatedFigureSizes);\n            item.destroy();\n        }\n\n        var removedItems = this._items;\n        this._items = [];\n        this._figureSizes();\n        this._needsDraw = true;\n\n        for (i = 0; i < removedItems.length; i++) {\n            item = removedItems[i];\n            this._raiseRemoveItem(item);\n        }\n    },\n\n    /**\n     * Clears all tiles and triggers updates for all items.\n     */\n    resetItems: function() {\n        for ( var i = 0; i < this._items.length; i++ ) {\n            this._items[i].reset();\n        }\n    },\n\n    /**\n     * Updates (i.e. animates bounds of) all items.\n     */\n    update: function() {\n        var animated = false;\n        for ( var i = 0; i < this._items.length; i++ ) {\n            animated = this._items[i].update() || animated;\n        }\n\n        return animated;\n    },\n\n    /**\n     * Draws all items.\n     */\n    draw: function() {\n        for ( var i = 0; i < this._items.length; i++ ) {\n            this._items[i].draw();\n        }\n\n        this._needsDraw = false;\n    },\n\n    /**\n     * @returns {Boolean} true if any items need updating.\n     */\n    needsDraw: function() {\n        for ( var i = 0; i < this._items.length; i++ ) {\n            if ( this._items[i].needsDraw() ) {\n                return true;\n            }\n        }\n        return this._needsDraw;\n    },\n\n    /**\n     * @returns {OpenSeadragon.Rect} The smallest rectangle that encloses all items, in viewport coordinates.\n     */\n    getHomeBounds: function() {\n        return this._homeBounds.clone();\n    },\n\n    /**\n     * To facilitate zoom constraints, we keep track of the pixel density of the\n     * densest item in the World (i.e. the item whose content size to viewport size\n     * ratio is the highest) and save it as this \"content factor\".\n     * @returns {Number} the number of content units per viewport unit.\n     */\n    getContentFactor: function() {\n        return this._contentFactor;\n    },\n\n    /**\n     * As a performance optimization, setting this flag to false allows the bounds-change event handler\n     * on tiledImages to skip calculations on the world bounds. If a lot of images are going to be positioned in\n     * rapid succession, this is a good idea. When finished, setAutoRefigureSizes should be called with true\n     * or the system may behave oddly.\n     * @param {Boolean} [value] The value to which to set the flag.\n     */\n    setAutoRefigureSizes: function(value) {\n        this._autoRefigureSizes = value;\n        if (value & this._needsSizesFigured) {\n            this._figureSizes();\n            this._needsSizesFigured = false;\n        }\n    },\n\n    /**\n     * Arranges all of the TiledImages with the specified settings.\n     * @param {Object} options - Specifies how to arrange.\n     * @param {Boolean} [options.immediately=false] - Whether to animate to the new arrangement.\n     * @param {String} [options.layout] - See collectionLayout in {@link OpenSeadragon.Options}.\n     * @param {Number} [options.rows] - See collectionRows in {@link OpenSeadragon.Options}.\n     * @param {Number} [options.columns] - See collectionColumns in {@link OpenSeadragon.Options}.\n     * @param {Number} [options.tileSize] - See collectionTileSize in {@link OpenSeadragon.Options}.\n     * @param {Number} [options.tileMargin] - See collectionTileMargin in {@link OpenSeadragon.Options}.\n     * @fires OpenSeadragon.World.event:metrics-change\n     */\n    arrange: function(options) {\n        options = options || {};\n        var immediately = options.immediately || false;\n        var layout = options.layout || $.DEFAULT_SETTINGS.collectionLayout;\n        var rows = options.rows || $.DEFAULT_SETTINGS.collectionRows;\n        var columns = options.columns || $.DEFAULT_SETTINGS.collectionColumns;\n        var tileSize = options.tileSize || $.DEFAULT_SETTINGS.collectionTileSize;\n        var tileMargin = options.tileMargin || $.DEFAULT_SETTINGS.collectionTileMargin;\n        var increment = tileSize + tileMargin;\n        var wrap;\n        if (!options.rows && columns) {\n            wrap = columns;\n        } else {\n            wrap = Math.ceil(this._items.length / rows);\n        }\n        var x = 0;\n        var y = 0;\n        var item, box, width, height, position;\n\n        this.setAutoRefigureSizes(false);\n        for (var i = 0; i < this._items.length; i++) {\n            if (i && (i % wrap) === 0) {\n                if (layout === 'horizontal') {\n                    y += increment;\n                    x = 0;\n                } else {\n                    x += increment;\n                    y = 0;\n                }\n            }\n\n            item = this._items[i];\n            box = item.getBounds();\n            if (box.width > box.height) {\n                width = tileSize;\n            } else {\n                width = tileSize * (box.width / box.height);\n            }\n\n            height = width * (box.height / box.width);\n            position = new $.Point(x + ((tileSize - width) / 2),\n                y + ((tileSize - height) / 2));\n\n            item.setPosition(position, immediately);\n            item.setWidth(width, immediately);\n\n            if (layout === 'horizontal') {\n                x += increment;\n            } else {\n                y += increment;\n            }\n        }\n        this.setAutoRefigureSizes(true);\n    },\n\n    // private\n    _figureSizes: function() {\n        var oldHomeBounds = this._homeBounds ? this._homeBounds.clone() : null;\n        var oldContentSize = this._contentSize ? this._contentSize.clone() : null;\n        var oldContentFactor = this._contentFactor || 0;\n\n        if (!this._items.length) {\n            this._homeBounds = new $.Rect(0, 0, 1, 1);\n            this._contentSize = new $.Point(1, 1);\n            this._contentFactor = 1;\n        } else {\n            var item = this._items[0];\n            var bounds = item.getBounds();\n            this._contentFactor = item.getContentSize().x / bounds.width;\n            var clippedBounds = item.getClippedBounds().getBoundingBox();\n            var left = clippedBounds.x;\n            var top = clippedBounds.y;\n            var right = clippedBounds.x + clippedBounds.width;\n            var bottom = clippedBounds.y + clippedBounds.height;\n            for (var i = 1; i < this._items.length; i++) {\n                item = this._items[i];\n                bounds = item.getBounds();\n                this._contentFactor = Math.max(this._contentFactor,\n                    item.getContentSize().x / bounds.width);\n                clippedBounds = item.getClippedBounds().getBoundingBox();\n                left = Math.min(left, clippedBounds.x);\n                top = Math.min(top, clippedBounds.y);\n                right = Math.max(right, clippedBounds.x + clippedBounds.width);\n                bottom = Math.max(bottom, clippedBounds.y + clippedBounds.height);\n            }\n\n            this._homeBounds = new $.Rect(left, top, right - left, bottom - top);\n            this._contentSize = new $.Point(\n                this._homeBounds.width * this._contentFactor,\n                this._homeBounds.height * this._contentFactor);\n        }\n\n        if (this._contentFactor !== oldContentFactor ||\n            !this._homeBounds.equals(oldHomeBounds) ||\n            !this._contentSize.equals(oldContentSize)) {\n            /**\n             * Raised when the home bounds or content factor change.\n             * @event metrics-change\n             * @memberOf OpenSeadragon.World\n             * @type {object}\n             * @property {OpenSeadragon.World} eventSource - A reference to the World which raised the event.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.raiseEvent('metrics-change', {});\n        }\n    },\n\n    // private\n    _raiseRemoveItem: function(item) {\n        /**\n         * Raised when an item is removed.\n         * @event remove-item\n         * @memberOf OpenSeadragon.World\n         * @type {object}\n         * @property {OpenSeadragon.World} eventSource - A reference to the World which raised the event.\n         * @property {OpenSeadragon.TiledImage} item - The item's underlying item.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'remove-item', { item: item } );\n    }\n});\n\n}( OpenSeadragon ));\n\n//# sourceMappingURL=openseadragon.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/openseadragon/build/openseadragon/openseadragon.js\n// module id = 11\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/es6-extensions.js\n// module id = 12\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/rejection-tracking.js\n// module id = 13\n// module chunks = 0","/** @license React v16.8.6\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),r=require(\"scheduler\");function ba(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[c,d,e,f,g,h],k=0;a=Error(b.replace(/%s/g,function(){return l[k++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction x(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ba(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:x(\"227\");function ca(a,b,c,d,e,f,g,h,l){var k=Array.prototype.slice.call(arguments,3);try{b.apply(c,k)}catch(m){this.onError(m)}}\nvar da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,l){da=!1;ea=null;ca.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,l){ja.apply(this,arguments);if(da){if(da){var k=ea;da=!1;ea=null}else x(\"198\"),k=void 0;fa||(fa=!0,ha=k)}}var la=null,ma={};\nfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:x(\"96\",a);if(!oa[c]){b.extractEvents?void 0:x(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?x(\"99\",h):void 0;pa[h]=f;var l=f.phasedRegistrationNames;if(l){for(e in l)l.hasOwnProperty(e)&&qa(l[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:x(\"98\",d,a)}}}}\nfunction qa(a,b,c){ra[a]?x(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={},ta=null,ua=null,va=null;function wa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=va(c);ka(d,b,void 0,a);a.currentTarget=null}function xa(a,b){null==b?x(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction ya(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var za=null;function Aa(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)wa(a,b[d],c[d]);else b&&wa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}\nvar Ba={injectEventPluginOrder:function(a){la?x(\"101\"):void 0;la=Array.prototype.slice.call(a);na()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?x(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}};\nfunction Ca(a,b){var c=a.stateNode;if(!c)return null;var d=ta(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?x(\"231\",b,typeof c):void 0;\nreturn c}function Da(a){null!==a&&(za=xa(za,a));a=za;za=null;if(a&&(ya(a,Aa),za?x(\"95\"):void 0,fa))throw a=ha,fa=!1,ha=null,a;}var Ea=Math.random().toString(36).slice(2),Fa=\"__reactInternalInstance$\"+Ea,Ga=\"__reactEventHandlers$\"+Ea;function Ha(a){if(a[Fa])return a[Fa];for(;!a[Fa];)if(a.parentNode)a=a.parentNode;else return null;a=a[Fa];return 5===a.tag||6===a.tag?a:null}function Ia(a){a=a[Fa];return!a||5!==a.tag&&6!==a.tag?null:a}\nfunction Ja(a){if(5===a.tag||6===a.tag)return a.stateNode;x(\"33\")}function Ka(a){return a[Ga]||null}function La(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ma(a,b,c){if(b=Ca(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a)}\nfunction Na(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=La(b);for(b=c.length;0<b--;)Ma(c[b],\"captured\",a);for(b=0;b<c.length;b++)Ma(c[b],\"bubbled\",a)}}function Oa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ca(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a))}function Pa(a){a&&a.dispatchConfig.registrationName&&Oa(a._targetInst,null,a)}\nfunction Qa(a){ya(a,Na)}var Ra=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Sa(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ta={animationend:Sa(\"Animation\",\"AnimationEnd\"),animationiteration:Sa(\"Animation\",\"AnimationIteration\"),animationstart:Sa(\"Animation\",\"AnimationStart\"),transitionend:Sa(\"Transition\",\"TransitionEnd\")},Ua={},Va={};\nRa&&(Va=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ta.animationend.animation,delete Ta.animationiteration.animation,delete Ta.animationstart.animation),\"TransitionEvent\"in window||delete Ta.transitionend.transition);function Wa(a){if(Ua[a])return Ua[a];if(!Ta[a])return a;var b=Ta[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Va)return Ua[a]=b[c];return a}\nvar Xa=Wa(\"animationend\"),Ya=Wa(\"animationiteration\"),Za=Wa(\"animationstart\"),$a=Wa(\"transitionend\"),ab=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),bb=null,cb=null,db=null;\nfunction eb(){if(db)return db;var a,b=cb,c=b.length,d,e=\"value\"in bb?bb.value:bb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return db=e.slice(a,1<d?1-d:void 0)}function fb(){return!0}function gb(){return!1}\nfunction y(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?fb:gb;this.isPropagationStopped=gb;return this}\nn(y.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=fb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=fb)},persist:function(){this.isPersistent=fb},isPersistent:gb,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=gb;this._dispatchInstances=this._dispatchListeners=null}});y.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\ny.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;hb(c);return c};hb(y);function ib(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function jb(a){a instanceof this?void 0:x(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\nfunction hb(a){a.eventPool=[];a.getPooled=ib;a.release=jb}var kb=y.extend({data:null}),lb=y.extend({data:null}),mb=[9,13,27,32],nb=Ra&&\"CompositionEvent\"in window,ob=null;Ra&&\"documentMode\"in document&&(ob=document.documentMode);\nvar pb=Ra&&\"TextEvent\"in window&&!ob,qb=Ra&&(!nb||ob&&8<ob&&11>=ob),rb=String.fromCharCode(32),sb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},tb=!1;\nfunction ub(a,b){switch(a){case \"keyup\":return-1!==mb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function vb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var wb=!1;function xb(a,b){switch(a){case \"compositionend\":return vb(b);case \"keypress\":if(32!==b.which)return null;tb=!0;return rb;case \"textInput\":return a=b.data,a===rb&&tb?null:a;default:return null}}\nfunction yb(a,b){if(wb)return\"compositionend\"===a||!nb&&ub(a,b)?(a=eb(),db=cb=bb=null,wb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return qb&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar zb={eventTypes:sb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(nb)b:{switch(a){case \"compositionstart\":e=sb.compositionStart;break b;case \"compositionend\":e=sb.compositionEnd;break b;case \"compositionupdate\":e=sb.compositionUpdate;break b}e=void 0}else wb?ub(a,c)&&(e=sb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=sb.compositionStart);e?(qb&&\"ko\"!==c.locale&&(wb||e!==sb.compositionStart?e===sb.compositionEnd&&wb&&(f=eb()):(bb=d,cb=\"value\"in bb?bb.value:bb.textContent,wb=\n!0)),e=kb.getPooled(e,b,c,d),f?e.data=f:(f=vb(c),null!==f&&(e.data=f)),Qa(e),f=e):f=null;(a=pb?xb(a,c):yb(a,c))?(b=lb.getPooled(sb.beforeInput,b,c,d),b.data=a,Qa(b)):b=null;return null===f?b:null===b?f:[f,b]}},Ab=null,Bb=null,Cb=null;function Db(a){if(a=ua(a)){\"function\"!==typeof Ab?x(\"280\"):void 0;var b=ta(a.stateNode);Ab(a.stateNode,a.type,b)}}function Eb(a){Bb?Cb?Cb.push(a):Cb=[a]:Bb=a}function Fb(){if(Bb){var a=Bb,b=Cb;Cb=Bb=null;Db(a);if(b)for(a=0;a<b.length;a++)Db(b[a])}}\nfunction Gb(a,b){return a(b)}function Hb(a,b,c){return a(b,c)}function Ib(){}var Jb=!1;function Kb(a,b){if(Jb)return a(b);Jb=!0;try{return Gb(a,b)}finally{if(Jb=!1,null!==Bb||null!==Cb)Ib(),Fb()}}var Lb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Mb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Lb[a.type]:\"textarea\"===b?!0:!1}\nfunction Nb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Ob(a){if(!Ra)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Pb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Qb(a){var b=Pb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Rb(a){a._valueTracker||(a._valueTracker=Qb(a))}function Sb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Pb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Tb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Tb.hasOwnProperty(\"ReactCurrentDispatcher\")||(Tb.ReactCurrentDispatcher={current:null});\nvar Ub=/^(.*)[\\\\\\/]/,z=\"function\"===typeof Symbol&&Symbol.for,Vb=z?Symbol.for(\"react.element\"):60103,Wb=z?Symbol.for(\"react.portal\"):60106,Xb=z?Symbol.for(\"react.fragment\"):60107,Yb=z?Symbol.for(\"react.strict_mode\"):60108,Zb=z?Symbol.for(\"react.profiler\"):60114,$b=z?Symbol.for(\"react.provider\"):60109,ac=z?Symbol.for(\"react.context\"):60110,bc=z?Symbol.for(\"react.concurrent_mode\"):60111,cc=z?Symbol.for(\"react.forward_ref\"):60112,dc=z?Symbol.for(\"react.suspense\"):60113,ec=z?Symbol.for(\"react.memo\"):\n60115,fc=z?Symbol.for(\"react.lazy\"):60116,gc=\"function\"===typeof Symbol&&Symbol.iterator;function hc(a){if(null===a||\"object\"!==typeof a)return null;a=gc&&a[gc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction ic(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case bc:return\"ConcurrentMode\";case Xb:return\"Fragment\";case Wb:return\"Portal\";case Zb:return\"Profiler\";case Yb:return\"StrictMode\";case dc:return\"Suspense\"}if(\"object\"===typeof a)switch(a.$$typeof){case ac:return\"Context.Consumer\";case $b:return\"Context.Provider\";case cc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\n\")\":\"ForwardRef\");case ec:return ic(a.type);case fc:if(a=1===a._status?a._result:null)return ic(a)}return null}function jc(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=ic(a.type);c=null;d&&(c=ic(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Ub,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\nvar kc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,lc=Object.prototype.hasOwnProperty,mc={},nc={};\nfunction oc(a){if(lc.call(nc,a))return!0;if(lc.call(mc,a))return!1;if(kc.test(a))return nc[a]=!0;mc[a]=!0;return!1}function pc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qc(a,b,c,d){if(null===b||\"undefined\"===typeof b||pc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function C(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new C(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new C(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new C(a,2,!1,a.toLowerCase(),null)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new C(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new C(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new C(a,3,!0,a,null)});\n[\"capture\",\"download\"].forEach(function(a){D[a]=new C(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new C(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new C(a,5,!1,a.toLowerCase(),null)});var rc=/[\\-:]([a-z])/g;function sc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(rc,\nsc);D[b]=new C(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new C(a,1,!1,a.toLowerCase(),null)});\nfunction tc(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(qc(b,c,e,d)&&(c=null),d||null===e?oc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction uc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function vc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction wc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=uc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function xc(a,b){b=b.checked;null!=b&&tc(a,\"checked\",b,!1)}\nfunction yc(a,b){xc(a,b);var c=uc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?zc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&zc(a,b.type,uc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Ac(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction zc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Bc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Cc(a,b,c){a=y.getPooled(Bc.change,a,b,c);a.type=\"change\";Eb(c);Qa(a);return a}var Dc=null,Ec=null;function Fc(a){Da(a)}\nfunction Gc(a){var b=Ja(a);if(Sb(b))return a}function Hc(a,b){if(\"change\"===a)return b}var Ic=!1;Ra&&(Ic=Ob(\"input\")&&(!document.documentMode||9<document.documentMode));function Jc(){Dc&&(Dc.detachEvent(\"onpropertychange\",Kc),Ec=Dc=null)}function Kc(a){\"value\"===a.propertyName&&Gc(Ec)&&(a=Cc(Ec,a,Nb(a)),Kb(Fc,a))}function Lc(a,b,c){\"focus\"===a?(Jc(),Dc=b,Ec=c,Dc.attachEvent(\"onpropertychange\",Kc)):\"blur\"===a&&Jc()}function Mc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Gc(Ec)}\nfunction Nc(a,b){if(\"click\"===a)return Gc(b)}function Oc(a,b){if(\"input\"===a||\"change\"===a)return Gc(b)}\nvar Pc={eventTypes:Bc,_isInputEventSupported:Ic,extractEvents:function(a,b,c,d){var e=b?Ja(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Hc:Mb(e)?Ic?f=Oc:(f=Mc,g=Lc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Nc);if(f&&(f=f(a,b)))return Cc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&zc(e,\"number\",e.value)}},Qc=y.extend({view:null,detail:null}),Rc={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Sc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Rc[a])?!!b[a]:!1}function Tc(){return Sc}\nvar Uc=0,Vc=0,Wc=!1,Xc=!1,Yc=Qc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Tc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=Uc;Uc=a.screenX;return Wc?\"mousemove\"===a.type?a.screenX-b:0:(Wc=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\nvar b=Vc;Vc=a.screenY;return Xc?\"mousemove\"===a.type?a.screenY-b:0:(Xc=!0,0)}}),Zc=Yc.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),$c={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\ndependencies:[\"pointerout\",\"pointerover\"]}},ad={eventTypes:$c,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ha(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,l=void 0,k=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=Yc,h=$c.mouseLeave,l=$c.mouseEnter,k=\"mouse\";\nelse if(\"pointerout\"===a||\"pointerover\"===a)g=Zc,h=$c.pointerLeave,l=$c.pointerEnter,k=\"pointer\";var m=null==f?e:Ja(f);e=null==b?e:Ja(b);a=g.getPooled(h,f,c,d);a.type=k+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(l,b,c,d);c.type=k+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;k=0;for(g=b;g;g=La(g))k++;g=0;for(l=e;l;l=La(l))g++;for(;0<k-g;)b=La(b),k--;for(;0<g-k;)e=La(e),g--;for(;k--;){if(b===e||b===e.alternate)break a;b=La(b);e=La(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){k=\nf.alternate;if(null!==k&&k===e)break;b.push(f);f=La(f)}for(f=[];d&&d!==e;){k=d.alternate;if(null!==k&&k===e)break;f.push(d);d=La(d)}for(d=0;d<b.length;d++)Oa(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Oa(f[d],\"captured\",c);return[a,c]}};function bd(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var cd=Object.prototype.hasOwnProperty;\nfunction dd(a,b){if(bd(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!cd.call(b,c[d])||!bd(a[c[d]],b[c[d]]))return!1;return!0}function ed(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function fd(a){2!==ed(a)?x(\"188\"):void 0}\nfunction gd(a){var b=a.alternate;if(!b)return b=ed(a),3===b?x(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return fd(e),a;if(g===d)return fd(e),b;g=g.sibling}x(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:x(\"189\")}}c.alternate!==d?x(\"190\"):void 0}3!==c.tag?x(\"188\"):void 0;return c.stateNode.current===c?a:b}function hd(a){a=gd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nvar id=y.extend({animationName:null,elapsedTime:null,pseudoElement:null}),jd=y.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),kd=Qc.extend({relatedTarget:null});function ld(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar md={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},od=Qc.extend({key:function(a){if(a.key){var b=md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=ld(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?nd[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Tc,charCode:function(a){return\"keypress\"===\na.type?ld(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?ld(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),pd=Yc.extend({dataTransfer:null}),qd=Qc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Tc}),rd=y.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),sd=Yc.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),td=[[\"abort\",\"abort\"],[Xa,\"animationEnd\"],[Ya,\"animationIteration\"],[Za,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[$a,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],ud={},vd={};function wd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};ud[a]=b;vd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){wd(a,!0)});td.forEach(function(a){wd(a,!1)});\nvar xd={eventTypes:ud,isInteractiveTopLevelEventType:function(a){a=vd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=vd[a];if(!e)return null;switch(a){case \"keypress\":if(0===ld(c))return null;case \"keydown\":case \"keyup\":a=od;break;case \"blur\":case \"focus\":a=kd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=Yc;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\npd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=qd;break;case Xa:case Ya:case Za:a=id;break;case $a:a=rd;break;case \"scroll\":a=Qc;break;case \"wheel\":a=sd;break;case \"copy\":case \"cut\":case \"paste\":a=jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=Zc;break;default:a=y}b=a.getPooled(e,b,c,d);Qa(b);return b}},yd=xd.isInteractiveTopLevelEventType,\nzd=[];function Ad(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ha(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Nb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<oa.length;h++){var l=oa[h];l&&(l=l.extractEvents(d,b,f,e))&&(g=xa(g,l))}Da(g)}}var Bd=!0;\nfunction E(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!1)}function Ed(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!0)}function Cd(a,b){Hb(Dd,a,b)}\nfunction Dd(a,b){if(Bd){var c=Nb(b);c=Ha(c);null===c||\"number\"!==typeof c.tag||2===ed(c)||(c=null);if(zd.length){var d=zd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Kb(Ad,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>zd.length&&zd.push(a)}}}var Fd={},Gd=0,Hd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\nfunction Id(a){Object.prototype.hasOwnProperty.call(a,Hd)||(a[Hd]=Gd++,Fd[a[Hd]]={});return Fd[a[Hd]]}function Jd(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Kd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ld(a,b){var c=Kd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Kd(c)}}function Md(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Md(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Nd(){for(var a=window,b=Jd();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Jd(a.document)}return b}function Od(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Pd(){var a=Nd();if(Od(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{b=(b=a.ownerDocument)&&b.defaultView||window;var c=b.getSelection&&b.getSelection();if(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(A){b=null;break a}var f=0,g=-1,h=-1,l=0,k=0,m=a,p=null;b:for(;;){for(var t;;){m!==b||0!==d&&3!==m.nodeType||(g=f+d);m!==e||0!==c&&3!==m.nodeType||(h=f+c);3===m.nodeType&&(f+=m.nodeValue.length);\nif(null===(t=m.firstChild))break;p=m;m=t}for(;;){if(m===a)break b;p===b&&++l===d&&(g=f);p===e&&++k===c&&(h=f);if(null!==(t=m.nextSibling))break;m=p;p=m.parentNode}m=t}b=-1===g||-1===h?null:{start:g,end:h}}else b=null}b=b||{start:0,end:0}}else b=null;return{focusedElem:a,selectionRange:b}}\nfunction Qd(a){var b=Nd(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Md(c.ownerDocument.documentElement,c)){if(null!==d&&Od(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ld(c,f);var g=Ld(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Rd=Ra&&\"documentMode\"in document&&11>=document.documentMode,Sd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Td=null,Ud=null,Vd=null,Wd=!1;\nfunction Xd(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(Wd||null==Td||Td!==Jd(c))return null;c=Td;\"selectionStart\"in c&&Od(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Vd&&dd(Vd,c)?null:(Vd=c,a=y.getPooled(Sd.select,Ud,a,b),a.type=\"select\",a.target=Td,Qa(a),a)}\nvar Yd={eventTypes:Sd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Id(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ja(b):window;switch(a){case \"focus\":if(Mb(e)||\"true\"===e.contentEditable)Td=e,Ud=b,Vd=null;break;case \"blur\":Vd=Ud=Td=null;break;case \"mousedown\":Wd=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return Wd=!1,Xd(c,d);case \"selectionchange\":if(Rd)break;\ncase \"keydown\":case \"keyup\":return Xd(c,d)}return null}};Ba.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ta=Ka;ua=Ia;va=Ja;Ba.injectEventPluginsByName({SimpleEventPlugin:xd,EnterLeaveEventPlugin:ad,ChangeEventPlugin:Pc,SelectEventPlugin:Yd,BeforeInputEventPlugin:zb});function Zd(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\nfunction $d(a,b){a=n({children:void 0},b);if(b=Zd(b.children))a.children=b;return a}function ae(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+uc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction be(a,b){null!=b.dangerouslySetInnerHTML?x(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?x(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:x(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:uc(c)}}\nfunction de(a,b){var c=uc(b.value),d=uc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var fe={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction ge(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function he(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?ge(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar ie=void 0,je=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==fe.svg||\"innerHTML\"in a)a.innerHTML=b;else{ie=ie||document.createElement(\"div\");ie.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(le).forEach(function(a){me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);le[b]=le[a]})});function ne(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||le.hasOwnProperty(a)&&le[a]?(\"\"+b).trim():b+\"px\"}\nfunction oe(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=ne(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var pe=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction qe(a,b){b&&(pe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?x(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?x(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:x(\"61\")),null!=b.style&&\"object\"!==typeof b.style?x(\"62\",\"\"):void 0)}\nfunction re(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\nfunction se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Id(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Ed(\"scroll\",a);break;case \"focus\":case \"blur\":Ed(\"focus\",a);Ed(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Ob(e)&&Ed(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===ab.indexOf(e)&&E(e,a)}c[e]=!0}}}function te(){}var ue=null,ve=null;\nfunction we(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function xe(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar ye=\"function\"===typeof setTimeout?setTimeout:void 0,ze=\"function\"===typeof clearTimeout?clearTimeout:void 0,Ae=r.unstable_scheduleCallback,Be=r.unstable_cancelCallback;\nfunction Ce(a,b,c,d,e){a[Ga]=e;\"input\"===c&&\"radio\"===e.type&&null!=e.name&&xc(a,e);re(c,d);d=re(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?oe(a,h):\"dangerouslySetInnerHTML\"===g?je(a,h):\"children\"===g?ke(a,h):tc(a,g,h,d)}switch(c){case \"input\":yc(a,e);break;case \"textarea\":de(a,e);break;case \"select\":b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ae(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?ae(a,!!e.multiple,e.defaultValue,\n!0):ae(a,!!e.multiple,e.multiple?[]:\"\",!1))}}function De(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function Ee(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var Fe=[],Ge=-1;function F(a){0>Ge||(a.current=Fe[Ge],Fe[Ge]=null,Ge--)}function G(a,b){Ge++;Fe[Ge]=a.current;a.current=b}var He={},H={current:He},I={current:!1},Ie=He;\nfunction Je(a,b){var c=a.type.contextTypes;if(!c)return He;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function J(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ke(a){F(I,a);F(H,a)}function Le(a){F(I,a);F(H,a)}\nfunction Me(a,b,c){H.current!==He?x(\"168\"):void 0;G(H,b,a);G(I,c,a)}function Ne(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:x(\"108\",ic(b)||\"Unknown\",e);return n({},c,d)}function Oe(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||He;Ie=H.current;G(H,b,a);G(I,I.current,a);return!0}\nfunction Pe(a,b,c){var d=a.stateNode;d?void 0:x(\"169\");c?(b=Ne(a,b,Ie),d.__reactInternalMemoizedMergedChildContext=b,F(I,a),F(H,a),G(H,b,a)):F(I,a);G(I,c,a)}var Qe=null,Re=null;function Se(a){return function(b){try{return a(b)}catch(c){}}}\nfunction Te(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Qe=Se(function(a){return b.onCommitFiberRoot(c,a)});Re=Se(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\nfunction Ue(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function K(a,b,c,d){return new Ue(a,b,c,d)}\nfunction Ve(a){a=a.prototype;return!(!a||!a.isReactComponent)}function We(a){if(\"function\"===typeof a)return Ve(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===cc)return 11;if(a===ec)return 14}return 2}\nfunction Xe(a,b){var c=a.alternate;null===c?(c=K(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.contextDependencies=a.contextDependencies;c.sibling=a.sibling;\nc.index=a.index;c.ref=a.ref;return c}\nfunction Ye(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)Ve(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case Xb:return Ze(c.children,e,f,b);case bc:return $e(c,e|3,f,b);case Yb:return $e(c,e|2,f,b);case Zb:return a=K(12,c,b,e|4),a.elementType=Zb,a.type=Zb,a.expirationTime=f,a;case dc:return a=K(13,c,b,e),a.elementType=dc,a.type=dc,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case $b:g=10;break a;case ac:g=9;break a;case cc:g=11;break a;case ec:g=\n14;break a;case fc:g=16;d=null;break a}x(\"130\",null==a?a:typeof a,\"\")}b=K(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Ze(a,b,c,d){a=K(7,a,d,b);a.expirationTime=c;return a}function $e(a,b,c,d){a=K(8,a,d,b);b=0===(b&1)?Yb:bc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function af(a,b,c){a=K(6,a,null,b);a.expirationTime=c;return a}\nfunction bf(a,b,c){b=K(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function cf(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);df(b,a)}\nfunction ef(a,b){a.didError=!1;if(0===b)a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0;else{b<a.latestPingedTime&&(a.latestPingedTime=0);var c=a.latestPendingTime;0!==c&&(c>b?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>b&&(a.earliestPendingTime=a.latestPendingTime));c=a.earliestSuspendedTime;0===c?cf(a,b):b<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,cf(a,b)):\nb>c&&cf(a,b)}df(0,a)}function ff(a,b){a.didError=!1;a.latestPingedTime>=b&&(a.latestPingedTime=0);var c=a.earliestPendingTime,d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);df(b,a)}\nfunction gf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}function df(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}function L(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}\nfunction hf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:a._status=0;b=a._ctor;b=b();b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)});switch(a._status){case 1:return a._result;case 2:throw a._result;}a._result=b;throw b;}}var jf=(new aa.Component).refs;\nfunction kf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\nvar tf={isMounted:function(a){return(a=a._reactInternalFiber)?2===ed(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.tag=rf;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=lf();c=mf(c,a);var d=nf(c);d.tag=\nsf;void 0!==b&&null!==b&&(d.callback=b);of();pf(a,d);qf(a,c)}};function uf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!dd(c,d)||!dd(e,f):!0}\nfunction vf(a,b,c){var d=!1,e=He;var f=b.contextType;\"object\"===typeof f&&null!==f?f=M(f):(e=J(b)?Ie:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Je(a,e):He);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=tf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction wf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&tf.enqueueReplaceState(b,b.state,null)}\nfunction xf(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jf;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=M(f):(f=J(b)?Ie:H.current,e.context=Je(a,f));f=a.updateQueue;null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kf(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==\ntypeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&tf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var zf=Array.isArray;\nfunction Af(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?x(\"309\"):void 0,d=c.stateNode);d?void 0:x(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===jf&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?x(\"284\"):void 0;c._owner?void 0:x(\"290\",a)}return a}\nfunction Bf(a,b){\"textarea\"!==a.type&&x(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction Cf(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Xe(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=af(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function l(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=Af(a,b,c),d.return=a,d;d=Ye(c.type,c.key,c.props,null,a.mode,d);d.ref=Af(a,b,c);d.return=a;return d}function k(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\nc.implementation)return b=bf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ze(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function p(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=af(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Vb:return c=Ye(b.type,b.key,b.props,null,a.mode,c),c.ref=Af(a,null,b),c.return=a,c;case Wb:return b=bf(b,a.mode,c),b.return=a,b}if(zf(b)||\nhc(b))return b=Ze(b,a.mode,c,null),b.return=a,b;Bf(a,b)}return null}function t(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Vb:return c.key===e?c.type===Xb?m(a,b,c.props.children,d,e):l(a,b,c,d):null;case Wb:return c.key===e?k(a,b,c,d):null}if(zf(c)||hc(c))return null!==e?null:m(a,b,c,d,null);Bf(a,c)}return null}function A(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\na.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Vb:return a=a.get(null===d.key?c:d.key)||null,d.type===Xb?m(b,a,d.props.children,e,d.key):l(b,a,d,e);case Wb:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e)}if(zf(d)||hc(d))return a=a.get(c)||null,m(b,a,d,e,null);Bf(b,d)}return null}function v(e,g,h,k){for(var l=null,m=null,q=g,u=g=0,B=null;null!==q&&u<h.length;u++){q.index>u?(B=q,q=null):B=q.sibling;var w=t(e,q,h[u],k);if(null===w){null===q&&(q=B);break}a&&\nq&&null===w.alternate&&b(e,q);g=f(w,g,u);null===m?l=w:m.sibling=w;m=w;q=B}if(u===h.length)return c(e,q),l;if(null===q){for(;u<h.length;u++)if(q=p(e,h[u],k))g=f(q,g,u),null===m?l=q:m.sibling=q,m=q;return l}for(q=d(e,q);u<h.length;u++)if(B=A(q,e,u,h[u],k))a&&null!==B.alternate&&q.delete(null===B.key?u:B.key),g=f(B,g,u),null===m?l=B:m.sibling=B,m=B;a&&q.forEach(function(a){return b(e,a)});return l}function R(e,g,h,k){var l=hc(h);\"function\"!==typeof l?x(\"150\"):void 0;h=l.call(h);null==h?x(\"151\"):void 0;\nfor(var m=l=null,q=g,u=g=0,B=null,w=h.next();null!==q&&!w.done;u++,w=h.next()){q.index>u?(B=q,q=null):B=q.sibling;var v=t(e,q,w.value,k);if(null===v){q||(q=B);break}a&&q&&null===v.alternate&&b(e,q);g=f(v,g,u);null===m?l=v:m.sibling=v;m=v;q=B}if(w.done)return c(e,q),l;if(null===q){for(;!w.done;u++,w=h.next())w=p(e,w.value,k),null!==w&&(g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);return l}for(q=d(e,q);!w.done;u++,w=h.next())w=A(q,e,u,w.value,k),null!==w&&(a&&null!==w.alternate&&q.delete(null===w.key?u:\nw.key),g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);a&&q.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===Xb&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Vb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===Xb:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===Xb?f.props.children:f.props,h);d.ref=Af(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=\nk.sibling}f.type===Xb?(d=Ze(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ye(f.type,f.key,f.props,null,a.mode,h),h.ref=Af(a,d,f),h.return=a,a=h)}return g(a);case Wb:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=bf(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\n\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=af(f,a.mode,h),d.return=a,a=d),g(a);if(zf(f))return v(a,d,f,h);if(hc(f))return R(a,d,f,h);l&&Bf(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,x(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var Df=Cf(!0),Ef=Cf(!1),Ff={},N={current:Ff},Gf={current:Ff},Hf={current:Ff};function If(a){a===Ff?x(\"174\"):void 0;return a}\nfunction Jf(a,b){G(Hf,b,a);G(Gf,a,a);G(N,Ff,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:he(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=he(b,c)}F(N,a);G(N,b,a)}function Kf(a){F(N,a);F(Gf,a);F(Hf,a)}function Lf(a){If(Hf.current);var b=If(N.current);var c=he(b,a.type);b!==c&&(G(Gf,a,a),G(N,c,a))}function Mf(a){Gf.current===a&&(F(N,a),F(Gf,a))}\nvar Nf=0,Of=2,Pf=4,Qf=8,Rf=16,Sf=32,Tf=64,Uf=128,Vf=Tb.ReactCurrentDispatcher,Wf=0,Xf=null,O=null,P=null,Yf=null,Q=null,Zf=null,$f=0,ag=null,bg=0,cg=!1,dg=null,eg=0;function fg(){x(\"321\")}function gg(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!bd(a[c],b[c]))return!1;return!0}\nfunction hg(a,b,c,d,e,f){Wf=f;Xf=b;P=null!==a?a.memoizedState:null;Vf.current=null===P?ig:jg;b=c(d,e);if(cg){do cg=!1,eg+=1,P=null!==a?a.memoizedState:null,Zf=Yf,ag=Q=O=null,Vf.current=jg,b=c(d,e);while(cg);dg=null;eg=0}Vf.current=kg;a=Xf;a.memoizedState=Yf;a.expirationTime=$f;a.updateQueue=ag;a.effectTag|=bg;a=null!==O&&null!==O.next;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;a?x(\"300\"):void 0;return b}function lg(){Vf.current=kg;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;cg=!1;dg=null;eg=0}\nfunction mg(){var a={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};null===Q?Yf=Q=a:Q=Q.next=a;return Q}function ng(){if(null!==Zf)Q=Zf,Zf=Q.next,O=P,P=null!==O?O.next:null;else{null===P?x(\"310\"):void 0;O=P;var a={memoizedState:O.memoizedState,baseState:O.baseState,queue:O.queue,baseUpdate:O.baseUpdate,next:null};Q=null===Q?Yf=a:Q.next=a;P=O.next}return Q}function og(a,b){return\"function\"===typeof b?b(a):b}\nfunction pg(a){var b=ng(),c=b.queue;null===c?x(\"311\"):void 0;c.lastRenderedReducer=a;if(0<eg){var d=c.dispatch;if(null!==dg){var e=dg.get(c);if(void 0!==e){dg.delete(c);var f=b.memoizedState;do f=a(f,e.action),e=e.next;while(null!==e);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate===c.last&&(b.baseState=f);c.lastRenderedState=f;return[f,d]}}return[b.memoizedState,d]}d=c.last;var g=b.baseUpdate;f=b.baseState;null!==g?(null!==d&&(d.next=null),d=g.next):d=null!==d?d.next:null;if(null!==\nd){var h=e=null,l=d,k=!1;do{var m=l.expirationTime;m<Wf?(k||(k=!0,h=g,e=f),m>$f&&($f=m)):f=l.eagerReducer===a?l.eagerState:a(f,l.action);g=l;l=l.next}while(null!==l&&l!==d);k||(h=g,e=f);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate=h;b.baseState=e;c.lastRenderedState=f}return[b.memoizedState,c.dispatch]}\nfunction rg(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};null===ag?(ag={lastEffect:null},ag.lastEffect=a.next=a):(b=ag.lastEffect,null===b?ag.lastEffect=a.next=a:(c=b.next,b.next=a,a.next=c,ag.lastEffect=a));return a}function sg(a,b,c,d){var e=mg();bg|=a;e.memoizedState=rg(b,c,void 0,void 0===d?null:d)}\nfunction tg(a,b,c,d){var e=ng();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&gg(d,g.deps)){rg(Nf,c,f,d);return}}bg|=a;e.memoizedState=rg(b,c,f,d)}function ug(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function vg(){}\nfunction wg(a,b,c){25>eg?void 0:x(\"301\");var d=a.alternate;if(a===Xf||null!==d&&d===Xf)if(cg=!0,a={expirationTime:Wf,action:c,eagerReducer:null,eagerState:null,next:null},null===dg&&(dg=new Map),c=dg.get(b),void 0===c)dg.set(b,a);else{for(b=c;null!==b.next;)b=b.next;b.next=a}else{of();var e=lf();e=mf(e,a);var f={expirationTime:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.last;if(null===g)f.next=f;else{var h=g.next;null!==h&&(f.next=h);g.next=f}b.last=f;if(0===a.expirationTime&&(null===\nd||0===d.expirationTime)&&(d=b.lastRenderedReducer,null!==d))try{var l=b.lastRenderedState,k=d(l,c);f.eagerReducer=d;f.eagerState=k;if(bd(k,l))return}catch(m){}finally{}qf(a,e)}}\nvar kg={readContext:M,useCallback:fg,useContext:fg,useEffect:fg,useImperativeHandle:fg,useLayoutEffect:fg,useMemo:fg,useReducer:fg,useRef:fg,useState:fg,useDebugValue:fg},ig={readContext:M,useCallback:function(a,b){mg().memoizedState=[a,void 0===b?null:b];return a},useContext:M,useEffect:function(a,b){return sg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return sg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,b){return sg(4,Pf|Sf,a,b)},\nuseMemo:function(a,b){var c=mg();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=mg();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={last:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=wg.bind(null,Xf,a);return[d.memoizedState,a]},useRef:function(a){var b=mg();a={current:a};return b.memoizedState=a},useState:function(a){var b=mg();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={last:null,dispatch:null,\nlastRenderedReducer:og,lastRenderedState:a};a=a.dispatch=wg.bind(null,Xf,a);return[b.memoizedState,a]},useDebugValue:vg},jg={readContext:M,useCallback:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];c.memoizedState=[a,b];return a},useContext:M,useEffect:function(a,b){return tg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return tg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,\nb){return tg(4,Pf|Sf,a,b)},useMemo:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a},useReducer:pg,useRef:function(){return ng().memoizedState},useState:function(a){return pg(og,a)},useDebugValue:vg},xg=null,yg=null,zg=!1;\nfunction Ag(a,b){var c=K(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function Bg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction Cg(a){if(zg){var b=yg;if(b){var c=b;if(!Bg(a,b)){b=De(c);if(!b||!Bg(a,b)){a.effectTag|=2;zg=!1;xg=a;return}Ag(xg,c)}xg=a;yg=Ee(b)}else a.effectTag|=2,zg=!1,xg=a}}function Dg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&18!==a.tag;)a=a.return;xg=a}function Eg(a){if(a!==xg)return!1;if(!zg)return Dg(a),zg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!xe(b,a.memoizedProps))for(b=yg;b;)Ag(a,b),b=De(b);Dg(a);yg=xg?De(a.stateNode):null;return!0}function Fg(){yg=xg=null;zg=!1}\nvar Gg=Tb.ReactCurrentOwner,qg=!1;function S(a,b,c,d){b.child=null===a?Ef(b,null,c,d):Df(b,a.child,c,d)}function Hg(a,b,c,d,e){c=c.render;var f=b.ref;Ig(b,e);d=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,d,e);return b.child}\nfunction Kg(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!Ve(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,Lg(a,b,g,d,e,f);a=Ye(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:dd,c(e,d)&&a.ref===b.ref))return Jg(a,b,f);b.effectTag|=1;a=Xe(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\nfunction Lg(a,b,c,d,e,f){return null!==a&&dd(a.memoizedProps,d)&&a.ref===b.ref&&(qg=!1,e<f)?Jg(a,b,f):Mg(a,b,c,d,f)}function Ng(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Mg(a,b,c,d,e){var f=J(c)?Ie:H.current;f=Je(b,f);Ig(b,e);c=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,c,e);return b.child}\nfunction Og(a,b,c,d,e){if(J(c)){var f=!0;Oe(b)}else f=!1;Ig(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),vf(b,c,d,e),xf(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var l=g.context,k=c.contextType;\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k));var m=c.getDerivedStateFromProps,p=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;p||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k);Pg=!1;var t=b.memoizedState;l=g.state=t;var A=b.updateQueue;null!==A&&(yf(b,A,d,g,e),l=b.memoizedState);h!==d||t!==l||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),l=b.memoizedState),(h=Pg||uf(b,c,h,d,t,l,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\ng.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=l),g.props=d,g.state=l,g.context=k,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:L(b.type,h),l=g.context,k=c.contextType,\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k)),m=c.getDerivedStateFromProps,(p=\"function\"===\ntypeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k),Pg=!1,l=b.memoizedState,t=g.state=l,A=b.updateQueue,null!==A&&(yf(b,A,d,g,e),t=b.memoizedState),h!==d||l!==t||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),t=b.memoizedState),(m=Pg||uf(b,c,h,d,l,t,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===\ntypeof g.componentWillUpdate&&g.componentWillUpdate(d,t,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,t,k)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=\nt),g.props=d,g.state=t,g.context=k,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),d=!1);return Qg(a,b,c,d,f,e)}\nfunction Qg(a,b,c,d,e,f){Ng(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Pe(b,c,!1),Jg(a,b,f);d=b.stateNode;Gg.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Df(b,a.child,null,f),b.child=Df(b,null,h,f)):S(a,b,h,f);b.memoizedState=d.state;e&&Pe(b,c,!0);return b.child}function Rg(a){var b=a.stateNode;b.pendingContext?Me(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Me(a,b.context,!1);Jf(a,b.containerInfo)}\nfunction Sg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;if(null===a)if(g){var h=e.fallback;a=Ze(null,d,0,null);0===(b.mode&1)&&(a.child=null!==b.memoizedState?b.child.child:b.child);d=Ze(h,d,c,null);a.sibling=d;c=a;c.return=d.return=b}else c=d=Ef(b,null,e.children,c);else null!==a.memoizedState?(d=a.child,h=d.sibling,g?(c=e.fallback,e=Xe(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==\nb.memoizedState?b.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=Xe(h,c,h.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=Df(b,d.child,e.children,c)):(h=a.child,g?(g=e.fallback,e=Ze(null,d,0,null),e.child=h,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=Ze(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=Df(b,h,e.children,c)),b.stateNode=a.stateNode;b.memoizedState=f;b.child=c;return d}\nfunction Jg(a,b,c){null!==a&&(b.contextDependencies=a.contextDependencies);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?x(\"153\"):void 0;if(null!==b.child){a=b.child;c=Xe(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Xe(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Tg(a,b,c){var d=b.expirationTime;if(null!==a)if(a.memoizedProps!==b.pendingProps||I.current)qg=!0;else{if(d<c){qg=!1;switch(b.tag){case 3:Rg(b);Fg();break;case 5:Lf(b);break;case 1:J(b.type)&&Oe(b);break;case 4:Jf(b,b.stateNode.containerInfo);break;case 10:Ug(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return Sg(a,b,c);b=Jg(a,b,c);return null!==b?b.sibling:null}}return Jg(a,b,c)}}else qg=!1;b.expirationTime=0;switch(b.tag){case 2:d=\nb.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Je(b,H.current);Ig(b,c);e=hg(null,b,d,a,e,c);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;lg();if(J(d)){var f=!0;Oe(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&kf(b,d,g,a);e.updater=tf;b.stateNode=e;e._reactInternalFiber=b;xf(b,d,a,c);b=Qg(null,b,d,!0,f,\nc)}else b.tag=0,S(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=hf(e);b.type=a;e=b.tag=We(a);f=L(a,f);g=void 0;switch(e){case 0:g=Mg(null,b,a,f,c);break;case 1:g=Og(null,b,a,f,c);break;case 11:g=Hg(null,b,a,f,c);break;case 14:g=Kg(null,b,a,L(a.type,f),d,c);break;default:x(\"306\",a,\"\")}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Mg(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,\ne=b.elementType===d?e:L(d,e),Og(a,b,d,e,c);case 3:Rg(b);d=b.updateQueue;null===d?x(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;yf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)Fg(),b=Jg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)yg=Ee(b.stateNode.containerInfo),xg=b,e=zg=!0;e?(b.effectTag|=2,b.child=Ef(b,null,d,c)):(S(a,b,d,c),Fg());b=b.child}return b;case 5:return Lf(b),null===a&&Cg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,\ng=e.children,xe(d,e)?g=null:null!==f&&xe(d,f)&&(b.effectTag|=16),Ng(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(S(a,b,g,c),b=b.child),b;case 6:return null===a&&Cg(b),null;case 13:return Sg(a,b,c);case 4:return Jf(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Df(b,null,d,c):S(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Hg(a,b,d,e,c);case 7:return S(a,b,b.pendingProps,c),b.child;case 8:return S(a,b,b.pendingProps.children,\nc),b.child;case 12:return S(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Ug(b,f);if(null!==g){var h=g.value;f=bd(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!I.current){b=Jg(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var l=h.contextDependencies;if(null!==l){g=h.child;for(var k=l.first;null!==k;){if(k.context===d&&0!==\n(k.observedBits&f)){1===h.tag&&(k=nf(c),k.tag=sf,pf(h,k));h.expirationTime<c&&(h.expirationTime=c);k=h.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);k=c;for(var m=h.return;null!==m;){var p=m.alternate;if(m.childExpirationTime<k)m.childExpirationTime=k,null!==p&&p.childExpirationTime<k&&(p.childExpirationTime=k);else if(null!==p&&p.childExpirationTime<k)p.childExpirationTime=k;else break;m=m.return}l.expirationTime<c&&(l.expirationTime=c);break}k=k.next}}else g=10===h.tag?h.type===b.type?\nnull:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}}S(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Ig(b,c),e=M(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,S(a,b,d,c),b.child;case 14:return e=b.type,f=L(e,b.pendingProps),f=L(e.type,f),Kg(a,b,e,f,d,c);case 15:return Lg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===\nd?e:L(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,J(d)?(a=!0,Oe(b)):a=!1,Ig(b,c),vf(b,d,e,c),xf(b,d,e,c),Qg(null,b,d,!0,a,c)}x(\"156\")}var Vg={current:null},Wg=null,Xg=null,Yg=null;function Ug(a,b){var c=a.type._context;G(Vg,c._currentValue,a);c._currentValue=b}function Zg(a){var b=Vg.current;F(Vg,a);a.type._context._currentValue=b}function Ig(a,b){Wg=a;Yg=Xg=null;var c=a.contextDependencies;null!==c&&c.expirationTime>=b&&(qg=!0);a.contextDependencies=null}\nfunction M(a,b){if(Yg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)Yg=a,b=1073741823;b={context:a,observedBits:b,next:null};null===Xg?(null===Wg?x(\"308\"):void 0,Xg=b,Wg.contextDependencies={first:b,expirationTime:0}):Xg=Xg.next=b}return a._currentValue}var $g=0,rf=1,sf=2,ah=3,Pg=!1;function bh(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction ch(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function nf(a){return{expirationTime:a,tag:$g,payload:null,callback:null,next:null,nextEffect:null}}function dh(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\nfunction pf(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=bh(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=bh(a.memoizedState),e=c.updateQueue=bh(c.memoizedState)):d=a.updateQueue=ch(e):null===e&&(e=c.updateQueue=ch(d));null===e||d===e?dh(d,b):null===d.lastUpdate||null===e.lastUpdate?(dh(d,b),dh(e,b)):(dh(d,b),e.lastUpdate=b)}\nfunction eh(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=bh(a.memoizedState):fh(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function fh(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=ch(b));return b}\nfunction gh(a,b,c,d,e,f){switch(c.tag){case rf:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case ah:a.effectTag=a.effectTag&-2049|64;case $g:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case sf:Pg=!0}return d}\nfunction yf(a,b,c,d,e){Pg=!1;b=fh(a,b);for(var f=b.baseState,g=null,h=0,l=b.firstUpdate,k=f;null!==l;){var m=l.expirationTime;m<e?(null===g&&(g=l,f=k),h<m&&(h=m)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=32,l.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=l:(b.lastEffect.nextEffect=l,b.lastEffect=l)));l=l.next}m=null;for(l=b.firstCapturedUpdate;null!==l;){var p=l.expirationTime;p<e?(null===m&&(m=l,null===g&&(f=k)),h<p&&(h=p)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=\n32,l.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=l:(b.lastCapturedEffect.nextEffect=l,b.lastCapturedEffect=l)));l=l.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=k);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=k}\nfunction hh(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);ih(b.firstEffect,c);b.firstEffect=b.lastEffect=null;ih(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function ih(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?x(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\nfunction jh(a,b){return{value:a,source:b,stack:jc(b)}}function kh(a){a.effectTag|=4}var lh=void 0,mh=void 0,nh=void 0,oh=void 0;lh=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};mh=function(){};\nnh=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;If(N.current);a=null;switch(c){case \"input\":f=vc(g,f);d=vc(g,d);a=[];break;case \"option\":f=$d(g,f);d=$d(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=be(g,f);d=be(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=te)}qe(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\nc){var l=f[c];for(g in l)l.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(ra.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var k=d[c];l=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&k!==l&&(null!=k||null!=l))if(\"style\"===c)if(l){for(g in l)!l.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in k)k.hasOwnProperty(g)&&l[g]!==k[g]&&(h||\n(h={}),h[g]=k[g])}else h||(a||(a=[]),a.push(c,h)),h=k;else\"dangerouslySetInnerHTML\"===c?(k=k?k.__html:void 0,l=l?l.__html:void 0,null!=k&&l!==k&&(a=a||[]).push(c,\"\"+k)):\"children\"===c?l===k||\"string\"!==typeof k&&\"number\"!==typeof k||(a=a||[]).push(c,\"\"+k):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(ra.hasOwnProperty(c)?(null!=k&&se(e,c),a||l===k||(a=[])):(a=a||[]).push(c,k))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&kh(b)}};oh=function(a,b,c,d){c!==d&&kh(b)};\nvar ph=\"function\"===typeof WeakSet?WeakSet:Set;function qh(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=jc(c));null!==c&&ic(c.type);b=b.value;null!==a&&1===a.tag&&ic(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function rh(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){sh(a,c)}else b.current=null}\nfunction th(a,b,c){c=c.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do{if((d.tag&a)!==Nf){var e=d.destroy;d.destroy=void 0;void 0!==e&&e()}(d.tag&b)!==Nf&&(e=d.create,d.destroy=e());d=d.next}while(d!==c)}}\nfunction uh(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d.style.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=ne(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if(13===c.tag&&null!==c.memoizedState){d=c.child.sibling;d.return=c;c=d;continue}else if(null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===c.return||\nc.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction vh(a){\"function\"===typeof Re&&Re(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(void 0!==d){var e=a;try{d()}catch(f){sh(e,f)}}c=c.next}while(c!==b)}break;case 1:rh(a);b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){sh(a,f)}break;case 5:rh(a);break;case 4:wh(a)}}\nfunction xh(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction yh(a){a:{for(var b=a.return;null!==b;){if(xh(b)){var c=b;break a}b=b.return}x(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:x(\"161\")}c.effectTag&16&&(ke(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||xh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&\n2)continue b;if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=te)):b.appendChild(e.stateNode);\nelse if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction wh(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?x(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(vh(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag){if(null!==b.child){d=b.stateNode.containerInfo;e=!0;b.child.return=b;b=b.child;continue}}else if(vh(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction zh(a,b){switch(b.tag){case 0:case 11:case 14:case 15:th(Pf,Qf,b);break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&Ce(c,f,e,a,d,b)}break;case 6:null===b.stateNode?x(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;d=void 0;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=lf()));null!==a&&uh(a,d);c=\nb.updateQueue;if(null!==c){b.updateQueue=null;var g=b.stateNode;null===g&&(g=b.stateNode=new ph);c.forEach(function(a){var c=Ah.bind(null,b,a);g.has(a)||(g.add(a),a.then(c,c))})}break;case 17:break;default:x(\"163\")}}var Bh=\"function\"===typeof WeakMap?WeakMap:Map;function Ch(a,b,c){c=nf(c);c.tag=ah;c.payload={element:null};var d=b.value;c.callback=function(){Dh(d);qh(a,b)};return c}\nfunction Eh(a,b,c){c=nf(c);c.tag=ah;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Fh?Fh=new Set([this]):Fh.add(this));var c=b.value,e=b.stack;qh(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:\"\"})});return c}\nfunction Gh(a){switch(a.tag){case 1:J(a.type)&&Ke(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Kf(a),Le(a),b=a.effectTag,0!==(b&64)?x(\"285\"):void 0,a.effectTag=b&-2049|64,a;case 5:return Mf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 18:return null;case 4:return Kf(a),null;case 10:return Zg(a),null;default:return null}}\nvar Hh=Tb.ReactCurrentDispatcher,Ih=Tb.ReactCurrentOwner,Jh=1073741822,Kh=!1,T=null,Lh=null,U=0,Mh=-1,Nh=!1,V=null,Oh=!1,Ph=null,Qh=null,Rh=null,Fh=null;function Sh(){if(null!==T)for(var a=T.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ke(b);break;case 3:Kf(b);Le(b);break;case 5:Mf(b);break;case 4:Kf(b);break;case 10:Zg(b)}a=a.return}Lh=null;U=0;Mh=-1;Nh=!1;T=null}\nfunction Th(){for(;null!==V;){var a=V.effectTag;a&16&&ke(V.stateNode,\"\");if(a&128){var b=V.alternate;null!==b&&(b=b.ref,null!==b&&(\"function\"===typeof b?b(null):b.current=null))}switch(a&14){case 2:yh(V);V.effectTag&=-3;break;case 6:yh(V);V.effectTag&=-3;zh(V.alternate,V);break;case 4:zh(V.alternate,V);break;case 8:a=V,wh(a),a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null,a=a.alternate,null!==a&&(a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null)}V=V.nextEffect}}\nfunction Uh(){for(;null!==V;){if(V.effectTag&256)a:{var a=V.alternate,b=V;switch(b.tag){case 0:case 11:case 15:th(Of,Nf,b);break a;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:L(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}break a;case 3:case 5:case 6:case 4:case 17:break a;default:x(\"163\")}}V=V.nextEffect}}\nfunction Vh(a,b){for(;null!==V;){var c=V.effectTag;if(c&36){var d=V.alternate,e=V,f=b;switch(e.tag){case 0:case 11:case 15:th(Rf,Sf,e);break;case 1:var g=e.stateNode;if(e.effectTag&4)if(null===d)g.componentDidMount();else{var h=e.elementType===e.type?d.memoizedProps:L(e.type,d.memoizedProps);g.componentDidUpdate(h,d.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}d=e.updateQueue;null!==d&&hh(e,d,g,f);break;case 3:d=e.updateQueue;if(null!==d){g=null;if(null!==e.child)switch(e.child.tag){case 5:g=\ne.child.stateNode;break;case 1:g=e.child.stateNode}hh(e,d,g,f)}break;case 5:f=e.stateNode;null===d&&e.effectTag&4&&we(e.type,e.memoizedProps)&&f.focus();break;case 6:break;case 4:break;case 12:break;case 13:break;case 17:break;default:x(\"163\")}}c&128&&(e=V.ref,null!==e&&(f=V.stateNode,\"function\"===typeof e?e(f):e.current=f));c&512&&(Ph=a);V=V.nextEffect}}\nfunction Wh(a,b){Rh=Qh=Ph=null;var c=W;W=!0;do{if(b.effectTag&512){var d=!1,e=void 0;try{var f=b;th(Uf,Nf,f);th(Nf,Tf,f)}catch(g){d=!0,e=g}d&&sh(b,e)}b=b.nextEffect}while(null!==b);W=c;c=a.expirationTime;0!==c&&Xh(a,c);X||W||Yh(1073741823,!1)}function of(){null!==Qh&&Be(Qh);null!==Rh&&Rh()}\nfunction Zh(a,b){Oh=Kh=!0;a.current===b?x(\"177\"):void 0;var c=a.pendingCommitExpirationTime;0===c?x(\"261\"):void 0;a.pendingCommitExpirationTime=0;var d=b.expirationTime,e=b.childExpirationTime;ef(a,e>d?e:d);Ih.current=null;d=void 0;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ue=Bd;ve=Pd();Bd=!1;for(V=d;null!==V;){e=!1;var f=void 0;try{Uh()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}for(V=d;null!==V;){e=!1;\nf=void 0;try{Th()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}Qd(ve);ve=null;Bd=!!ue;ue=null;a.current=b;for(V=d;null!==V;){e=!1;f=void 0;try{Vh(a,c)}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}if(null!==d&&null!==Ph){var g=Wh.bind(null,a,d);Qh=r.unstable_runWithPriority(r.unstable_NormalPriority,function(){return Ae(g)});Rh=g}Kh=Oh=!1;\"function\"===typeof Qe&&Qe(b.stateNode);c=b.expirationTime;b=b.childExpirationTime;b=\nb>c?b:c;0===b&&(Fh=null);$h(a,b)}\nfunction ai(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){T=a;a:{var e=b;b=a;var f=U;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:J(b.type)&&Ke(b);break;case 3:Kf(b);Le(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)Eg(b),b.effectTag&=-3;mh(b);break;case 5:Mf(b);var h=If(Hf.current);f=b.type;if(null!==e&&null!=b.stateNode)nh(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=\n128);else if(g){var l=If(N.current);if(Eg(b)){g=b;e=g.stateNode;var k=g.type,m=g.memoizedProps,p=h;e[Fa]=g;e[Ga]=m;f=void 0;h=k;switch(h){case \"iframe\":case \"object\":E(\"load\",e);break;case \"video\":case \"audio\":for(k=0;k<ab.length;k++)E(ab[k],e);break;case \"source\":E(\"error\",e);break;case \"img\":case \"image\":case \"link\":E(\"error\",e);E(\"load\",e);break;case \"form\":E(\"reset\",e);E(\"submit\",e);break;case \"details\":E(\"toggle\",e);break;case \"input\":wc(e,m);E(\"invalid\",e);se(p,\"onChange\");break;case \"select\":e._wrapperState=\n{wasMultiple:!!m.multiple};E(\"invalid\",e);se(p,\"onChange\");break;case \"textarea\":ce(e,m),E(\"invalid\",e),se(p,\"onChange\")}qe(h,m);k=null;for(f in m)m.hasOwnProperty(f)&&(l=m[f],\"children\"===f?\"string\"===typeof l?e.textContent!==l&&(k=[\"children\",l]):\"number\"===typeof l&&e.textContent!==\"\"+l&&(k=[\"children\",\"\"+l]):ra.hasOwnProperty(f)&&null!=l&&se(p,f));switch(h){case \"input\":Rb(e);Ac(e,m,!0);break;case \"textarea\":Rb(e);ee(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n(e.onclick=te)}f=k;g.updateQueue=f;g=null!==f?!0:!1;g&&kh(b)}else{m=b;p=f;e=g;k=9===h.nodeType?h:h.ownerDocument;l===fe.html&&(l=ge(p));l===fe.html?\"script\"===p?(e=k.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",k=e.removeChild(e.firstChild)):\"string\"===typeof e.is?k=k.createElement(p,{is:e.is}):(k=k.createElement(p),\"select\"===p&&(p=k,e.multiple?p.multiple=!0:e.size&&(p.size=e.size))):k=k.createElementNS(l,p);e=k;e[Fa]=m;e[Ga]=g;lh(e,b,!1,!1);p=e;k=f;m=g;var t=h,A=re(k,m);switch(k){case \"iframe\":case \"object\":E(\"load\",\np);h=m;break;case \"video\":case \"audio\":for(h=0;h<ab.length;h++)E(ab[h],p);h=m;break;case \"source\":E(\"error\",p);h=m;break;case \"img\":case \"image\":case \"link\":E(\"error\",p);E(\"load\",p);h=m;break;case \"form\":E(\"reset\",p);E(\"submit\",p);h=m;break;case \"details\":E(\"toggle\",p);h=m;break;case \"input\":wc(p,m);h=vc(p,m);E(\"invalid\",p);se(t,\"onChange\");break;case \"option\":h=$d(p,m);break;case \"select\":p._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});E(\"invalid\",p);se(t,\"onChange\");break;case \"textarea\":ce(p,\nm);h=be(p,m);E(\"invalid\",p);se(t,\"onChange\");break;default:h=m}qe(k,h);l=void 0;var v=k,R=p,u=h;for(l in u)if(u.hasOwnProperty(l)){var q=u[l];\"style\"===l?oe(R,q):\"dangerouslySetInnerHTML\"===l?(q=q?q.__html:void 0,null!=q&&je(R,q)):\"children\"===l?\"string\"===typeof q?(\"textarea\"!==v||\"\"!==q)&&ke(R,q):\"number\"===typeof q&&ke(R,\"\"+q):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ra.hasOwnProperty(l)?null!=q&&se(t,l):null!=q&&tc(R,l,q,A))}switch(k){case \"input\":Rb(p);\nAc(p,m,!1);break;case \"textarea\":Rb(p);ee(p,m);break;case \"option\":null!=m.value&&p.setAttribute(\"value\",\"\"+uc(m.value));break;case \"select\":h=p;h.multiple=!!m.multiple;p=m.value;null!=p?ae(h,!!m.multiple,p,!1):null!=m.defaultValue&&ae(h,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(p.onclick=te)}(g=we(f,g))&&kh(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?x(\"166\"):void 0;break;case 6:e&&null!=b.stateNode?oh(e,b,e.memoizedProps,g):(\"string\"!==\ntypeof g&&(null===b.stateNode?x(\"166\"):void 0),e=If(Hf.current),If(N.current),Eg(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Fa]=g,(g=f.nodeValue!==e)&&kh(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Fa]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;T=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=\nb.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g||f)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Kf(b);mh(b);break;case 10:Zg(b);break;case 9:break;case 14:break;case 17:J(b.type)&&Ke(b);break;case 18:break;default:x(\"156\")}T=null}b=a;if(1===U||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==T)return T;null!==c&&0===(c.effectTag&1024)&&(null===c.firstEffect&&\n(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Gh(a,U);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}\nfunction bi(a){var b=Tg(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=ai(a));Ih.current=null;return b}\nfunction ci(a,b){Kh?x(\"243\"):void 0;of();Kh=!0;var c=Hh.current;Hh.current=kg;var d=a.nextExpirationTimeToWorkOn;if(d!==U||a!==Lh||null===T)Sh(),Lh=a,U=d,T=Xe(Lh.current,null,U),a.pendingCommitExpirationTime=0;var e=!1;do{try{if(b)for(;null!==T&&!di();)T=bi(T);else for(;null!==T;)T=bi(T)}catch(u){if(Yg=Xg=Wg=null,lg(),null===T)e=!0,Dh(u);else{null===T?x(\"271\"):void 0;var f=T,g=f.return;if(null===g)e=!0,Dh(u);else{a:{var h=a,l=g,k=f,m=u;g=U;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==\nm&&\"object\"===typeof m&&\"function\"===typeof m.then){var p=m;m=l;var t=-1,A=-1;do{if(13===m.tag){var v=m.alternate;if(null!==v&&(v=v.memoizedState,null!==v)){A=10*(1073741822-v.timedOutAt);break}v=m.pendingProps.maxDuration;if(\"number\"===typeof v)if(0>=v)t=0;else if(-1===t||v<t)t=v}m=m.return}while(null!==m);m=l;do{if(v=13===m.tag)v=void 0===m.memoizedProps.fallback?!1:null===m.memoizedState;if(v){l=m.updateQueue;null===l?(l=new Set,l.add(p),m.updateQueue=l):l.add(p);if(0===(m.mode&1)){m.effectTag|=\n64;k.effectTag&=-1957;1===k.tag&&(null===k.alternate?k.tag=17:(g=nf(1073741823),g.tag=sf,pf(k,g)));k.expirationTime=1073741823;break a}k=h;l=g;var R=k.pingCache;null===R?(R=k.pingCache=new Bh,v=new Set,R.set(p,v)):(v=R.get(p),void 0===v&&(v=new Set,R.set(p,v)));v.has(l)||(v.add(l),k=ei.bind(null,k,p,l),p.then(k,k));-1===t?h=1073741823:(-1===A&&(A=10*(1073741822-gf(h,g))-5E3),h=A+t);0<=h&&Mh<h&&(Mh=h);m.effectTag|=2048;m.expirationTime=g;break a}m=m.return}while(null!==m);m=Error((ic(k.type)||\"A React component\")+\n\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+jc(k))}Nh=!0;m=jh(m,k);h=l;do{switch(h.tag){case 3:h.effectTag|=2048;h.expirationTime=g;g=Ch(h,m,g);eh(h,g);break a;case 1:if(t=m,A=h.type,k=h.stateNode,0===(h.effectTag&64)&&(\"function\"===typeof A.getDerivedStateFromError||null!==k&&\"function\"===typeof k.componentDidCatch&&(null===Fh||!Fh.has(k)))){h.effectTag|=2048;\nh.expirationTime=g;g=Eh(h,t,g);eh(h,g);break a}}h=h.return}while(null!==h)}T=ai(f);continue}}}break}while(1);Kh=!1;Hh.current=c;Yg=Xg=Wg=null;lg();if(e)Lh=null,a.finishedWork=null;else if(null!==T)a.finishedWork=null;else{c=a.current.alternate;null===c?x(\"281\"):void 0;Lh=null;if(Nh){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<d||0!==f&&f<d||0!==g&&g<d){ff(a,d);fi(a,c,d,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;d=a.nextExpirationTimeToWorkOn=d;\nb=a.expirationTime=1073741823;fi(a,c,d,b,-1);return}}b&&-1!==Mh?(ff(a,d),b=10*(1073741822-gf(a,d)),b<Mh&&(Mh=b),b=10*(1073741822-lf()),b=Mh-b,fi(a,c,d,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=d,a.finishedWork=c)}}\nfunction sh(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Fh||!Fh.has(d))){a=jh(b,a);a=Eh(c,a,1073741823);pf(c,a);qf(c,1073741823);return}break;case 3:a=jh(b,a);a=Ch(c,a,1073741823);pf(c,a);qf(c,1073741823);return}c=c.return}3===a.tag&&(c=jh(b,a),c=Ch(a,c,1073741823),pf(a,c),qf(a,1073741823))}\nfunction mf(a,b){var c=r.unstable_getCurrentPriorityLevel(),d=void 0;if(0===(b.mode&1))d=1073741823;else if(Kh&&!Oh)d=U;else{switch(c){case r.unstable_ImmediatePriority:d=1073741823;break;case r.unstable_UserBlockingPriority:d=1073741822-10*(((1073741822-a+15)/10|0)+1);break;case r.unstable_NormalPriority:d=1073741822-25*(((1073741822-a+500)/25|0)+1);break;case r.unstable_LowPriority:case r.unstable_IdlePriority:d=1;break;default:x(\"313\")}null!==Lh&&d===U&&--d}c===r.unstable_UserBlockingPriority&&\n(0===gi||d<gi)&&(gi=d);return d}function ei(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);if(null!==Lh&&U===c)Lh=null;else if(b=a.earliestSuspendedTime,d=a.latestSuspendedTime,0!==b&&c<=b&&c>=d){a.didError=!1;b=a.latestPingedTime;if(0===b||b>c)a.latestPingedTime=c;df(c,a);c=a.expirationTime;0!==c&&Xh(a,c)}}function Ah(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=lf();b=mf(b,a);a=hi(a,b);null!==a&&(cf(a,b),b=a.expirationTime,0!==b&&Xh(a,b))}\nfunction hi(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}\nfunction qf(a,b){a=hi(a,b);null!==a&&(!Kh&&0!==U&&b>U&&Sh(),cf(a,b),Kh&&!Oh&&Lh===a||Xh(a,a.expirationTime),ii>ji&&(ii=0,x(\"185\")))}function ki(a,b,c,d,e){return r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){return a(b,c,d,e)})}var li=null,Y=null,mi=0,ni=void 0,W=!1,oi=null,Z=0,gi=0,pi=!1,qi=null,X=!1,ri=!1,si=null,ti=r.unstable_now(),ui=1073741822-(ti/10|0),vi=ui,ji=50,ii=0,wi=null;function xi(){ui=1073741822-((r.unstable_now()-ti)/10|0)}\nfunction yi(a,b){if(0!==mi){if(b<mi)return;null!==ni&&r.unstable_cancelCallback(ni)}mi=b;a=r.unstable_now()-ti;ni=r.unstable_scheduleCallback(zi,{timeout:10*(1073741822-b)-a})}function fi(a,b,c,d,e){a.expirationTime=d;0!==e||di()?0<e&&(a.timeoutHandle=ye(Ai.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Ai(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;xi();vi=ui;Bi(a,c)}function $h(a,b){a.expirationTime=b;a.finishedWork=null}\nfunction lf(){if(W)return vi;Ci();if(0===Z||1===Z)xi(),vi=ui;return vi}function Xh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===Y?(li=Y=a,a.nextScheduledRoot=a):(Y=Y.nextScheduledRoot=a,Y.nextScheduledRoot=li)):b>a.expirationTime&&(a.expirationTime=b);W||(X?ri&&(oi=a,Z=1073741823,Di(a,1073741823,!1)):1073741823===b?Yh(1073741823,!1):yi(a,b))}\nfunction Ci(){var a=0,b=null;if(null!==Y)for(var c=Y,d=li;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===Y?x(\"244\"):void 0;if(d===d.nextScheduledRoot){li=Y=d.nextScheduledRoot=null;break}else if(d===li)li=e=d.nextScheduledRoot,Y.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===Y){Y=c;Y.nextScheduledRoot=li;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===Y)break;if(1073741823===\na)break;c=d;d=d.nextScheduledRoot}}oi=b;Z=a}var Ei=!1;function di(){return Ei?!0:r.unstable_shouldYield()?Ei=!0:!1}function zi(){try{if(!di()&&null!==li){xi();var a=li;do{var b=a.expirationTime;0!==b&&ui<=b&&(a.nextExpirationTimeToWorkOn=ui);a=a.nextScheduledRoot}while(a!==li)}Yh(0,!0)}finally{Ei=!1}}\nfunction Yh(a,b){Ci();if(b)for(xi(),vi=ui;null!==oi&&0!==Z&&a<=Z&&!(Ei&&ui>Z);)Di(oi,Z,ui>Z),Ci(),xi(),vi=ui;else for(;null!==oi&&0!==Z&&a<=Z;)Di(oi,Z,!1),Ci();b&&(mi=0,ni=null);0!==Z&&yi(oi,Z);ii=0;wi=null;if(null!==si)for(a=si,si=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){pi||(pi=!0,qi=d)}}if(pi)throw a=qi,qi=null,pi=!1,a;}function Bi(a,b){W?x(\"253\"):void 0;oi=a;Z=b;Di(a,b,!1);Yh(1073741823,!1)}\nfunction Di(a,b,c){W?x(\"245\"):void 0;W=!0;if(c){var d=a.finishedWork;null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&(di()?a.finishedWork=d:Fi(a,d,b)))}else d=a.finishedWork,null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&Fi(a,d,b));W=!1}\nfunction Fi(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===si?si=[d]:si.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===wi?ii++:(wi=a,ii=0);r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){Zh(a,b)})}function Dh(a){null===oi?x(\"246\"):void 0;oi.expirationTime=0;pi||(pi=!0,qi=a)}function Gi(a,b){var c=X;X=!0;try{return a(b)}finally{(X=c)||W||Yh(1073741823,!1)}}\nfunction Hi(a,b){if(X&&!ri){ri=!0;try{return a(b)}finally{ri=!1}}return a(b)}function Ii(a,b,c){X||W||0===gi||(Yh(gi,!1),gi=0);var d=X;X=!0;try{return r.unstable_runWithPriority(r.unstable_UserBlockingPriority,function(){return a(b,c)})}finally{(X=d)||W||Yh(1073741823,!1)}}\nfunction Ji(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===ed(c)&&1===c.tag?void 0:x(\"170\");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(J(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);x(\"171\");g=void 0}if(1===c.tag){var h=c.type;if(J(h)){c=Ne(c,h,g);break a}}c=g}else c=He;null===b.context?b.context=c:b.pendingContext=c;b=e;e=nf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);\nof();pf(f,e);qf(f,d);return d}function Ki(a,b,c,d){var e=b.current,f=lf();e=mf(f,e);return Ji(a,b,c,e,d)}function Li(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function Mi(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Wb,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nAb=function(a,b,c){switch(b){case \"input\":yc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Ka(d);e?void 0:x(\"90\");Sb(d);yc(d,e)}}}break;case \"textarea\":de(a,c);break;case \"select\":b=c.value,null!=b&&ae(a,!!c.multiple,b,!1)}};\nfunction Ni(a){var b=1073741822-25*(((1073741822-lf()+500)/25|0)+1);b>=Jh&&(b=Jh-1);this._expirationTime=Jh=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}Ni.prototype.render=function(a){this._defer?void 0:x(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new Oi;Ji(a,b,null,c,d._onCommit);return d};\nNi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nNi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:x(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?x(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Bi(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};Ni.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function Oi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}Oi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nOi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?x(\"191\",c):void 0;c()}}};\nfunction Pi(a,b,c){b=K(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\nPi.prototype.render=function(a,b){var c=this._internalRoot,d=new Oi;b=void 0===b?null:b;null!==b&&d.then(b);Ki(a,c,null,d._onCommit);return d};Pi.prototype.unmount=function(a){var b=this._internalRoot,c=new Oi;a=void 0===a?null:a;null!==a&&c.then(a);Ki(null,b,null,c._onCommit);return c};Pi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new Oi;c=void 0===c?null:c;null!==c&&e.then(c);Ki(b,d,a,e._onCommit);return e};\nPi.prototype.createBatch=function(){var a=new Ni(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function Qi(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Gb=Gi;Hb=Ii;Ib=function(){W||0===gi||(Yh(gi,!1),gi=0)};\nfunction Ri(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new Pi(a,!1,b)}\nfunction Si(a,b,c,d,e){var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=Li(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Ri(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=Li(f._internalRoot);h.call(a)}}Hi(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Li(f._internalRoot)}\nfunction Ti(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Qi(b)?void 0:x(\"200\");return Mi(a,b,null,c)}\nvar Vi={createPortal:Ti,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?x(\"188\"):x(\"268\",Object.keys(a)));a=hd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!0,c)},render:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){Qi(c)?void 0:x(\"200\");null==a||void 0===a._reactInternalFiber?\nx(\"38\"):void 0;return Si(a,b,c,!1,d)},unmountComponentAtNode:function(a){Qi(a)?void 0:x(\"40\");return a._reactRootContainer?(Hi(function(){Si(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return Ti.apply(void 0,arguments)},unstable_batchedUpdates:Gi,unstable_interactiveUpdates:Ii,flushSync:function(a,b){W?x(\"187\"):void 0;var c=X;X=!0;try{return ki(a,b)}finally{X=c,Yh(1073741823,!1)}},unstable_createRoot:Ui,unstable_flushControlled:function(a){var b=\nX;X=!0;try{ki(a)}finally{(X=b)||W||Yh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ia,Ja,Ka,Ba.injectEventPluginsByName,pa,Qa,function(a){ya(a,Pa)},Eb,Fb,Dd,Da]}};function Ui(a,b){Qi(a)?void 0:x(\"299\",\"unstable_createRoot\");return new Pi(a,!0,null!=b&&!0===b.hydrate)}\n(function(a){var b=a.findFiberByHostInstance;return Te(n({},a,{overrideProps:null,currentDispatcherRef:Tb.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ha,bundleType:0,version:\"16.8.6\",rendererPackageName:\"react-dom\"});var Wi={default:Vi},Xi=Wi&&Vi||Wi;module.exports=Xi.default||Xi;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/cjs/react-dom.production.min.js\n// module id = 14\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/index.js\n// module id = 15\n// module chunks = 0","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n// @remove-on-eject-end\n'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-scripts/config/polyfills.js\n// module id = 16\n// module chunks = 0","/** @license React v16.8.6\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,aa=n?Symbol.for(\"react.memo\"):\n60115,ba=n?Symbol.for(\"react.lazy\"):60116,A=\"function\"===typeof Symbol&&Symbol.iterator;function ca(a,b,d,c,e,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[d,c,e,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction B(a){for(var b=arguments.length-1,d=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)d+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",d)}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};\nfunction E(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?B(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}var H=G.prototype=new F;\nH.constructor=G;k(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,d){var c=void 0,e={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=b[c]);var f=arguments.length-2;if(1===f)e.children=d;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];e.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===e[c]&&(e[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:e,_owner:J.current}}\nfunction da(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,d,c){if(P.length){var e=P.pop();e.result=a;e.keyPrefix=b;e.func=d;e.context=c;e.count=0;return e}return{result:a,keyPrefix:b,func:d,context:c,count:0}}\nfunction R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,d,c){var e=typeof a;if(\"undefined\"===e||\"boolean\"===e)a=null;var g=!1;if(null===a)g=!0;else switch(e){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return d(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){e=a[h];var f=b+T(e,h);g+=S(e,f,d,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=A&&a[A]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n0;!(e=a.next()).done;)e=e.value,f=b+T(e,h++),g+=S(e,f,d,c);else\"object\"===e&&(d=\"\"+a,B(\"31\",\"[object Object]\"===d?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":d,\"\"));return g}function U(a,b,d){return null==a?0:S(a,\"\",b,d)}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ea(a,b){a.func.call(a.context,b,a.count++)}\nfunction fa(a,b,d){var c=a.result,e=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,c,d,function(a){return a}):null!=a&&(N(a)&&(a=da(a,e+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+d)),c.push(a))}function V(a,b,d,c,e){var g=\"\";null!=d&&(g=(\"\"+d).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,e);U(a,fa,b);R(b)}function W(){var a=I.current;null===a?B(\"321\"):void 0;return a}\nvar X={Children:{map:function(a,b,d){if(null==a)return a;var c=[];V(a,c,null,b,d);return c},forEach:function(a,b,d){if(null==a)return a;b=Q(null,null,b,d);U(a,ea,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];V(a,b,null,function(a){return a});return b},only:function(a){N(a)?void 0:B(\"143\");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:ba,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:aa,type:a,compare:void 0===b?null:b}},useCallback:function(a,b){return W().useCallback(a,b)},useContext:function(a,b){return W().useContext(a,b)},useEffect:function(a,b){return W().useEffect(a,b)},useImperativeHandle:function(a,\nb,d){return W().useImperativeHandle(a,b,d)},useDebugValue:function(){},useLayoutEffect:function(a,b){return W().useLayoutEffect(a,b)},useMemo:function(a,b){return W().useMemo(a,b)},useReducer:function(a,b,d){return W().useReducer(a,b,d)},useRef:function(a){return W().useRef(a)},useState:function(a){return W().useState(a)},Fragment:r,StrictMode:t,Suspense:z,createElement:M,cloneElement:function(a,b,d){null===a||void 0===a?B(\"267\",a):void 0;var c=void 0,e=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=\nb){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)e.children=d;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];e.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:e,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.8.6\",\nunstable_ConcurrentMode:x,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:I,ReactCurrentOwner:J,assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/cjs/react.production.min.js\n// module id = 17\n// module chunks = 0","/** @license React v0.13.6\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var d=null,e=!1,g=3,k=-1,l=-1,m=!1,n=!1;function p(){if(!m){var a=d.expirationTime;n?q():n=!0;r(t,a)}}\nfunction u(){var a=d,b=d.next;if(d===b)d=null;else{var c=d.previous;d=c.next=b;b.previous=c}a.next=a.previous=null;c=a.callback;b=a.expirationTime;a=a.priorityLevel;var f=g,Q=l;g=a;l=b;try{var h=c()}finally{g=f,l=Q}if(\"function\"===typeof h)if(h={callback:h,priorityLevel:a,expirationTime:b,next:null,previous:null},null===d)d=h.next=h.previous=h;else{c=null;a=d;do{if(a.expirationTime>=b){c=a;break}a=a.next}while(a!==d);null===c?c=d:c===d&&(d=h,p());b=c.previous;b.next=c.previous=h;h.next=c;h.previous=\nb}}function v(){if(-1===k&&null!==d&&1===d.priorityLevel){m=!0;try{do u();while(null!==d&&1===d.priorityLevel)}finally{m=!1,null!==d?p():n=!1}}}function t(a){m=!0;var b=e;e=a;try{if(a)for(;null!==d;){var c=exports.unstable_now();if(d.expirationTime<=c){do u();while(null!==d&&d.expirationTime<=c)}else break}else if(null!==d){do u();while(null!==d&&!w())}}finally{m=!1,e=b,null!==d?p():n=!1,v()}}\nvar x=Date,y=\"function\"===typeof setTimeout?setTimeout:void 0,z=\"function\"===typeof clearTimeout?clearTimeout:void 0,A=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,B=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,C,D;function E(a){C=A(function(b){z(D);a(b)});D=y(function(){B(C);a(exports.unstable_now())},100)}\nif(\"object\"===typeof performance&&\"function\"===typeof performance.now){var F=performance;exports.unstable_now=function(){return F.now()}}else exports.unstable_now=function(){return x.now()};var r,q,w,G=null;\"undefined\"!==typeof window?G=window:\"undefined\"!==typeof global&&(G=global);\nif(G&&G._schedMock){var H=G._schedMock;r=H[0];q=H[1];w=H[2];exports.unstable_now=H[3]}else if(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var I=null,J=function(a){if(null!==I)try{I(a)}finally{I=null}};r=function(a){null!==I?setTimeout(r,0,a):(I=a,setTimeout(J,0,!1))};q=function(){I=null};w=function(){return!1}}else{\"undefined\"!==typeof console&&(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\n\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));var K=null,L=!1,M=-1,N=!1,O=!1,P=0,R=33,S=33;w=function(){return P<=exports.unstable_now()};var T=new MessageChannel,U=T.port2;T.port1.onmessage=function(){L=!1;var a=K,b=M;K=null;M=-1;var c=exports.unstable_now(),f=!1;if(0>=P-c)if(-1!==b&&b<=c)f=!0;else{N||(N=!0,E(V));K=a;M=b;return}if(null!==a){O=!0;try{a(f)}finally{O=!1}}};\nvar V=function(a){if(null!==K){E(V);var b=a-P+S;b<S&&R<S?(8>b&&(b=8),S=b<R?R:b):R=b;P=a+S;L||(L=!0,U.postMessage(void 0))}else N=!1};r=function(a,b){K=a;M=b;O||0>b?U.postMessage(void 0):N||(N=!0,E(V))};q=function(){K=null;L=!1;M=-1}}exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;\nexports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=g,f=k;g=a;k=exports.unstable_now();try{return b()}finally{g=c,k=f,v()}};exports.unstable_next=function(a){switch(g){case 1:case 2:case 3:var b=3;break;default:b=g}var c=g,f=k;g=b;k=exports.unstable_now();try{return a()}finally{g=c,k=f,v()}};\nexports.unstable_scheduleCallback=function(a,b){var c=-1!==k?k:exports.unstable_now();if(\"object\"===typeof b&&null!==b&&\"number\"===typeof b.timeout)b=c+b.timeout;else switch(g){case 1:b=c+-1;break;case 2:b=c+250;break;case 5:b=c+1073741823;break;case 4:b=c+1E4;break;default:b=c+5E3}a={callback:a,priorityLevel:g,expirationTime:b,next:null,previous:null};if(null===d)d=a.next=a.previous=a,p();else{c=null;var f=d;do{if(f.expirationTime>b){c=f;break}f=f.next}while(f!==d);null===c?c=d:c===d&&(d=a,p());\nb=c.previous;b.next=c.previous=a;a.next=c;a.previous=b}return a};exports.unstable_cancelCallback=function(a){var b=a.next;if(null!==b){if(b===a)d=null;else{a===d&&(d=b);var c=a.previous;c.next=b;b.previous=c}a.next=a.previous=null}};exports.unstable_wrapCallback=function(a){var b=g;return function(){var c=g,f=k;g=b;k=exports.unstable_now();try{return a.apply(this,arguments)}finally{g=c,k=f,v()}}};exports.unstable_getCurrentPriorityLevel=function(){return g};\nexports.unstable_shouldYield=function(){return!e&&(null!==d&&d.expirationTime<l||w())};exports.unstable_continueExecution=function(){null!==d&&p()};exports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return d};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scheduler/cjs/scheduler.production.min.js\n// module id = 18\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scheduler/index.js\n// module id = 19\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/media/0_0.0e6f3be5.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dzi_files/10/0_0.jpg\n// module id = 20\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 21\n// module chunks = 0"],"sourceRoot":""}